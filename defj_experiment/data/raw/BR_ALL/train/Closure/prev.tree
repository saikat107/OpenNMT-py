(AST_ROOT_SC2NF (21 (32 (800{val=expr}) (235{val=.}) (802{val=setLineno}) (214{val=(}) (27 (27 (32 (800{val=expr}) (235{val=.}) (802{val=getLineno}) (216{val=()})) (200{val=+}) (800{val=templateLineno})) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=definitionNodeByDefinitionSite}) (235{val=.}) (802{val=containsKey}) (214{val=(}) (800{val=useSite}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=FeatureSet})) (59 (800{val=features}) (204{val==}) (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=JsAst})) (215{val=)}) (800{val=ast})) (215{val=)})) (235{val=.}) (802{val=getFeatures}) (214{val=(}) (800{val=compiler}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=tags}) (236{val===}) (800{val=FALSY_MASK})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=builder}) (235{val=.}) (802{val=append}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=builder}) (235{val=.}) (802{val=append}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=tags})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (40{val=output.compiledCode}) (204{val==}) (32 (800{val=compiler}) (235{val=.}) (802{val=toSource}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.MISSING_PROVIDE}) (234{val=,}) (40{val=CheckLevel.WARNING}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=resultPair}) (204{val==}) (32 (802{val=analyzeCastFwd}) (214{val=(}) (800{val=expr}) (234{val=,}) (800{val=inEnv}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.ES5_STRICT}) (234{val=,}) (40{val=CheckLevel.OFF}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=resultPair}) (204{val==}) (32 (802{val=analyzeCastFwd}) (214{val=(}) (800{val=expr}) (234{val=,}) (800{val=inEnv}) (234{val=,}) (800{val=specializedType}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=resultPair}) (204{val==}) (32 (802{val=analyzeCastFwd}) (214{val=(}) (800{val=expr}) (234{val=,}) (800{val=inEnv}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testEs6ONoEs6}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.MISSING_PROVIDE}) (234{val=,}) (40{val=CheckLevel.WARNING}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Node})) (802{val=getNext}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=next}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Token})) (802{val=getToken}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=token}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=type}) (236{val===}) (500{val=null})) (249{val=&&}) (800{val=isConstant})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=type}) (204{val==}) (40{val=JSType.UNKNOWN})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (40{val=JSType.UNKNOWN}) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Deprecated})) (83{val=public}) (802{val=AssertionFunctionSpec}) (214{val=(}) (44 (43 (801{val=String})) (800{val=functionName})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=functionName}) (234{val=,}) (40{val=JSType.UNKNOWN}) (234{val=,}) (500{val=null}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=STRING}) (235{val=.}) (802{val=isSubtypeOf}) (214{val=(}) (315{val=this}) (215{val=)})) (249{val=&&}) (32 (32 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (802{val=getNumberInstance}) (216{val=()})) (235{val=.}) (802{val=mayHaveProp}) (214{val=(}) (800{val=pname}) (215{val=)}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=type}) (236{val===}) (500{val=null})) (249{val=&&}) (800{val=isConstant})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=type}) (204{val==}) (40{val=JSType.UNKNOWN})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isUnknown}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=UNKNOWN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=isBottom}) (216{val=()})) (250{val=||}) (32 (802{val=isUnknown}) (216{val=()})) (250{val=||}) (32 (802{val=hasTruthyMask}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=UNKNOWN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isUnknown}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=TRUTHY}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=globalThisType}) (204{val==}) (32 (40{val=JSType.TOP_OBJECT}) (235{val=.}) (802{val=withLoose}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=function}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.FUNCTION})) (215{val=)})) (227{val=;})) (21 (32 (800{val=expandedDefinitions}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=functionSideEffectMap}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=function}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (27 (32 (800{val=n}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (32 (800{val=t}) (235{val=.}) (802{val=inGlobalScope}) (216{val=()}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (32 (800{val=varNode}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=varType}) (242{val=!=}) (500{val=null}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=warnings}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=varNode}) (234{val=,}) (800{val=ONE_TYPE_FOR_MANY_VARS}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (27 (32 (800{val=n}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=parent}) (236{val===}) (800{val=googScopeBlock}))))
(AST_ROOT_SC2NF (27 (32 (800{val=initializer}) (235{val=.}) (802{val=isVar}) (216{val=()})) (249{val=&&}) (27 (32 (800{val=initializer}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (32 (800{val=n}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isStatement}) (214{val=(}) (800{val=n}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=processName}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=currentStatement}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (27 (27 (800{val=typeNode}) (242{val=!=}) (500{val=null})) (249{val=&&}) (27 (32 (800{val=typeNode}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.STRING}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=inputId}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=inputId}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getInputId}) (214{val=(}) (800{val=node}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=inputId}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=inputId}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getInputId}) (214{val=(}) (800{val=node}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=name}) (204{val==}) (32 (800{val=node}) (235{val=.}) (802{val=getQualifiedName}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (40{val=options.rewritePolyfills}) (204{val==}) (40{val=flags.rewritePolyfills})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=t}) (204{val==}) (32 (802{val=getMaybeTypeFromComment}) (214{val=(}) (800{val=jsdoc}) (234{val=,}) (800{val=registry}) (234{val=,}) (800{val=typeParameters}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=builder}) (235{val=.}) (802{val=append}) (214{val=(}) (32 (800{val=paramType}) (235{val=.}) (802{val=toStringHelper}) (214{val=(}) (800{val=forAnnotations}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=append}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=builder}) (235{val=.}) (802{val=append}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=append}) (214{val=(}) (32 (800{val=paramType}) (235{val=.}) (802{val=toStringHelper}) (214{val=(}) (800{val=forAnnotations}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=b}) (235{val=.}) (802{val=append}) (214{val=(}) (32 (32 (800{val=p}) (235{val=.}) (802{val=getJSType}) (216{val=()})) (235{val=.}) (802{val=toStringHelper}) (214{val=(}) (800{val=forAnnotations}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=b}) (235{val=.}) (802{val=append}) (214{val=(}) (32 (40{val=call.returnType}) (235{val=.}) (802{val=toStringHelper}) (214{val=(}) (800{val=forAnnotations}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=sb}) (235{val=.}) (802{val=append}) (214{val=(}) (32 (32 (802{val=getPropertyType}) (214{val=(}) (800{val=property}) (215{val=)})) (235{val=.}) (802{val=toStringHelper}) (214{val=(}) (800{val=forAnnotations}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isFromExterns}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=allPropertyNames})) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=propName}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=allPropertyNames}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (32 (800{val=getProp}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isPropertyTest}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=n}) (215{val=)})) (250{val=||}) (32 (802{val=isPropertyAbsentTest}) (214{val=(}) (800{val=n}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=allPropertyNames}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=allPropertyNames}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=pname}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setUseTypesForOptimization}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=singleSiteDefinitions}) (235{val=.}) (802{val=size}) (216{val=()})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=FunctionVisitor})) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=blacklistedPropNames}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (39{val=void}) (802{val=endCaseBody}) (216{val=()}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=endCaseBody}) (216{val=()})) (227{val=;})) (21 (37 (800{val=indent}) (248{val=--})) (227{val=;})) (21 (32 (802{val=endStatement}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=compiler}) (235{val=.}) (802{val=getErrorCount}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6_STRICT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=JSType})) (59 (800{val=objectWithBadKey}) (204{val==}) (32 (802{val=findObjectWithNonStringifiableKey}) (214{val=(}) (800{val=realType}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Config})) (59 (800{val=config}) (204{val==}) (32 (802{val=findMatching}) (214{val=(}) (800{val=name}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=currentScript.defaultExportName}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (800{val=assignNode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=nameIsExported}) (204{val==}) (32 (800{val=name}) (235{val=.}) (802{val=equals}) (214{val=(}) (40{val=currentScript.defaultExportName}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=J2clCheckPassTest}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=JSType})) (800{val=jsType})))
(AST_ROOT_SC2NF (44 (43 (801{val=JSType})) (800{val=jsType})))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=setMask}) (214{val=(}) (44 (39{val=int}) (800{val=mask})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=bitmask}) (244{val=|=}) (800{val=mask})) (227{val=;})) (21 (32 (802{val=checkInvariant}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=info}) (235{val=.}) (802{val=isNoSideEffects}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=sideEffectInfo}) (235{val=.}) (802{val=setIsPure}) (216{val=()})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (800{val=sideEffectInfo}) (235{val=.}) (802{val=setTaintsGlobalState}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.ASYNC_FUNCTIONS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.ASYNC_FUNCTIONS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (40{val=config.parseTypeSyntax}) (249{val=&&}) (32 (802{val=peek}) (214{val=(}) (40{val=TokenType.OPEN_PAREN}) (215{val=)}))) (250{val=||}) (32 (802{val=peek}) (214{val=(}) (40{val=TokenType.OPEN_ANGLE}) (215{val=)}))))
(AST_ROOT_SC2NF (21 (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.ASYNC_FUNCTIONS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSDocInfo})) (59 (800{val=info}) (204{val==}) (32 (802{val=getJSDocInfoForFunction}) (214{val=(}) (800{val=node}) (234{val=,}) (800{val=parent}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FunctionInformation})) (59 (800{val=sideEffectInfo}) (204{val==}) (14 (304{val=new}) (43 (801{val=FunctionInformation})) (214{val=(}) (800{val=inExterns}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FunctionInformation})) (59 (800{val=representativeNode}) (204{val==}) (14 (304{val=new}) (43 (801{val=FunctionInformation})) (214{val=(}) (9{val=false}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=modulePath}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=t}) (235{val=.}) (802{val=makeError}) (214{val=(}) (800{val=typeNode}) (234{val=,}) (800{val=LOAD_ERROR}) (234{val=,}) (800{val=moduleName}) (215{val=)})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=modulePath}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=t}) (235{val=.}) (802{val=makeError}) (214{val=(}) (800{val=require}) (234{val=,}) (800{val=LOAD_ERROR}) (234{val=,}) (800{val=requireName}) (215{val=)})) (215{val=)})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertPasses}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=treeDiff}) (204{val==}) (32 (800{val=node}) (235{val=.}) (802{val=checkTreeEquals}) (214{val=(}) (32 (802{val=getSubject}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (74 (43 (800{val=ImmutableMap})) (230{val=<}) (43 (800{val=String})) (234{val=,}) (43 (800{val=Stats})) (231{val=>})) (802{val=getStats}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=calcTotalStats}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=summaryCopy}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=maybeWarnForInvalidDestructuring}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=lhs}) (234{val=,}) (800{val=legacyNamespace}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=options}) (235{val=.}) (802{val=setReportMissingOverride}) (214{val=(}) (16 (800{val=value}) (233{val=?}) (40{val=CheckLevel.WARNING}) (226{val=:}) (40{val=CheckLevel.OFF})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=output})) (235{val=.}) (802{val=print}) (214{val=(}) (32 (32 (800{val=Joiner}) (235{val=.}) (802{val=on}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (14 (304{val=new}) (43 (801{val=Es6RenameReferences})) (214{val=(}) (800{val=renameMap}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=Es6RenameReferences})) (214{val=(}) (800{val=renameMap}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=FunctionInformation})) (231{val=>})) (59 (800{val=possibleSideEffects}) (204{val==}) (32 (802{val=getSideEffectsForCall}) (214{val=(}) (800{val=callNode}) (234{val=,}) (800{val=definitionProvider}) (234{val=,}) (800{val=representativeNodesByName}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=functionSideEffectMap})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedHashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (32 (800{val=IR}) (235{val=.}) (802{val=exprResult}) (214{val=(}) (800{val=assign}) (215{val=)})) (235{val=.}) (802{val=useSourceInfoFromForTree}) (214{val=(}) (800{val=var}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (32 (800{val=Matchers}) (235{val=.}) (802{val=functionCall}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=matches}) (214{val=(}) (32 (800{val=child}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (800{val=metadata}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (32 (32 (800{val=Matchers}) (235{val=.}) (802{val=functionCall}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=matches}) (214{val=(}) (32 (800{val=child}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (800{val=metadata}) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=eatPredefinedString}) (214{val=(}) (40{val=PredefinedName.FROM}) (215{val=)})) (227{val=;})) (21 (7 (800{val=moduleSpecifier}) (204{val==}) (32 (32 (802{val=eat}) (214{val=(}) (40{val=TokenType.STRING}) (215{val=)})) (235{val=.}) (802{val=asLiteral}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testRequireUseStrict1}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (32 (802{val=config}) (214{val=(}) (32 (802{val=rule}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=EXTERNS}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=EXTERNS}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=CheckConformance.CONFORMANCE_VIOLATION}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=EXTERNS}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=EXTERNS}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=EXTERNS}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=CheckConformance.CONFORMANCE_VIOLATION}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (32 (802{val=config}) (214{val=(}) (32 (802{val=rule}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=EXTERNS}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (32 (802{val=config}) (214{val=(}) (32 (802{val=rule}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=EXTERNS}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=CheckConformance.CONFORMANCE_VIOLATION}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=EXTERNS}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=CheckConformance.CONFORMANCE_VIOLATION}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=EXTERNS}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=CheckConformance.CONFORMANCE_VIOLATION}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=EXTERNS}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=CheckConformance.CONFORMANCE_VIOLATION}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=EXTERNS}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=CheckConformance.CONFORMANCE_VIOLATION}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=EXTERNS}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=CheckConformance.CONFORMANCE_VIOLATION}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=parent}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=node}) (215{val=)})) (227{val=;})) (21 (32 (32 (800{val=t}) (235{val=.}) (802{val=getCompiler}) (216{val=()})) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (800{val=Pattern})) (59 (800{val=argPattern}) (204{val==}) (32 (800{val=Pattern}) (235{val=.}) (802{val=compile}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=ByteArrayInputStream})) (214{val=(}) (32 (800{val=inputString}) (235{val=.}) (802{val=getBytes}) (216{val=()})) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=ByteArrayInputStream})) (214{val=(}) (32 (800{val=inputString}) (235{val=.}) (802{val=getBytes}) (216{val=()})) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=ByteArrayInputStream})) (214{val=(}) (32 (800{val=inputString}) (235{val=.}) (802{val=getBytes}) (216{val=()})) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=ByteArrayInputStream})) (214{val=(}) (32 (800{val=inputString}) (235{val=.}) (802{val=getBytes}) (216{val=()})) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (800{val=inputSourceMaps}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=sourceMapPath}) (234{val=,}) (14 (304{val=new}) (43 (801{val=SourceMapInput})) (214{val=(}) (800{val=sourceMap}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=child}) (242{val=!=}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=add}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (32 (802{val=add}) (214{val=(}) (800{val=child}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=member}) (235{val=.}) (802{val=isMemberFunctionDef}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=member}) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=hasConstructor}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Node})) (59 (800{val=extendsClause}) (204{val==}) (32 (800{val=className}) (235{val=.}) (802{val=getNext}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=createCompilerOptions}) (216{val=()})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=member}) (235{val=.}) (802{val=isMemberFunctionDef}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=member}) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=hasConstructor}) (204{val==}) (9{val=true})) (227{val=;})) (500{val=break;}) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=typeCheck}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=builder}) (235{val=.}) (802{val=setTagAsStrict}) (214{val=(}) (27 (800{val=firstOutput}) (249{val=&&}) (32 (32 (800{val=options}) (235{val=.}) (802{val=getLanguageOut}) (216{val=()})) (235{val=.}) (802{val=isStrict}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=member}) (235{val=.}) (802{val=isMemberFunctionDef}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=member}) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=hasConstructor}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (40{val=com.google.javascript.jscomp.parsing.parser.Parser.Config})) (59 (800{val=es6config}) (204{val==}) (14 (304{val=new}) (43 (40{val=com.google.javascript.jscomp.parsing.parser.Parser.Config})) (214{val=(}) (32 (802{val=mode}) (214{val=(}) (40{val=config.languageMode}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.LINT_CHECKS}) (234{val=,}) (800{val=ERROR}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=protected}) (43 (801{val=CodingConvention})) (802{val=getCodingConvention}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=codingConvention}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (7 (800{val=codingConvention}) (204{val==}) (14 (304{val=new}) (43 (801{val=GoogleCodingConvention})) (216{val=()}))) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=config.languageMode}) (242{val=!=}) (40{val=LanguageMode.ECMASCRIPT6_TYPED})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=errorReporter}) (235{val=.}) (802{val=warning}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=feature})) (234{val=,}) (800{val=sourceName}) (234{val=,}) (32 (802{val=lineno}) (214{val=(}) (800{val=node}) (215{val=)})) (234{val=,}) (32 (802{val=charno}) (214{val=(}) (800{val=node}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Config})) (59 (800{val=config}) (204{val==}) (32 (800{val=ParserRunner}) (235{val=.}) (802{val=createConfig}) (214{val=(}) (800{val=mode}) (234{val=,}) (40{val=Config.JsDocParsing.INCLUDE_DESCRIPTIONS_NO_WHITESPACE}) (234{val=,}) (40{val=Config.RunMode.KEEP_GOING}) (234{val=,}) (500{val=null}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=builder}) (235{val=.}) (802{val=setTagAsStrict}) (214{val=(}) (27 (800{val=firstOutput}) (249{val=&&}) (32 (800{val=options}) (235{val=.}) (802{val=isEmitUseStrict}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=options}) (235{val=.}) (802{val=getLanguageOut}) (216{val=()})) (235{val=.}) (802{val=isStrict}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (32 (800{val=options}) (235{val=.}) (802{val=getLanguageIn}) (216{val=()})) (235{val=.}) (802{val=isStrict}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=options}) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.ES5_STRICT}) (234{val=,}) (40{val=CheckLevel.ERROR}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setEmitUseStrict}) (214{val=(}) (27 (40{val=flags.emitUseStrict}) (249{val=&&}) (32 (32 (800{val=options}) (235{val=.}) (802{val=getLanguageOut}) (216{val=()})) (235{val=.}) (802{val=isStrict}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testDoWhileLoopBranch}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=compareDoWhileLoopBranch}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=googRequireNode}) (204{val==}) (32 (800{val=IR}) (235{val=.}) (802{val=var}) (214{val=(}) (32 (800{val=IR}) (235{val=.}) (802{val=name}) (214{val=(}) (800{val=shortName}) (215{val=)})) (234{val=,}) (800{val=googRequireNode}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=getTypeJSDoc}) (214{val=(}) (800{val=oldJSDoc}) (234{val=,}) (800{val=expr}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (800{val=hasConstructor})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=addSyntheticConstructor}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (802{val=isCallTo}) (214{val=(}) (800{val=value}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (249{val=&&}) (38 (207{val=!}) (36 (214{val=(}) (27 (27 (800{val=info}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=info}) (235{val=.}) (802{val=isConstructorOrInterface}) (216{val=()}))) (215{val=)})))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isCallTo}) (214{val=(}) (32 (800{val=destructuringLhsNode}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (27 (27 (27 (800{val=var}) (242{val=!=}) (500{val=null})) (249{val=&&}) (27 (32 (800{val=var}) (235{val=.}) (802{val=getInitialValue}) (216{val=()})) (242{val=!=}) (500{val=null}))) (249{val=&&}) (38 (207{val=!}) (32 (802{val=isCallTo}) (214{val=(}) (32 (800{val=var}) (235{val=.}) (802{val=getInitialValue}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=aliasVarNodeRhs}) (236{val===}) (500{val=null})) (250{val=||}) (38 (207{val=!}) (32 (802{val=isCallTo}) (214{val=(}) (800{val=aliasVarNodeRhs}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=t}) (235{val=.}) (802{val=report}) (214{val=(}) (800{val=call}) (234{val=,}) (800{val=INVALID_GET_ALIAS}) (215{val=)})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=exportedNamespace}) (204{val==}) (16 (40{val=currentScript.declareLegacyNamespace}) (233{val=?}) (40{val=currentScript.legacyNamespace}) (226{val=:}) (32 (800{val=currentScript}) (235{val=.}) (802{val=getBinaryNamespace}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=exportedNamespace}) (204{val==}) (32 (800{val=rewriteState}) (235{val=.}) (802{val=getExportedNamespace}) (214{val=(}) (800{val=legacyNamespace}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=exportedNamespace}) (204{val==}) (32 (800{val=rewriteState}) (235{val=.}) (802{val=getExportedNamespace}) (214{val=(}) (800{val=legacyNamespace}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isExportPropertyAssignment}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=recordExportsPropertyAssignment}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=typeCheck}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (40{val=NewTypeInference.MISTYPED_ASSIGN_RHS}) (215{val=)})) (227{val=;})) (21 (32 (802{val=typeCheck}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=JSTypeCreatorFromJSDoc.INHERITANCE_CYCLE}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=IR}) (235{val=.}) (802{val=call}) (214{val=(}) (32 (800{val=IR}) (235{val=.}) (802{val=getprop}) (214{val=(}) (32 (800{val=superClass}) (235{val=.}) (802{val=cloneTree}) (216{val=()})) (234{val=,}) (32 (800{val=IR}) (235{val=.}) (802{val=string}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (234{val=,}) (32 (800{val=IR}) (235{val=.}) (802{val=thisNode}) (216{val=()})) (234{val=,}) (32 (800{val=IR}) (235{val=.}) (802{val=name}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (500{val=null}) (234{val=,}) (32 (800{val=LanguageMode}) (235{val=.}) (802{val=fromString}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=sourceMap}) (235{val=.}) (802{val=appendTo}) (214{val=(}) (800{val=out}) (234{val=,}) (32 (800{val=sourceMapOutputFile}) (235{val=.}) (802{val=getName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isSuper}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=visitSuper}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=add}) (214{val=(}) (800{val=last}) (234{val=,}) (40{val=Context.PRESERVE_BLOCK}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertValidOrder}) (214{val=(}) (800{val=checks}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertValidOrder}) (214{val=(}) (800{val=passes}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=CompilerPass})) (59 (800{val=peepholePass}) (204{val==}) (14 (304{val=new}) (43 (801{val=PeepholeOptimizationsPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=PeepholeFoldConstants})) (214{val=(}) (800{val=late}) (234{val=,}) (22 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (800{val=useTypesForLocalOptimization})) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (36 (214{val=(}) (27 (27 (800{val=rval}) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=rval}) (230{val=<}) (34{val=NUMBER_CONSTANT}))) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=report}) (214{val=(}) (800{val=SHIFT_AMOUNT_OUT_OF_BOUNDS}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=n}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSameEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSameEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSameEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testWarningEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=VariableReferenceCheck.EARLY_REFERENCE}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (802{val=declaresFunction}) (214{val=(}) (800{val=n}) (215{val=)})))
(AST_ROOT_SC2NF (31 (43 (801{val=DeclaredTypeRegistry})) (802{val=getScope}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=scope})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSameEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSameEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSameEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testWarningEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=EARLY_REFERENCE}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=isCallInLoop}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fixUnitializedVarDeclarations}) (214{val=(}) (800{val=newBlock}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (7 (800{val=codingConvention}) (204{val==}) (14 (304{val=new}) (43 (801{val=GoogleCodingConvention})) (216{val=()}))) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT8}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (32 (800{val=targetType}) (235{val=.}) (802{val=getGreatestSubtype}) (214{val=(}) (800{val=type}) (215{val=)})) (235{val=.}) (802{val=isBottom}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=methodPolyfills}) (235{val=.}) (802{val=remove}) (214{val=(}) (800{val=method}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=PeepholeReplaceKnownMethods})) (214{val=(}) (800{val=late}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=PeepholeReplaceKnownMethods})) (214{val=(}) (800{val=late}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=PeepholeReplaceKnownMethods})) (214{val=(}) (800{val=late}) (215{val=)})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=isBuiltinObject}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=isBuiltinWithName}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=isClassy}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (38 (207{val=!}) (32 (802{val=isFunction}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (802{val=isBuiltinObject}) (216{val=()})))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=proto}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isInstanceofObject}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (802{val=isUnknown}) (216{val=()})) (250{val=||}) (36 (214{val=(}) (27 (32 (802{val=isInstanceofObject}) (216{val=()})) (249{val=&&}) (32 (802{val=isLoose}) (216{val=()}))) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (27 (800{val=ft}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=ft}) (235{val=.}) (802{val=isTopFunction}) (216{val=()}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (32 (800{val=nt}) (235{val=.}) (802{val=isBuiltinObject}) (216{val=()})) (233{val=?}) (9{val=false}) (226{val=:}) (32 (800{val=nt}) (235{val=.}) (802{val=isPropDefinedOnSubtype}) (214{val=(}) (800{val=pname}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (32 (800{val=name}) (235{val=.}) (802{val=equals}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (250{val=||}) (32 (800{val=name}) (235{val=.}) (802{val=equals}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (250{val=||}) (32 (800{val=name}) (235{val=.}) (802{val=equals}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=name}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (800{val=TOP_OBJECT}) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (315{val=this}) (236{val===}) (800{val=other})) (250{val=||}) (32 (800{val=other}) (235{val=.}) (802{val=isBuiltinWithName}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isBuiltinWithName}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=subtypes})) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=subtype}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=RemoveUnusedPolyfillsTest}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=EXTERNS}) (215{val=)}) (227{val=;})) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (32 (800{val=Long}) (235{val=.}) (802{val=toString}) (214{val=(}) (800{val=nonnegativeHash}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=toUpperCase}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (40{val=CompilerOptions.J2clPassMode})) (59 (800{val=j2clPassMode}) (204{val==}) (32 (40{val=CompilerOptions.J2clPassMode}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (32 (40{val=flags.j2clPassMode}) (235{val=.}) (802{val=toUpperCase}) (216{val=()})) (215{val=)}))) (227{val=;})) (21 (32 (800{val=options}) (235{val=.}) (802{val=setJ2clPass}) (214{val=(}) (800{val=j2clPassMode}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=lowerParam}) (204{val==}) (32 (800{val=param}) (235{val=.}) (802{val=toLowerCase}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=compilationLevelParsed}) (204{val==}) (32 (800{val=COMPILATION_LEVEL_MAP}) (235{val=.}) (802{val=get}) (214{val=(}) (32 (800{val=compilationLevel}) (235{val=.}) (802{val=toUpperCase}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=addParserWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (32 (800{val=visibility}) (235{val=.}) (802{val=toString}) (216{val=()})) (235{val=.}) (802{val=toLowerCase}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=result}) (204{val==}) (32 (32 (800{val=result}) (235{val=.}) (802{val=toString}) (216{val=()})) (235{val=.}) (802{val=toUpperCase}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=canonicalizedName}) (204{val==}) (32 (32 (32 (800{val=value}) (235{val=.}) (802{val=trim}) (216{val=()})) (235{val=.}) (802{val=toUpperCase}) (216{val=()})) (235{val=.}) (802{val=replaceFirst}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=parent}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (27 (32 (802{val=wasCast}) (214{val=(}) (800{val=n}) (215{val=)})) (250{val=||}) (32 (802{val=isAssertionCall}) (214{val=(}) (800{val=parent}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (800{val=TOP_OBJECT}) (227{val=;})))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (800{val=t}) (235{val=.}) (802{val=isSubtypeOf}) (214{val=(}) (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=TOP_OBJECT})) (215{val=)}))) (249{val=&&}) (36 (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=t}) (235{val=.}) (802{val=hasTypeVariable}) (216{val=()}))) (250{val=||}) (32 (800{val=t}) (235{val=.}) (802{val=hasScalar}) (216{val=()}))) (215{val=)}))))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=objLitType}) (204{val==}) (40{val=commonTypes.TOP_OBJECT})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=globalThisType}) (204{val==}) (32 (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=TOP_OBJECT})) (235{val=.}) (802{val=withLoose}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (27 (27 (315{val=this}) (236{val===}) (800{val=other})) (250{val=||}) (27 (40{val=other.ns}) (242{val=!=}) (500{val=null}))) (250{val=||}) (38 (207{val=!}) (32 (32 (800{val=other}) (235{val=.}) (802{val=getNominalType}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (802{val=getObjectType}) (216{val=()})) (215{val=)})))))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=isInhabitable}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (315{val=this}) (242{val=!=}) (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=BOTTOM_OBJECT}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (27 (27 (800{val=objType}) (242{val=!=}) (500{val=null})) (249{val=&&}) (38 (207{val=!}) (32 (32 (800{val=objType}) (235{val=.}) (802{val=getNominalType}) (216{val=()})) (235{val=.}) (802{val=isClassy}) (216{val=()})))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=objType}) (235{val=.}) (802{val=isLoose}) (216{val=()})))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=nameNode}) (236{val===}) (500{val=null})) (215{val=)}) (500{val=return;})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalStateException})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=declaredValue}) (235{val=.}) (802{val=toStringTree}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=name}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=definitionNodeByDefinitionSite})) (235{val=.}) (802{val=remove}) (214{val=(}) (800{val=node}) (215{val=)})) (227{val=;})) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=nameDefinitionMultimap})) (235{val=.}) (802{val=remove}) (214{val=(}) (800{val=name}) (234{val=,}) (800{val=node}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=pattern}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=pattern}) (234{val=,}) (32 (800{val=IR}) (235{val=.}) (802{val=name}) (214{val=(}) (800{val=tempVarName}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=patternParam}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=patternParam}) (234{val=,}) (800{val=newParam}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=callNode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=callNode}) (234{val=,}) (32 (800{val=replacement}) (235{val=.}) (802{val=useSourceInfoIfMissingFrom}) (214{val=(}) (800{val=callNode}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=candidateDefinition}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=candidateDefinition}) (234{val=,}) (800{val=varNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=parent}) (234{val=,}) (800{val=replacement}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=replacement}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=replacement}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=first}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=first}) (234{val=,}) (800{val=name}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=placeholder}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=parent}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()}))) (227{val=;})) (21 (32 (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=parent}) (234{val=,}) (800{val=fncBlock}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=call}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=msgNode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=msgNode}) (234{val=,}) (800{val=newValue}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=statement}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=statement}) (234{val=,}) (800{val=newStatement}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=assignNode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=assignNode}) (234{val=,}) (800{val=rhs}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=enclosing}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=enclosing}) (235{val=.}) (802{val=isGeneratorFunction}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (32 (800{val=IR}) (235{val=.}) (802{val=name}) (214{val=(}) (800{val=GENERATOR_THIS}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=replacement}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=elem}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=elem}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=lengthNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=newNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=newNumber}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=result}) (235{val=.}) (802{val=useSourceInfoIfMissingFromForTree}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=result}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=result}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=newStringNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=replacement}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=newNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=replacementNode}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=replacementNode}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=replacementNode}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=originalTypeofNode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=originalTypeofNode}) (234{val=,}) (800{val=newNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=replacement}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=callNode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=callNode}) (234{val=,}) (800{val=objNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=newNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=subtree}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=subtree}) (234{val=,}) (800{val=replacement}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=subtree}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=subtree}) (234{val=,}) (800{val=replacement}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=parent}) (234{val=,}) (32 (800{val=IR}) (235{val=.}) (802{val=empty}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=grandparent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=grandparent}) (234{val=,}) (800{val=functionNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=var}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=replacement}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=target}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=target}) (234{val=,}) (32 (800{val=value}) (235{val=.}) (802{val=cloneTree}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=node}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=node}) (234{val=,}) (800{val=replacement}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=stringNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=callNode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=callNode}) (234{val=,}) (800{val=objNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=callNode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=callNode}) (234{val=,}) (800{val=objNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=original}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=original}) (234{val=,}) (800{val=replacement}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=replacement}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=replaceParent}) (215{val=)}) (8 (218{val={}) (21 (32 (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=parent}) (234{val=,}) (800{val=replacement}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (800{val=parent}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=replacement}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=superCall}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=superCall}) (234{val=,}) (800{val=superErrorExpr}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=obj}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=obj}) (234{val=,}) (800{val=result}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=attachTypeExpr}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=loadModuleStatement}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=loadModuleStatement}) (234{val=,}) (800{val=moduleBlockNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=legacyQname}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=exprResultNode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=exprResultNode}) (234{val=,}) (800{val=exportsObjectCreationNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=call}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=call}) (234{val=,}) (800{val=exportedNamespaceName}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=aliasReference}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=aliasReference}) (234{val=,}) (800{val=replacement}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=expressionWithScopeCall}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=expressionWithScopeCall}) (234{val=,}) (800{val=scopeClosureBlock}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=newValue}) (235{val=.}) (802{val=useSourceInfoIfMissingFromForTree}) (214{val=(}) (800{val=msgNode}) (215{val=)})) (227{val=;})) (21 (32 (32 (800{val=msgNode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=msgNode}) (234{val=,}) (800{val=newValue}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=callNode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=callNode}) (234{val=,}) (32 (800{val=replacementNode}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=member}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=member}) (234{val=,}) (800{val=memberVariable}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=forCondition}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=forCondition}) (234{val=,}) (32 (800{val=IR}) (235{val=.}) (802{val=empty}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=whileNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=condition}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=condition}) (234{val=,}) (800{val=replacementConditionNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=replacement}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (32 (800{val=caseBlock}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=result}) (235{val=.}) (802{val=getParent}) (216{val=()})) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=result}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (219{val=}}))) (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=result}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=subtree}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=subtree}) (234{val=,}) (32 (800{val=right}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=right}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=oldRoot}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=oldRoot}) (234{val=,}) (800{val=newRoot}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=call}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=not}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=newLiteralNode}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=newLiteralNode}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=newLiteralNode}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=replacement}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=enclosingCall}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=enclosingCall}) (234{val=,}) (800{val=baseCall}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=callNode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=callNode}) (234{val=,}) (800{val=replacement}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNgInjectSetVisibility}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (7 (800{val=compareJsDoc}) (204{val==}) (9{val=true})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=scopeMethodCall}) (204{val==}) (32 (802{val=findScopeMethodCall}) (214{val=(}) (32 (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()})) (235{val=.}) (802{val=getRootNode}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=n}) (204{val==}) (32 (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()})) (235{val=.}) (802{val=getRootNode}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (800{val=list}) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (32 (800{val=list}) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (233{val=?}) (500{val=null}) (226{val=:}) (800{val=list})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=abstract}) (43 (801{val=Node})) (802{val=getRoot}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=String})) (802{val=getContent}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=ServiceException})) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=String})) (802{val=getName}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=ServiceException})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (45{val=STRING_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=MockitoAnnotations}) (235{val=.}) (802{val=initMocks}) (214{val=(}) (315{val=this}) (215{val=)})) (227{val=;})) (21 (7 (800{val=transpiler}) (204{val==}) (14 (304{val=new}) (43 (801{val=CachingTranspiler})) (214{val=(}) (800{val=delegate}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=MockitoAnnotations}) (235{val=.}) (802{val=initMocks}) (214{val=(}) (315{val=this}) (215{val=)})) (227{val=;})) (21 (7 (800{val=transpiler}) (204{val==}) (14 (304{val=new}) (43 (801{val=CachingTranspiler})) (214{val=(}) (800{val=delegate}) (234{val=,}) (32 (800{val=CacheBuilder}) (235{val=.}) (802{val=newBuilder}) (216{val=()})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Strings}) (235{val=.}) (802{val=nullToEmpty}) (214{val=(}) (32 (800{val=sourceMapCache}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=path}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=output}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (242{val=!=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=n}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=castType}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=exprType}) (215{val=)})) (250{val=||}) (32 (800{val=expr}) (235{val=.}) (802{val=isObjectLit}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=expr}) (235{val=.}) (802{val=setJSType}) (214{val=(}) (800{val=castType}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=MockitoAnnotations}) (235{val=.}) (802{val=initMocks}) (214{val=(}) (315{val=this}) (215{val=)})) (227{val=;})) (21 (7 (800{val=transpiler}) (204{val==}) (14 (304{val=new}) (43 (801{val=CachingTranspiler})) (214{val=(}) (800{val=delegate}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (45{val=STRING_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT5_STRICT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=RawNominalType})) (214{val=(}) (800{val=commonTypes}) (234{val=,}) (800{val=defSite}) (234{val=,}) (800{val=name}) (234{val=,}) (800{val=typeParameters}) (234{val=,}) (40{val=Kind.RECORD}) (234{val=,}) (800{val=objKind}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=RawNominalType})) (214{val=(}) (800{val=commonTypes}) (234{val=,}) (800{val=defSite}) (234{val=,}) (800{val=name}) (234{val=,}) (800{val=typeParameters}) (234{val=,}) (40{val=Kind.INTERFACE}) (234{val=,}) (800{val=objKind}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=ImmutableCollection})) (230{val=<}) (43 (800{val=Node})) (231{val=>})) (800{val=exports})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=isUnknownType}) (216{val=()})) (250{val=||}) (32 (802{val=implicitPrototypeChainIsUnknown}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (800{val=list}) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (800{val=hasConstructor})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=addSyntheticConstructor}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (32 (800{val=IR}) (235{val=.}) (802{val=comma}) (214{val=(}) (32 (800{val=IR}) (235{val=.}) (802{val=comma}) (214{val=(}) (32 (800{val=IR}) (235{val=.}) (802{val=comma}) (214{val=(}) (800{val=getTmpError}) (234{val=,}) (800{val=copyMessage}) (215{val=)})) (234{val=,}) (800{val=setStack}) (215{val=)})) (234{val=,}) (32 (800{val=IR}) (235{val=.}) (802{val=name}) (214{val=(}) (800{val=TMP_ERROR}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=useSourceInfoIfMissingFromForTree}) (214{val=(}) (800{val=superCall}) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=constructor}) (234{val=,}) (800{val=CANNOT_CONVERT_YET}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=superClassQName})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=implementedInterfaces})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=script}) (235{val=.}) (802{val=addChildToFront}) (214{val=(}) (32 (800{val=googProvide}) (235{val=.}) (802{val=copyInformationFromForTree}) (214{val=(}) (800{val=script}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=require}) (235{val=.}) (802{val=copyInformationFromForTree}) (214{val=(}) (800{val=importDecl}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=newChild}) (235{val=.}) (802{val=copyInformationFrom}) (214{val=(}) (800{val=child}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=node}) (235{val=.}) (802{val=copyInformationFromForTree}) (214{val=(}) (800{val=basisNode}) (215{val=)})) (227{val=;})) (21 (32 (800{val=node}) (235{val=.}) (802{val=setOriginalName}) (214{val=(}) (800{val=originalName}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=newNode}) (235{val=.}) (802{val=copyInformationFromForTree}) (214{val=(}) (800{val=sourceInfoNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=expr}) (235{val=.}) (802{val=copyInformationFromForTree}) (214{val=(}) (800{val=parent}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=newChild}) (235{val=.}) (802{val=useSourceInfoWithoutLengthIfMissingFrom}) (214{val=(}) (800{val=child}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=String})) (800{val=name})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=strictMismatch}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=implicitStructuralInterfaceUses}) (235{val=.}) (802{val=add}) (214{val=(}) (14 (304{val=new}) (43 (801{val=TypeMismatch})) (214{val=(}) (800{val=found}) (234{val=,}) (800{val=required}) (234{val=,}) (800{val=error}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=argType}) (235{val=.}) (802{val=isSubtypeWithoutStructuralTyping}) (214{val=(}) (800{val=paramType}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=recordStructuralInterfaceUses}) (214{val=(}) (800{val=argType}) (234{val=,}) (800{val=paramType}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=rightType}) (235{val=.}) (802{val=isSubtypeWithoutStructuralTyping}) (214{val=(}) (800{val=leftType}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=recordStructuralInterfaceUses}) (214{val=(}) (800{val=rightType}) (234{val=,}) (800{val=leftType}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=leftType}) (235{val=.}) (802{val=isNoType}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=rightType}) (235{val=.}) (802{val=isSubtypeWithoutStructuralTyping}) (214{val=(}) (800{val=leftType}) (215{val=)})))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=recordStructuralInterfaceUses}) (214{val=(}) (800{val=rightType}) (234{val=,}) (800{val=leftType}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=recordStructuralInterfaceUses}) (214{val=(}) (800{val=caseType}) (234{val=,}) (800{val=switchType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=strictMismatch}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=mismatches}) (235{val=.}) (802{val=add}) (214{val=(}) (14 (304{val=new}) (43 (801{val=TypeMismatch})) (214{val=(}) (800{val=found}) (234{val=,}) (800{val=required}) (234{val=,}) (800{val=error}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=argType}) (235{val=.}) (802{val=isSubtypeWithoutStructuralTyping}) (214{val=(}) (800{val=paramType}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=recordImplicitInterfaceUses}) (214{val=(}) (800{val=argType}) (234{val=,}) (800{val=paramType}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=rightType}) (235{val=.}) (802{val=isSubtypeWithoutStructuralTyping}) (214{val=(}) (800{val=leftType}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=recordImplicitInterfaceUses}) (214{val=(}) (800{val=rightType}) (234{val=,}) (800{val=leftType}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=leftType}) (235{val=.}) (802{val=isNoType}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=rightType}) (235{val=.}) (802{val=isSubtypeWithoutStructuralTyping}) (214{val=(}) (800{val=leftType}) (215{val=)})))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=recordImplicitInterfaceUses}) (214{val=(}) (800{val=rightType}) (234{val=,}) (800{val=leftType}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=recordImplicitInterfaceUses}) (214{val=(}) (800{val=caseType}) (234{val=,}) (800{val=switchType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (801{val=Override})) (74 (43 (800{val=Iterable})) (230{val=<}) (43 (800{val=TypeMismatch})) (231{val=>})) (802{val=getImplicitInterfaceUses}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=getTypeValidator}) (216{val=()})) (235{val=.}) (802{val=getImplicitStructuralInterfaceUses}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=strictMismatch}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=implicitStructuralInterfaceUses}) (235{val=.}) (802{val=add}) (214{val=(}) (14 (304{val=new}) (43 (801{val=TypeMismatch})) (214{val=(}) (800{val=found}) (234{val=,}) (800{val=required}) (234{val=,}) (800{val=error}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=argType}) (235{val=.}) (802{val=isSubtypeWithoutStructuralTyping}) (214{val=(}) (800{val=paramType}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=recordStructuralInterfaceUses}) (214{val=(}) (800{val=argType}) (234{val=,}) (800{val=paramType}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=rightType}) (235{val=.}) (802{val=isSubtypeWithoutStructuralTyping}) (214{val=(}) (800{val=leftType}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=recordStructuralInterfaceUses}) (214{val=(}) (800{val=rightType}) (234{val=,}) (800{val=leftType}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=leftType}) (235{val=.}) (802{val=isNoType}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=rightType}) (235{val=.}) (802{val=isSubtypeWithoutStructuralTyping}) (214{val=(}) (800{val=leftType}) (215{val=)})))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=recordStructuralInterfaceUses}) (214{val=(}) (800{val=rightType}) (234{val=,}) (800{val=leftType}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=recordStructuralInterfaceUses}) (214{val=(}) (800{val=caseType}) (234{val=,}) (800{val=switchType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (40{val=options.tracer}) (235{val=.}) (802{val=isOn}) (216{val=()})) (249{val=&&}) (27 (800{val=tracker}) (242{val=!=}) (500{val=null}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=tracker}) (235{val=.}) (802{val=recordPassStop}) (214{val=(}) (800{val=passName}) (234{val=,}) (800{val=result}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (40{val=options.tracer}) (235{val=.}) (802{val=isOn}) (216{val=()})) (249{val=&&}) (27 (800{val=tracker}) (242{val=!=}) (500{val=null}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=tracker}) (235{val=.}) (802{val=recordPassStart}) (214{val=(}) (800{val=passName}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=compilerExecutor}) (235{val=.}) (802{val=runInCompilerThread}) (214{val=(}) (800{val=callable}) (234{val=,}) (27 (27 (800{val=options}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (40{val=options.tracer}) (235{val=.}) (802{val=isOn}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (40{val=options.tracer}) (204{val==}) (40{val=config.tracerMode})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testEs6}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testExport5}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=expectedCode}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Reference})) (800{val=ref})) (226{val=:}) (800{val=refCollection}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=processReference}) (214{val=(}) (800{val=collector}) (234{val=,}) (800{val=ref}) (234{val=,}) (800{val=info}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Map})) (230{val=<}) (43 (800{val=String})) (234{val=,}) (43 (800{val=DependencyInfo})) (231{val=>})) (59 (800{val=parsedFiles}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Map})) (230{val=<}) (43 (800{val=String})) (234{val=,}) (43 (800{val=DependencyInfo})) (231{val=>})) (59 (800{val=depsFiles}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Map})) (230{val=<}) (43 (800{val=String})) (234{val=,}) (43 (800{val=DependencyInfo})) (231{val=>})) (59 (800{val=providesMap}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (36 (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isPropertyTest}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=n}) (215{val=)}))) (250{val=||}) (32 (800{val=objectType}) (235{val=.}) (802{val=isStruct}) (216{val=()}))) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=canCreate}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=createName}) (214{val=(}) (800{val=name}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=allNames}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=name}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=Double}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (800{val=d}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=cc}) (235{val=.}) (802{val=addNumber}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (802{val=addJsString}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=assertThat}) (214{val=(}) (40{val=result.sourceMap}) (215{val=)})) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IOException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=REPORT_PATH_IO_ERROR}) (234{val=,}) (800{val=reportPath}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IOException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=REPORT_PATH_IO_ERROR}) (234{val=,}) (800{val=reportPath}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=current}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=static}) (39{val=boolean}) (802{val=isEnhancedFor}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=n})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isForOf}) (216{val=()})) (250{val=||}) (32 (802{val=isForIn}) (214{val=(}) (800{val=n}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=newNode}) (214{val=(}) (40{val=Token.FOR}) (234{val=,}) (800{val=initializer}) (234{val=,}) (32 (802{val=transform}) (214{val=(}) (40{val=loopNode.collection}) (215{val=)})) (234{val=,}) (32 (802{val=transformBlock}) (214{val=(}) (40{val=loopNode.body}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.FOR}) (234{val=,}) (800{val=target}) (234{val=,}) (800{val=cond}) (234{val=,}) (800{val=body}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=validateNodeType}) (214{val=(}) (40{val=Token.BLOCK}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=validateNodeType}) (214{val=(}) (40{val=Token.BLOCK}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=String})) (800{val=path})))
(AST_ROOT_SC2NF (44 (43 (801{val=String})) (800{val=path})))
(AST_ROOT_SC2NF (31 (43 (801{val=TranspileResult})) (802{val=transpile}) (214{val=(}) (44 (43 (801{val=String})) (800{val=path})) (234{val=,}) (44 (43 (801{val=String})) (800{val=code})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TranspileResult})) (59 (800{val=result}) (204{val==}) (32 (800{val=transpiler}) (235{val=.}) (802{val=transpile}) (214{val=(}) (800{val=path}) (234{val=,}) (800{val=s}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=String})) (800{val=path})))
(AST_ROOT_SC2NF (60 (43 (40{val=BaseTranspiler.CompileResult})) (59 (800{val=result}) (204{val==}) (32 (800{val=compiler}) (235{val=.}) (802{val=compile}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (40{val=BaseTranspiler.CompileResult})) (59 (800{val=result}) (204{val==}) (32 (800{val=compiler}) (235{val=.}) (802{val=compile}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=String})) (800{val=path})))
(AST_ROOT_SC2NF (44 (43 (801{val=String})) (800{val=path})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=parent}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (27 (800{val=n}) (242{val=!=}) (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()}))) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getConditionExpression}) (214{val=(}) (800{val=parent}) (215{val=)})) (242{val=!=}) (800{val=n})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=source}) (215{val=)})))
(AST_ROOT_SC2NF (36 (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=parent}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isForOf}) (216{val=()})) (250{val=||}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=n}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=n}) (235{val=.}) (802{val=getSecondChild}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=parent}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=parent}) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (32 (32 (800{val=parent}) (235{val=.}) (802{val=getSecondChild}) (216{val=()})) (235{val=.}) (802{val=getNext}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isVanillaFor}) (214{val=(}) (800{val=cur}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=iter}) (204{val==}) (32 (800{val=cur}) (235{val=.}) (802{val=getChildAtIndex}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=forNode}) (215{val=)})) (250{val=||}) (32 (800{val=forNode}) (235{val=.}) (802{val=isForOf}) (216{val=()}))))
(AST_ROOT_SC2NF (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=c}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=parent}) (215{val=)})))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=n}) (215{val=)}))))
(AST_ROOT_SC2NF (27 (32 (800{val=parent}) (235{val=.}) (802{val=isFor}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=parent}) (215{val=)})))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=parent}) (215{val=)}))) (249{val=&&}) (27 (800{val=child}) (236{val===}) (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=parent}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=lhsOfForInLoop}) (204{val==}) (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=gp}) (215{val=)})) (249{val=&&}) (27 (32 (800{val=gp}) (235{val=.}) (802{val=getFirstFirstChild}) (216{val=()})) (236{val===}) (800{val=declNode})))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isVanillaFor}) (214{val=(}) (800{val=loopNode}) (215{val=)})))
(AST_ROOT_SC2NF (27 (32 (800{val=srcDeclaration}) (235{val=.}) (802{val=isConst}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (36 (214{val=(}) (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=srcParent}) (215{val=)})) (249{val=&&}) (27 (800{val=srcDeclaration}) (236{val===}) (32 (800{val=srcParent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})))) (215{val=)})))))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=n}) (215{val=)}))))
(AST_ROOT_SC2NF (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=nextSibling}) (215{val=)})))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=n}) (215{val=)}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (27 (800{val=enclosingFunc}) (236{val===}) (500{val=null})) (250{val=||}) (38 (207{val=!}) (32 (800{val=enclosingFunc}) (235{val=.}) (802{val=isGeneratorFunction}) (216{val=()})))) (250{val=||}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=n}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=currentStatement}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=visitForIn}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=parent}) (215{val=)})) (249{val=&&}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (236{val===}) (800{val=n}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=n}) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=expr}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (32 (800{val=expr}) (235{val=.}) (802{val=getParent}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (32 (800{val=lvalue}) (235{val=.}) (802{val=getParent}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=n}) (215{val=)})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=expr}) (204{val==}) (16 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=n}) (215{val=)})) (233{val=?}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (226{val=:}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getConditionExpression}) (214{val=(}) (800{val=n}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=parent}) (215{val=)})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=n}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=node}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=tryJoinForCondition}) (214{val=(}) (800{val=node}) (215{val=)})) (227{val=;})) (21 (32 (802{val=tryMinimizeCondition}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getConditionExpression}) (214{val=(}) (800{val=node}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=parent}) (215{val=)})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=parent}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (36 (214{val=(}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=getSecondChild}) (216{val=()})) (236{val===}) (800{val=expr})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (36 (214{val=(}) (27 (32 (802{val=isForIn}) (214{val=(}) (800{val=parent}) (215{val=)})) (249{val=&&}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (236{val===}) (800{val=n}))) (215{val=)})))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=n}) (215{val=)})) (233{val=?}) (500{val=null}) (226{val=:}) (32 (800{val=n}) (235{val=.}) (802{val=getSecondChild}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (36 (214{val=(}) (27 (32 (802{val=isForIn}) (214{val=(}) (800{val=parent}) (215{val=)})) (249{val=&&}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (236{val===}) (800{val=n}))) (215{val=)})))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=n}) (215{val=)}))))
(AST_ROOT_SC2NF (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=control}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=n}) (215{val=)})))
(AST_ROOT_SC2NF (27 (32 (800{val=parent}) (235{val=.}) (802{val=isFor}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=parent}) (215{val=)}))) (249{val=&&}) (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getConditionExpression}) (214{val=(}) (800{val=parent}) (215{val=)})) (242{val=!=}) (800{val=n}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (800{val=n}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=tryRemoveAssignment}) (214{val=(}) (800{val=t}) (234{val=,}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getConditionExpression}) (214{val=(}) (800{val=n}) (215{val=)})) (234{val=,}) (800{val=state}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (32 (800{val=var}) (235{val=.}) (802{val=getParentNode}) (216{val=()})) (235{val=.}) (802{val=isVar}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isForIn}) (214{val=(}) (32 (32 (800{val=var}) (235{val=.}) (802{val=getParentNode}) (216{val=()})) (235{val=.}) (802{val=getParent}) (216{val=()})) (215{val=)})))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (800{val=parent}) (235{val=.}) (802{val=isFor}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=currentStatement}) (235{val=.}) (802{val=isFor}) (216{val=()})))
(AST_ROOT_SC2NF (27 (32 (800{val=n}) (235{val=.}) (802{val=isAssign}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=parent}) (235{val=.}) (802{val=isFor}) (216{val=()})))))
(AST_ROOT_SC2NF (27 (32 (800{val=n}) (235{val=.}) (802{val=isAssign}) (216{val=()})) (249{val=&&}) (36 (214{val=(}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=isExprResult}) (216{val=()})) (250{val=||}) (32 (800{val=parent}) (235{val=.}) (802{val=isFor}) (216{val=()})) (250{val=||}) (32 (800{val=parent}) (235{val=.}) (802{val=isReturn}) (216{val=()}))) (215{val=)}))))
(AST_ROOT_SC2NF (36 (214{val=(}) (27 (32 (32 (800{val=declaration}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isVar}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (32 (800{val=declaration}) (235{val=.}) (802{val=getGrandparent}) (216{val=()})) (235{val=.}) (802{val=isFor}) (216{val=()})))) (215{val=)})))
(AST_ROOT_SC2NF (27 (32 (800{val=nextSibling}) (235{val=.}) (802{val=isFor}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=nextSibling}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=isEmpty}) (216{val=()}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=initializer}) (204{val==}) (16 (32 (800{val=n}) (235{val=.}) (802{val=isFor}) (216{val=()})) (233{val=?}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (226{val=:}) (32 (800{val=IR}) (235{val=.}) (802{val=empty}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=parent}) (235{val=.}) (802{val=isFor}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=assign}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=newExpr}) (214{val=(}) (800{val=assign}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=grandparent}) (235{val=.}) (802{val=isFor}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=appendField}) (214{val=(}) (800{val=out}) (234{val=,}) (800{val=name}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=scope}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=preserveBlock}) (204{val==}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=isSyntheticBlock}) (216{val=()}))))) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=parent}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (250{val=||}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isAnyFor}) (214{val=(}) (800{val=parent}) (215{val=)})) (250{val=||}) (32 (800{val=parent}) (235{val=.}) (802{val=isScript}) (216{val=()})) (250{val=||}) (32 (800{val=parent}) (235{val=.}) (802{val=isModuleBody}) (216{val=()})) (250{val=||}) (32 (800{val=parent}) (235{val=.}) (802{val=isLabel}) (216{val=()}))))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=scanInnerBlocks}) (204{val==}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isSyntheticBlock}) (216{val=()})) (250{val=||}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isFunctionBlock}) (214{val=(}) (800{val=n}) (215{val=)})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isModuleBody}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypedScope})) (59 (800{val=s}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=TypedScopeCreator})) (214{val=(}) (800{val=compiler}) (234{val=,}) (32 (800{val=CodingConventions}) (235{val=.}) (802{val=getDefault}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=createInitialScope}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.BLOCK}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testMissingRequireCall}) (214{val=(}) (800{val=js}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testMissingRequireCall}) (214{val=(}) (800{val=js}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testMissingRequireCall}) (214{val=(}) (800{val=js}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=CheckRequiresForConstructors})) (214{val=(}) (800{val=compiler}) (234{val=,}) (40{val=CheckRequiresForConstructors.Mode.FULL_COMPILE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=optimizePropertyIndex})) (249{val=&&}) (32 (802{val=isObjectLiteralThatCanBeSkipped}) (214{val=(}) (800{val=type}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=type}) (204{val==}) (22 (315{val=this}) (235{val=.}) (800{val=sentinelObjectLiteral}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=PeepholeMinimizeConditions})) (214{val=(}) (800{val=late}) (234{val=,}) (800{val=useTypesForOptimization}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=PeepholeOptimizationsPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=PeepholeRemoveDeadCode})) (216{val=()})) (234{val=,}) (14 (304{val=new}) (43 (801{val=PeepholeMinimizeConditions})) (214{val=(}) (9{val=true}) (234{val=,}) (9{val=false}) (215{val=)})) (234{val=,}) (14 (304{val=new}) (43 (801{val=PeepholeFoldConstants})) (214{val=(}) (9{val=true}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (60 (43 (801{val=PeepholeOptimizationsPass})) (59 (800{val=peepholePass}) (204{val==}) (14 (304{val=new}) (43 (801{val=PeepholeOptimizationsPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=PeepholeMinimizeConditions})) (214{val=(}) (800{val=late}) (234{val=,}) (800{val=useTypes}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=PeepholeMinimizeConditions})) (214{val=(}) (800{val=late}) (234{val=,}) (9{val=false}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=PeepholeMinimizeConditions})) (214{val=(}) (800{val=late}) (234{val=,}) (9{val=false}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=invalidationMap}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=t}) (215{val=)})))
(AST_ROOT_SC2NF (53 (320{val=throw}) (32 (800{val=Throwables}) (235{val=.}) (802{val=propagate}) (214{val=(}) (800{val=cause}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (2 (801{val=exception}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Throwables}) (235{val=.}) (802{val=propagate}) (214{val=(}) (2 (801{val=exception}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=TextFormat}) (235{val=.}) (802{val=merge}) (214{val=(}) (800{val=textProto}) (234{val=,}) (800{val=builder}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=Throwables}) (235{val=.}) (802{val=propagate}) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=initialize}) (214{val=(}) (32 (800{val=metadata}) (235{val=.}) (802{val=getCompiler}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Throwables}) (235{val=.}) (802{val=propagate}) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=CompilerOptions})) (59 (800{val=options}) (204{val==}) (48 (349{val=super}) (235{val=.}) (802{val=getOptions}) (216{val=()}))) (227{val=;})) (25 (313{val=if}) (214{val=(}) (800{val=enableUnusedLocalAssignmentCheck}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=options}) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.LINT_CHECKS}) (234{val=,}) (40{val=CheckLevel.WARNING}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (800{val=options}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (32 (802{val=getInvalidationsErrors}) (216{val=()})) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=t}) (215{val=)})))
(AST_ROOT_SC2NF (31 (83{val=private}) (43 (801{val=String})) (802{val=getNewName}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (800{val=paramPredix}) (200{val=+}) (37 (800{val=uniqueId}) (247{val=++}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=compiler})) (204{val==}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=compiler}) (215{val=)}))) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=paramPredix})) (204{val==}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=paramPrefix}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=PeepholeOptimizationsPass})) (59 (800{val=peepholePass}) (204{val==}) (14 (304{val=new}) (43 (801{val=PeepholeOptimizationsPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=PeepholeMinimizeConditions})) (214{val=(}) (800{val=late}) (234{val=,}) (800{val=useTypes}) (234{val=,}) (800{val=assumeAccurateNullUndefinedTypes}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=PeepholeMinimizeConditions})) (214{val=(}) (800{val=late}) (234{val=,}) (9{val=false}) (234{val=,}) (9{val=false}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=PeepholeMinimizeConditions})) (214{val=(}) (800{val=late}) (234{val=,}) (9{val=false}) (234{val=,}) (9{val=false}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=PeepholeOptimizationsPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=PeepholeRemoveDeadCode})) (216{val=()})) (234{val=,}) (14 (304{val=new}) (43 (801{val=PeepholeMinimizeConditions})) (214{val=(}) (9{val=true}) (234{val=,}) (9{val=false}) (234{val=,}) (9{val=false}) (215{val=)})) (234{val=,}) (14 (304{val=new}) (43 (801{val=PeepholeFoldConstants})) (214{val=(}) (9{val=true}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=PeepholeMinimizeConditions})) (214{val=(}) (800{val=late}) (234{val=,}) (800{val=useTypesForOptimization}) (234{val=,}) (40{val=options.assumeAccurateNullUndefinedTypes}) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (36 (214{val=(}) (14 (304{val=new}) (43 (801{val=NodeTraversal})) (214{val=(}) (800{val=compiler}) (234{val=,}) (315{val=this}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=traverseAtScope}) (214{val=(}) (800{val=scope}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=addLibrary}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setLanguage}) (214{val=(}) (800{val=ES6}) (234{val=,}) (800{val=ES5}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testInjects}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=addLibrary}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setLanguage}) (214{val=(}) (800{val=ES6}) (234{val=,}) (800{val=ES5}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testInjects}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=validateSyntheticBlock}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=validateNodeType}) (214{val=(}) (40{val=Token.DEFAULT_CASE}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (802{val=validateChildCount}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (802{val=validateSyntheticBlock}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=body}) (235{val=.}) (802{val=putBooleanProp}) (214{val=(}) (40{val=Node.SYNTHETIC_BLOCK_PROP}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.DEFAULT_CASE}) (234{val=,}) (800{val=body}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=body}) (235{val=.}) (802{val=putBooleanProp}) (214{val=(}) (40{val=Node.SYNTHETIC_BLOCK_PROP}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=block}) (235{val=.}) (802{val=putBooleanProp}) (214{val=(}) (40{val=Node.SYNTHETIC_BLOCK_PROP}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=block}) (235{val=.}) (802{val=putBooleanProp}) (214{val=(}) (40{val=Node.SYNTHETIC_BLOCK_PROP}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testEmpty}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=instrumentationPb})) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testSwitchCase}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testRemoveDo}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fold}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fold}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fold}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=src}) (234{val=,}) (800{val=src}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testForIn}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=inFunction}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=inFunction}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=foldSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fold}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fold}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fold}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testDivision}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=fold}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fold}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fold}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fold}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fold}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=js}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fold}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fold}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNgInjectToArrowFunctions}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testReturnType}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testRestParameter}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testLocal}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (21 (32 (802{val=testLocal}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=testLocal}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testWithInversion}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=fullJsCode}) (234{val=,}) (800{val=fullJsCode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isClinitMethod}) (214{val=(}) (800{val=node}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))) (21 (32 (802{val=trySubstituteEmptyFunction}) (214{val=(}) (800{val=node}) (234{val=,}) (32 (800{val=t}) (235{val=.}) (802{val=getCompiler}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=tryRemovingClinit}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=node}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (32 (802{val=isNewControlBranch}) (214{val=(}) (800{val=parent}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=clinitsCalledAtBranch}) (204{val==}) (40{val=clinitsCalledAtBranch.parent})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=FunctionInformation})) (231{val=>})) (59 (800{val=possibleSideEffects}) (204{val==}) (32 (802{val=getSideEffectsForCall}) (214{val=(}) (800{val=callNode}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=functionSideEffectMap})) (204{val==}) (32 (800{val=ArrayListMultimap}) (235{val=.}) (802{val=create}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PropertyType})) (59 (800{val=pt}) (204{val==}) (32 (802{val=getPropTypeHelper}) (214{val=(}) (800{val=jsdoc}) (234{val=,}) (800{val=initializer}) (234{val=,}) (800{val=rawType}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=lint}) (214{val=(}) (32 (800{val=Paths}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=filename}) (215{val=)})) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSameEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSameEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSameEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testWarningEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=VariableReferenceCheck.EARLY_REFERENCE}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (40{val=options.protectHiddenSideEffects}) (204{val==}) (9{val=true})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NodeTraversal})) (59 (800{val=outOfBandTraversal}) (204{val==}) (14 (304{val=new}) (43 (801{val=NodeTraversal})) (214{val=(}) (800{val=compiler}) (234{val=,}) (315{val=this}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=mayBeExpression}) (214{val=(}) (800{val=expr}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.EXPR_RESULT}) (234{val=,}) (800{val=expr}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=root}) (204{val==}) (32 (800{val=compiler}) (235{val=.}) (802{val=parseTestCode}) (214{val=(}) (800{val=js}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=compiler}) (235{val=.}) (802{val=getErrorCount}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=root}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=ScopeCreator})) (59 (800{val=scopeCreator}) (204{val==}) (32 (800{val=SyntacticScopeCreator}) (235{val=.}) (802{val=makeUntypedWithRedeclHandler}) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=DuplicateDeclarationHandler})) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isConstructor}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=processConstructor}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseRootsEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=RemoveCode})) (214{val=(}) (800{val=compiler}) (215{val=)})) (234{val=,}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=handleTypedefDefinition}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=memberType}) (204{val==}) (32 (802{val=parseTypeExpressionList}) (214{val=(}) (32 (802{val=next}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=memberType}) (204{val==}) (32 (802{val=parseTypeExpressionList}) (214{val=(}) (800{val=typeName}) (234{val=,}) (32 (802{val=next}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=lastIndex}) (204{val==}) (27 (32 (800{val=replacement}) (235{val=.}) (802{val=getStartPosition}) (216{val=()})) (200{val=+}) (32 (800{val=replacement}) (235{val=.}) (802{val=getLength}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=compilerExecutor}) (235{val=.}) (802{val=runInCompilerThread}) (214{val=(}) (800{val=callable}) (234{val=,}) (27 (27 (800{val=options}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (32 (800{val=options}) (235{val=.}) (802{val=getTracerMode}) (216{val=()})) (235{val=.}) (802{val=isOn}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=FunctionInformation})) (231{val=>})) (59 (800{val=possibleSideEffects}) (204{val==}) (32 (802{val=getSideEffectsForCall}) (214{val=(}) (800{val=callNode}) (234{val=,}) (800{val=definitionProvider}) (234{val=,}) (800{val=representativeNodesByName}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=functionSideEffectMap})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedHashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=Object})) (800{val=object})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=token}) (236{val===}) (40{val=Token.BLOCK})) (215{val=)})) (227{val=;})) (21 (32 (802{val=putBooleanProp}) (214{val=(}) (800{val=SYNTHETIC_BLOCK_PROP}) (234{val=,}) (800{val=val}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setTypeI}) (214{val=(}) (44 (43 (801{val=TypeI})) (800{val=type})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=typei})) (204{val==}) (800{val=type})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=TypeI})) (802{val=getTypeI}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=typei}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setJSType}) (214{val=(}) (44 (43 (801{val=JSType})) (800{val=jsType})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=typei})) (204{val==}) (800{val=jsType})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=target}) (242{val=!=}) (500{val=null})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=parent}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})) (21 (32 (800{val=parent}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (315{val=this}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=AncestorIterable})) (802{val=getAncestors}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=AncestorIterable})) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=getParent}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Node})) (802{val=getParent}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=parent}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=setPropListHead}) (214{val=(}) (44 (43 (801{val=PropListItem})) (800{val=propListHead})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=propListHead})) (204{val==}) (800{val=propListHead})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (43 (801{val=PropListItem})) (802{val=getPropListHeadForTesting}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=propListHead}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setStaticSourceFile}) (214{val=(}) (44 (43 (801{val=StaticSourceFile})) (800{val=file})) (215{val=)}) (8 (218{val={}) (21 (32 (315{val=this}) (235{val=.}) (802{val=putProp}) (214{val=(}) (800{val=STATIC_SOURCE_FILE}) (234{val=,}) (800{val=file}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=PropListItem})) (800{val=next})))
(AST_ROOT_SC2NF (44 (43 (801{val=PropListItem})) (800{val=next})))
(AST_ROOT_SC2NF (44 (43 (801{val=Object})) (800{val=value})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=propListHead})) (236{val===}) (500{val=null})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=propListHead})) (204{val==}) (40{val=other.propListHead})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=target}) (242{val=!=}) (500{val=null})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (40{val=prevChild.next}) (242{val=!=}) (500{val=null})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=replaceChild}) (214{val=(}) (40{val=prevChild.next}) (234{val=,}) (800{val=newChild}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (40{val=child.parent}) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})) (21 (7 (40{val=child.parent}) (204{val==}) (315{val=this})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Node})) (802{val=getSecondChild}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (40{val=first.next}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Node})) (802{val=getFirstChild}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=first}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=PropListItem})) (800{val=next})))
(AST_ROOT_SC2NF (44 (43 (801{val=PropListItem})) (800{val=next})))
(AST_ROOT_SC2NF (44 (43 (801{val=PropListItem})) (800{val=next})))
(AST_ROOT_SC2NF (44 (43 (801{val=PropListItem})) (800{val=next})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (83{val=abstract}) (43 (801{val=PropListItem})) (802{val=chain}) (214{val=(}) (44 (43 (801{val=PropListItem})) (800{val=next})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=PropListItem})) (800{val=next})))
(AST_ROOT_SC2NF (31 (43 (801{val=PropListItem})) (802{val=chain}) (214{val=(}) (44 (43 (801{val=PropListItem})) (800{val=next})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=PropListItem})) (802{val=getNext}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=memberType}) (204{val==}) (32 (802{val=parseTypeExpressionList}) (214{val=(}) (32 (802{val=next}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=condition}) (235{val=.}) (802{val=isCall}) (216{val=()})) (249{val=&&}) (27 (32 (800{val=condition}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=node}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=callName}) (235{val=.}) (802{val=matchesQualifiedName}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (249{val=&&}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT}))))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=isDeprecatedCall}) (204{val==}) (27 (27 (32 (800{val=callNode}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (32 (800{val=callName}) (235{val=.}) (802{val=isGetProp}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=left}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=node}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=createSourceMap}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=mcp}) (235{val=.}) (802{val=generateSourceMap}) (214{val=(}) (800{val=sourceMap}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=setReferencedType}) (214{val=(}) (32 (800{val=registry}) (235{val=.}) (802{val=getNativeObjectType}) (214{val=(}) (40{val=JSTypeNative.NO_RESOLVED_TYPE}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=fieldType}) (204{val==}) (32 (802{val=createFromTypeNodesInternal}) (214{val=(}) (32 (800{val=fieldTypeNode}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (234{val=,}) (800{val=sourceName}) (234{val=,}) (800{val=scope}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=assertThat}) (214{val=(}) (800{val=templateTypes}) (215{val=)})) (235{val=.}) (802{val=hasSize}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=shortName}) (204{val==}) (32 (800{val=namespace}) (235{val=.}) (802{val=substring}) (214{val=(}) (27 (32 (800{val=namespace}) (235{val=.}) (802{val=lastIndexOf}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)})) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=shortName}) (204{val==}) (32 (800{val=namespace}) (235{val=.}) (802{val=substring}) (214{val=(}) (27 (32 (800{val=namespace}) (235{val=.}) (802{val=lastIndexOf}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)})) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=shortName}) (204{val==}) (32 (800{val=namespaceToRequire}) (235{val=.}) (802{val=substring}) (214{val=(}) (27 (32 (800{val=namespaceToRequire}) (235{val=.}) (802{val=lastIndexOf}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)})) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=fieldType}) (204{val==}) (32 (802{val=createFromTypeNodesInternal}) (214{val=(}) (32 (800{val=fieldTypeNode}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (234{val=,}) (800{val=sourceName}) (234{val=,}) (800{val=scope}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=setReferencedType}) (214{val=(}) (14 (304{val=new}) (43 (801{val=NoResolvedType})) (214{val=(}) (800{val=registry}) (234{val=,}) (32 (802{val=getReferenceName}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=rightmostName}) (235{val=.}) (802{val=toUpperCase}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isAnalyzableObjectDefinePropertiesDefinition}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isVanillaFor}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=reportPath}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=NameInformation})) (800{val=referring})))
(AST_ROOT_SC2NF (44 (43 (801{val=NameInformation})) (800{val=referring})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=ns}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=name}) (215{val=)})) (227{val=;})) (21 (32 (800{val=scopes}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=node}) (234{val=,}) (800{val=name}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isCall}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=name}) (234{val=,}) (800{val=node}) (215{val=)}) (227{val=;})) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isCall}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=name}) (234{val=,}) (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (215{val=)}) (227{val=;})) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isAssign}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkLocalityOfMarkedCalls}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=expected}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=checkLocalityOfMarkedCalls}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=expected}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (32 (800{val=templateSrc}) (235{val=.}) (802{val=replace}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=NO_PURE_CALLS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=recvType}) (204{val==}) (32 (802{val=simpleInferExprType}) (214{val=(}) (800{val=recv}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=t}) (204{val==}) (32 (802{val=simpleInferExprType}) (214{val=(}) (800{val=argNode}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=name}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getName}) (214{val=(}) (800{val=n}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=noSideEffectExterns}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=name}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (27 (27 (800{val=qname}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=noSideEffectExterns}) (235{val=.}) (802{val=containsKey}) (214{val=(}) (800{val=qname}) (215{val=)}))) (249{val=&&}) (38 (207{val=!}) (800{val=isDefinedInSrc}))))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Map})) (230{val=<}) (43 (800{val=ParamGroup})) (234{val=,}) (5 (43 (801{val=CompilationParam})) (85{val=[]})) (231{val=>})) (59 (800{val=compilationParamsByGroup}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (32 (800{val=functionA}) (235{val=.}) (802{val=getBodyNode}) (216{val=()})) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (32 (800{val=mainFunction}) (235{val=.}) (802{val=getAstNode}) (216{val=()})) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (32 (800{val=mainFunction}) (235{val=.}) (802{val=getBodyNode}) (216{val=()})) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (249{val=&&}) (32 (800{val=n}) (235{val=.}) (802{val=hasChildren}) (216{val=()})) (249{val=&&}) (32 (802{val=isReturnTypeNullable}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (215{val=)})) (249{val=&&}) (38 (207{val=!}) (32 (802{val=hasSingleThrow}) (214{val=(}) (800{val=n}) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=statement}) (235{val=.}) (802{val=isBlock}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=isBlock}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=markNameProcessed}) (214{val=(}) (32 (800{val=nameNode}) (235{val=.}) (802{val=getQualifiedName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=root}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=originalBody}) (235{val=.}) (802{val=isBlock}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=originalBody}) (204{val==}) (32 (32 (800{val=IR}) (235{val=.}) (802{val=block}) (214{val=(}) (32 (800{val=IR}) (235{val=.}) (802{val=returnNode}) (214{val=(}) (800{val=originalBody}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=useSourceInfoFromForTree}) (214{val=(}) (800{val=originalBody}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=body}) (235{val=.}) (802{val=isBlock}) (216{val=()}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=block}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (27 (32 (800{val=body}) (235{val=.}) (802{val=getNext}) (216{val=()})) (236{val===}) (500{val=null})) (249{val=&&}) (32 (800{val=body}) (235{val=.}) (802{val=isBlock}) (216{val=()}))) (234{val=,}) (800{val=body}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (234{val=,}) (800{val=body}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isExprResult}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isBlock}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=block}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=node}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getFunctionBody}) (214{val=(}) (800{val=node}) (215{val=)})) (235{val=.}) (802{val=isBlock}) (216{val=()})))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=validateBlock}) (214{val=(}) (800{val=body}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (802{val=validateExpression}) (214{val=(}) (800{val=body}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=isBlock}) (216{val=()}))) (250{val=||}) (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=hasChildren}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=newChild}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=tryMergeBlock}) (214{val=(}) (800{val=newChild}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=isScript}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=isBlock}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=parent}) (235{val=.}) (802{val=isScript}) (216{val=()})) (250{val=||}) (36 (214{val=(}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isFunction}) (216{val=()}))) (215{val=)}))))
(AST_ROOT_SC2NF (32 (800{val=c}) (235{val=.}) (802{val=isBlock}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=c}) (235{val=.}) (802{val=isBlock}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=caseBody}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=labeledStatement}) (235{val=.}) (802{val=isBlock}) (216{val=()}))))
(AST_ROOT_SC2NF (32 (800{val=last}) (235{val=.}) (802{val=isBlock}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=currentStatement}) (235{val=.}) (802{val=isBlock}) (216{val=()})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (800{val=favorsCommaOverSemiColon})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=block}) (235{val=.}) (802{val=isBlock}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (800{val=parent}) (242{val=!=}) (500{val=null})) (249{val=&&}) (36 (214{val=(}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (250{val=||}) (32 (800{val=parent}) (235{val=.}) (802{val=isScript}) (216{val=()}))) (215{val=)}))))
(AST_ROOT_SC2NF (27 (32 (800{val=s}) (235{val=.}) (802{val=isFunctionScope}) (216{val=()})) (249{val=&&}) (32 (32 (32 (800{val=s}) (235{val=.}) (802{val=getRootNode}) (216{val=()})) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=isBlock}) (216{val=()}))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=child})) (226{val=:}) (32 (800{val=node}) (235{val=.}) (802{val=children}) (216{val=()})) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=child}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=blocks}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=child}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (32 (800{val=target}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isScript}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (32 (800{val=target}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isBlock}) (216{val=()})))))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isScript}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isBlock}) (216{val=()})))))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=isVar}) (204{val==}) (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isNameDeclaration}) (214{val=(}) (800{val=parent}) (215{val=)})) (249{val=&&}) (32 (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isBlock}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (802{val=isGoogScopeFunctionBody}) (214{val=(}) (800{val=enclosingFunctionBody}) (215{val=)})) (249{val=&&}) (32 (800{val=scopeRoot}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (32 (800{val=scopeRoot}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isFunction}) (216{val=()})))))
(AST_ROOT_SC2NF (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isControlStructureCodeBlock}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=c}) (215{val=)})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=c}) (235{val=.}) (802{val=isBlock}) (216{val=()})))))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (800{val=setFunction}) (235{val=.}) (802{val=hasChildren}) (216{val=()}))) (250{val=||}) (38 (207{val=!}) (32 (32 (800{val=setFunction}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=isBlock}) (216{val=()}))) (250{val=||}) (38 (207{val=!}) (32 (32 (800{val=setFunction}) (235{val=.}) (802{val=getSecondChild}) (216{val=()})) (235{val=.}) (802{val=isParamList}) (216{val=()})))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=getFunction}) (235{val=.}) (802{val=hasChildren}) (216{val=()}))) (250{val=||}) (38 (207{val=!}) (32 (32 (800{val=getFunction}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=isBlock}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=isFunction}) (216{val=()}))) (250{val=||}) (38 (207{val=!}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=isBlock}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (40{val=umdPattern.activeBranch}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (249{val=&&}) (27 (32 (40{val=umdPattern.activeBranch}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT}))))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=isBlock}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=isBlock}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=isBlock}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=isBlock}) (216{val=()})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (250{val=||}) (36 (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=hasChildren}) (216{val=()})))) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (27 (27 (800{val=next}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=next}) (235{val=.}) (802{val=isBlock}) (216{val=()}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=body}) (235{val=.}) (802{val=isBlock}) (216{val=()}))) (250{val=||}) (38 (207{val=!}) (32 (800{val=body}) (235{val=.}) (802{val=hasOneChild}) (216{val=()}))) (250{val=||}) (38 (207{val=!}) (32 (32 (800{val=body}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=isReturn}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=blockNode}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (32 (800{val=blockNode}) (235{val=.}) (802{val=hasChildren}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=markAllPropsRead}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=visitBlock}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (27 (32 (800{val=n}) (235{val=.}) (802{val=hasChildren}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=isCatch}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=addingRoot}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (250{val=||}) (32 (800{val=addingRoot}) (235{val=.}) (802{val=isModuleBody}) (216{val=()})) (250{val=||}) (32 (800{val=addingRoot}) (235{val=.}) (802{val=isScript}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (27 (32 (800{val=n}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (249{val=&&}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (242{val=!=}) (500{val=null}))) (249{val=&&}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isFunction}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=block}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=node}) (235{val=.}) (802{val=isBlock}) (216{val=()})))
(AST_ROOT_SC2NF (24 (303{val=for}) (214{val=(}) (227{val=;}) (27 (38 (207{val=!}) (32 (800{val=currentParent}) (235{val=.}) (802{val=isScript}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=currentParent}) (235{val=.}) (802{val=isBlock}) (216{val=()})))) (227{val=;}) (7 (800{val=current}) (204{val==}) (800{val=currentParent})) (234{val=,}) (7 (800{val=currentParent}) (204{val==}) (32 (800{val=currentParent}) (235{val=.}) (802{val=getParent}) (216{val=()}))) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (36 (214{val=(}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=isScript}) (216{val=()})) (250{val=||}) (27 (27 (27 (800{val=grandparent}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=grandparent}) (235{val=.}) (802{val=isFunction}) (216{val=()}))) (249{val=&&}) (32 (800{val=parent}) (235{val=.}) (802{val=isBlock}) (216{val=()})))) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=body}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=body}) (235{val=.}) (802{val=hasChildren}) (216{val=()})))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (36 (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (249{val=&&}) (32 (800{val=n}) (235{val=.}) (802{val=isSyntheticBlock}) (216{val=()}))) (215{val=)})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isScript}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=block}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (32 (800{val=expectedBlock}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (233{val=?}) (800{val=expectedBlock}) (226{val=:}) (500{val=null})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=subtree}) (235{val=.}) (802{val=isScript}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=subtree}) (235{val=.}) (802{val=isBlock}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=subtree}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=maybeAssign}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (250{val=||}) (32 (800{val=maybeAssign}) (235{val=.}) (802{val=isScript}) (216{val=()})) (250{val=||}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isStatement}) (214{val=(}) (800{val=maybeAssign}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=n}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=loneBlocks}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (249{val=&&}) (27 (32 (800{val=loneBlocks}) (235{val=.}) (802{val=peek}) (216{val=()})) (236{val===}) (800{val=n}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=finallyBody}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=tryBody}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=body}) (235{val=.}) (802{val=setIsAddedBlock}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.DEFAULT_CASE}) (234{val=,}) (800{val=body}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=then}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (800{val=isArrow})) (249{val=&&}) (38 (207{val=!}) (800{val=isSignature})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=bodyNode}) (235{val=.}) (802{val=isBlock}) (216{val=()})))))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=irNode}) (235{val=.}) (802{val=isBlock}) (216{val=()}))))
(AST_ROOT_SC2NF (27 (32 (800{val=n}) (235{val=.}) (802{val=hasChildren}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=isBlock}) (216{val=()}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=collectionRoot}) (235{val=.}) (802{val=isScript}) (216{val=()})) (250{val=||}) (32 (800{val=collectionRoot}) (235{val=.}) (802{val=isBlock}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=externs}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=mainRoot}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=mainRoot}) (235{val=.}) (802{val=hasChildren}) (216{val=()})))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (32 (800{val=functionA}) (235{val=.}) (802{val=getBodyNode}) (216{val=()})) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (32 (800{val=mainFunction}) (235{val=.}) (802{val=getAstNode}) (216{val=()})) (235{val=.}) (802{val=isRoot}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (32 (800{val=mainFunction}) (235{val=.}) (802{val=getBodyNode}) (216{val=()})) (235{val=.}) (802{val=isRoot}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (800{val=bang}) (234{val=,}) (800{val=qmark}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (32 (800{val=scopeRoot}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (249{val=&&}) (27 (32 (800{val=scopeRoot}) (235{val=.}) (802{val=getParent}) (216{val=()})) (242{val=!=}) (500{val=null}))) (249{val=&&}) (32 (32 (800{val=scopeRoot}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isFunction}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=isBlock}) (216{val=()})))
(AST_ROOT_SC2NF (36 (214{val=(}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=isScript}) (216{val=()})) (250{val=||}) (36 (214{val=(}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=parent}) (235{val=.}) (802{val=isSyntheticBlock}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=parent}) (235{val=.}) (802{val=isAddedBlock}) (216{val=()})))) (215{val=)}))) (215{val=)})))
(AST_ROOT_SC2NF (27 (32 (800{val=block}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=block}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isTry}) (216{val=()})) (249{val=&&}) (27 (32 (32 (800{val=block}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (236{val===}) (800{val=block}))))
(AST_ROOT_SC2NF (27 (27 (27 (32 (800{val=node}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (249{val=&&}) (27 (800{val=parent}) (242{val=!=}) (500{val=null}))) (249{val=&&}) (32 (800{val=parent}) (235{val=.}) (802{val=isTry}) (216{val=()}))) (249{val=&&}) (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getCatchBlock}) (214{val=(}) (800{val=parent}) (215{val=)})) (236{val===}) (800{val=node}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=isBlock}) (216{val=()}))) (250{val=||}) (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=hasChildren}) (216{val=()}))) (250{val=||}) (38 (207{val=!}) (32 (802{val=isGoogModuleCall}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (215{val=)})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=block}) (235{val=.}) (802{val=isBlock}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=node}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.SCRIPT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=needsSemicolon}) (204{val==}) (27 (27 (800{val=parent}) (242{val=!=}) (500{val=null})) (249{val=&&}) (36 (214{val=(}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=isExprResult}) (216{val=()})) (250{val=||}) (32 (800{val=parent}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (250{val=||}) (32 (800{val=parent}) (235{val=.}) (802{val=isScript}) (216{val=()}))) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (800{val=deleteWhitespaceBefore}) (249{val=&&}) (27 (800{val=parent}) (242{val=!=}) (500{val=null}))) (249{val=&&}) (36 (214{val=(}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=isScript}) (216{val=()})) (250{val=||}) (32 (800{val=parent}) (235{val=.}) (802{val=isBlock}) (216{val=()}))) (215{val=)}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=parentNode}) (235{val=.}) (802{val=isBlock}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=endPass}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=endPass}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=endPass}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=endPass}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (800{val=currentScope}) (235{val=.}) (802{val=hasThis}) (216{val=()}))) (249{val=&&}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=referencesSuper}) (214{val=(}) (800{val=fn}) (215{val=)}))))
(AST_ROOT_SC2NF (31 (43 (801{val=Renamer})) (802{val=forChildScope}) (214{val=(}) (44 (39{val=boolean}) (800{val=hoisted})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=renamer}) (204{val==}) (32 (32 (800{val=nameStack}) (235{val=.}) (802{val=peek}) (216{val=()})) (235{val=.}) (802{val=forChildScope}) (214{val=(}) (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=createsBlockScope}) (214{val=(}) (800{val=declarationRoot}) (215{val=)}))) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isInferrableConst}) (214{val=(}) (800{val=jsdoc}) (234{val=,}) (800{val=name}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=jsdoc}) (204{val==}) (32 (802{val=pullJsdocTypeFromAst}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=jsdoc}) (234{val=,}) (800{val=name}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isInferrableConst}) (214{val=(}) (800{val=jsdoc}) (234{val=,}) (800{val=nameNode}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=warnings}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=propAccessNode}) (234{val=,}) (800{val=ABSTRACT_METHOD_NOT_CALLABLE}) (234{val=,}) (800{val=funName}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=languageIn}) (242{val=!=}) (40{val=LanguageMode.NO_TRANSPILE})) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=languageIn})) (204{val==}) (800{val=language})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=languageOut})) (204{val==}) (800{val=language})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=argList}) (204{val==}) (32 (802{val=getFunctionArgList}) (214{val=(}) (800{val=function}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=argList}) (204{val==}) (32 (802{val=getFunctionArgList}) (214{val=(}) (800{val=function}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MalformedException})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=node}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (234{val=,}) (800{val=fnChild}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=findDeclaredNames}) (214{val=(}) (800{val=functionBody}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=renamer}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=declarationRoot}) (235{val=.}) (802{val=isFunction}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=findDeclaredNames}) (214{val=(}) (800{val=declarationRoot}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=renamer}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=isCallInLoop}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fixUnitializedVarDeclarations}) (214{val=(}) (800{val=newBlock}) (234{val=,}) (800{val=newBlock}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=declaration}) (235{val=.}) (802{val=isName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=clear}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=prefixNames}) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (21 (32 (800{val=seenNames}) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (21 (32 (800{val=constructorsToProcess}) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=String})) (800{val=prefix})) (226{val=:}) (32 (800{val=Iterables}) (235{val=.}) (802{val=concat}) (214{val=(}) (800{val=seenNames}) (234{val=,}) (800{val=prefixNames}) (215{val=)})) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=fullyQualifiedName}) (235{val=.}) (802{val=startsWith}) (214{val=(}) (800{val=prefix}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=instrumentationData}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=fileName}) (215{val=)})) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=node}) (235{val=.}) (802{val=addChildToFront}) (214{val=(}) (32 (802{val=newHeaderNode}) (214{val=(}) (800{val=traversal}) (234{val=,}) (800{val=node}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=node}) (235{val=.}) (802{val=addChildToFront}) (214{val=(}) (32 (802{val=newHeaderNode}) (214{val=(}) (800{val=traversal}) (234{val=,}) (800{val=node}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=instrumentBranchCoverage}) (214{val=(}) (800{val=traversal}) (234{val=,}) (32 (800{val=instrumentationData}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=fileName}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (32 (802{val=isUnionType}) (216{val=()})) (233{val=?}) (32 (32 (315{val=this}) (235{val=.}) (802{val=toMaybeUnionType}) (216{val=()})) (235{val=.}) (802{val=getAlternates}) (216{val=()})) (226{val=:}) (500{val=null})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (43 (801{val=JSType})) (800{val=type})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=type}) (204{val==}) (32 (802{val=getType}) (214{val=(}) (800{val=typeObj}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=type}) (204{val==}) (32 (802{val=getType}) (214{val=(}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=BOTTOM_OBJECT})) (204{val==}) (32 (32 (22 (315{val=this}) (235{val=.}) (800{val=registry})) (235{val=.}) (802{val=getNativeType}) (214{val=(}) (40{val=JSTypeNative.NO_OBJECT_TYPE}) (215{val=)})) (235{val=.}) (802{val=toObjectType}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=JSType})) (800{val=type})))
(AST_ROOT_SC2NF (44 (43 (801{val=JSType})) (800{val=type})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=objectType}) (204{val==}) (32 (800{val=FunctionType}) (235{val=.}) (802{val=getTopDefiningInterface}) (214{val=(}) (800{val=objectType}) (234{val=,}) (800{val=propName}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isInterface}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getTopDefiningInterface}) (214{val=(}) (32 (802{val=getInstanceType}) (216{val=()})) (234{val=,}) (800{val=propertyName}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=lvalueType}) (235{val=.}) (802{val=isEnumElement}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=lvalueType}) (204{val==}) (32 (800{val=lvalueType}) (235{val=.}) (802{val=getEnumeratedType}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=enumeratedType}) (204{val==}) (32 (32 (800{val=requiredType}) (235{val=.}) (802{val=getProp}) (214{val=(}) (14 (304{val=new}) (43 (801{val=QualifiedName})) (214{val=(}) (800{val=pname}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getEnumeratedType}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=enumeratedType}) (204{val==}) (32 (32 (800{val=requiredType}) (235{val=.}) (802{val=getProp}) (214{val=(}) (14 (304{val=new}) (43 (801{val=QualifiedName})) (214{val=(}) (800{val=pname}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getEnumeratedType}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=NominalType})) (59 (800{val=tmp}) (204{val==}) (32 (800{val=NominalType}) (235{val=.}) (802{val=pickSuperclass}) (214{val=(}) (800{val=n1}) (234{val=,}) (800{val=n2}) (215{val=)}))) (227{val=;})) (25 (313{val=if}) (214{val=(}) (27 (800{val=tmp}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=tmp}) (235{val=.}) (802{val=getInstanceAsJSType}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (800{val=NominalType})) (59 (800{val=nominal}) (204{val==}) (32 (800{val=NominalType}) (235{val=.}) (802{val=pickSuperclass}) (214{val=(}) (800{val=nt1}) (234{val=,}) (800{val=nt2}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (83{val=final}) (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ClosureOptimizePrimitives})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isName}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (800{val=n}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=parent}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (38 (207{val=!}) (40{val=currentScript.declareLegacyNamespace})) (249{val=&&}) (27 (40{val=currentScript.defaultExportRhs}) (236{val===}) (500{val=null}))) (249{val=&&}) (32 (800{val=namedExport}) (235{val=.}) (802{val=hasInlinableName}) (216{val=()}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (62 (800{val=o}) (328{val=instanceof}) (43 (800{val=JSType}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=registry})) (204{val==}) (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeRegistry}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (234{val=,}) (800{val=expected}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=warning}) (234{val=,}) (800{val=description}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=externs}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=externs}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=externs}) (204{val==}) (27 (40{val=BaseJSTypeTestCase.ALL_NATIVE_EXTERN_TYPES}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSets}) (214{val=(}) (40{val=BaseJSTypeTestCase.ALL_NATIVE_EXTERN_TYPES}) (234{val=,}) (800{val=js}) (234{val=,}) (800{val=output}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=DisambiguatePropertiesTest}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=parseTypeInfo}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=t}) (235{val=.}) (802{val=inGlobalHoistScope}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertEquals}) (214{val=(}) (32 (800{val=e}) (235{val=.}) (802{val=getType}) (216{val=()})) (234{val=,}) (800{val=type}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (40{val=e.lineNumber}) (234{val=,}) (800{val=lineNumber}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (32 (2 (40{val=result.errors}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (235{val=.}) (802{val=getType}) (216{val=()})) (234{val=,}) (800{val=errorType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (40{val=result.success}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (22 (32 (800{val=compiler}) (235{val=.}) (802{val=getResult}) (216{val=()})) (235{val=.}) (800{val=success})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkShortGoogRequireCall}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=callNode}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setPolymerPass}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=polymerPass}) (204{val==}) (9{val=false})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (40{val=options.deadAssignmentElimination}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=deadAssignmentsElimination}) (215{val=)})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (40{val=options.polymerPass})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=deadPropertyAssignmentElimination}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (40{val=options.polymerPass}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=checks}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=polymerPass}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setPolymerPass}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=other}) (235{val=.}) (802{val=isGeneric}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=other}) (204{val==}) (32 (802{val=instantiateGenericsWithUnknown}) (214{val=(}) (800{val=other}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=other}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (32 (802{val=instantiateGenericsWithUnknown}) (214{val=(}) (315{val=this}) (215{val=)})) (235{val=.}) (802{val=isSubtypeOfHelper}) (214{val=(}) (800{val=other}) (234{val=,}) (800{val=checkThisType}) (234{val=,}) (800{val=subSuperMap}) (234{val=,}) (800{val=boxedInfo}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isGeneric}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=instantiateGenericsWithUnknown}) (214{val=(}) (315{val=this}) (215{val=)})) (235{val=.}) (802{val=transformByApplyProperty}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=rootNode}) (242{val=!=}) (40{val=parent.rootNode})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=rootNode}) (234{val=,}) (40{val=parent.rootNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testDontCrashCtorAliasWithEnum}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (21 (7 (800{val=compareJsDoc}) (204{val==}) (9{val=false})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testGlobalObjectDeclaredToPreserveItsPreviousValue2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjLitAssignmentDepth2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (21 (7 (800{val=compareJsDoc}) (204{val==}) (9{val=false})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=isConstDeclaration}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isConst}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=isVarDeclaration}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isVar}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=traverseClass}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (32 (32 (800{val=Joiner}) (235{val=.}) (802{val=on}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)})) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (32 (32 (800{val=Joiner}) (235{val=.}) (802{val=on}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)})) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (40{val=options.prettyPrint}) (204{val==}) (9{val=true})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=prettyPrint})) (204{val==}) (40{val=options.prettyPrint})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=zipEntryPath}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=absoluteZipPath}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=entryPath}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setPrettyPrint}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=prettyPrint})) (204{val==}) (32 (800{val=options}) (235{val=.}) (802{val=isPrettyPrint}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testJqueryExpandedEachExpansionEs6ComputedProp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testErrorEs6}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (40{val=ExpandJqueryAliases.JQUERY_UNABLE_TO_EXPAND_INVALID_NAME}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (40{val=options.prettyPrint}) (204{val==}) (9{val=true})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=prettyPrint})) (204{val==}) (40{val=options.prettyPrint})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=options}) (235{val=.}) (802{val=setPolymerPass}) (214{val=(}) (800{val=value}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (32 (800{val=fix}) (235{val=.}) (802{val=getReplacements}) (216{val=()})) (235{val=.}) (802{val=keys}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=nameDefinitionMultimap}) (235{val=.}) (802{val=keys}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=nameDefinitionMultimap}) (235{val=.}) (802{val=keySet}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=nameDefinitionMultimap}) (235{val=.}) (802{val=keys}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=js}) (204{val==}) (32 (32 (800{val=Joiner}) (235{val=.}) (802{val=on}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)})) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=js}) (204{val==}) (32 (32 (800{val=Joiner}) (235{val=.}) (802{val=on}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)})) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=js}) (204{val==}) (32 (32 (800{val=Joiner}) (235{val=.}) (802{val=on}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)})) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=js}) (204{val==}) (32 (32 (800{val=Joiner}) (235{val=.}) (802{val=on}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)})) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=js}) (204{val==}) (32 (32 (800{val=Joiner}) (235{val=.}) (802{val=on}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)})) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=VarCheck.VAR_ARGUMENTS_SHADOWED_ERROR}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkState}) (214{val=(}) (27 (32 (800{val=scope}) (235{val=.}) (802{val=getParent}) (216{val=()})) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})) (21 (32 (802{val=scanVars}) (214{val=(}) (800{val=n}) (234{val=,}) (9{val=true}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=CompilerOptions})) (59 (800{val=options}) (204{val==}) (32 (802{val=createCompilerOptions}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=options}) (235{val=.}) (802{val=setCheckTypes}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (800{val=options}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=RhinoErrorReporter.TYPE_PARSE_ERROR}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testTypeParsingOnWithVerbose}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=args}) (235{val=.}) (802{val=add}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=RhinoErrorReporter.TYPE_PARSE_ERROR}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=RhinoErrorReporter.TYPE_PARSE_ERROR}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=DEFAULT_EXTERNS}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=RhinoErrorReporter.TYPE_PARSE_ERROR}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=RhinoErrorReporter.TYPE_PARSE_ERROR}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=RhinoErrorReporter.TYPE_PARSE_ERROR}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=markConstAndCopyJsDoc}) (214{val=(}) (800{val=assignNode}) (234{val=,}) (800{val=jsdocNode}) (234{val=,}) (800{val=rhs}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=markConstAndCopyJsDoc}) (214{val=(}) (800{val=target}) (234{val=,}) (800{val=target}) (234{val=,}) (800{val=value}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=markConstAndCopyJsDoc}) (214{val=(}) (800{val=jsdocNode}) (234{val=,}) (800{val=jsdocNode}) (234{val=,}) (32 (800{val=parent}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=list}) (235{val=.}) (802{val=get}) (214{val=(}) (27 (32 (800{val=list}) (235{val=.}) (802{val=size}) (216{val=()})) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (48 (349{val=super}) (235{val=.}) (802{val=setCode}) (214{val=(}) (800{val=cachedCode}) (234{val=,}) (27 (32 (315{val=this}) (235{val=.}) (802{val=getCharset}) (216{val=()})) (236{val===}) (40{val=StandardCharsets.UTF_8})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (48 (349{val=super}) (235{val=.}) (802{val=setCode}) (214{val=(}) (800{val=cachedCode}) (234{val=,}) (27 (32 (315{val=this}) (235{val=.}) (802{val=getCharset}) (216{val=()})) (236{val===}) (40{val=StandardCharsets.UTF_8})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=ns})) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=builder}) (235{val=.}) (802{val=append}) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=ns})) (235{val=.}) (802{val=toString}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (40{val=inheritedPropDef.methodType}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=propMethodTypesToProcess}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=pname}) (234{val=,}) (32 (40{val=inheritedPropDef.methodType}) (235{val=.}) (802{val=substituteNominalGenerics}) (214{val=(}) (800{val=superType}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=isFinalized}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=getCtorPropDeclaredType}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=substituteGenerics}) (214{val=(}) (800{val=typeMap}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=inGeneratorContext})) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=initialGeneratorContext}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=namespaceArg}) (204{val==}) (32 (800{val=crDefineCallNode}) (235{val=.}) (802{val=getChildAtIndex}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=pathArg}) (204{val==}) (32 (800{val=crExportPathNode}) (235{val=.}) (802{val=getChildAtIndex}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=target}) (204{val==}) (32 (32 (800{val=call}) (235{val=.}) (802{val=getChildAtIndex}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=getQualifiedName}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=int}) (59 (800{val=result}) (204{val==}) (2 (801{val=BASE64_DECODE_MAP}) (221{val=[}) (800{val=c}) (222{val=]}))) (227{val=;})) (6 (306{val=assert}) (36 (214{val=(}) (27 (800{val=result}) (242{val=!=}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT}))) (215{val=)})) (226{val=:}) (45{val=STRING_CONSTANT}) (227{val=;})) (41 (329{val=return}) (2 (801{val=BASE64_DECODE_MAP}) (221{val=[}) (800{val=c}) (222{val=]})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=ParseTree})) (59 (800{val=arrowFunctionBody}) (204{val==}) (32 (802{val=parseArrowFunctionBody}) (214{val=(}) (800{val=expressionIn}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ParseTree})) (59 (800{val=arrowFunctionBody}) (204{val==}) (32 (802{val=parseArrowFunctionBody}) (214{val=(}) (800{val=expressionIn}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=parseGeneratorFunctionTail}) (214{val=(}) (800{val=builder}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=parseFunctionTail}) (214{val=(}) (800{val=builder}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=parseFunctionTail}) (214{val=(}) (800{val=builder}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=parseFunctionTail}) (214{val=(}) (800{val=builder}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=parseFunctionTail}) (214{val=(}) (800{val=builder}) (234{val=,}) (800{val=isGenerator}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=parseFunctionTail}) (214{val=(}) (800{val=builder}) (234{val=,}) (800{val=isGenerator}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=parseFunctionTail}) (214{val=(}) (800{val=builder}) (234{val=,}) (800{val=isGenerator}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=recvType}) (204{val==}) (32 (800{val=recvType}) (235{val=.}) (802{val=removeType}) (214{val=(}) (40{val=commonTypes.NULL}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isCallTo}) (214{val=(}) (32 (800{val=destructuringLhsNode}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=aliasVarNodeRhs}) (236{val===}) (500{val=null})) (250{val=||}) (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isCallTo}) (214{val=(}) (800{val=aliasVarNodeRhs}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=t}) (235{val=.}) (802{val=report}) (214{val=(}) (800{val=call}) (234{val=,}) (800{val=INVALID_GET_ALIAS}) (215{val=)})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (27 (800{val=call}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isCallTo}) (214{val=(}) (800{val=call}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (249{val=&&}) (32 (32 (800{val=call}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=isFunction}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=nameGenerator}) (235{val=.}) (802{val=reset}) (214{val=(}) (800{val=reservedNames}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=reservedCharacters}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=generatePseudoNames}) (234{val=,}) (800{val=prevUsedPropertyMap}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=nameGenerator}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=generatePseudoNames}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=nameGenerator}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=NameGenerator})) (59 (800{val=nameGen}) (204{val==}) (14 (304{val=new}) (43 (801{val=DefaultNameGenerator})) (214{val=(}) (32 (800{val=reservedNames}) (235{val=.}) (802{val=build}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=reservedCharacters}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reset}) (214{val=(}) (800{val=reservedNames}) (234{val=,}) (800{val=prefix}) (234{val=,}) (800{val=reservedCharacters}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=AmbiguateProperties})) (214{val=(}) (800{val=compiler}) (234{val=,}) (32 (40{val=options.anonymousFunctionNaming}) (235{val=.}) (802{val=getReservedCharacters}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=isBottom}) (216{val=()})) (250{val=||}) (32 (802{val=isUnknown}) (216{val=()})) (250{val=||}) (32 (802{val=hasTruthyMask}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=UNKNOWN})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=private}) (39{val=boolean}) (802{val=hasFalsyMask}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (800{val=FALSY_MASK}) (236{val===}) (32 (802{val=getMask}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=private}) (39{val=boolean}) (802{val=hasTruthyMask}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (800{val=TRUTHY_MASK}) (236{val===}) (32 (802{val=getMask}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=isFinalized})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=createdFromGoogProvide}) (204{val==}) (36 (214{val=(}) (27 (27 (800{val=type}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=type}) (235{val=.}) (802{val=isInstanceofObject}) (216{val=()}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=createdFromGoogProvide}) (204{val==}) (36 (214{val=(}) (27 (27 (800{val=type}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=type}) (235{val=.}) (802{val=isInstanceofObject}) (216{val=()}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=recordImplicitInterfaceUses}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=argType}) (234{val=,}) (800{val=paramType}) (215{val=)})) (227{val=;})) (21 (32 (802{val=recordImplicitUseOfNativeObject}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=argType}) (234{val=,}) (800{val=paramType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=recordImplicitInterfaceUses}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=rightType}) (234{val=,}) (800{val=leftType}) (215{val=)})) (227{val=;})) (21 (32 (802{val=recordImplicitUseOfNativeObject}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=rightType}) (234{val=,}) (800{val=leftType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=recordImplicitInterfaceUses}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=rightType}) (234{val=,}) (800{val=leftType}) (215{val=)})) (227{val=;})) (21 (32 (802{val=recordImplicitUseOfNativeObject}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=rightType}) (234{val=,}) (800{val=leftType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=recordImplicitInterfaceUses}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=caseType}) (234{val=,}) (800{val=switchType}) (215{val=)})) (227{val=;})) (21 (32 (802{val=recordImplicitUseOfNativeObject}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=caseType}) (234{val=,}) (800{val=switchType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=createdFromGoogProvide}) (204{val==}) (36 (214{val=(}) (27 (27 (800{val=type}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=type}) (235{val=.}) (802{val=isLiteralObject}) (216{val=()}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=createdFromGoogProvide}) (204{val==}) (36 (214{val=(}) (27 (27 (800{val=type}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=type}) (235{val=.}) (802{val=isLiteralObject}) (216{val=()}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=recordImplicitInterfaceUses}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=argType}) (234{val=,}) (800{val=paramType}) (215{val=)})) (227{val=;})) (21 (32 (800{val=TypeMismatch}) (235{val=.}) (802{val=recordImplicitUseOfNativeObject}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=mismatches})) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=argType}) (234{val=,}) (800{val=paramType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=recordImplicitInterfaceUses}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=rightType}) (234{val=,}) (800{val=leftType}) (215{val=)})) (227{val=;})) (21 (32 (800{val=TypeMismatch}) (235{val=.}) (802{val=recordImplicitUseOfNativeObject}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=mismatches})) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=rightType}) (234{val=,}) (800{val=leftType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=recordImplicitInterfaceUses}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=rightType}) (234{val=,}) (800{val=leftType}) (215{val=)})) (227{val=;})) (21 (32 (800{val=TypeMismatch}) (235{val=.}) (802{val=recordImplicitUseOfNativeObject}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=mismatches})) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=rightType}) (234{val=,}) (800{val=leftType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=recordImplicitInterfaceUses}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=caseType}) (234{val=,}) (800{val=switchType}) (215{val=)})) (227{val=;})) (21 (32 (800{val=TypeMismatch}) (235{val=.}) (802{val=recordImplicitUseOfNativeObject}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=mismatches})) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=caseType}) (234{val=,}) (800{val=switchType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=recordImplicitInterfaceUses}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=argType}) (234{val=,}) (800{val=paramType}) (215{val=)})) (227{val=;})) (21 (32 (802{val=recordImplicitUseOfNativeObject}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=argType}) (234{val=,}) (800{val=paramType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=recordImplicitInterfaceUses}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=rightType}) (234{val=,}) (800{val=leftType}) (215{val=)})) (227{val=;})) (21 (32 (802{val=recordImplicitUseOfNativeObject}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=rightType}) (234{val=,}) (800{val=leftType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=recordImplicitInterfaceUses}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=rightType}) (234{val=,}) (800{val=leftType}) (215{val=)})) (227{val=;})) (21 (32 (802{val=recordImplicitUseOfNativeObject}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=rightType}) (234{val=,}) (800{val=leftType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=recordImplicitInterfaceUses}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=caseType}) (234{val=,}) (800{val=switchType}) (215{val=)})) (227{val=;})) (21 (32 (802{val=recordImplicitUseOfNativeObject}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=caseType}) (234{val=,}) (800{val=switchType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=createdFromGoogProvide}) (204{val==}) (36 (214{val=(}) (27 (27 (800{val=type}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=type}) (235{val=.}) (802{val=isInstanceofObject}) (216{val=()}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=createdFromGoogProvide}) (204{val==}) (36 (214{val=(}) (27 (27 (800{val=type}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=type}) (235{val=.}) (802{val=isInstanceofObject}) (216{val=()}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=getOptions}) (214{val=(}) (800{val=options}) (215{val=)})) (227{val=;})) (21 (32 (800{val=options}) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.LINT_CHECKS}) (234{val=,}) (40{val=CheckLevel.WARNING}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=options}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Var})) (800{val=v})) (226{val=:}) (32 (800{val=globalExternsScope}) (235{val=.}) (802{val=getAllSymbols}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=considerVar}) (214{val=(}) (800{val=v}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=scope}) (235{val=.}) (802{val=getAllSymbols}) (216{val=()})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=TypedScope})) (800{val=s})) (226{val=:}) (32 (800{val=scopes}) (235{val=.}) (802{val=values}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Iterables}) (235{val=.}) (802{val=addAll}) (214{val=(}) (800{val=vars}) (234{val=,}) (32 (800{val=s}) (235{val=.}) (802{val=getAllSymbols}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=parseWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Var})) (800{val=v})) (226{val=:}) (32 (800{val=globalExternsScope}) (235{val=.}) (802{val=getVarIterable}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=considerVar}) (214{val=(}) (800{val=v}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=scope}) (235{val=.}) (802{val=getVarIterable}) (216{val=()})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=TypedScope})) (800{val=s})) (226{val=:}) (32 (800{val=scopes}) (235{val=.}) (802{val=values}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Iterables}) (235{val=.}) (802{val=addAll}) (214{val=(}) (800{val=vars}) (234{val=,}) (32 (800{val=s}) (235{val=.}) (802{val=getVarIterable}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=isContinueStructure}) (214{val=(}) (800{val=target}) (215{val=)})) (249{val=&&}) (32 (802{val=matchLabel}) (214{val=(}) (32 (800{val=target}) (235{val=.}) (802{val=getParent}) (216{val=()})) (234{val=,}) (800{val=label}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (40{val=leftOfArrow.type}) (236{val===}) (40{val=ParseTreeType.CALL_EXPRESSION})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=completeAssignmentExpressionParseAtArrow}) (214{val=(}) (32 (800{val=leftOfArrow}) (235{val=.}) (802{val=asCallExpression}) (216{val=()})) (234{val=,}) (800{val=expressionIn}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=completeArrowFunctionParseAtArrow}) (214{val=(}) (800{val=leftOfArrow}) (234{val=,}) (800{val=expressionIn}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=sourceType}) (235{val=.}) (802{val=isSubtypeWithoutStructuralTyping}) (214{val=(}) (800{val=targetType}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=recordImplicitInterfaceUses}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=sourceType}) (234{val=,}) (800{val=targetType}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=recordImplicitInterfaceUses}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=argType}) (234{val=,}) (800{val=paramType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=recordImplicitInterfaceUses}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=rightType}) (234{val=,}) (800{val=leftType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=recordImplicitInterfaceUses}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=rightType}) (234{val=,}) (800{val=leftType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=recordImplicitInterfaceUses}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=caseType}) (234{val=,}) (800{val=switchType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=topInterface}) (242{val=!=}) (500{val=null})) (249{val=&&}) (27 (32 (800{val=topInterface}) (235{val=.}) (802{val=getConstructor}) (216{val=()})) (242{val=!=}) (500{val=null}))) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=foundType}) (204{val==}) (32 (32 (800{val=topInterface}) (235{val=.}) (802{val=getConstructor}) (216{val=()})) (235{val=.}) (802{val=getPrototypeProperty}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isPrototypeObject}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (32 (800{val=builder}) (235{val=.}) (802{val=append}) (214{val=(}) (32 (32 (802{val=getOwnerFunction}) (216{val=()})) (235{val=.}) (802{val=getInstanceTypeOfCtor}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=append}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=ObjectType})) (59 (800{val=obj}) (204{val==}) (32 (802{val=getObjTypeIfSingletonObj}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (27 (27 (800{val=obj}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=obj}) (235{val=.}) (802{val=hasOwnPropery}) (214{val=(}) (14 (304{val=new}) (43 (801{val=QualifiedName})) (214{val=(}) (800{val=propertyName}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=proto}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isUnknownObject}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=externs}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSets}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=output}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (32 (800{val=n}) (235{val=.}) (802{val=isVar}) (216{val=()})) (249{val=&&}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getFirstFirstChild}) (216{val=()})) (242{val=!=}) (500{val=null}))) (249{val=&&}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstFirstChild}) (216{val=()})) (235{val=.}) (802{val=isFunction}) (216{val=()}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (32 (32 (32 (802{val=builder}) (216{val=()})) (235{val=.}) (802{val=withCharset}) (214{val=(}) (800{val=inputCharset}) (215{val=)})) (235{val=.}) (802{val=withOriginalPath}) (214{val=(}) (27 (800{val=originalZipPath}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=entryPath})) (215{val=)})) (235{val=.}) (802{val=buildFromUrl}) (214{val=(}) (800{val=zipEntryUrl}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertPasses}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=parent}) (235{val=.}) (802{val=isVar}) (216{val=()})) (250{val=||}) (32 (800{val=parent}) (235{val=.}) (802{val=isExprResult}) (216{val=()}))))
(AST_ROOT_SC2NF (21 (32 (802{val=println}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=funType})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testError}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (40{val=FindExportableNodes.EXPORT_ANNOTATION_NOT_ALLOWED}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=registerMessage}) (214{val=(}) (32 (32 (14 (304{val=new}) (43 (40{val=JsMessage.Builder})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=appendPlaceholderReference}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=build}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=registerMessage}) (214{val=(}) (32 (32 (14 (304{val=new}) (43 (40{val=JsMessage.Builder})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=appendPlaceholderReference}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=build}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=registerMessage}) (214{val=(}) (32 (32 (14 (304{val=new}) (43 (40{val=JsMessage.Builder})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=appendPlaceholderReference}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=build}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=registerMessage}) (214{val=(}) (32 (32 (14 (304{val=new}) (43 (40{val=JsMessage.Builder})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=appendPlaceholderReference}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=build}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=registerMessage}) (214{val=(}) (32 (32 (14 (304{val=new}) (43 (40{val=JsMessage.Builder})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=appendStringPart}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=build}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=style}) (204{val==}) (800{val=RELAX})) (227{val=;})) (21 (7 (800{val=compareJsDoc}) (204{val==}) (9{val=false})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (21 (7 (800{val=compareJsDoc}) (204{val==}) (9{val=false})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=options}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=initOptions}) (214{val=(}) (32 (802{val=newCompilerOptions}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (800{val=errorManager}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=inputsById}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=errorManager}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=errorManager})) (204{val==}) (800{val=errorManager})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=options}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=initOptions}) (214{val=(}) (14 (304{val=new}) (43 (801{val=CompilerOptions})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (800{val=errorManager}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=inputsById}) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=errorManager}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=errorManager})) (204{val==}) (14 (304{val=new}) (43 (801{val=ThreadSafeDelegatingErrorManager})) (214{val=(}) (800{val=errorManager}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (800{val=areSubtypes})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (50 (305{val=switch}) (214{val=(}) (800{val=ch}) (215{val=)}) (218{val={}) (49 (326{val=case}) (13{val=CHAR_CONS}) (226{val=:})) (49 (326{val=case}) (13{val=CHAR_CONS}) (226{val=:})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (500{val=default:}) (41 (329{val=return}) (32 (800{val=Character}) (235{val=.}) (802{val=isLetter}) (214{val=(}) (800{val=ch}) (215{val=)})) (227{val=;})) (219{val=}})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=options}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=initOptions}) (214{val=(}) (32 (802{val=newCompilerOptions}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (800{val=errorManager}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=inputsById}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=errorManager}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=errorManager})) (204{val==}) (800{val=errorManager})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=callNode}) (235{val=.}) (802{val=isCall}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fold}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fold}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fold}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fold}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=getOptions}) (214{val=(}) (800{val=options}) (215{val=)})) (227{val=;})) (21 (32 (800{val=options}) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.LINT_CHECKS}) (234{val=,}) (40{val=CheckLevel.WARNING}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=options}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=root}) (204{val==}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getRoot}) (216{val=()})) (235{val=.}) (802{val=getLastChild}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (800{val=aggregateWarnings}) (215{val=)})) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCodeMotionDoesntBreakFunctionHoisting}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fold}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=private}) (39{val=void}) (802{val=testSameEs6Strict}) (214{val=(}) (44 (43 (801{val=String})) (800{val=js})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6_STRICT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=js}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testConst}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testRewrite}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testLet}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testRewrite}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testRewriteWarning}) (214{val=(}) (800{val=code}) (234{val=,}) (800{val=expected}) (234{val=,}) (800{val=warning}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT3}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testRewriteWarning}) (214{val=(}) (800{val=code}) (234{val=,}) (800{val=expected}) (234{val=,}) (800{val=warning}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testRewriteError}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=error}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT3}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testRewriteError}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=error}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testRewrite}) (214{val=(}) (800{val=code}) (234{val=,}) (800{val=expected}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT3}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testRewrite}) (214{val=(}) (800{val=code}) (234{val=,}) (800{val=expected}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setLanguageOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT3}) (215{val=)})) (227{val=;})) (21 (32 (802{val=allowExternsChanges}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compilerOptions}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compilerOptions}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrettyPrint}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT8})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT8})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testAsyncArrowFunction}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT8})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrint}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT8})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testMemberGeneratorYield1}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNewTarget}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrint}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testDefaultParametersWithRestParameters}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testRestParameters}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testDefaultParameters}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testOctalNumericKey}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=allowWarnings}) (204{val==}) (9{val=true})) (227{val=;})) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrint}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testComputedPropertiesClassMethods}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertPrettyPrint}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrettyPrint}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrettyPrint}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testPrettyPrinter_defaultValue}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrettyPrint}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testPrettyPrinter_arrow}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrettyPrint}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testForOf}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testDestructuringForOfLoops2}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testPrintDestructuringInRestParam}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testPrintMixedDestructuring}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testPrettyPrintObjectPattern}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrettyPrint}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testPrintNestedObjectPattern}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testPrettyPrintArrayPattern}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrettyPrint}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testPrintBlockScopedFunctions}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT6})) (227{val=;})) (21 (32 (802{val=assertPrint}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertPrint}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testExponentiationAssignmentOperator}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT7})) (227{val=;})) (21 (32 (802{val=assertPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT7})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (7 (800{val=compiler}) (204{val==}) (32 (802{val=createCompiler}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testWhileLoopBranch}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=compareWhileLoopBranch}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (21 (32 (802{val=compareWhileLoopBranch}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testDoWhileLoopMultiLineBranch}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=compareDoWhileLoopMultiLineBranch}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (21 (32 (802{val=compareDoWhileLoopMultiLineBranch}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testDoWhileLoopBranch}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=compareDoWhileLoopBranch}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (21 (32 (802{val=compareDoWhileLoopBranch}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testForLoopBranch}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=compareForLoopBranch}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (21 (32 (802{val=compareForLoopBranch}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testIfElseBranch}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=compareIfElseBranch}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (21 (32 (802{val=compareIfElseBranch}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testIfBranch}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=compareIfBranch}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (21 (32 (802{val=compareIfBranch}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFunction}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=compareFunctionOneMode}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (21 (32 (802{val=compareFunctionOneMode}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=languageOutIsAtLeast}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setLanguage}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6}) (234{val=,}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setLanguage}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6}) (234{val=,}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setLanguage}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6}) (234{val=,}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setLanguage}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6}) (234{val=,}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setLanguage}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6}) (234{val=,}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (7 (800{val=runTypeCheckAfterProcessing}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testExternChanges}) (214{val=(}) (800{val=extern}) (234{val=,}) (800{val=input}) (234{val=,}) (800{val=expectedExtern}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testExternChanges}) (214{val=(}) (800{val=extern}) (234{val=,}) (800{val=input}) (234{val=,}) (800{val=expectedExtern}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testWarning}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=expected}) (234{val=,}) (800{val=warning}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=testWarning}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=warning}) (234{val=,}) (800{val=warningMessage}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=testWarning}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=warning}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=testWarning}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=warning}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testError}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=error}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testError}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=error}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testError}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=error}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testError}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=error}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=testError}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=es6Error}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=testError}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=es5Error}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=testError}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=error}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=testError}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=error}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (234{val=,}) (800{val=diag}) (234{val=,}) (800{val=error}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (234{val=,}) (800{val=warning}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=test}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=js}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=test}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=js}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=test}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=js}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=expected}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=expected}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=test}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=expected}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=test}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=expected}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6_STRICT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6_STRICT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (7 (800{val=anchorUnusedVars}) (204{val==}) (9{val=false})) (227{val=;})) (21 (7 (800{val=canRemoveExterns}) (204{val==}) (9{val=false})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setLanguageOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT3}) (215{val=)})) (227{val=;})) (21 (32 (802{val=allowExternsChanges}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=CompilerOptions})) (59 (800{val=options}) (204{val==}) (48 (349{val=super}) (235{val=.}) (802{val=getOptions}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6_TYPED}) (215{val=)})) (227{val=;})) (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=options}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=compilerOptions}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (800{val=compilerOptions}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compilerOptions}) (235{val=.}) (802{val=setLanguageOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT3}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testDependentModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=VarCheck.VIOLATED_MODULE_DEP_ERROR}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testDependentModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=VarCheck.VIOLATED_MODULE_DEP_ERROR}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testIndependentModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (40{val=VarCheck.MISSING_MODULE_DEP_ERROR}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testIndependentModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (40{val=VarCheck.MISSING_MODULE_DEP_ERROR}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testLegalConstReferenceBetweenModules}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testDependentModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testLegalLetReferenceBetweenModules}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testDependentModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjLit}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertUnreachable}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testForLoopsEs6}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertUnreachable}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertUnreachable}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=CheckUnusedPrivatePropertiesTest}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=EXTERNS}) (215{val=)}) (227{val=;})) (21 (32 (802{val=enableGatherExternProperties}) (216{val=()})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setLanguageInAndOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setLanguageInAndOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=setLanguageInAndOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setLanguageInAndOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setLanguageInAndOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setLanguageInAndOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setLanguageInAndOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setLanguageInAndOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setLanguageInAndOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFunctionNonMovement1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=createModuleStar}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setLanguageOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT3}) (215{val=)})) (227{val=;})) (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})) (21 (7 (800{val=runTypeCheckAfterProcessing}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInvalidVariableInScope}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testScopedError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=ScopedAliases.GOOG_SCOPE_INVALID_VARIABLE}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testScopedError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=ScopedAliases.GOOG_SCOPE_INVALID_VARIABLE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNonAliasLocal}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testScopedError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testScopedError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testJSDocCopiedForClasses}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testScoped}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (800{val=SCOPE_NAMESPACE}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectLiteralMethods}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testScoped}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (800{val=SCOPE_NAMESPACE}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectLiteralShorthand}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testScoped}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (800{val=SCOPE_NAMESPACE}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testDefaultParameter}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testScoped}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (800{val=SCOPE_NAMESPACE}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testClassDefinition3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testScoped}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (800{val=SCOPE_NAMESPACE}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testClassDefinition2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testScoped}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (800{val=SCOPE_NAMESPACE}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testClassDefinition1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testScoped}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (800{val=SCOPE_NAMESPACE}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArrowFunction}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testScoped}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (800{val=SCOPE_NAMESPACE}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNonTopLevelDestructuring}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testScoped}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (800{val=SCOPE_NAMESPACE}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectDescructuringError2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testScopedError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectDescructuringError1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testScopedError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testDestructuringError}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testScopedError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testYieldExpression}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testScoped}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (800{val=SCOPE_NAMESPACE}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testScopedNoChanges}) (214{val=(}) (800{val=aliases}) (234{val=,}) (800{val=code}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT3}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testScopedNoChanges}) (214{val=(}) (800{val=aliases}) (234{val=,}) (800{val=code}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testScoped}) (214{val=(}) (800{val=code}) (234{val=,}) (800{val=expected}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT3}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testScoped}) (214{val=(}) (800{val=code}) (234{val=,}) (800{val=expected}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testAsyncFunction}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT8}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=CANNOT_CONVERT_YET}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=CANNOT_CONVERT_YET}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testExponentiationAssignmentOperator}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT7}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testExponentiationOperator}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT7}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setLanguageOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT3}) (215{val=)})) (227{val=;})) (21 (7 (800{val=runTypeCheckAfterProcessing}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=setLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT8}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT8}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT8}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testValidRestParameter}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (21 (32 (802{val=valid}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=valid}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT8}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6_STRICT}) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=languageIn})) (204{val==}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6_STRICT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compilerOptions}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compilerOptions}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6_STRICT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6_STRICT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6_STRICT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6_STRICT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6_STRICT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6_STRICT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6_STRICT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6_STRICT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6_STRICT}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT5_STRICT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testError}) (214{val=(}) (32 (802{val=createFunction}) (214{val=(}) (800{val=body}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testError}) (214{val=(}) (32 (802{val=createShorthandFunctionInObjLit}) (214{val=(}) (800{val=body}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testOk}) (214{val=(}) (32 (802{val=createFunction}) (214{val=(}) (800{val=body}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testOk}) (214{val=(}) (32 (802{val=createShorthandFunctionInObjLit}) (214{val=(}) (800{val=body}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testEs6EnhancedObjLiteralsPropertyShorthand}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testEs6EnhancedObjLiteralsComputedValuesNotRemoved}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testES6ClassComputedProperty}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testEs6GettersWithoutTranspilation}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (7 (800{val=languageOut}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT3})) (227{val=;})) (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})) (21 (7 (800{val=runTypeCheckAfterProcessing}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})) (21 (7 (800{val=runTypeCheckAfterProcessing}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=createShorthandFunctionInObjLit}) (214{val=(}) (800{val=returnType}) (234{val=,}) (800{val=body}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (60 (43 (801{val=String})) (59 (800{val=js}) (204{val==}) (32 (802{val=createShorthandFunctionInObjLit}) (214{val=(}) (800{val=returnType}) (234{val=,}) (800{val=body}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=testWarning}) (214{val=(}) (800{val=js}) (234{val=,}) (40{val=CheckMissingReturn.MISSING_RETURN_STATEMENT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (7 (800{val=runTypeCheckAfterProcessing}) (204{val==}) (9{val=true})) (227{val=;})) (21 (7 (800{val=compareJsDoc}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNoMoveDeepFunctionDeclarations}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInlineEmptyFunction6}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6_STRICT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArrowFunction4}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testFailure}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArrowFunction3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testFailure}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArrowFunction2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testFailure}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArrowFunction1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testFailure}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (7 (800{val=runTypeCheckAfterProcessing}) (204{val==}) (9{val=true})) (227{val=;})) (21 (7 (800{val=propertyRenaming}) (204{val==}) (40{val=PropertyRenamingPolicy.ALL_UNQUOTED})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT8}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setLanguageOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT3}) (215{val=)})) (227{val=;})) (21 (7 (800{val=runTypeCheckAfterProcessing}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setLanguageOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT3}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testTaggedTemplateError}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=ObjectPropertyStringPreprocess.STRING_LITERAL_EXPECTED_ERROR}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=ObjectPropertyStringPreprocess.STRING_LITERAL_EXPECTED_ERROR}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=ObjectPropertyStringPreprocess.STRING_LITERAL_EXPECTED_ERROR}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=ObjectPropertyStringPreprocess.STRING_LITERAL_EXPECTED_ERROR}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=ObjectPropertyStringPreprocess.STRING_LITERAL_EXPECTED_ERROR}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInlineIntoNestedNonHoistedNamedFunctions}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNoRewriteIfNotInGlobalScope1}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (40{val=NoRewriteIfNotInGlobalScopeTestInput.INPUT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (21 (7 (800{val=runTypeCheckAfterProcessing}) (204{val==}) (9{val=true})) (227{val=;})) (21 (7 (800{val=compareJsDoc}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=replaceSymbol}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=name}) (234{val=,}) (32 (800{val=t}) (235{val=.}) (802{val=getInput}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (40{val=com.google.javascript.jscomp.newtypes.FunctionType})) (59 (800{val=ctorType}) (204{val==}) (32 (800{val=functionType}) (235{val=.}) (802{val=getFunTypeIfSingletonObj}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=normalizePass}) (215{val=)})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=denormalizePass}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=hasOneChild}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (7 (800{val=newInitializer}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=n}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=newInitializer}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (27 (40{val=child.parent}) (236{val===}) (315{val=this})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=replaceSymbol}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=name}) (234{val=,}) (32 (800{val=t}) (235{val=.}) (802{val=getInput}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=findDeclaredNames}) (214{val=(}) (800{val=functionBody}) (234{val=,}) (800{val=renamer}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=declarationRoot}) (235{val=.}) (802{val=isFunction}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=findDeclaredNames}) (214{val=(}) (800{val=declarationRoot}) (234{val=,}) (800{val=renamer}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=normalizePass}) (215{val=)})) (227{val=;})) (21 (32 (800{val=denormalizePass}) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (27 (40{val=child.parent}) (236{val===}) (315{val=this})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=child}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=hasOneChild}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (7 (800{val=newInitializer}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=n}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=newInitializer}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (27 (40{val=child.parent}) (236{val===}) (315{val=this})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=hasOneChild}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (7 (800{val=newInitializer}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=n}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=newInitializer}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=isFinalized})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (22 (315{val=this}) (235{val=.}) (800{val=isFinalized}))) (215{val=)})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=addUndeclaredProperty}) (214{val=(}) (800{val=pname}) (234{val=,}) (800{val=defSite}) (234{val=,}) (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=UNKNOWN})) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (22 (315{val=this}) (235{val=.}) (800{val=isFinalized}))) (215{val=)})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=addProperty}) (214{val=(}) (800{val=pname}) (234{val=,}) (800{val=defSite}) (234{val=,}) (800{val=type}) (234{val=,}) (800{val=isConstant}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (22 (315{val=this}) (235{val=.}) (800{val=isFinalized}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (22 (315{val=this}) (235{val=.}) (800{val=isFinalized}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (22 (315{val=this}) (235{val=.}) (800{val=isFinalized}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (22 (315{val=this}) (235{val=.}) (800{val=isFinalized}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (22 (315{val=this}) (235{val=.}) (800{val=isFinalized}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=isFinalized})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (22 (315{val=this}) (235{val=.}) (800{val=isFinalized}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (22 (315{val=this}) (235{val=.}) (800{val=isFinalized}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (22 (315{val=this}) (235{val=.}) (800{val=isFinalized}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (22 (315{val=this}) (235{val=.}) (800{val=isFinalized}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=isStruct}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (802{val=isFinalized}) (216{val=()})) (250{val=||}) (32 (802{val=isClass}) (216{val=()}))) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (22 (315{val=this}) (235{val=.}) (800{val=objectKind})) (235{val=.}) (802{val=isStruct}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=isFinalized}) (249{val=&&}) (32 (800{val=externs}) (235{val=.}) (802{val=containsKey}) (214{val=(}) (800{val=name}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=type}) (204{val==}) (32 (800{val=externs}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=name}) (215{val=)}))) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (800{val=isFinalized}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=isFinalized}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=isFinalized}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=getCtorPropDeclaredType}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=isFinalized}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=RawNominalType})) (802{val=getRawNominalType}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=isFinalized}) (216{val=()}))) (215{val=)})) (227{val=;})) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=nominalType}) (235{val=.}) (802{val=isFinalized}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=nominalType}) (235{val=.}) (802{val=isFinalized}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=thisNode}) (235{val=.}) (802{val=isEquivalentToShallow}) (214{val=(}) (800{val=thatNode}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (802{val=ScopedChangeHandler}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=lastCodeChangeQuery})) (204{val==}) (800{val=timestamp})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=maybeSanityCheck}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=options}) (234{val=,}) (800{val=code}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=normalizePass}) (215{val=)})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=denormalizePass}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=nameGenerator}) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=enableLineNumberCheck}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=InlineVariablesConstantsTest}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (7 (800{val=useGoogleCodingConvention}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=enableLineNumberCheck}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT3}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=globalScope}) (204{val==}) (32 (800{val=TypedScope}) (235{val=.}) (802{val=createGlobalScope}) (214{val=(}) (800{val=blockNode}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=fieldType}) (204{val==}) (32 (802{val=createFromTypeNodesInternal}) (214{val=(}) (32 (800{val=fieldTypeNode}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (234{val=,}) (800{val=sourceName}) (234{val=,}) (800{val=scope}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=setReferencedType}) (214{val=(}) (32 (800{val=registry}) (235{val=.}) (802{val=getNativeObjectType}) (214{val=(}) (40{val=JSTypeNative.NO_RESOLVED_TYPE}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (21 (32 (802{val=validateAstChangeMarking}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=normalizePass}) (215{val=)})) (227{val=;})) (21 (32 (800{val=denormalizePass}) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=options}) (234{val=,}) (800{val=code}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=grandparent}) (204{val==}) (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()}))) (227{val=;})) (21 (32 (802{val=replaceWithEmpty}) (214{val=(}) (800{val=parent}) (234{val=,}) (800{val=grandparent}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=isUnresolved}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (43 (801{val=JSTypes})) (802{val=getCommonTypes}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=newBlockNode}) (235{val=.}) (802{val=useSourceInfoIfMissingFromForTree}) (214{val=(}) (800{val=oldBlockNode}) (215{val=)})) (227{val=;})) (21 (32 (800{val=functionNode}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=oldBlockNode}) (234{val=,}) (800{val=newBlockNode}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (32 (800{val=origValueNode}) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=newString}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=origValueNode}) (235{val=.}) (802{val=setString}) (214{val=(}) (800{val=newString}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=newValue}) (242{val=!=}) (800{val=msgNode})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=newValue}) (235{val=.}) (802{val=useSourceInfoIfMissingFromForTree}) (214{val=(}) (800{val=msgNode}) (215{val=)})) (227{val=;})) (21 (32 (800{val=msgNode}) (235{val=.}) (802{val=replaceWith}) (214{val=(}) (800{val=newValue}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCoercionSubstitution_boxedNumberVsZero}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCoercionSubstitution_allType}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCoercionSubstitution_unknownType}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=retValue}) (204{val==}) (32 (800{val=returnedValue}) (235{val=.}) (802{val=cloneTree}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=parent}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=call}) (234{val=,}) (800{val=retValue}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (40{val=p.newName}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=oldName}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=setString}) (214{val=(}) (40{val=p.newName}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT3}) (215{val=)})) (227{val=;})) (21 (32 (802{val=validateAstChangeMarking}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=collapses}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=applyCollapses}) (216{val=()})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=callTarget}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=setString}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (32 (800{val=firstArg}) (235{val=.}) (802{val=getNext}) (216{val=()})) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=n}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=newNode}) (235{val=.}) (802{val=isEquivalentTo}) (214{val=(}) (800{val=n}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=parent}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=newNode}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=newNode}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=rhs}) (235{val=.}) (802{val=isChanged}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=placeholder}) (234{val=,}) (32 (32 (800{val=mNode}) (235{val=.}) (802{val=getNode}) (216{val=()})) (235{val=.}) (802{val=removeFirstChild}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=follow}) (236{val===}) (500{val=null})) (250{val=||}) (32 (802{val=areMatchingExits}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=follow}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (315{val=this}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=newLiteralNode}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=replaceWith}) (214{val=(}) (800{val=newLiteralNode}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=newLiteralNode}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=canFoldStandardConstructors}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.CALL}) (215{val=)})) (227{val=;})) (21 (32 (800{val=n}) (235{val=.}) (802{val=putBooleanProp}) (214{val=(}) (40{val=Node.FREE_CALL}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=parent}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (21 (32 (800{val=functions}) (235{val=.}) (802{val=put}) (214{val=(}) (32 (800{val=t}) (235{val=.}) (802{val=getModule}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=codeChanged}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=t}) (235{val=.}) (802{val=getCompiler}) (216{val=()})) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=result}) (235{val=.}) (802{val=useSourceInfoIfMissingFromForTree}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (800{val=n}) (235{val=.}) (802{val=replaceWith}) (214{val=(}) (800{val=result}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=result}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=detachChildren}) (216{val=()})) (227{val=;})) (21 (32 (800{val=parent}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=result}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=result}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=replacementNode}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=replaceWith}) (214{val=(}) (800{val=replacementNode}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=replacementNode}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=child}) (234{val=,}) (32 (800{val=IR}) (235{val=.}) (802{val=number}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isVar}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=parent}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=node}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=node}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=childToRemove})) (226{val=:}) (800{val=nodesToRemove}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=node}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=childToRemove}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=allowExternsChanges}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})) (21 (32 (802{val=validateAstChangeMarking}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=apply}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=parent}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=oldChild}) (234{val=,}) (800{val=newChild}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (7 (800{val=useGoogleCodingConvention}) (204{val==}) (9{val=true})) (227{val=;})) (21 (32 (802{val=validateAstChangeMarking}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=setString}) (214{val=(}) (800{val=newName}) (215{val=)})) (227{val=;})) (21 (32 (32 (800{val=t}) (235{val=.}) (802{val=getCompiler}) (216{val=()})) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (500{val=return;}) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=InlineVariablesConstantsTest}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (21 (32 (802{val=validateAstChangeMarking}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=setString}) (214{val=(}) (27 (800{val=prop}) (200{val=+}) (800{val=fileid})) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=enableLineNumberCheck}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (21 (32 (802{val=validateAstChangeMarking}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=node}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=setDeclaredTypeExpression}) (214{val=(}) (800{val=node}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=attachTypeExpr}) (204{val==}) (32 (800{val=IR}) (235{val=.}) (802{val=rest}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)}))) (227{val=;})) (21 (32 (800{val=n}) (235{val=.}) (802{val=replaceWith}) (214{val=(}) (800{val=attachTypeExpr}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getPureBooleanValue}) (214{val=(}) (800{val=forCondition}) (215{val=)})) (236{val===}) (40{val=TernaryValue.TRUE})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=forCondition}) (235{val=.}) (802{val=replaceWith}) (214{val=(}) (32 (800{val=IR}) (235{val=.}) (802{val=empty}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=right}) (215{val=)})) (227{val=;})) (21 (32 (800{val=parent}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=right}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=right}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=redeclareVarsInsideBranch}) (214{val=(}) (800{val=caseNode}) (215{val=)})) (227{val=;})) (21 (32 (800{val=switchNode}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=caseNode}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=maybeBreak}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=subtree}) (235{val=.}) (802{val=replaceWith}) (214{val=(}) (32 (800{val=right}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=right}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=typeCheck}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (21 (32 (802{val=validateAstChangeMarking}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=closureRequire})) (226{val=:}) (800{val=requiresToBeRemoved}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=closureRequire}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=notifyOfRemoval}) (214{val=(}) (800{val=node}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=parent}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=node}) (215{val=)})) (227{val=;})) (21 (32 (802{val=notifyOfRemoval}) (214{val=(}) (800{val=node}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (21 (32 (802{val=validateAstChangeMarking}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=functionBody}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=current}) (215{val=)})) (227{val=;})) (21 (7 (800{val=insertAfter}) (204{val==}) (32 (802{val=addToFront}) (214{val=(}) (800{val=functionBody}) (234{val=,}) (800{val=current}) (234{val=,}) (800{val=insertAfter}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=options}) (234{val=,}) (800{val=code}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=normalizePass}) (215{val=)})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=denormalizePass}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=scope}) (235{val=.}) (802{val=isLocal}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (21 (32 (802{val=validateAstChangeMarking}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=maybeNormalizeFunctionDeclaration}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=reportCodeChange}) (214{val=(}) (800{val=n}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=TypeInformationGatherer})) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=DevirtualizePrototypeMethods})) (214{val=(}) (800{val=compiler}) (215{val=)})) (234{val=,}) (800{val=typeInformation}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (74 (43 (800{val=Iterable})) (230{val=<}) (43 (800{val=JSModule})) (231{val=>})) (802{val=getAllModules}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=modules}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=n}) (235{val=.}) (802{val=isName}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isVar}) (216{val=()}))))
(AST_ROOT_SC2NF (31 (74 (43 (800{val=Iterable})) (230{val=<}) (43 (800{val=JSModule})) (231{val=>})) (802{val=getAllModules}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Arrays}) (235{val=.}) (802{val=asList}) (214{val=(}) (800{val=modules}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=setScope}) (214{val=(}) (800{val=root}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setInputId}) (214{val=(}) (500{val=null}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setInputId}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getInputId}) (214{val=(}) (800{val=scopeRoot}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setInputId}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getInputId}) (214{val=(}) (800{val=root}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=c}) (235{val=.}) (802{val=setQuotedString}) (216{val=()})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=enableLineNumberCheck}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (21 (32 (802{val=validateAstChangeMarking}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=dollarChildProp}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getGrandparent}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=dollarChildProp}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.GETELEM}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (21 (32 (802{val=validateAstChangeMarking}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (21 (32 (802{val=validateAstChangeMarking}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=parent}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (32 (32 (800{val=declaringNode}) (235{val=.}) (802{val=getFirstFirstChild}) (216{val=()})) (235{val=.}) (802{val=cloneTree}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (802{val=isUtilGetDefineCall}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=substituteUtilGetDefine}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=t}) (235{val=.}) (802{val=getCompiler}) (216{val=()})) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=t}) (235{val=.}) (802{val=getCompiler}) (216{val=()})) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isGoogLoadModuleStatement}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=updateGoogLoadModuleLate}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=putBooleanProp}) (214{val=(}) (40{val=Node.GOOG_MODULE}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (21 (32 (802{val=inlineModuleIntoGlobal}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (21 (32 (802{val=checkAndSetStrictModeDirective}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=newJsdoc}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=jsdocNode}) (235{val=.}) (802{val=setJSDocInfo}) (214{val=(}) (800{val=newJsdoc}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isDestructuringDeclaration}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=splitDeclaration}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isVar}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=parent}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=node}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=node}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=childToRemove})) (226{val=:}) (800{val=nodesToRemove}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=node}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=childToRemove}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=visitArrowFunction}) (214{val=(}) (800{val=n}) (234{val=,}) (32 (802{val=checkNotNull}) (214{val=(}) (800{val=thisContext}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=newNode}) (235{val=.}) (802{val=isEquivalentTo}) (214{val=(}) (800{val=n}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=parent}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=newNode}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=newNode}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=rhs}) (235{val=.}) (802{val=isChanged}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=placeholder}) (234{val=,}) (32 (32 (800{val=mNode}) (235{val=.}) (802{val=getNode}) (216{val=()})) (235{val=.}) (802{val=removeFirstChild}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=follow}) (236{val===}) (500{val=null})) (250{val=||}) (32 (802{val=areMatchingExits}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=follow}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=compiler})) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=tryReplaceArguments}) (214{val=(}) (32 (800{val=traversal}) (235{val=.}) (802{val=getScope}) (216{val=()})) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (800{val=traversal}) (235{val=.}) (802{val=getCompiler}) (216{val=()})) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=newLiteralNode}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=replaceWith}) (214{val=(}) (800{val=newLiteralNode}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=newLiteralNode}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=canFoldStandardConstructors}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.CALL}) (215{val=)})) (227{val=;})) (21 (32 (800{val=n}) (235{val=.}) (802{val=putBooleanProp}) (214{val=(}) (40{val=Node.FREE_CALL}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=visitClass}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=visitRestParam}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getPureBooleanValue}) (214{val=(}) (800{val=forCondition}) (215{val=)})) (236{val===}) (40{val=TernaryValue.TRUE})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=forCondition}) (235{val=.}) (802{val=replaceWith}) (214{val=(}) (32 (800{val=IR}) (235{val=.}) (802{val=empty}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=right}) (215{val=)})) (227{val=;})) (21 (32 (800{val=parent}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=right}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=right}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=redeclareVarsInsideBranch}) (214{val=(}) (800{val=caseNode}) (215{val=)})) (227{val=;})) (21 (32 (800{val=switchNode}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=caseNode}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=maybeBreak}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=subtree}) (235{val=.}) (802{val=replaceWith}) (214{val=(}) (32 (800{val=right}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=right}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=callTarget}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=setString}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (32 (800{val=firstArg}) (235{val=.}) (802{val=getNext}) (216{val=()})) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=n}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSTypeExpression})) (59 (800{val=typeExpr}) (204{val==}) (32 (32 (802{val=getTypeFromGetterOrSetter}) (214{val=(}) (800{val=member}) (215{val=)})) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=expr}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (16 (800{val=cloneTypeNodes}) (233{val=?}) (32 (800{val=expr}) (235{val=.}) (802{val=clone}) (216{val=()})) (226{val=:}) (800{val=expr})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=foundObj}) (235{val=.}) (802{val=isGeneric}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=foundType}) (204{val==}) (32 (800{val=foundObj}) (235{val=.}) (802{val=getRawType}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=ImmutableMap})) (230{val=<}) (43 (800{val=String})) (234{val=,}) (43 (800{val=JSType})) (231{val=>})) (800{val=typeVars})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=obj}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=obj}) (235{val=.}) (802{val=isGeneric}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=obj}) (235{val=.}) (802{val=instantiateGenericsWithUnknown}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=foundType}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=foundType}) (235{val=.}) (802{val=isGeneric}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=foundType}) (204{val==}) (32 (800{val=foundType}) (235{val=.}) (802{val=getRawType}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=PropagateConstJsdoc})) (214{val=(}) (800{val=compiler}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (14 (304{val=new}) (43 (801{val=RemoveCode})) (214{val=(}) (800{val=compiler}) (215{val=)})) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (21 (32 (802{val=validateAstChangeMarking}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=validateAstChangeMarking}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getJSType}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getJSType}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=extractionInfo}) (235{val=.}) (802{val=shouldExtract}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=doExtraction}) (214{val=(}) (800{val=extractionInfo}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportChangeToEnclosingScope}) (214{val=(}) (32 (800{val=getKey}) (235{val=.}) (802{val=getParent}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=logger}) (235{val=.}) (802{val=isLoggable}) (214{val=(}) (40{val=Level.FINE}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=logger}) (235{val=.}) (802{val=fine}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=callName})) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (32 (802{val=inlineEmptyMethod}) (214{val=(}) (800{val=parent}) (234{val=,}) (800{val=callNode}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=t}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=validateAstChangeMarking}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Definition})) (800{val=def})) (226{val=:}) (40{val=definitionsGatherer.definitions}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=def}) (235{val=.}) (802{val=remove}) (216{val=()})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=codeChanged}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=result}) (235{val=.}) (802{val=useSourceInfoIfMissingFromForTree}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (800{val=n}) (235{val=.}) (802{val=replaceWith}) (214{val=(}) (800{val=result}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=result}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=detachChildren}) (216{val=()})) (227{val=;})) (21 (32 (800{val=parent}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=result}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=result}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=replacementNode}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=replaceWith}) (214{val=(}) (800{val=replacementNode}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=replacementNode}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=child}) (234{val=,}) (32 (800{val=IR}) (235{val=.}) (802{val=number}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=precheck}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=int}) (802{val=getNumRepetitions}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=int}) (802{val=getNumRepetitions}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=int}) (802{val=getNumRepetitions}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=int}) (802{val=getNumRepetitions}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=int}) (802{val=getNumRepetitions}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=int}) (802{val=getNumRepetitions}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=int}) (802{val=getNumRepetitions}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=int}) (802{val=getNumRepetitions}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=int}) (802{val=getNumRepetitions}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=int}) (802{val=getNumRepetitions}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=int}) (802{val=getNumRepetitions}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=int}) (802{val=getNumRepetitions}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=int}) (802{val=getNumRepetitions}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=int}) (802{val=getNumRepetitions}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=Keywords}) (235{val=.}) (802{val=isKeyword}) (214{val=(}) (40{val=idToken.value}) (215{val=)})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=Keywords}) (235{val=.}) (802{val=isTypeScriptSpecificKeyword}) (214{val=(}) (40{val=idToken.value}) (215{val=)})))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=reportError}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=name}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=PhaseOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=PhaseOptimizer})) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PhaseOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=PhaseOptimizer})) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PhaseOptimizer})) (59 (800{val=phaseopt}) (204{val==}) (14 (304{val=new}) (43 (801{val=PhaseOptimizer})) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=PhaseOptimizer})) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=tracker}) (234{val=,}) (500{val=null}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PhaseOptimizer})) (59 (800{val=phaseopt}) (204{val==}) (14 (304{val=new}) (43 (801{val=PhaseOptimizer})) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PhaseOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=PhaseOptimizer})) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PhaseOptimizer})) (59 (800{val=phaseopt}) (204{val==}) (14 (304{val=new}) (43 (801{val=PhaseOptimizer})) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=typeWithBannedProp}) (235{val=.}) (802{val=isSubtypeOf}) (214{val=(}) (800{val=foundType}) (215{val=)})) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (802{val=matchesPrototype}) (214{val=(}) (800{val=typeWithBannedProp}) (234{val=,}) (800{val=foundType}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=ConformanceResult.VIOLATION}) (227{val=;})) (219{val=}})) (322{val=else}) (25 (313{val=if}) (214{val=(}) (800{val=reportLooseTypeViolations}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=ConformanceResult.POSSIBLE_VIOLATION_DUE_TO_LOOSE_TYPES}) (227{val=;})) (219{val=}})))) (219{val=}}))))
(AST_ROOT_SC2NF (31 (74 (43 (800{val=Iterable})) (230{val=<}) (43 (800{val=JSModule})) (231{val=>})) (802{val=getAllModules}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=modules}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=clazz}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (32 (800{val=clazz}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (32 (32 (800{val=IR}) (235{val=.}) (802{val=empty}) (216{val=()})) (235{val=.}) (802{val=useSourceInfoFrom}) (214{val=(}) (32 (800{val=clazz}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getLineno}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=setCharno}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getCharno}) (216{val=()})) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=Compiler})) (800{val=compiler})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (802{val=isMethodOrCtorCallThatTriggersRemoval}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=replaceHighestNestedCallWithNull}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (236{val===}) (800{val=n})) (249{val=&&}) (32 (802{val=isReferenceToRemovedVar}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=replaceHighestNestedCallWithNull}) (214{val=(}) (800{val=parent}) (234{val=,}) (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=setString}) (214{val=(}) (800{val=newName}) (215{val=)})) (227{val=;})) (21 (32 (32 (800{val=t}) (235{val=.}) (802{val=getCompiler}) (216{val=()})) (235{val=.}) (802{val=reportChangeToEnclosingScope}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (500{val=return;}) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=maybeRewriteClassDefinition}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=CodeReplacement})) (231{val=>})) (59 (800{val=replacements}) (204{val==}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (14 (304{val=new}) (43 (800{val=CodeReplacement})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=CodeReplacement})) (231{val=>})) (59 (800{val=replacements}) (204{val==}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (14 (304{val=new}) (43 (800{val=CodeReplacement})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=CodeReplacement})) (231{val=>})) (59 (800{val=replacements}) (204{val==}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (14 (304{val=new}) (43 (800{val=CodeReplacement})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=inlineFunctionsInFile}) (214{val=(}) (800{val=root}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=ImmutableSet}) (235{val=.}) (802{val=of}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (40{val=InliningMode.DIRECT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})))
(AST_ROOT_SC2NF (31 (802{val=PeepholeFoldConstantsTest}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=DEFAULT_EXTERNS}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=CodeReplacement})) (231{val=>})) (59 (800{val=replacements}) (204{val==}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (32 (800{val=CodeReplacement}) (235{val=.}) (802{val=create}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=CodeReplacement})) (231{val=>})) (59 (800{val=replacements}) (204{val==}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (32 (800{val=CodeReplacement}) (235{val=.}) (802{val=create}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=CodeReplacement})) (231{val=>})) (59 (800{val=replacements}) (204{val==}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (32 (800{val=CodeReplacement}) (235{val=.}) (802{val=create}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=CodeReplacement})) (231{val=>})) (59 (800{val=replacements}) (204{val==}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (14 (304{val=new}) (43 (800{val=CodeReplacement})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=CodeReplacement})) (231{val=>})) (59 (800{val=replacements}) (204{val==}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (14 (304{val=new}) (43 (800{val=CodeReplacement})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=CodeReplacement})) (231{val=>})) (59 (800{val=replacements}) (204{val==}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (14 (304{val=new}) (43 (800{val=CodeReplacement})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setLanguage}) (214{val=(}) (800{val=ECMASCRIPT_NEXT}) (234{val=,}) (800{val=ECMASCRIPT_NEXT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (74 (43 (800{val=Iterable})) (230{val=<}) (43 (800{val=JSModule})) (231{val=>})) (802{val=getAllModules}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Arrays}) (235{val=.}) (802{val=asList}) (214{val=(}) (800{val=modules}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (802{val=tightenTypeAndDontWarn}) (214{val=(}) (800{val=varName}) (234{val=,}) (800{val=expr}) (234{val=,}) (800{val=declType}) (234{val=,}) (800{val=inferredType}) (234{val=,}) (800{val=requiredType}) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (802{val=inlineFunctionsInFile}) (214{val=(}) (800{val=root}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=ImmutableSet}) (235{val=.}) (802{val=of}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (40{val=InliningMode.DIRECT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (74 (43 (800{val=Iterable})) (230{val=<}) (43 (800{val=JSModule})) (231{val=>})) (802{val=getAllModules}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=modules}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=currentCompiler}) (234{val=,}) (40{val=currentCompiler.jsRoot}) (234{val=,}) (800{val=s}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=currentLocationAbstractionIdentifier}) (204{val==}) (800{val=locationAbstractionIdentifier})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=SHARED_EXTERNS}) (234{val=,}) (800{val=js}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (21 (7 (800{val=currentJsRoot}) (204{val==}) (40{val=currentCompiler.jsRoot})) (227{val=;})) (41 (329{val=return}) (800{val=currentAnalysis}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=TypeMismatch})) (231{val=>})) (59 (800{val=actual}) (204{val==}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeMismatches}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSTypeRegistry})) (59 (800{val=registry}) (204{val==}) (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeRegistry}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSTypeRegistry})) (59 (800{val=registry}) (204{val==}) (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeRegistry}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSTypeRegistry})) (59 (800{val=registry}) (204{val==}) (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeRegistry}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=lastCompiler}) (234{val=,}) (40{val=lastCompiler.jsRoot}) (234{val=,}) (800{val=s}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=lastCompiler}) (234{val=,}) (40{val=lastCompiler.jsRoot}) (234{val=,}) (800{val=findFunction}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=lastCompiler}) (234{val=,}) (40{val=lastCompiler.jsRoot}) (234{val=,}) (800{val=findParameter}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isCompoundAssignementOp}) (214{val=(}) (800{val=n}) (215{val=)})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isInc}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isDec}) (216{val=()}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isCompoundAssignementOp}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=normalizeAssignShorthand}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=bundler}) (235{val=.}) (802{val=appendTo}) (214{val=(}) (800{val=out}) (234{val=,}) (800{val=input}) (234{val=,}) (32 (32 (800{val=input}) (235{val=.}) (802{val=getSourceFile}) (216{val=()})) (235{val=.}) (802{val=getCodeCharSource}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=sourceMapOriginalSources}) (235{val=.}) (802{val=putIfAbsent}) (214{val=(}) (800{val=path}) (234{val=,}) (32 (800{val=originalSourcesLoader}) (235{val=.}) (802{val=apply}) (214{val=(}) (800{val=path}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Function})) (230{val=<}) (43 (800{val=String})) (234{val=,}) (43 (800{val=SourceFile})) (231{val=>})) (800{val=originalSourcesLoader})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (800{val=Charset})) (802{val=getCharset}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Charset}) (235{val=.}) (802{val=forName}) (214{val=(}) (800{val=inputCharset}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=inputCharset}) (204{val==}) (32 (800{val=c}) (235{val=.}) (802{val=name}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=OnDisk})) (214{val=(}) (800{val=file}) (234{val=,}) (800{val=originalPath}) (234{val=,}) (800{val=charset}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (79 (208{val=@}) (802{val=GwtIncompatible}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (83{val=public}) (83{val=static}) (43 (801{val=SourceFile})) (802{val=fromFile}) (214{val=(}) (44 (43 (801{val=String})) (800{val=fileName})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=builder}) (216{val=()})) (235{val=.}) (802{val=buildFromFile}) (214{val=(}) (800{val=fileName}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (800{val=Charset})) (802{val=getCharset}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=inputCharset}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=inputCharset}) (204{val==}) (800{val=c})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=OnDisk})) (214{val=(}) (32 (800{val=file}) (235{val=.}) (802{val=toPath}) (216{val=()})) (234{val=,}) (800{val=originalPath}) (234{val=,}) (800{val=charset}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (79 (208{val=@}) (802{val=GwtIncompatible}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (83{val=public}) (83{val=static}) (43 (801{val=SourceFile})) (802{val=fromFile}) (214{val=(}) (44 (43 (801{val=String})) (800{val=fileName})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=fromFile}) (214{val=(}) (800{val=fileName}) (234{val=,}) (800{val=UTF_8}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=read}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=ensureRequirementIsMutable}) (216{val=()})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=addAll}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=requirement_}) (215{val=)})) (227{val=;})) (21 (32 (802{val=onChanged}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (40{val=com.google.protobuf.InvalidProtocolBufferException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=parsedMessage}) (204{val==}) (11 (214{val=(}) (43 (40{val=com.google.javascript.jscomp.ConformanceConfig})) (215{val=)}) (32 (800{val=e}) (235{val=.}) (802{val=getUnfinishedMessage}) (216{val=()})))) (227{val=;})) (53 (320{val=throw}) (800{val=e}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=private}) (39{val=void}) (802{val=maybeForceBuilderInitialization}) (216{val=()}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (40{val=com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=getRequirementFieldBuilder}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=private}) (802{val=Builder}) (214{val=(}) (44 (43 (40{val=com.google.protobuf.GeneratedMessage.BuilderParent})) (800{val=parent})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=parent}) (215{val=)}) (227{val=;})) (21 (32 (802{val=maybeForceBuilderInitialization}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (40{val=com.google.protobuf.GeneratedMessage.BuilderParent})) (800{val=parent})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=PARSER}) (235{val=.}) (802{val=parseFrom}) (214{val=(}) (800{val=input}) (234{val=,}) (800{val=extensionRegistry}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=PARSER}) (235{val=.}) (802{val=parseDelimitedFrom}) (214{val=(}) (800{val=input}) (234{val=,}) (800{val=extensionRegistry}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=PARSER}) (235{val=.}) (802{val=parseFrom}) (214{val=(}) (800{val=input}) (234{val=,}) (800{val=extensionRegistry}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInlineInFunction}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isAsyncFunction}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=cannotConvertYet}) (214{val=(}) (800{val=n}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=inlineFunctionsInFile}) (214{val=(}) (800{val=root}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=ImmutableSet}) (235{val=.}) (802{val=of}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (40{val=InliningMode.DIRECT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=declaration}) (235{val=.}) (802{val=isVar}) (216{val=()})) (249{val=&&}) (32 (800{val=declaredVarOrProp}) (235{val=.}) (802{val=isName}) (216{val=()}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testGetFunctionName}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=parent}) (204{val==}) (32 (32 (802{val=parse}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=getFirstFirstChild}) (216{val=()}))) (227{val=;})) (21 (32 (802{val=testGetFunctionName}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=parent}) (204{val==}) (32 (32 (802{val=parse}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=getFirstFirstChild}) (216{val=()}))) (227{val=;})) (21 (32 (802{val=testGetFunctionName}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=parent}) (204{val==}) (32 (32 (802{val=parse}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=getFirstFirstChild}) (216{val=()}))) (227{val=;})) (21 (32 (802{val=testGetFunctionName}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=parent}) (204{val==}) (32 (802{val=parse}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=testGetFunctionName}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=sanityCheck}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=setSanityCheckState}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=sanityCheck}) (235{val=.}) (802{val=create}) (214{val=(}) (800{val=compiler}) (215{val=)})) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})) (21 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=verifyScopeChanges}) (214{val=(}) (800{val=passName}) (234{val=,}) (800{val=mtoc}) (234{val=,}) (800{val=jsRoot}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=matchesQualifiedName}) (214{val=(}) (40{val=Es6ToEs3Converter.INHERITS}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=inheritsCalls}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=parent}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=node}) (234{val=,}) (32 (32 (800{val=Node}) (235{val=.}) (802{val=newNumber}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=useSourceInfoIfMissingFrom}) (214{val=(}) (800{val=node}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=optimize}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=n}) (235{val=.}) (802{val=isName}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=searchIt}) (235{val=.}) (802{val=currentParent}) (216{val=()})) (235{val=.}) (802{val=isVar}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))))
(AST_ROOT_SC2NF (36 (214{val=(}) (27 (32 (32 (800{val=declaration}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isVar}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isLoopStructure}) (214{val=(}) (32 (800{val=declaration}) (235{val=.}) (802{val=getGrandparent}) (216{val=()})) (215{val=)})))) (215{val=)})))
(AST_ROOT_SC2NF (31 (83{val=public}) (800{val=HierarchicalSet}) (214{val=(}) (44 (43 (800{val=HierarchicalSet})) (800{val=parent})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=parent})) (204{val==}) (800{val=parent})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=clinitsCalledAtBranch}) (204{val==}) (14 (304{val=new}) (43 (801{val=HierarchicalSet})) (214{val=(}) (800{val=clinitsCalledAtBranch}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=declType}) (204{val==}) (32 (800{val=currentScope}) (235{val=.}) (802{val=getDeclaredTypeOf}) (214{val=(}) (800{val=name}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NTIScope})) (59 (800{val=innerScope}) (204{val==}) (32 (800{val=currentScope}) (235{val=.}) (802{val=getScope}) (214{val=(}) (800{val=fnName}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=lhs}) (235{val=.}) (802{val=isName}) (216{val=()})) (249{val=&&}) (32 (800{val=currentScope}) (235{val=.}) (802{val=isConstVar}) (214{val=(}) (32 (800{val=lhs}) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=currentScope}) (235{val=.}) (802{val=hasThis}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=EnvTypePair})) (214{val=(}) (800{val=inEnv}) (234{val=,}) (800{val=UNKNOWN}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (800{val=expr}) (235{val=.}) (802{val=isNew}) (216{val=()})) (250{val=||}) (36 (214{val=(}) (27 (32 (800{val=expr}) (235{val=.}) (802{val=isCall}) (216{val=()})) (249{val=&&}) (32 (800{val=currentScope}) (235{val=.}) (802{val=isConstructor}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=expr}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=isSuper}) (216{val=()}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=declType}) (204{val==}) (32 (800{val=currentScope}) (235{val=.}) (802{val=getDeclaredTypeOf}) (214{val=(}) (800{val=name}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=declRetType}) (204{val==}) (32 (32 (800{val=currentScope}) (235{val=.}) (802{val=getDeclaredFunctionType}) (216{val=()})) (235{val=.}) (802{val=getReturnType}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=guardA}) (235{val=.}) (802{val=addGuard}) (214{val=(}) (800{val=accessControlsOff}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=val}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=object}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (236{val===}) (800{val=name})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=val}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (234{val=,}) (800{val=val}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=object}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (234{val=,}) (800{val=object}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (236{val===}) (800{val=name})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=val}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=object}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (236{val===}) (800{val=name})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()})) (242{val=!=}) (32 (800{val=t}) (235{val=.}) (802{val=getClosestHoistScope}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=InlineVariablesTest}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (800{val=Charset})) (802{val=getCharset}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Charset}) (235{val=.}) (802{val=forName}) (214{val=(}) (800{val=inputCharset}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=inputCharset}) (204{val==}) (32 (800{val=c}) (235{val=.}) (802{val=name}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=OnDisk})) (214{val=(}) (800{val=file}) (234{val=,}) (800{val=originalPath}) (234{val=,}) (800{val=charset}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (79 (208{val=@}) (802{val=GwtIncompatible}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (83{val=public}) (83{val=static}) (43 (801{val=SourceFile})) (802{val=fromFile}) (214{val=(}) (44 (43 (801{val=String})) (800{val=fileName})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=builder}) (216{val=()})) (235{val=.}) (802{val=buildFromFile}) (214{val=(}) (800{val=fileName}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (39{val=void}) (802{val=reportChangeToEnclosingScope}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=n})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=recordChange}) (214{val=(}) (32 (802{val=getEnclosingChangeScope}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=notifyChangeHandlers}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=precedence}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (230{val=<}) (800{val=minPrecedence})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=expectedCode}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=precedence}) (214{val=(}) (800{val=n}) (215{val=)})) (230{val=<}) (800{val=minPrecedence})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=invalidatingPropRef}) (204{val==}) (38 (207{val=!}) (32 (802{val=maybeCandidateDefinition}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (43 (801{val=JSType})) (800{val=type})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (800{val=Charset})) (802{val=getCharset}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=inputCharset}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=inputCharset}) (204{val==}) (800{val=c})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=OnDisk})) (214{val=(}) (32 (800{val=file}) (235{val=.}) (802{val=toPath}) (216{val=()})) (234{val=,}) (800{val=originalPath}) (234{val=,}) (800{val=charset}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (79 (208{val=@}) (802{val=GwtIncompatible}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (83{val=public}) (83{val=static}) (43 (801{val=SourceFile})) (802{val=fromFile}) (214{val=(}) (44 (43 (801{val=String})) (800{val=fileName})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=fromFile}) (214{val=(}) (800{val=fileName}) (234{val=,}) (800{val=UTF_8}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=checkArgument}) (214{val=(}) (27 (40{val=child.parent}) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalStateException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (800{val=maybeDecl}) (235{val=.}) (802{val=isInitializingDeclaration}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (32 (800{val=references}) (235{val=.}) (802{val=get}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=isDeclaration}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=deepestModule}) (204{val==}) (32 (800{val=graph}) (235{val=.}) (802{val=getDeepestCommonDependencyInclusive}) (214{val=(}) (800{val=m}) (234{val=,}) (800{val=deepestModule}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=precedence}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (230{val=<}) (800{val=minPrecedence})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=js}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=collectionRoot}) (235{val=.}) (802{val=isScript}) (216{val=()})) (250{val=||}) (32 (800{val=collectionRoot}) (235{val=.}) (802{val=isRoot}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=options}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=warningsGuard}) (235{val=.}) (802{val=level}) (214{val=(}) (800{val=error}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=changeScopeRoot}) (235{val=.}) (802{val=isScript}) (216{val=()})) (250{val=||}) (32 (800{val=changeScopeRoot}) (235{val=.}) (802{val=isFunction}) (216{val=()}))) (215{val=)})) (227{val=;})) (21 (32 (802{val=recordChange}) (214{val=(}) (800{val=changeScopeRoot}) (215{val=)})) (227{val=;})) (21 (32 (802{val=notifyChangeHandlers}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=currentChangeScope}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=currentChangeScope}) (235{val=.}) (802{val=isScript}) (216{val=()})) (250{val=||}) (32 (800{val=currentChangeScope}) (235{val=.}) (802{val=isFunction}) (216{val=()}))) (215{val=)})) (227{val=;})) (21 (32 (802{val=recordChange}) (214{val=(}) (800{val=currentChangeScope}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (62 (800{val=passes}) (328{val=instanceof}) (43 (800{val=DefaultPassConfig}))) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=input}) (235{val=.}) (802{val=isExtern}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=input}) (235{val=.}) (802{val=getName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=currentTracer}) (242{val=!=}) (500{val=null})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=currentTracer}) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=errorManager}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=errorManager})) (204{val==}) (14 (304{val=new}) (43 (801{val=ThreadSafeDelegatingErrorManager})) (214{val=(}) (800{val=errorManager}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=compiler}) (235{val=.}) (802{val=hasErrors}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=checkAndTranspileAndOptimize}) (216{val=()})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=completeCompilation}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=compiler}) (235{val=.}) (802{val=hasErrors}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=checkAndTranspileAndOptimize}) (216{val=()})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=completeCompilation}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (22 (32 (800{val=blockStack}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=i}) (215{val=)})) (235{val=.}) (800{val=root})) (236{val===}) (32 (800{val=containingScope}) (235{val=.}) (802{val=getRootNode}) (216{val=()}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=clone}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=verifyNewNode}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (802{val=verifyNodeChange}) (214{val=(}) (800{val=passNameMsg}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=clone}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (27 (800{val=grandparent}) (236{val===}) (500{val=null})) (250{val=||}) (36 (214{val=(}) (27 (38 (207{val=!}) (32 (802{val=isPrototypePropertyDeclaration}) (214{val=(}) (800{val=grandparent}) (215{val=)}))) (249{val=&&}) (38 (207{val=!}) (32 (802{val=isClassPropertyDeclaration}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (800{val=currentScope}) (215{val=)})))) (215{val=)}))))
(AST_ROOT_SC2NF (60 (43 (40{val=ReferenceCollectingCallback.Reference})) (59 (800{val=aliasRef}) (204{val==}) (32 (40{val=aliasRefs.references}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=i}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (40{val=ReferenceCollectingCallback.Reference})) (800{val=ref})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportChangeToEnclosingScope}) (214{val=(}) (800{val=expr}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=name}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=getQualifiedName}) (216{val=()})) (215{val=)})))
(AST_ROOT_SC2NF (44 (43 (801{val=String})) (800{val=newName})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=InlineObjectLiteralsTest}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (800{val=Charset})) (802{val=getCharset}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Charset}) (235{val=.}) (802{val=forName}) (214{val=(}) (800{val=inputCharset}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=inputCharset}) (204{val==}) (32 (800{val=c}) (235{val=.}) (802{val=name}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=OnDisk})) (214{val=(}) (800{val=file}) (234{val=,}) (800{val=originalPath}) (234{val=,}) (800{val=charset}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (79 (208{val=@}) (802{val=GwtIncompatible}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (83{val=public}) (83{val=static}) (43 (801{val=SourceFile})) (802{val=fromFile}) (214{val=(}) (44 (43 (801{val=String})) (800{val=fileName})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=builder}) (216{val=()})) (235{val=.}) (802{val=buildFromFile}) (214{val=(}) (800{val=fileName}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=builder}) (216{val=()})) (235{val=.}) (802{val=buildFromFile}) (214{val=(}) (800{val=file}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=parent}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (27 (27 (800{val=qNameRoot}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=EXPORTS}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (800{val=qNameRoot}) (235{val=.}) (802{val=getQualifiedName}) (216{val=()})) (215{val=)}))) (249{val=&&}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isLValue}) (214{val=(}) (800{val=qNameRoot}) (215{val=)}))))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=callbackBlock}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=callbackBlock}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=onlyExport}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=onlyExport}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=isPropertyTestFunction}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=call})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (45{val=STRING_CONSTANT}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (32 (800{val=call}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=getQualifiedName}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=isInClass}) (204{val==}) (27 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.CLASS_MEMBERS}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=parent}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (802{val=alreadyRemoved}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (500{val=continue;}) (219{val=}}))) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportChangeToEnclosingScope}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=defined}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportChangeToEnclosingScope}) (214{val=(}) (32 (800{val=vnode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (32 (800{val=vnode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=vnode}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=assignmentParent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=assignmentParent}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (27 (800{val=parent}) (242{val=!=}) (500{val=null})) (249{val=&&}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.ASSIGN}))) (249{val=&&}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (236{val===}) (800{val=n}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=parent}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=parent}) (235{val=.}) (802{val=hasChildren}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=parent}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (800{val=enclosingNode}) (242{val=!=}) (500{val=null})) (249{val=&&}) (27 (32 (800{val=enclosingNode}) (235{val=.}) (802{val=getToken}) (216{val=()})) (242{val=!=}) (40{val=Token.FUNCTION}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=name}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (32 (800{val=anc}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=getQualifiedName}) (216{val=()})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=Ref.Type.ALIASING_GET}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=block}) (204{val==}) (32 (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()})) (235{val=.}) (802{val=getRootNode}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (802{val=isASTNormalized}) (216{val=()})) (249{val=&&}) (27 (40{val=Token.NAME}) (236{val===}) (32 (800{val=constructorNameNode}) (235{val=.}) (802{val=getToken}) (216{val=()})))))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=parent}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (802{val=isNamespacePlaceholder}) (214{val=(}) (800{val=parent}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportChangeToEnclosingScope}) (214{val=(}) (800{val=parent}) (215{val=)})) (227{val=;})) (21 (32 (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=parent}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=Callback})) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (800{val=name}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=ARGUMENTS}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=idPrefix}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isName}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (800{val=n}) (235{val=.}) (802{val=setString}) (214{val=(}) (800{val=newName}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportChangeToEnclosingScope}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (40{val=currentScript.isModule}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=rewriteShortObjectKey}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testWarning}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=warning}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT6}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (802{val=shouldRemove}) (214{val=(}) (800{val=nameNode}) (215{val=)})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isInferrableConst}) (214{val=(}) (800{val=jsdoc}) (234{val=,}) (800{val=name}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=jsdoc}) (204{val==}) (32 (802{val=pullJsdocTypeFromAst}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=jsdoc}) (234{val=,}) (800{val=name}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=ReferenceCollectingCallback})) (800{val=collector})))
(AST_ROOT_SC2NF (44 (43 (801{val=ReferenceCollectingCallback})) (800{val=collector})))
(AST_ROOT_SC2NF (44 (43 (801{val=ReferenceCollectingCallback})) (800{val=collector})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNgInjectAddsInjectToClassConstructor}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=testEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (500{val=null}) (236{val===}) (800{val=str})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=str})) (204{val==}) (800{val=str})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=quoteKeywordProperties})) (204{val==}) (40{val=options.quoteKeywordProperties})) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=options}) (235{val=.}) (802{val=assumeStrictThis}) (216{val=()})) (250{val=||}) (27 (32 (800{val=options}) (235{val=.}) (802{val=getLanguageIn}) (216{val=()})) (236{val===}) (40{val=LanguageMode.ECMASCRIPT5_STRICT}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=options}) (235{val=.}) (802{val=shouldAmbiguateProperties}) (216{val=()})) (249{val=&&}) (36 (214{val=(}) (27 (40{val=options.propertyRenaming}) (236{val===}) (40{val=PropertyRenamingPolicy.ALL_UNQUOTED})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=ambiguateProperties}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=CrossModuleReferenceCollector})) (59 (800{val=collector}) (204{val==}) (14 (304{val=new}) (43 (801{val=CrossModuleReferenceCollector})) (214{val=(}) (800{val=compiler}) (234{val=,}) (40{val=CrossModuleReferenceCollector.DO_NOTHING_BEHAVIOR}) (234{val=,}) (14 (304{val=new}) (43 (801{val=Es6SyntacticScopeCreator})) (214{val=(}) (800{val=compiler}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setLanguage}) (214{val=(}) (800{val=ECMASCRIPT_NEXT}) (234{val=,}) (800{val=ECMASCRIPT_NEXT}) (215{val=)})) (227{val=;})) (21 (7 (800{val=behavior}) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=CompilerOptions})) (802{val=setEmitUseStrict}) (214{val=(}) (44 (39{val=boolean}) (800{val=emitUseStrict})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=emitUseStrict})) (204{val==}) (800{val=emitUseStrict})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=builder}) (235{val=.}) (802{val=setTagAsStrict}) (214{val=(}) (27 (800{val=firstOutput}) (249{val=&&}) (32 (802{val=shouldEmitUseStrict}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverse}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=error.description}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=error.description}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverse}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=NodeTraversal})) (59 (800{val=t}) (204{val==}) (14 (304{val=new}) (43 (801{val=NodeTraversal})) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=finder}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NodeTraversal})) (59 (800{val=t}) (204{val==}) (14 (304{val=new}) (43 (801{val=NodeTraversal})) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=reference}) (235{val=.}) (802{val=isName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (27 (800{val=unusedAssignment}) (242{val=!=}) (500{val=null})) (249{val=&&}) (38 (207{val=!}) (800{val=isRead}))) (249{val=&&}) (38 (207{val=!}) (800{val=hasErrors}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=checkForUnusedLocalVar}) (214{val=(}) (800{val=v}) (234{val=,}) (800{val=unusedAssignment}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=options}) (235{val=.}) (802{val=assumeStrictThis}) (216{val=()})) (250{val=||}) (27 (32 (800{val=options}) (235{val=.}) (802{val=getLanguageIn}) (216{val=()})) (236{val===}) (800{val=ECMASCRIPT5_STRICT}))))
(AST_ROOT_SC2NF (60 (43 (801{val=ObjectsBuilder})) (59 (800{val=newObjs}) (204{val==}) (14 (304{val=new}) (43 (801{val=ObjectsBuilder})) (214{val=(}) (40{val=ResolveConflictsBy.MEET}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=RemoveSuperMethodsPassTest}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=DEFAULT_EXTERNS}) (215{val=)}) (227{val=;})) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (61 (350{val=while}) (214{val=(}) (27 (40{val=s.parent}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (802{val=isDefinedLocally}) (214{val=(}) (800{val=varName}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))) (21 (7 (800{val=s}) (204{val==}) (40{val=s.parent})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MaxIterationsExceededException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertEquals}) (214{val=(}) (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=MAX_STEP}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalStateException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertEquals}) (214{val=(}) (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (234{val=,}) (40{val=FixedPointGraphTraversal.NON_HALTING_ERROR_MSG}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=handleConstructorAnnotation}) (214{val=(}) (800{val=functionName}) (234{val=,}) (800{val=funNode}) (234{val=,}) (800{val=constructorType}) (234{val=,}) (800{val=parentClass}) (234{val=,}) (800{val=implementedIntfs}) (234{val=,}) (800{val=registry}) (234{val=,}) (800{val=builder}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (32 (800{val=options}) (235{val=.}) (802{val=assumeStrictThis}) (216{val=()})) (250{val=||}) (32 (800{val=options}) (235{val=.}) (802{val=isStrictModeInput}) (216{val=()}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=handleConstructorAnnotation}) (214{val=(}) (800{val=functionName}) (234{val=,}) (800{val=funNode}) (234{val=,}) (800{val=constructorType}) (234{val=,}) (800{val=parentClass}) (234{val=,}) (800{val=implementedIntfs}) (234{val=,}) (800{val=builder}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=COULD_NOT_DESERIALIZE_AST}) (234{val=,}) (800{val=filename}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=options}) (235{val=.}) (802{val=assumeStrictThis}) (216{val=()})) (250{val=||}) (27 (32 (800{val=options}) (235{val=.}) (802{val=getLanguageIn}) (216{val=()})) (236{val===}) (800{val=ECMASCRIPT5_STRICT}))))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isValidQualifiedName}) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getLanguageMode}) (216{val=()})) (234{val=,}) (800{val=name}) (215{val=)}))))
(AST_ROOT_SC2NF (27 (32 (800{val=key}) (235{val=.}) (802{val=isStringKey}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=key}) (235{val=.}) (802{val=isQuotedString}) (216{val=()}))) (249{val=&&}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isValidPropertyName}) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getLanguageMode}) (216{val=()})) (234{val=,}) (32 (800{val=key}) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=CompilerOptions})) (802{val=setStrictModeInput}) (214{val=(}) (44 (39{val=boolean}) (800{val=isStrictModeInput})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=isStrictModeInput})) (204{val==}) (800{val=isStrictModeInput})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (40{val=Config.StrictMode})) (59 (800{val=strictMode}) (204{val==}) (16 (32 (802{val=expectStrictModeInput}) (216{val=()})) (233{val=?}) (40{val=Config.StrictMode.STRICT}) (226{val=:}) (40{val=Config.StrictMode.SLOPPY}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=expectStrictModeInput}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=options}) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.ES5_STRICT}) (234{val=,}) (40{val=CheckLevel.ERROR}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=InlineFunctions})) (214{val=(}) (800{val=compiler}) (234{val=,}) (32 (800{val=compiler}) (235{val=.}) (802{val=getUniqueNameIdSupplier}) (216{val=()})) (234{val=,}) (40{val=options.inlineFunctions}) (234{val=,}) (40{val=options.inlineLocalFunctions}) (234{val=,}) (9{val=true}) (234{val=,}) (27 (32 (800{val=options}) (235{val=.}) (802{val=assumeStrictThis}) (216{val=()})) (250{val=||}) (32 (800{val=options}) (235{val=.}) (802{val=isStrictModeInput}) (216{val=()}))) (234{val=,}) (40{val=options.assumeClosuresOnlyCaptureReferences}) (234{val=,}) (40{val=options.maxFunctionSizeAfterInlining}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isValidQualifiedName}) (214{val=(}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=getLanguageOut}) (216{val=()})) (234{val=,}) (800{val=name}) (215{val=)}))))
(AST_ROOT_SC2NF (32 (800{val=Pattern}) (235{val=.}) (802{val=compile}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isValidQualifiedName}) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getLanguageMode}) (216{val=()})) (234{val=,}) (800{val=name}) (215{val=)}))))
(AST_ROOT_SC2NF (27 (32 (800{val=key}) (235{val=.}) (802{val=isStringKey}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=key}) (235{val=.}) (802{val=isQuotedString}) (216{val=()}))) (249{val=&&}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isValidPropertyName}) (214{val=(}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=getLanguageOut}) (216{val=()})) (234{val=,}) (32 (800{val=key}) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)}))))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=finalMessage}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=message}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=number}) (200{val=+}) (36 (214{val=(}) (16 (800{val=unsupported}) (233{val=?}) (45{val=STRING_CONSTANT}) (226{val=:}) (45{val=STRING_CONSTANT})) (215{val=)})) (200{val=+}) (36 (214{val=(}) (16 (800{val=es6Modules}) (233{val=?}) (45{val=STRING_CONSTANT}) (226{val=:}) (45{val=STRING_CONSTANT})) (215{val=)})) (200{val=+}) (36 (214{val=(}) (16 (800{val=typeScript}) (233{val=?}) (45{val=STRING_CONSTANT}) (226{val=:}) (45{val=STRING_CONSTANT})) (215{val=)})) (200{val=+}) (45{val=STRING_CONSTANT})))
(AST_ROOT_SC2NF (27 (22 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=FeatureSet})) (215{val=)}) (800{val=other})) (215{val=)})) (235{val=.}) (800{val=unsupported})) (236{val===}) (800{val=unsupported})))
(AST_ROOT_SC2NF (27 (27 (22 (315{val=this}) (235{val=.}) (800{val=number})) (251{val=>=}) (40{val=other.number})) (249{val=&&}) (36 (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=unsupported})) (250{val=||}) (38 (207{val=!}) (40{val=other.unsupported}))) (215{val=)}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=String})) (802{val=toString}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=appendTo}) (214{val=(}) (14 (304{val=new}) (43 (801{val=StringBuilder})) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=toString}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=String})) (802{val=toString}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=appendTo}) (214{val=(}) (14 (304{val=new}) (43 (801{val=StringBuilder})) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=toString}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=String})) (802{val=toString}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=appendTo}) (214{val=(}) (14 (304{val=new}) (43 (801{val=StringBuilder})) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=toString}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=mockToString}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (45{val=STRING_CONSTANT}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (32 (802{val=appendTo}) (214{val=(}) (14 (304{val=new}) (43 (801{val=StringBuilder})) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=toString}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=String})) (802{val=toString}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=appendTo}) (214{val=(}) (14 (304{val=new}) (43 (801{val=StringBuilder})) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=toString}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=parent}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=assignNode}) (234{val=,}) (32 (32 (800{val=assignNode}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=builder}) (235{val=.}) (802{val=append}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=MemoizedScopeCreator})) (800{val=scopeCreator})))
(AST_ROOT_SC2NF (31 (43 (801{val=MemoizedScopeCreator})) (802{val=getTypedScopeCreator}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=typedScopeCreator}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=typedScopeCreator}) (204{val==}) (14 (304{val=new}) (43 (801{val=MemoizedScopeCreator})) (214{val=(}) (800{val=internalScopeCreator}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=scopeCreator}) (204{val==}) (14 (304{val=new}) (43 (801{val=MemoizedScopeCreator})) (214{val=(}) (14 (304{val=new}) (43 (801{val=TypedScopeCreator})) (214{val=(}) (800{val=compiler}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=MemoizedScopeCreator})) (800{val=scopeCreator})))
(AST_ROOT_SC2NF (60 (43 (801{val=MemoizedScopeCreator})) (59 (800{val=typedScopeCreator}) (204{val==}) (32 (802{val=getTypedScopeCreator}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=foundNodes}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=name}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=names})) (204{val==}) (800{val=names})) (227{val=;})) (21 (7 (800{val=foundNodes}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (40{val=inputs.length}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=SourceFile})) (231{val=>})) (59 (800{val=externsInputs}) (204{val==}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (32 (800{val=SourceFile}) (235{val=.}) (802{val=fromCode}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=externs}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=expected}) (234{val=,}) (800{val=error}) (234{val=,}) (800{val=warning}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=RuntimeTypeCheckTest}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}) (227{val=;})) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=validateEs6TypedFeature}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=validateEs6TypedFeature}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (802{val=validateNodeType}) (214{val=(}) (40{val=Token.DECLARE}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (802{val=validateAmbientDeclarationHelper}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=validateEs6TypedFeature}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (802{val=validateNodeType}) (214{val=(}) (40{val=Token.TYPE_ALIAS}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (802{val=validateChildCount}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=validateEs6Feature}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=validateEs6Feature}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=validateEs6TypedFeature}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=validateEs6Feature}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=validateEs6Feature}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=validateEs6Feature}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=validateEs6Feature}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (802{val=validateNodeType}) (214{val=(}) (40{val=Token.AWAIT}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (802{val=validateWithinAsyncFunction}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=validateEs6Feature}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageMode}) (204{val==}) (32 (800{val=options}) (235{val=.}) (802{val=getLanguageIn}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=languageMode})) (204{val==}) (32 (800{val=options}) (235{val=.}) (802{val=getLanguageIn}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Compiler})) (59 (800{val=compiler}) (204{val==}) (14 (304{val=new}) (43 (801{val=Compiler})) (216{val=()}))) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=setLanguageMode}) (214{val=(}) (800{val=acceptedLanguage}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=compiler}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (40{val=options.skipNonTranspilationPasses}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=whitespaceOnlyPasses}) (216{val=()})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (32 (800{val=options}) (235{val=.}) (802{val=lowerFromEs6}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=transpileAndDontCheck}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (802{val=check}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=lowerFromEs6}) (216{val=()})))
(AST_ROOT_SC2NF (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=lowerFromEs6}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=root2}) (204{val==}) (32 (800{val=compiler}) (235{val=.}) (802{val=parseSyntheticCode}) (214{val=(}) (800{val=source}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=options.dartPass}) (249{val=&&}) (38 (207{val=!}) (32 (32 (800{val=options}) (235{val=.}) (802{val=getLanguageOut}) (216{val=()})) (235{val=.}) (802{val=isEs6OrHigher}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=checks}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=dartSuperAccessorsPass}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (40{val=options.rewritePolyfills}) (204{val==}) (27 (40{val=flags.rewritePolyfills}) (249{val=&&}) (32 (32 (800{val=options}) (235{val=.}) (802{val=getLanguageIn}) (216{val=()})) (235{val=.}) (802{val=isEs6OrHigher}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=replaceNode}) (214{val=(}) (32 (800{val=minCond}) (235{val=.}) (802{val=getPlaceholder}) (216{val=()})) (234{val=,}) (32 (800{val=minCond}) (235{val=.}) (802{val=getMinimized}) (214{val=(}) (40{val=MinimizationStyle.PREFER_UNNEGATED}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=int}) (800{val=precedence})))
(AST_ROOT_SC2NF (21 (32 (802{val=expectFeatures}) (214{val=(}) (40{val=Feature.DESTRUCTURING}) (234{val=,}) (40{val=Feature.REST_PARAMETERS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=script}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=isScriptEs6ImplOrHigher}) (214{val=(}) (800{val=script}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (32 (802{val=isScriptEs6ImplOrHigher}) (214{val=(}) (800{val=scriptRoot}) (215{val=)})))
(AST_ROOT_SC2NF (32 (802{val=isScriptEs6ImplOrHigher}) (214{val=(}) (800{val=singleRoot}) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (802{val=isScriptEs6ImplOrHigher}) (214{val=(}) (800{val=scriptRoot}) (215{val=)})) (215{val=)}) (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Callback})) (800{val=callback})) (226{val=:}) (800{val=callbacks}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (800{val=callback}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (802{val=isScriptEs6ImplOrHigher}) (214{val=(}) (800{val=singleRoot}) (215{val=)})) (215{val=)}) (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Callback})) (800{val=callback})) (226{val=:}) (800{val=callbacks}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=singleRoot}) (234{val=,}) (800{val=callback}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (800{val=forTranspileOnly})) (250{val=||}) (36 (214{val=(}) (27 (32 (32 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=getLanguageIn}) (216{val=()})) (235{val=.}) (802{val=toFeatureSet}) (216{val=()})) (235{val=.}) (802{val=contains}) (214{val=(}) (40{val=FeatureSet.ES6}) (215{val=)})) (249{val=&&}) (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=isScriptEs6ImplOrHigher}) (214{val=(}) (800{val=scriptRoot}) (215{val=)}))) (215{val=)}))))
(AST_ROOT_SC2NF (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=singleRoot})) (226{val=:}) (32 (800{val=root}) (235{val=.}) (802{val=children}) (216{val=()})) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=isScriptEs6ImplOrHigher}) (214{val=(}) (800{val=singleRoot}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (800{val=isConst}) (249{val=&&}) (38 (207{val=!}) (32 (802{val=hasAnnotatedType}) (214{val=(}) (800{val=jsdoc}) (215{val=)}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isNamespaceDecl}) (214{val=(}) (800{val=nameNode}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=rhs}) (235{val=.}) (802{val=replaceWith}) (214{val=(}) (32 (32 (800{val=IR}) (235{val=.}) (802{val=cast}) (214{val=(}) (32 (800{val=IR}) (235{val=.}) (802{val=number}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=getQmarkTypeJSDoc}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=srcrefTree}) (214{val=(}) (800{val=rhs}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (14 (304{val=new}) (43 (801{val=ProcessEs6Modules})) (214{val=(}) (315{val=this}) (215{val=)})) (235{val=.}) (802{val=processFile}) (214{val=(}) (800{val=root}) (234{val=,}) (800{val=forceRewrite}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=stage1Passes}) (216{val=()})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=compiler}) (235{val=.}) (802{val=hasErrors}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=stage2Passes}) (216{val=()})) (227{val=;})) (219{val=}}))) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=completeCompilation}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=restoreState}) (214{val=(}) (800{val=serializedInputStream}) (215{val=)})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=compiler}) (235{val=.}) (802{val=hasErrors}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=stage2Passes}) (216{val=()})) (227{val=;})) (219{val=}}))) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=completeCompilation}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=completeCompilation}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=completeCompilation}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getFeatureSet}) (216{val=()})) (235{val=.}) (802{val=contains}) (214{val=(}) (800{val=feature}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=violation}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=feature})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (32 (800{val=factory}) (235{val=.}) (802{val=getFeatures}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (800{val=LanguageMode})) (800{val=mode})) (226{val=:}) (32 (800{val=LanguageMode}) (235{val=.}) (802{val=values}) (216{val=()})) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (40{val=mode.featureSet}) (235{val=.}) (802{val=contains}) (214{val=(}) (800{val=feature}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=mode}) (227{val=;})) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=FeatureSet.TYPESCRIPT}) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (22 (32 (802{val=nextToken}) (216{val=()})) (235{val=.}) (800{val=type})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.DESTRUCTURING}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.DESTRUCTURING}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.ARRAY_PATTERN_REST}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.DESTRUCTURING}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.NEW_TARGET}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.EXPONENT_OP}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.ARROW_FUNCTIONS}) (215{val=)})) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.ASYNC_FUNCTIONS}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.ARROW_FUNCTIONS}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (40{val=TokenType.STAR_STAR_EQUAL}) (235{val=.}) (802{val=equals}) (214{val=(}) (40{val=operator.type}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.EXPONENT_OP}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.TRAILING_COMMA}) (215{val=)}))) (227{val=;})) (25 (313{val=if}) (214{val=(}) (40{val=config.warnTrailingCommas}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=errorReporter}) (235{val=.}) (802{val=reportWarning}) (214{val=(}) (40{val=commaToken.location.start}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.REST_PARAMETERS}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.DEFAULT_PARAMETERS}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.ASYNC_FUNCTIONS}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.ASYNC_FUNCTIONS}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.ASYNC_FUNCTIONS}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=Keywords}) (235{val=.}) (802{val=isKeyword}) (214{val=(}) (40{val=name.value}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.KEYWORDS_AS_PROPERTIES}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=expectedFeatures}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (40{val=result.features}) (215{val=)})) (235{val=.}) (802{val=isEqualTo}) (214{val=(}) (800{val=expectedFeatures}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=expectedFeatures}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (40{val=result.features}) (215{val=)})) (235{val=.}) (802{val=isEqualTo}) (214{val=(}) (800{val=expectedFeatures}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=expectFeatures}) (214{val=(}) (40{val=Feature.DESTRUCTURING}) (234{val=,}) (40{val=Feature.LET_DECLARATIONS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=expectFeatures}) (214{val=(}) (40{val=Feature.CLASSES}) (234{val=,}) (40{val=Feature.CONST_DECLARATIONS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (40{val=m.featureSet}) (235{val=.}) (802{val=contains}) (214{val=(}) (40{val=Feature.ASYNC_FUNCTIONS}) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (802{val=expectFeatures}) (214{val=(}) (40{val=Feature.DESTRUCTURING}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=expectFeatures}) (214{val=(}) (40{val=Feature.EXTENDED_OBJECT_LITERALS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=featureSet}) (235{val=.}) (802{val=toLanguageModeString}) (216{val=()}))))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.STRING_CONTINUATION}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (800{val=feature}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (800{val=feature}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.SETTER}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.GETTER}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=require}) (214{val=(}) (40{val=Feature.KEYWORDS_AS_PROPERTIES}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (802{val=isValidSimpleName}) (214{val=(}) (800{val=name}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=mode}) (235{val=.}) (802{val=contains}) (214{val=(}) (40{val=Feature.KEYWORDS_AS_PROPERTIES}) (215{val=)})) (249{val=&&}) (32 (800{val=TokenStream}) (235{val=.}) (802{val=isKeyword}) (214{val=(}) (800{val=name}) (215{val=)}))) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=features}) (235{val=.}) (802{val=hasEs6Modules}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (802{val=setFeatureSet}) (214{val=(}) (32 (800{val=featureSet}) (235{val=.}) (802{val=withoutModules}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=JSModule})) (231{val=>})) (800{val=modules})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (802{val=hasConditionalAncestor}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (7 (40{val=info.allowMove}) (204{val==}) (9{val=false})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (31 (43 (801{val=Node})) (802{val=parse}) (214{val=(}) (44 (43 (801{val=String})) (800{val=js})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=parse}) (214{val=(}) (800{val=js}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=root}) (235{val=.}) (802{val=isRoot}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertPrettyPrintSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=String})) (85{val=[]})) (59 (800{val=parts}) (204{val==}) (32 (800{val=path}) (235{val=.}) (802{val=split}) (214{val=(}) (32 (800{val=Pattern}) (235{val=.}) (802{val=quote}) (214{val=(}) (800{val=MODULE_SLASH}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testConstTarget}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=testErrorEs6}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (800{val=POLYMER_INVALID_DECLARATION}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testEs6}) (214{val=(}) (32 (802{val=wrapInFunction}) (214{val=(}) (800{val=original}) (215{val=)})) (234{val=,}) (32 (802{val=wrapInFunction}) (214{val=(}) (800{val=expected}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=fold}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fold}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testGoogScopeClassOutput}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testExportEs6ArrowFunction}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testExportConst}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testExportLet}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testWarningEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=MISPLACED_ANNOTATION}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testWarning}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (800{val=MISPLACED_ANNOTATION}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testWarningEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=MISPLACED_ANNOTATION}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testWarning}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (800{val=MISPLACED_ANNOTATION}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testWarningEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=MISPLACED_ANNOTATION}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testWarning}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (800{val=MISPLACED_ANNOTATION}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testWarningEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=MISPLACED_ANNOTATION}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testWarning}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (800{val=MISPLACED_ANNOTATION}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testWarningEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=MISPLACED_ANNOTATION}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testWarning}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (800{val=MISPLACED_ANNOTATION}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testWarningEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=MISPLACED_ANNOTATION}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testWarning}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (800{val=MISPLACED_ANNOTATION}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testExtractableExport4}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testEs6}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testExtractableExport3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testEs6}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testEs6Class_testMethod}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=private}) (39{val=void}) (802{val=assertNoWarningEs6}) (214{val=(}) (44 (43 (801{val=String})) (800{val=js})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=testSameEs6}) (214{val=(}) (800{val=js}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=private}) (39{val=void}) (802{val=assertAmbiguousEs6}) (214{val=(}) (44 (43 (801{val=String})) (800{val=js})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=testSameEs6}) (214{val=(}) (800{val=js}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testAliasInModule}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=enableUnusedLocalAssignmentCheck}) (204{val==}) (9{val=true})) (227{val=;})) (21 (32 (802{val=testSameEs6}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testSameEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=injectNamespace}) (204{val==}) (9{val=false})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testDuplicate_destructuring}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testWarningEs6}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (800{val=DUPLICATE_REQUIRE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testDuplicate_shorthand}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testWarningEs6}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (800{val=DUPLICATE_REQUIRE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testWarningEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=UNUSED_LABEL}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSameEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testErrorEs6}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (40{val=ReplaceIdGenerators.CONDITIONAL_ID_GENERATOR_CALL}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testClass}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSameEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (40{val=ReplaceIdGenerators.INVALID_GENERATOR_PARAMETER}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testPassModule}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSameEs6}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=mode}) (204{val==}) (40{val=CheckRequiresForConstructors.Mode.FULL_COMPILE})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testGoogModuleWithEmptyDestructuringRequire}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testErrorEs6}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (800{val=EXTRA_REQUIRE_WARNING}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testRemovalMultipleAssignment3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testRemovalMultipleAssignment2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testRemoveRepeatedProperties}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testRemoveUnnecessaryBodies}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testConstPropagationPrivateProperties2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testEs6}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testConstructorAlias4}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSameEs6}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testConstructorAlias3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSameEs6}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testPathologicalCaseThatsOkAnyway}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (800{val=NAME_DEFINED_LATE_WARNING}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNullUndefined}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (800{val=TYPE_MISMATCH_WARNING}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertMismatches}) (214{val=(}) (32 (800{val=Collections}) (235{val=.}) (230{val=<}) (43 (800{val=TypeMismatch})) (231{val=>}) (802{val=emptyList}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (800{val=TYPE_MISMATCH_WARNING}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (800{val=TYPE_MISMATCH_WARNING}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=TYPE_MISMATCH_WARNING}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertMismatches}) (214{val=(}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (32 (802{val=fromNatives}) (214{val=(}) (800{val=STRING_TYPE}) (234{val=,}) (800{val=NUMBER_TYPE}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=params}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=arguments}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (800{val=type}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (800{val=fooDfn}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (800{val=WRONG_ARGUMENT_COUNT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (800{val=declarations}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=CheckConformance.CONFORMANCE_VIOLATION}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=CheckConformance.CONFORMANCE_VIOLATION}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (32 (802{val=findNameType}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=globalScope}) (215{val=)})) (235{val=.}) (802{val=toString}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (32 (802{val=findNameType}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=globalScope}) (215{val=)})) (235{val=.}) (802{val=toString}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testBadObjectLiteralCast1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=ClosureCodingConvention.OBJECTLIT_EXPECTED}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=RhinoErrorReporter.UNRECOGNIZED_TYPE_ERROR}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=RhinoErrorReporter.UNRECOGNIZED_TYPE_ERROR}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (38 (207{val=!}) (800{val=found})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (32 (802{val=config}) (214{val=(}) (32 (802{val=rule}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=typedefExterns}) (234{val=,}) (800{val=code}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (32 (802{val=config}) (214{val=(}) (32 (802{val=rule}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (802{val=value}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCustomBanUnknownThisProp2}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (32 (802{val=config}) (214{val=(}) (32 (802{val=rule}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCustomRestrictThrow2}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=allowSourcelessWarnings}) (216{val=()})) (227{val=;})) (21 (7 (800{val=configuration}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (800{val=EXTERNS}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (800{val=code}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (800{val=code}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=testConformance}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=CheckConformance.CONFORMANCE_VIOLATION}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=CheckConformance.CONFORMANCE_VIOLATION}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (32 (800{val=SourceFile}) (235{val=.}) (802{val=fromCode}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=input}) (234{val=,}) (800{val=input}) (234{val=,}) (500{val=null}) (234{val=,}) (40{val=CheckConformance.CONFORMANCE_VIOLATION}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (32 (800{val=SourceFile}) (235{val=.}) (802{val=fromCode}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testViolationWhitelisted2}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testViolationWhitelisted1}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNotViolation2}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=ConvertToTypedInterface.CONSTANT_WITHOUT_EXPLICIT_TYPE}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=ConvertToTypedInterface.CONSTANT_WITHOUT_EXPLICIT_TYPE}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (802{val=testTypes}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testTypes}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (802{val=testTypes}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (32 (802{val=testTypes}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (44 (43 (801{val=NodeTraversal})) (800{val=t})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=export}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjLit}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertUnreachable}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=options}) (235{val=.}) (802{val=needsTranspilationFrom}) (214{val=(}) (40{val=FeatureSet.ES6}) (215{val=)})) (249{val=&&}) (38 (207{val=!}) (40{val=options.skipTranspilationAndCrash}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=checks}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=convertStaticInheritance}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IOException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (40{val=AbstractCompiler.READ_ERROR}) (234{val=,}) (32 (800{val=input}) (235{val=.}) (802{val=getName}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=defUse}) (204{val==}) (14 (304{val=new}) (43 (801{val=MustBeReachingVariableDef})) (214{val=(}) (800{val=cfg}) (234{val=,}) (800{val=scope}) (234{val=,}) (800{val=compiler}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=useDef}) (204{val==}) (14 (304{val=new}) (43 (801{val=MaybeReachingVariableUse})) (214{val=(}) (800{val=cfg}) (234{val=,}) (800{val=scope}) (234{val=,}) (800{val=compiler}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=liveness}) (204{val==}) (14 (304{val=new}) (43 (801{val=LiveVariablesAnalysis})) (214{val=(}) (800{val=cfg}) (234{val=,}) (800{val=functionScope}) (234{val=,}) (800{val=compiler}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=LiveVariablesAnalysis})) (59 (800{val=liveness}) (204{val==}) (14 (304{val=new}) (43 (801{val=LiveVariablesAnalysis})) (214{val=(}) (800{val=cfg}) (234{val=,}) (800{val=scope}) (234{val=,}) (800{val=compiler}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectDestructuringDefaultValsDoesntCrash}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectDestructuringAssignNewVarNamesDoesntCrash}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectDestructuringAssignWithoutDeclarationDoesntCrash}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectDestructuringBasicAssignDoesntCrash}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArrayDestructuringVarAssignDoesntCrash}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArrayDestructuringSwapDoesntCrash}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (14 (304{val=new}) (74 (43 (801{val=GraphReachability})) (232{val=<>})) (214{val=(}) (800{val=controlFlowGraph}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ReachablePredicate})) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=compute}) (214{val=(}) (32 (32 (800{val=controlFlowGraph}) (235{val=.}) (802{val=getEntry}) (216{val=()})) (235{val=.}) (802{val=getValue}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=inheritsCall}) (235{val=.}) (802{val=useSourceInfoIfMissingFromForTree}) (214{val=(}) (800{val=classNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=lp}) (204{val==}) (32 (32 (800{val=scope}) (235{val=.}) (802{val=getRootNode}) (216{val=()})) (235{val=.}) (802{val=getSecondChild}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=cssNames}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=cssNames}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=cssNames}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (800{val=IOException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=COULD_NOT_DESERIALIZE_AST}) (234{val=,}) (800{val=filename}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=RuntimeTypeCheckTest}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}) (227{val=;})) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=disableMultistageCompilation}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArguments}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testConsts}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=peepholePass}) (235{val=.}) (802{val=setRetraverseOnChange}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testIssue}) (216{val=()}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=allowExternsChanges}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=RemoveUnusedClassPropertiesTest}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=EXTERNS}) (215{val=)}) (227{val=;})) (21 (32 (802{val=enableGatherExternProperties}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=allowExternsChanges}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testProvideInExterns}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=allowExternsChanges}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=runTypeCheckAfterProcessing}) (204{val==}) (9{val=true})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=runTypeCheckAfterProcessing}) (204{val==}) (9{val=true})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=runTypeCheckAfterProcessing}) (204{val==}) (9{val=true})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=runTypeCheckAfterProcessing}) (204{val==}) (9{val=true})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=runTypeCheckAfterProcessing}) (204{val==}) (9{val=true})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=runTypeCheckAfterProcessing}) (204{val==}) (9{val=true})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=allowExternsChanges}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=allowExternsChanges}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=allowExternsChanges}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=allowExternsChanges}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=allowExternsChanges}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=transpileEnabled}) (249{val=&&}) (800{val=transpileExpected}) (249{val=&&}) (38 (207{val=!}) (32 (800{val=compiler}) (235{val=.}) (802{val=hasErrors}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=transpileToEs5}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=externsRoot}) (234{val=,}) (800{val=mainRoot}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=String})) (802{val=getFilename}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=filename}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=J2clCheckPassTest}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=DEFAULT_EXTERNS}) (215{val=)}) (227{val=;})) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=enableCheckAccessControls}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=enableCheckAccessControls}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=GatherRawExportsTest}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=EXTERNS}) (215{val=)}) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (21 (7 (800{val=runTypeCheckAfterProcessing}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=compareJsDoc}) (204{val==}) (9{val=false})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (7 (800{val=useGoogleCodingConvention}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=RemoveUnusedVarsTest}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}) (227{val=;})) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testEs6ONoEs6}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=allowExternsChanges}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Es6ExternsCheckTest}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=EXTERNS_BASE}) (215{val=)}) (227{val=;})) (21 (32 (802{val=allowSourcelessWarnings}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=allowExternsChanges}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=POSSIBLE_INEXISTENT_PROPERTY}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=declarationCheck}) (204{val==}) (38 (207{val=!}) (800{val=sanityCheck}))) (227{val=;})) (21 (32 (315{val=this}) (235{val=.}) (802{val=enableCompareAsTree}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testExternChanges}) (214{val=(}) (800{val=extern}) (234{val=,}) (800{val=input}) (234{val=,}) (800{val=expectedExtern}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (48 (349{val=super}) (235{val=.}) (802{val=allowExternsChanges}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=ProcessDefinesTest}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (27 (800{val=DEFAULT_EXTERNS}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}) (227{val=;})) (21 (32 (802{val=allowSourcelessWarnings}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=runSmartNameRemoval}) (204{val==}) (9{val=true})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=allowExternsChanges}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})) (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=code}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testExternChanges}) (214{val=(}) (800{val=code}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=allowExternsChanges}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=allowExternsChanges}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})) (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=code}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testExternChanges}) (214{val=(}) (800{val=code}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=allowExternsChanges}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})) (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=code}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testExternChanges}) (214{val=(}) (800{val=code}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=allowExternsChanges}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})) (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=code}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testExternChanges}) (214{val=(}) (800{val=code}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=allowExternsChanges}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})) (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=code}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testExternChanges}) (214{val=(}) (800{val=code}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=allowExternsChanges}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})) (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=code}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testExternChanges}) (214{val=(}) (800{val=code}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (315{val=this}) (235{val=.}) (802{val=enableCompareAsTree}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=testExternChanges}) (214{val=(}) (800{val=input}) (234{val=,}) (800{val=expectedExtern}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=validateAstChangeMarking}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=RuntimeTypeCheckTest}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}) (227{val=;})) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=value}) (204{val==}) (32 (32 (800{val=key}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=detachFromParent}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=assign}) (204{val==}) (32 (800{val=IR}) (235{val=.}) (800{val=assign}) (214{val=(}) (800{val=windowPropAccess}) (234{val=,}) (32 (32 (800{val=nameNode}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=detachFromParent}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_NEXT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setLanguageOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT3}) (215{val=)})) (227{val=;})) (21 (32 (802{val=enableRunTypeCheckAfterProcessing}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=protected}) (43 (800{val=FeatureSet})) (802{val=featureSet}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FeatureSet}) (235{val=.}) (802{val=latest}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=binaryNamespaceName}) (235{val=.}) (802{val=putProp}) (214{val=(}) (40{val=Node.ORIGINALNAME_PROP}) (234{val=,}) (40{val=currentScript.legacyNamespace}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=binaryNamespaceName}) (235{val=.}) (802{val=putProp}) (214{val=(}) (40{val=Node.ORIGINALNAME_PROP}) (234{val=,}) (40{val=currentScript.legacyNamespace}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=exportedNamespaceName}) (235{val=.}) (802{val=putProp}) (214{val=(}) (40{val=Node.ORIGINALNAME_PROP}) (234{val=,}) (800{val=legacyNamespace}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=binaryNamespaceName}) (235{val=.}) (802{val=putProp}) (214{val=(}) (40{val=Node.ORIGINALNAME_PROP}) (234{val=,}) (800{val=legacyNamespace}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=initializer}) (204{val==}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=detach}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=extern}) (204{val==}) (32 (32 (800{val=externs}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=detach}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2017}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=protected}) (43 (800{val=FeatureSet})) (802{val=featureSet}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (40{val=FeatureSet.ES5}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2016}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setLanguageOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT3}) (215{val=)})) (227{val=;})) (21 (32 (802{val=enableRunTypeCheckAfterProcessing}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testModules}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=input}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=expected})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isArrayPattern}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=validateArrayPattern}) (214{val=(}) (40{val=Token.CATCH}) (234{val=,}) (800{val=caught}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (802{val=validateObjectPattern}) (214{val=(}) (40{val=Token.CATCH}) (234{val=,}) (800{val=caught}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=options}) (234{val=,}) (800{val=source}) (234{val=,}) (40{val=ConstParamCheck.CONST_NOT_ASSIGNED_STRING_LITERAL_ERROR}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNotStringLiteralConstantArgument3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testError}) (214{val=(}) (27 (800{val=CLOSURE_DEFS}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=ConstParamCheck.CONST_NOT_ASSIGNED_STRING_LITERAL_ERROR}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNotStringLiteralConstantArgument2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testError}) (214{val=(}) (27 (800{val=CLOSURE_DEFS}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=ConstParamCheck.CONST_NOT_ASSIGNED_STRING_LITERAL_ERROR}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNotStringLiteralConstantArgument1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testError}) (214{val=(}) (27 (800{val=CLOSURE_DEFS}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=ConstParamCheck.CONST_NOT_ASSIGNED_STRING_LITERAL_ERROR}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNotConstantArgument}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testError}) (214{val=(}) (27 (800{val=CLOSURE_DEFS}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=ConstParamCheck.CONST_NOT_ASSIGNED_STRING_LITERAL_ERROR}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (27 (800{val=shadowedVar}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=shadowedVar}) (235{val=.}) (802{val=isLocal}) (216{val=()}))))
(AST_ROOT_SC2NF (27 (27 (800{val=shadowedVar}) (242{val=!=}) (500{val=null})) (249{val=&&}) (38 (207{val=!}) (32 (32 (800{val=shadowedVar}) (235{val=.}) (802{val=getScope}) (216{val=()})) (235{val=.}) (802{val=isModuleScope}) (216{val=()})))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=redeclarationHandler})) (204{val==}) (14 (304{val=new}) (43 (801{val=DefaultRedeclarationHandler})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (802{val=ScopeScanner}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (234{val=,}) (44 (43 (801{val=Scope})) (800{val=scope})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=compiler}) (234{val=,}) (40{val=SyntacticScopeCreator.DEFAULT_REDECLARATION_HANDLER}) (234{val=,}) (800{val=scope}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Es6SyntacticScopeCreator}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (234{val=,}) (44 (43 (801{val=ScopeFactory})) (800{val=scopeFactory})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=compiler}) (234{val=,}) (40{val=SyntacticScopeCreator.DEFAULT_REDECLARATION_HANDLER}) (234{val=,}) (800{val=scopeFactory}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=count}) (204{val==}) (27 (40{val=RandomNameGenerator.FIRST_CHAR.length}) (202{val=*}) (36 (214{val=(}) (27 (40{val=RandomNameGenerator.NONFIRST_CHAR.length}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=count}) (204{val==}) (27 (40{val=RandomNameGenerator.FIRST_CHAR.length}) (202{val=*}) (36 (214{val=(}) (27 (40{val=RandomNameGenerator.NONFIRST_CHAR.length}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=random})) (204{val==}) (800{val=random})) (227{val=;})) (21 (32 (802{val=reset}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=HashSet})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (32 (32 (800{val=var}) (235{val=.}) (802{val=getParentNode}) (216{val=()})) (235{val=.}) (802{val=isVar}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (32 (32 (800{val=var}) (235{val=.}) (802{val=getParentNode}) (216{val=()})) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isForIn}) (216{val=()})))))
(AST_ROOT_SC2NF (60 (43 (801{val=Scope})) (59 (800{val=scope}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=Es6SyntacticScopeCreator})) (214{val=(}) (800{val=compiler}) (215{val=)})) (235{val=.}) (802{val=createScope}) (214{val=(}) (800{val=root}) (234{val=,}) (500{val=null}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=RemoveNonDeclarations})) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Assign})) (800{val=assign})) (226{val=:}) (32 (800{val=assignsByVar}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=var}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportChangeToEnclosingScope}) (214{val=(}) (40{val=assign.assignNode}) (215{val=)})) (227{val=;})) (21 (32 (800{val=assign}) (235{val=.}) (802{val=remove}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=changeProxy})) (204{val==}) (14 (304{val=new}) (43 (801{val=AstChangeProxy})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=map}) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=externsRoot}) (242{val=!=}) (500{val=null})) (249{val=&&}) (27 (800{val=n}) (236{val===}) (800{val=externsRoot}))) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=externsScope}) (204{val==}) (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_NEXT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=protected}) (43 (800{val=FeatureSet})) (802{val=featureSet}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FeatureSet}) (235{val=.}) (802{val=latest}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setLanguageOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT3}) (215{val=)})) (227{val=;})) (21 (32 (802{val=enableRunTypeCheckAfterProcessing}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (40{val=options.chromePass}) (204{val==}) (40{val=flags.chromePass})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (40{val=options.chromePass}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=checks}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=chromePass}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=protected}) (43 (800{val=FeatureSet})) (802{val=featureSet}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (40{val=FeatureSet.ES5}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2017}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2016}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setLanguageOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT3}) (215{val=)})) (227{val=;})) (21 (32 (802{val=enableRunTypeCheckAfterProcessing}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=NormalizeStatements}) (235{val=.}) (802{val=maybeNormalizeFunctionDeclaration}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=maybeNormalizeFunctionDeclaration}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=compiler}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=reportCodeChange}) (214{val=(}) (800{val=n}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (40{val=Es6TypedToEs6Converter.CANNOT_CONVERT_BOUNDED_GENERICS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=modules}) (234{val=,}) (800{val=expected}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=warning}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=js}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (800{val=modules}) (234{val=,}) (800{val=expected}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertNotNull}) (214{val=(}) (800{val=warning}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (800{val=js}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=warning}) (234{val=,}) (800{val=description}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=expected}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (234{val=,}) (11 (214{val=(}) (43 (800{val=String})) (215{val=)}) (500{val=null})) (234{val=,}) (500{val=null}) (234{val=,}) (40{val=ConstCheck.CONST_REASSIGNED_VALUE_ERROR}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (234{val=,}) (800{val=js}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (27 (800{val=kExterns}) (200{val=+}) (800{val=extraExterns})) (234{val=,}) (800{val=source}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=noSideEffectCalls}) (215{val=)})) (227{val=;})) (21 (32 (800{val=noSideEffectCalls}) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testIssue2508576_1}) (216{val=()}) (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=externs}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testExternFunction}) (216{val=()}) (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=externs}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectLitExtern}) (216{val=()}) (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=externs}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testJSDocDescInExterns}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=MISPLACED_MSG_ANNOTATION}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testEnum}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testErrorExterns}) (214{val=(}) (27 (800{val=jsdoc}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testProvideInExterns}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=allowExternsChanges}) (216{val=()})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=createModuleStar}) (214{val=(}) (800{val=moduleInputs}) (215{val=)})) (234{val=,}) (800{val=expected}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (800{val=js}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=fieldTypes}) (234{val=,}) (32 (802{val=mapToString}) (214{val=(}) (32 (800{val=lastPass}) (235{val=.}) (802{val=getRenamedTypesForTesting}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (27 (800{val=DEFAULT_EXTERNS}) (200{val=+}) (800{val=externs})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testSkipNativeFunctionMethod}) (216{val=()}) (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=js}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=js}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (800{val=code}) (234{val=,}) (32 (802{val=addLibraries}) (214{val=(}) (800{val=code}) (234{val=,}) (800{val=libraries}) (215{val=)})) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=warning}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testGlobalAliasWithProperties5}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=test}) (235{val=.}) (800{val=test}) (214{val=(}) (800{val=inputs}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=error}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=currentLocationAbstractionIdentifier}) (204{val==}) (800{val=locationAbstractionIdentifier})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=SHARED_EXTERNS}) (234{val=,}) (800{val=js}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (21 (7 (800{val=currentJsRoot}) (204{val==}) (22 (32 (802{val=getLastCompiler}) (216{val=()})) (235{val=.}) (800{val=jsRoot}))) (227{val=;})) (41 (329{val=return}) (800{val=currentAnalysis}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=js}) (234{val=,}) (500{val=null}) (234{val=,}) (40{val=VarCheck.VAR_MULTIPLY_DECLARED_ERROR}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=message}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=js}) (234{val=,}) (500{val=null}) (234{val=,}) (40{val=VarCheck.VAR_MULTIPLY_DECLARED_ERROR}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=message}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=externs}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=code}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=externs}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=code}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (234{val=,}) (800{val=js}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (234{val=,}) (800{val=js}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (32 (800{val=ImmutableSet}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=properties}) (215{val=)})) (234{val=,}) (32 (32 (802{val=getLastCompiler}) (216{val=()})) (235{val=.}) (802{val=getExternProperties}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=tester}) (235{val=.}) (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (234{val=,}) (800{val=js}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (234{val=,}) (800{val=js}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (234{val=,}) (800{val=js}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (234{val=,}) (800{val=js}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (234{val=,}) (800{val=js}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (234{val=,}) (800{val=js}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (234{val=,}) (800{val=js}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=ALL_NATIVE_EXTERN_TYPES}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=METHOD_DEFS}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=OBJECT_EXTERNS}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=OBJECT_EXTERNS}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (40{val=ConvertToTypedInterface.CONSTANT_WITHOUT_EXPLICIT_TYPE}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (40{val=ConvertToTypedInterface.CONSTANT_WITHOUT_EXPLICIT_TYPE}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=source}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=found}) (215{val=)})) (227{val=;})) (21 (32 (800{val=found}) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (800{val=lang}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (800{val=code}) (234{val=,}) (800{val=expected}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=warning}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=googModule}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=MISSING_MODULE_OR_PROVIDE}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=warning}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testRenameWithExterns1}) (216{val=()}) (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=externs}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (800{val=externs}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=js}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=MISSING_PROVIDE_WARNING}) (234{val=,}) (800{val=warning}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=js}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=MISSING_PROVIDE_WARNING}) (234{val=,}) (800{val=warning}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=js}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=MISSING_PROVIDE_WARNING}) (234{val=,}) (800{val=warning}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=input}) (234{val=,}) (800{val=expected}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=externs}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=externs}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testRenameWithExterns2}) (216{val=()}) (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=externs}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (800{val=externs}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testRenameWithExterns1}) (216{val=()}) (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=externs}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (800{val=externs}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=overrides}) (235{val=.}) (802{val=put}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.TRUE}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (40{val=ProcessDefines.UNKNOWN_DEFINE_WARNING}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=overrides}) (235{val=.}) (802{val=put}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.TRUE}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (40{val=ProcessDefines.UNKNOWN_DEFINE_WARNING}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNamespaceResetInLocalScope2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=NAMESPACE_REDEFINED_WARNING}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (800{val=NAMESPACE_REDEFINED_WARNING}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNamespaceResetInLocalScope1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=NAMESPACE_REDEFINED_WARNING}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (800{val=NAMESPACE_REDEFINED_WARNING}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNamespaceResetInGlobalScope1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=NAMESPACE_REDEFINED_WARNING}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (800{val=NAMESPACE_REDEFINED_WARNING}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (40{val=CompilerTestCase.ACTIVE_X_OBJECT_DEF}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (32 (802{val=findNameType}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=globalScope}) (215{val=)})) (235{val=.}) (802{val=toString}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (40{val=CompilerTypeTestCase.DEFAULT_EXTERNS}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=code}) (234{val=,}) (800{val=code}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=Es6RewriteModules}) (235{val=.}) (802{val=isEs6ModuleRoot}) (214{val=(}) (800{val=root}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=moduleRewriter}) (235{val=.}) (802{val=processFile}) (214{val=(}) (800{val=root}) (234{val=,}) (800{val=forceRewrite}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (32 (800{val=exportsNameNode}) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (32 (800{val=importNode}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=isDestructuringLhs}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (40{val=currentScript.defaultExportRhs}) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isStringKey}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=scriptRoot}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=c}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testES6AliasClassDeclarationWithoutNew}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testES6AliasClassDeclarationWithNew}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=protected}) (43 (800{val=FeatureSet})) (802{val=featureSet}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FeatureSet}) (235{val=.}) (802{val=latest}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setLanguageOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT3}) (215{val=)})) (227{val=;})) (21 (32 (802{val=enableRunTypeCheckAfterProcessing}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_NEXT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isForIn}) (216{val=()})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testSimpleConstAliasInCode01}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (32 (40{val=error.node}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isStringKey}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=fix}) (235{val=.}) (802{val=delete}) (214{val=(}) (32 (40{val=error.node}) (235{val=.}) (802{val=getParent}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=regexMatcher}) (235{val=.}) (802{val=matches}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=error.description}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=regexMatcher}) (235{val=.}) (802{val=matches}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=error.description}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=fullNameMatcher}) (235{val=.}) (802{val=matches}) (216{val=()})) (234{val=,}) (40{val=error.description}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=name}) (235{val=.}) (802{val=isName}) (216{val=()})) (234{val=,}) (800{val=name}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=mayWarnAboutGlobalThis}) (214{val=(}) (800{val=expr}) (234{val=,}) (800{val=currentScope}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=mayWarnAboutGlobalThis}) (214{val=(}) (800{val=expr}) (234{val=,}) (800{val=currentScope}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=Object})) (800{val=o})))
(AST_ROOT_SC2NF (31 (83{val=public}) (800{val=HierarchicalSet}) (214{val=(}) (44 (74 (43 (800{val=HierarchicalSet})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (800{val=parent})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=parent})) (204{val==}) (800{val=parent})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isArrowFunction}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=precedence}) (214{val=(}) (800{val=n}) (215{val=)})) (230{val=<}) (800{val=minPrecedence})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Var})) (800{val=var})) (226{val=:}) (32 (32 (802{val=computeLiveness}) (214{val=(}) (800{val=src}) (215{val=)})) (235{val=.}) (802{val=getEscapedLocals}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertFalse}) (214{val=(}) (32 (40{val=var.name}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=name}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=visitCallSite}) (214{val=(}) (44 (43 (801{val=NodeTraversal})) (800{val=t})) (234{val=,}) (44 (43 (801{val=Node})) (800{val=callNode})) (234{val=,}) (44 (43 (801{val=FunctionState})) (800{val=fs})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalStateException})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=child})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalStateException})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Map})) (230{val=<}) (43 (800{val=String})) (234{val=,}) (43 (800{val=Node})) (231{val=>})) (59 (800{val=map}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ScopeCreator})) (59 (800{val=creator}) (204{val==}) (14 (304{val=new}) (43 (801{val=MemoizedScopeCreator})) (214{val=(}) (32 (800{val=SyntacticScopeCreator}) (235{val=.}) (802{val=makeUntyped}) (214{val=(}) (800{val=compiler}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ScopeCreator})) (59 (800{val=creator}) (204{val==}) (14 (304{val=new}) (43 (801{val=MemoizedScopeCreator})) (214{val=(}) (32 (800{val=SyntacticScopeCreator}) (235{val=.}) (802{val=makeUntyped}) (214{val=(}) (800{val=compiler}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=createModuleStar}) (214{val=(}) (800{val=moduleInputs}) (215{val=)})) (234{val=,}) (32 (800{val=expected}) (214{val=(}) (800{val=expected}) (215{val=)})) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=expected}) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})) (21 (7 (800{val=expected}) (204{val==}) (32 (800{val=expected}) (214{val=(}) (22 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=Sources})) (215{val=)}) (800{val=part})) (215{val=)})) (235{val=.}) (800{val=sources})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=protected}) (43 (801{val=Sources})) (802{val=srcs}) (214{val=(}) (44 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=SourceFile})) (231{val=>})) (800{val=files})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Sources})) (214{val=(}) (800{val=files}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=protected}) (43 (801{val=Sources})) (802{val=srcs}) (214{val=(}) (44 (5 (43 (801{val=String})) (85{val=[]})) (800{val=srcTexts})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Sources})) (214{val=(}) (32 (802{val=createSources}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=srcTexts}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=protected}) (43 (801{val=Sources})) (802{val=srcs}) (214{val=(}) (44 (43 (801{val=String})) (800{val=srcText})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Sources})) (214{val=(}) (32 (802{val=maybeCreateSources}) (214{val=(}) (800{val=filename}) (234{val=,}) (800{val=srcText}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=modules}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (800{val=modules}) (234{val=,}) (32 (802{val=expected}) (214{val=(}) (802{val=expected}) (215{val=)})) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=builder}) (235{val=.}) (802{val=setTypeRegistry}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=typeRegistry})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=validateChildCount}) (214{val=(}) (800{val=n}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Es6RewriteModules}) (214{val=(}) (44 (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=compiler})) (204{val==}) (800{val=compiler})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=Es6RewriteModules.NAMESPACE_IMPORT_CANNOT_USE_STAR}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.LINT_CHECKS}) (234{val=,}) (40{val=CheckLevel.WARNING}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=FeatureSet})) (802{val=featureSet}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=ES7}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=FeatureSet})) (802{val=featureSet}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=ES6}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=forAnnotations}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=sb}) (235{val=.}) (802{val=append}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=primitiveType})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (32 (32 (800{val=type}) (235{val=.}) (802{val=toMaybeObjectType}) (216{val=()})) (235{val=.}) (802{val=getElementsType}) (216{val=()})) (235{val=.}) (802{val=toNonNullAnnotationString}) (216{val=()})) (200{val=+}) (45{val=STRING_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (43 (801{val=TypeI})) (802{val=getElementsType}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=TypeI})) (802{val=getElementsType}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=sum}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (62 (800{val=s}) (328{val=instanceof}) (43 (800{val=TypedScope}))) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=curNode}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=parent}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=s}) (235{val=.}) (802{val=isGlobal}) (216{val=()})) (250{val=||}) (32 (800{val=s}) (235{val=.}) (802{val=isModuleScope}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=type}) (204{val==}) (40{val=Name.Type.CLASS})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (800{val=compilerOptions}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT6_TYPED}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compilerOptions}) (235{val=.}) (802{val=setLanguageOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT3}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=functionScope}) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (800{val=name}) (234{val=,}) (9{val=false}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=current}) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (800{val=oldName}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (7 (800{val=current}) (204{val==}) (32 (800{val=current}) (235{val=.}) (802{val=getParent}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isName}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=ARGUMENT_ARRAY_ALIAS}) (215{val=)})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=jsScope}) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (800{val=ARGUMENT_ARRAY_ALIAS}) (234{val=,}) (9{val=false}) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=jsScope}) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (800{val=name}) (234{val=,}) (9{val=false}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=warningsGuard})) (204{val==}) (14 (304{val=new}) (43 (801{val=ComposeWarningsGuard})) (214{val=(}) (14 (304{val=new}) (43 (801{val=SuppressDocWarningsGuard})) (214{val=(}) (32 (32 (802{val=getDiagnosticGroups}) (216{val=()})) (235{val=.}) (802{val=getRegisteredGroups}) (216{val=()})) (215{val=)})) (234{val=,}) (800{val=warningsGuard}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (43 (801{val=Es6SyntacticScopeCreator})) (802{val=createInternalScopeCreator}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Es6SyntacticScopeCreator})) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=PersistentScopeFactory})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (802{val=ScopeScanner}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (234{val=,}) (44 (43 (801{val=Scope})) (800{val=scope})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=DEFAULT_REDECLARATION_HANDLER}) (234{val=,}) (800{val=scope}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (14 (304{val=new}) (43 (801{val=ScopeScanner})) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=redeclarationHandler}) (234{val=,}) (800{val=scope}) (215{val=)})) (235{val=.}) (802{val=populate}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=vars}) (235{val=.}) (802{val=remove}) (214{val=(}) (40{val=var.name}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isEnhancedFor}) (214{val=(}) (800{val=n}) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=logger}) (235{val=.}) (802{val=warning}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=scopeRoot})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=J2clClinitPrunerPass})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=J2clSourceFileChecker}) (235{val=.}) (802{val=shouldRunJ2clPasses}) (214{val=(}) (800{val=compiler}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=static}) (43 (801{val=CompilerPass})) (802{val=getContextualRenameInverter}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ContextualRenameInverter})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (802{val=MakeDeclaredNamesUnique}) (216{val=()}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ContextualRenamer})) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ProcessLabels})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (802{val=RenameLabels}) (214{val=(}) (44 (83{val=final}) (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=DefaultNameSupplier})) (216{val=()})) (234{val=,}) (9{val=true}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=J2clEqualitySameRewriterPass})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=nameNode}) (235{val=.}) (802{val=isQualifiedName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=functionNode}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=nameNode}) (235{val=.}) (802{val=isQualifiedName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isStatement}) (214{val=(}) (800{val=statement}) (215{val=)})) (234{val=,}) (800{val=statement}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=functionBody}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=paramList}) (235{val=.}) (802{val=isParamList}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=callee}) (235{val=.}) (802{val=matchesQualifiedName}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=processRequire}) (214{val=(}) (800{val=expr}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=callee}) (235{val=.}) (802{val=matchesQualifiedName}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=markConstructorToProcess}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=ctorNode})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=ctorNode}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=constructorsToProcess}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=ctorNode}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=int}) (802{val=getMaxArguments}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=int}) (802{val=getMinArguments}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (27 (800{val=index}) (230{val=<}) (32 (800{val=funType}) (235{val=.}) (802{val=getMaxArguments}) (216{val=()}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=currentType}) (235{val=.}) (802{val=getMaxArguments}) (216{val=()})) (252{val=<=}) (32 (800{val=expectedType}) (235{val=.}) (802{val=getMaxArguments}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=expectedType}) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=res}) (234{val=,}) (14 (304{val=new}) (43 (801{val=Number})) (214{val=(}) (800{val=op1}) (215{val=)})) (234{val=,}) (800{val=o}) (234{val=,}) (800{val=op2}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=res}) (234{val=,}) (800{val=op1}) (234{val=,}) (800{val=o}) (234{val=,}) (14 (304{val=new}) (43 (801{val=Number})) (214{val=(}) (800{val=op2}) (215{val=)})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=members}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=nt}) (235{val=.}) (802{val=isGeneric}) (216{val=()})) (234{val=,}) (800{val=nt}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (32 (800{val=nameNode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isVar}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=funNode}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isOr}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isAnd}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isGetElem}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=funType}) (215{val=)})) (235{val=.}) (802{val=toFunctionType}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=getProp}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=getProp}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=getProp}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=getProp}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=getProp}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=declNode}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=fn}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=getProp}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=lendsName}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=qnameNode}) (235{val=.}) (802{val=isName}) (216{val=()})) (250{val=||}) (32 (800{val=qnameNode}) (235{val=.}) (802{val=isGetProp}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=qnameNode}) (235{val=.}) (802{val=isName}) (216{val=()})) (250{val=||}) (32 (800{val=qnameNode}) (235{val=.}) (802{val=isGetProp}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=fn}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (800{val=fnName}) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=qnameNode}) (235{val=.}) (802{val=isQualifiedName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=qnameNode}) (235{val=.}) (802{val=isQualifiedName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=maybeAssign}) (235{val=.}) (802{val=isAssign}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=maybeAssign}) (235{val=.}) (802{val=putBooleanProp}) (214{val=(}) (40{val=Node.ANALYZED_DURING_GTI}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=maybeAssign}) (235{val=.}) (802{val=isExprResult}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (800{val=currentScope}) (235{val=.}) (802{val=isNamespace}) (214{val=(}) (800{val=qname}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=PropertyDef})) (59 (800{val=propdef}) (204{val==}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (32 (802{val=getPropDefFromClass}) (214{val=(}) (800{val=superType}) (234{val=,}) (800{val=pname}) (215{val=)})) (215{val=)}))) (227{val=;})) (21 (7 (800{val=inheritedPropDefs}) (204{val==}) (32 (800{val=ImmutableSet}) (235{val=.}) (802{val=of}) (214{val=(}) (800{val=propdef}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=JSType})) (59 (800{val=t}) (204{val==}) (32 (800{val=castTypes}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=n}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=t}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=t}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=part}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=parts}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=part}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=name}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=passName}) (235{val=.}) (802{val=equals}) (214{val=(}) (40{val=logStats.pass}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=mode}) (242{val=!=}) (40{val=TracerMode.OFF})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=qualifiedName}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (40{val=lastLink.nextLink}) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=token}) (236{val===}) (40{val=JsDocToken.PIPE})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=token}) (236{val===}) (40{val=JsDocToken.LEFT_CURLY})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=token}) (236{val===}) (40{val=JsDocToken.LEFT_CURLY})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=annotation}) (236{val===}) (40{val=Annotation.IMPLEMENTS})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (62 (800{val=other}) (328{val=instanceof}) (43 (800{val=NominalType}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=pname}) (235{val=.}) (802{val=isIdentifier}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=getSubtypesWithProperty}) (214{val=(}) (32 (800{val=pname}) (235{val=.}) (802{val=getLeftmostName}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=pname}) (235{val=.}) (802{val=isIdentifier}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=isPropDefinedOnSubtype}) (214{val=(}) (32 (800{val=pname}) (235{val=.}) (802{val=getLeftmostName}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (40{val=nt1.rawType}) (235{val=.}) (802{val=equals}) (214{val=(}) (40{val=nt2.rawType}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=equals}) (214{val=(}) (40{val=other.rawType}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (315{val=this}) (235{val=.}) (802{val=inheritsFromIObjectReflexive}) (216{val=()})) (249{val=&&}) (32 (800{val=other}) (235{val=.}) (802{val=inheritsFromIObjectReflexive}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=other}) (235{val=.}) (802{val=isStructuralInterface}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=typeMap}) (235{val=.}) (802{val=size}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=isFrozen}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=isFrozen}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=getCtorPropDeclaredType}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=isFrozen}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isUninstantiatedGenericType}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=types}) (235{val=.}) (802{val=size}) (216{val=()})) (236{val===}) (32 (800{val=typeParams}) (235{val=.}) (802{val=size}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=RawNominalType})) (802{val=getRawNominalType}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=isFrozen}) (216{val=()}))) (215{val=)})) (227{val=;})) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=value}) (235{val=.}) (802{val=isInterface}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=SubtypeCache})) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=m})) (235{val=.}) (802{val=with}) (214{val=(}) (800{val=key}) (234{val=,}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isSuper}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (36 (214{val=(}) (62 (800{val=scope}) (328{val=instanceof}) (43 (800{val=TypedScope}))) (215{val=)}))) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Arguments})) (214{val=(}) (800{val=scope}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=root}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=registry}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=isNativeType}) (234{val=,}) (32 (800{val=constructor}) (235{val=.}) (802{val=getTemplateTypeMap}) (216{val=()})) (215{val=)}) (227{val=;})) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=constructor}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=constructor})) (204{val==}) (800{val=constructor})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=m}) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (27 (800{val=line}) (230{val=<}) (800{val=nextLine})) (250{val=||}) (27 (800{val=col}) (252{val=<=}) (800{val=nextCol}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=variableNode}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=isDisposalStack}) (215{val=)})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=isDisposalStack}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=isDisposalStack}) (235{val=.}) (802{val=peek}) (216{val=()})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=isConstructorStack}) (215{val=)})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=isDisposalStack}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=isConstructorStack}) (235{val=.}) (802{val=peek}) (216{val=()})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=checkingPolicy}) (242{val=!=}) (40{val=DisposalCheckingPolicy.OFF})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=name}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isStatementBlock}) (214{val=(}) (800{val=parent}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=ret}) (235{val=.}) (802{val=isReturn}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=classByAlias}) (235{val=.}) (802{val=containsKey}) (214{val=(}) (800{val=original}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (800{val=classByAlias}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=alias}) (234{val=,}) (32 (800{val=classByAlias}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=original}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=subclassMember}) (235{val=.}) (802{val=isAssign}) (216{val=()})) (234{val=,}) (800{val=subclassMember}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=staticGetProp}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isName}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (800{val=n}) (235{val=.}) (802{val=removeFirstChild}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=root}) (235{val=.}) (802{val=isRoot}) (216{val=()})) (215{val=)})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=root}) (235{val=.}) (802{val=getChangeTime}) (216{val=()})) (242{val=!=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalStateException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isCast}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=first}) (235{val=.}) (802{val=getParent}) (216{val=()})) (236{val===}) (32 (800{val=last}) (235{val=.}) (802{val=getParent}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (7 (800{val=nodeToRename}) (204{val==}) (800{val=n})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=parentNode}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=isLive}) (214{val=(}) (44 (43 (801{val=Var})) (800{val=v})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=v}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=liveSet}) (235{val=.}) (802{val=get}) (214{val=(}) (40{val=v.index}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=other}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=other}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=liveSet})) (204{val==}) (11 (214{val=(}) (43 (800{val=BitSet})) (215{val=)}) (32 (40{val=other.liveSet}) (235{val=.}) (802{val=clone}) (216{val=()})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=mode}) (242{val=!=}) (40{val=TypeInferenceMode.BOTH})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (40{val=subns.namespaceType}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=namespaceType})) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=namespaceType})) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (800{val=prop}) (235{val=.}) (802{val=isOptional}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=defSite})) (204{val==}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=defSite}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=clinitName}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=name}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (800{val=hasProcessBeenRun}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=symbolName}) (234{val=,}) (800{val=value}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=exportPath})) (204{val==}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=exportPath}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=fn}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=pathDefinition}) (235{val=.}) (802{val=isVar}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=pathDefinition}) (235{val=.}) (802{val=setJSDocInfo}) (214{val=(}) (800{val=jsdoc}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=valueToExport}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (7 (800{val=initializer}) (204{val==}) (32 (802{val=createExternObjectLit}) (214{val=(}) (800{val=valueToExport}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=before}) (235{val=.}) (802{val=isExprResult}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (27 (40{val=keyValPairs.length}) (211{val=%}) (34{val=NUMBER_CONSTANT})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isNamespacePlaceholder}) (214{val=(}) (800{val=decl}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isNamespacePlaceholder}) (214{val=(}) (800{val=decl}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=newModule}) (236{val===}) (800{val=minimumModule})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=explicitNode}) (242{val=!=}) (800{val=node})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isCall}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=providedModule}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isExprResult}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isRegistered}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=isCorrectRegisterFunction}) (214{val=(}) (44 (43 (801{val=TweakFunction})) (800{val=registerFunction})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=registerFunction}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (27 (22 (315{val=this}) (235{val=.}) (800{val=registerFunction})) (236{val===}) (800{val=registerFunction})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=scriptNodeCount}) (236{val===}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=moduleNode}) (235{val=.}) (802{val=isModuleBody}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isModuleBody}) (216{val=()})) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isModuleBody}) (216{val=()})) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (802{val=isEs6ModuleRoot}) (214{val=(}) (800{val=root}) (215{val=)})) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})) (21 (32 (802{val=clearState}) (216{val=()})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=scriptNode}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isCall}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=subtree}) (235{val=.}) (802{val=isCall}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=subtree}) (235{val=.}) (802{val=isCall}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=script}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=visit}) (214{val=(}) (800{val=script}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (800{val=member}) (235{val=.}) (802{val=isStaticMember}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=constructor}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=object}) (242{val=!=}) (500{val=null})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (800{val=frozen})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=fnNode}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (250{val=||}) (32 (800{val=type}) (235{val=.}) (802{val=isFunctionType}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=registry}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isNameDeclaration}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=envs}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=typeMap}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=typeMap}) (235{val=.}) (802{val=size}) (216{val=()})) (251{val=>=}) (800{val=SIZE_THRESHOLD})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=meaning}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isCall}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isNew}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isNew}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isCall}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isCall}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isAssociative}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (27 (800{val=groupIndex}) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=groupIndex}) (252{val=<=}) (34{val=NUMBER_CONSTANT}))) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=groupIndex})) (204{val==}) (800{val=groupIndex})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=typei}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (32 (800{val=callSite}) (235{val=.}) (802{val=isCall}) (216{val=()})) (250{val=||}) (32 (800{val=callSite}) (235{val=.}) (802{val=isNew}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (27 (800{val=callType}) (236{val===}) (40{val=Token.CALL})) (250{val=||}) (27 (800{val=callType}) (236{val===}) (40{val=Token.NEW}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isNameDeclaration}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=getParent}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=sideEffectInfo}) (215{val=)})) (227{val=;})) (21 (32 (802{val=updateSideEffectsForNode}) (214{val=(}) (800{val=sideEffectInfo}) (234{val=,}) (800{val=traversal}) (234{val=,}) (800{val=node}) (234{val=,}) (800{val=enclosingFunction}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=functionInfo}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=cacheCall}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=compiler})) (204{val==}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=compiler}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (32 (800{val=initialization}) (235{val=.}) (802{val=getGrandparent}) (216{val=()})) (235{val=.}) (802{val=isExprResult}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=value}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isNameDeclaration}) (214{val=(}) (800{val=varNode}) (215{val=)})) (234{val=,}) (800{val=varNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=scriptRoot}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (802{val=Time}) (214{val=(}) (44 (43 (801{val=String})) (800{val=name})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=name}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=name})) (204{val==}) (800{val=name})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (802{val=Event}) (214{val=(}) (44 (43 (801{val=T})) (800{val=value})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=value}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=value})) (204{val==}) (800{val=value})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=exportDefinition}) (235{val=.}) (802{val=hasInlinableName}) (214{val=(}) (32 (40{val=currentScript.exportsToInline}) (235{val=.}) (802{val=keySet}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isScript}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (40{val=currentScript.willCreateExportsObject}) (250{val=||}) (40{val=currentScript.hasCreatedExportObject})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (32 (800{val=importNode}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=isDestructuringLhs}) (216{val=()})) (234{val=,}) (800{val=importNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (40{val=currentScript.defaultExportRhs}) (236{val===}) (500{val=null})) (234{val=,}) (40{val=currentScript.defaultExportRhs}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isStringKey}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=scriptRoot}) (235{val=.}) (802{val=isScript}) (216{val=()})) (234{val=,}) (800{val=scriptRoot}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=c}) (235{val=.}) (802{val=isScript}) (216{val=()})) (234{val=,}) (800{val=c}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=returnNode}) (235{val=.}) (802{val=isReturn}) (216{val=()})) (234{val=,}) (800{val=returnNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (802{val=containsModule}) (214{val=(}) (800{val=legacyNamespace}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (22 (32 (800{val=scriptDescriptionsByGoogModuleNamespace}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=legacyNamespace}) (215{val=)})) (235{val=.}) (800{val=declareLegacyNamespace})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isInterface}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (7 (800{val=isStructuralInterface}) (204{val==}) (800{val=flag})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (32 (802{val=isConstructor}) (216{val=()})) (250{val=||}) (32 (802{val=isInterface}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=that}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=interfaceType}) (235{val=.}) (802{val=isInterface}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=msgBuilder}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (45{val=STRING_CONSTANT}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=projectId}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=classNode}) (235{val=.}) (802{val=isClass}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (27 (32 (32 (800{val=classNode}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=isName}) (216{val=()})) (249{val=&&}) (32 (800{val=parent}) (235{val=.}) (802{val=isName}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=name}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=rootNode}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (800{val=typeMap}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=JSType})) (802{val=getRestFormalsType}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=restFormals}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=restFormals}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=propertyName}) (235{val=.}) (802{val=isString}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=superSet}) (235{val=.}) (802{val=isAssign}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=objectLit}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isCall}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=t}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=JSTypeExpression})) (802{val=getTypeExprForErrorReporting}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=state}) (236{val===}) (40{val=State.DURING_RESOLUTION})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=typeExpr}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=state}) (242{val=!=}) (40{val=State.RESOLVED})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=JSType})) (802{val=getType}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=state}) (236{val===}) (40{val=State.RESOLVED})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=type}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=typeExpr}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=renameStrategy}) (236{val===}) (40{val=RenameStrategy.MAPPED})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=MappedNameSupplier})) (214{val=(}) (800{val=mappings}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=grandparent}) (235{val=.}) (802{val=isLabel}) (216{val=()})) (215{val=)})) (227{val=;})) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalStateException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (32 (800{val=functionBody}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isLabel}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=Iterables}) (235{val=.}) (802{val=isEmpty}) (214{val=(}) (800{val=options}) (215{val=)}))) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=oldName}) (235{val=.}) (802{val=equals}) (214{val=(}) (40{val=p.oldName}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (74 (43 (800{val=Map})) (230{val=<}) (43 (800{val=String})) (234{val=,}) (43 (800{val=String})) (231{val=>})) (802{val=getRenamingMap}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=renamingMap}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=renamingMap}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getLifeCycleStage}) (216{val=()})) (235{val=.}) (802{val=isNormalized}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=refNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=value}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=invalidatingPropRef}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=propName}) (215{val=)})) (227{val=;})) (21 (32 (802{val=invalidateProperty}) (214{val=(}) (800{val=propName}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isName}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=inputId}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=mayBeExpression}) (214{val=(}) (800{val=expr}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (800{val=token}) (234{val=,}) (800{val=expr}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=function}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=mayBeExpression}) (214{val=(}) (800{val=expr}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.SPREAD}) (234{val=,}) (800{val=expr}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=mayBeExpression}) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=expr}) (235{val=.}) (802{val=isString}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.REGEXP}) (234{val=,}) (800{val=expr}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=expr})) (226{val=:}) (800{val=exprs}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=mayBeExpressionOrEmpty}) (214{val=(}) (800{val=expr}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (800{val=arraylit}) (235{val=.}) (802{val=addChildToBack}) (214{val=(}) (800{val=expr}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=mayBeExpression}) (214{val=(}) (800{val=target}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=arg})) (226{val=:}) (800{val=args}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=mayBeExpression}) (214{val=(}) (800{val=arg}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (800{val=newcall}) (235{val=.}) (802{val=addChildToBack}) (214{val=(}) (800{val=arg}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=arg})) (226{val=:}) (800{val=args}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=mayBeExpression}) (214{val=(}) (800{val=arg}) (215{val=)})) (234{val=,}) (800{val=arg}) (215{val=)})) (227{val=;})) (21 (32 (800{val=call}) (235{val=.}) (802{val=addChildToBack}) (214{val=(}) (800{val=arg}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=name}) (235{val=.}) (802{val=isLabelName}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.CONTINUE}) (234{val=,}) (800{val=name}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=name}) (235{val=.}) (802{val=isLabelName}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.BREAK}) (234{val=,}) (800{val=name}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=finallyBody}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (800{val=name}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=Node}) (235{val=.}) (802{val=newString}) (214{val=(}) (40{val=Token.LABEL_NAME}) (234{val=,}) (800{val=name}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=body}) (235{val=.}) (802{val=setIsAddedBlock}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.DEFAULT_CASE}) (234{val=,}) (800{val=body}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=mayBeExpression}) (214{val=(}) (800{val=expr}) (215{val=)})) (234{val=,}) (800{val=expr}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.EXPR_RESULT}) (234{val=,}) (800{val=expr}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=mayBeExpression}) (214{val=(}) (800{val=expr}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.RETURN}) (234{val=,}) (800{val=expr}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=stmt})) (226{val=:}) (800{val=stmts}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=mayBeStatementNoReturn}) (214{val=(}) (800{val=stmt}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (800{val=paramList}) (235{val=.}) (802{val=addChildToBack}) (214{val=(}) (800{val=stmt}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=stmt})) (226{val=:}) (800{val=stmts}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=mayBeStatementNoReturn}) (214{val=(}) (800{val=stmt}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (800{val=block}) (235{val=.}) (802{val=addChildToBack}) (214{val=(}) (800{val=stmt}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=stmt})) (226{val=:}) (800{val=stmts}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=mayBeStatement}) (214{val=(}) (800{val=stmt}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (800{val=paramList}) (235{val=.}) (802{val=addChildToBack}) (214{val=(}) (800{val=stmt}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=stmt})) (226{val=:}) (800{val=stmts}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=mayBeStatement}) (214{val=(}) (800{val=stmt}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (800{val=block}) (235{val=.}) (802{val=addChildToBack}) (214{val=(}) (800{val=stmt}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=mayBeStatement}) (214{val=(}) (800{val=stmt}) (215{val=)})) (215{val=)})) (227{val=;})) (60 (43 (801{val=Node})) (59 (800{val=block}) (204{val==}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.BLOCK}) (234{val=,}) (800{val=stmt}) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (800{val=block}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=param}) (235{val=.}) (802{val=isName}) (216{val=()})) (250{val=||}) (32 (800{val=param}) (235{val=.}) (802{val=isRest}) (216{val=()}))) (215{val=)})) (227{val=;})) (21 (32 (800{val=paramList}) (235{val=.}) (802{val=addChildToBack}) (214{val=(}) (800{val=param}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=param}) (235{val=.}) (802{val=isName}) (216{val=()})) (250{val=||}) (32 (800{val=param}) (235{val=.}) (802{val=isRest}) (216{val=()}))) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.PARAM_LIST}) (234{val=,}) (800{val=param}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isVarDeclaration}) (214{val=(}) (800{val=node}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (32 (800{val=IR}) (235{val=.}) (802{val=getprop}) (214{val=(}) (32 (800{val=IR}) (235{val=.}) (802{val=objectlit}) (216{val=()})) (234{val=,}) (32 (800{val=name}) (235{val=.}) (802{val=cloneNode}) (216{val=()})) (215{val=)})) (234{val=,}) (9{val=true}) (215{val=)}) (227{val=;})) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=name}) (235{val=.}) (802{val=isString}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=inExterns}) (215{val=)}) (227{val=;})) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isAssign}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (7 (800{val=assignment}) (204{val==}) (800{val=node})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=node}) (234{val=,}) (800{val=inExterns}) (215{val=)}) (227{val=;})) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isFunctionExpression}) (214{val=(}) (800{val=node}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=inExterns}) (215{val=)}) (227{val=;})) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (7 (800{val=function}) (204{val==}) (800{val=node})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=lValue}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=fileName}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (800{val=file}) (235{val=.}) (802{val=getName}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (21 (7 (800{val=sourceFile}) (204{val==}) (800{val=file})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isExprResult}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isObjectLitKey}) (214{val=(}) (800{val=n}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=expressionRoot}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (800{val=notAlreadyOutstanding}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=Thread}) (235{val=.}) (802{val=currentThread}) (216{val=()})) (236{val===}) (800{val=startThread})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (800{val=noCycles}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=parentClass}) (235{val=.}) (802{val=isInterface}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=warnings}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=funNode}) (234{val=,}) (800{val=CONFLICTING_EXTENDED_TYPE}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=functionName}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=thisRoot}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.BANG})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (27 (800{val=params}) (242{val=!=}) (500{val=null})) (250{val=||}) (27 (800{val=jsdoc}) (242{val=!=}) (500{val=null}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=e}) (242{val=!=}) (500{val=null})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=td}) (242{val=!=}) (500{val=null})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=commonTypes}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (40{val=options.sourceMapDetailLevel}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=line}) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=sourceMapDetailLevel}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (32 (802{val=getCfg}) (216{val=()})) (235{val=.}) (802{val=hasNode}) (214{val=(}) (800{val=useNode}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (27 (800{val=ownerFunction}) (236{val===}) (500{val=null})) (250{val=||}) (27 (800{val=type}) (236{val===}) (500{val=null}))) (215{val=)})) (227{val=;})) (21 (7 (800{val=ownerFunction}) (204{val==}) (800{val=type})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=templateType}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=index}) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=type}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=values}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=scope}) (235{val=.}) (802{val=isFunctionScope}) (216{val=()})) (234{val=,}) (800{val=scope}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getLifeCycleStage}) (216{val=()})) (235{val=.}) (802{val=isNormalized}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (62 (800{val=o}) (328{val=instanceof}) (43 (800{val=ObjectType}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=pname}) (235{val=.}) (802{val=isIdentifier}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=qname}) (235{val=.}) (802{val=isIdentifier}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=qname}) (235{val=.}) (802{val=isIdentifier}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=qname}) (235{val=.}) (802{val=isIdentifier}) (216{val=()})) (215{val=)})) (227{val=;})) (60 (43 (801{val=Property})) (59 (800{val=p}) (204{val==}) (32 (802{val=getLeftmostProp}) (214{val=(}) (800{val=qname}) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (27 (800{val=p}) (242{val=!=}) (500{val=null})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=p}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (32 (800{val=p}) (235{val=.}) (802{val=getType}) (216{val=()})) (235{val=.}) (802{val=getProp}) (214{val=(}) (32 (800{val=qname}) (235{val=.}) (802{val=getAllButLeftmost}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=ns})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=isLoose}) (250{val=||}) (40{val=other.isLoose})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=pname}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (40{val=boxedInfo.length}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=resultNominalType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=nominalType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ObjectType})) (214{val=(}) (800{val=commonTypes}) (234{val=,}) (32 (800{val=commonTypes}) (235{val=.}) (802{val=getObjectType}) (216{val=()})) (234{val=,}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (40{val=commonTypes.BOTTOM_PROPERTY_MAP}) (215{val=)})) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (234{val=,}) (9{val=false}) (234{val=,}) (40{val=ObjectKind.UNRESTRICTED}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=reference}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isName}) (216{val=()})) (234{val=,}) (800{val=node}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=isLive}) (214{val=(}) (44 (43 (801{val=Var})) (800{val=v})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=v}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=liveSet}) (235{val=.}) (802{val=get}) (214{val=(}) (40{val=v.index}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=other}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=other}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=liveSet})) (204{val==}) (11 (214{val=(}) (43 (800{val=BitSet})) (215{val=)}) (32 (40{val=other.liveSet}) (235{val=.}) (802{val=clone}) (216{val=()})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=first}) (235{val=.}) (802{val=isString}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=ctorType}) (235{val=.}) (802{val=isConstructor}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=parent}) (235{val=.}) (802{val=setJSType}) (214{val=(}) (800{val=varType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isGetElem}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=data}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=preservedNamespaces}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=name}) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=name}) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isDefined}) (214{val=(}) (800{val=qnameNode}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=name}) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (800{val=name}) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=name}) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=s}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=fnName}) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)})) (227{val=;})) (41 (329{val=return}) (27 (32 (802{val=getScopeHelper}) (214{val=(}) (14 (304{val=new}) (43 (801{val=QualifiedName})) (214{val=(}) (800{val=fnName}) (215{val=)})) (215{val=)})) (242{val=!=}) (500{val=null})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=name}) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=name}) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=name}) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=name}) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=name}) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=qnameNode}) (235{val=.}) (802{val=isQualifiedName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isTopLevel}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=unknownTypeNames})) (204{val==}) (32 (800{val=ImmutableSet}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=names}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=isPrototypeMethod}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=root}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isPrototypeMethod}) (214{val=(}) (800{val=root}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=declaredType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=Node})) (802{val=getBody}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=root}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getFunctionBody}) (214{val=(}) (800{val=root}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=commonTypes}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isGet}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=left}) (235{val=.}) (802{val=isString}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isGetElem}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isNew}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isCall}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isNew}) (216{val=()})) (215{val=)})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (32 (802{val=inForcedStringContext}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=tryFoldInForcedStringContext}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (800{val=n}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isAdd}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isAssign}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isInstanceOf}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=hasOneChild}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=originalTypeofNode}) (235{val=.}) (802{val=isTypeOf}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getLifeCycleStage}) (216{val=()})) (235{val=.}) (802{val=isNormalized}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=ConstParamCheck}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=compiler})) (204{val==}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=compiler}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (40{val=options.propertyRenaming}) (236{val===}) (40{val=PropertyRenamingPolicy.ALL_UNQUOTED})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=callbacks}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=CombinedCompilerPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=callbacks}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=checks}) (235{val=.}) (802{val=contains}) (214{val=(}) (800{val=closureGoogScopeAliases}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=checks}) (235{val=.}) (802{val=contains}) (214{val=(}) (800{val=checkVariableReferences}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=pass1Index}) (242{val=!=}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT}))) (249{val=&&}) (27 (800{val=pass2Index}) (242{val=!=}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=pass1Index}) (230{val=<}) (800{val=pass2Index})) (234{val=,}) (800{val=msg}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=PassFactory})) (800{val=pass})) (226{val=:}) (800{val=passes}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (800{val=pass}) (235{val=.}) (802{val=isOneTimePass}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=PassFactory})) (800{val=pass})) (226{val=:}) (800{val=passes}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=pass}) (235{val=.}) (802{val=isOneTimePass}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=namespaceType})) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getLifeCycleStage}) (216{val=()})) (235{val=.}) (802{val=isNormalized}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (800{val=compiler}) (235{val=.}) (802{val=hasErrors}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=parametersList}) (235{val=.}) (802{val=isParamList}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=traversal}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=traversal}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=usingNameNode}) (235{val=.}) (802{val=isName}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=referencesByNameNode}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=usingNameNode}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (62 (800{val=otherLocation}) (328{val=instanceof}) (43 (800{val=VisibilityBasedEffectLocation}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (62 (800{val=otherLocation}) (328{val=instanceof}) (43 (800{val=VisibilityBasedEffectLocation}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (802{val=isStorageNode}) (214{val=(}) (800{val=node}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isLValue}) (214{val=(}) (800{val=node}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (802{val=isStorageNode}) (214{val=(}) (800{val=node}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=variableReference}) (235{val=.}) (802{val=isName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=caseBody}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (32 (800{val=first}) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (40{val=token.type}) (236{val===}) (40{val=TokenType.STRING})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (40{val=config.keepGoing}) (236{val===}) (40{val=Config.RunMode.KEEP_GOING})) (215{val=)})) (227{val=;})) (21 (7 (800{val=bodyNode}) (204{val==}) (32 (800{val=IR}) (235{val=.}) (802{val=block}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=scriptNode}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=ret}) (235{val=.}) (802{val=isString}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=work}) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (802{val=isZipEntry}) (214{val=(}) (800{val=zipURL}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=arrowFunction}) (235{val=.}) (802{val=isArrowFunction}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=templateJs}) (236{val===}) (500{val=null})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=templateJs})) (204{val==}) (800{val=refasterJsTemplate})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=templateJs}) (236{val===}) (500{val=null})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=objLit}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=objLit}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=JSModule})) (59 (800{val=module}) (204{val==}) (32 (800{val=input}) (235{val=.}) (802{val=getModule}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=module}) (215{val=)})) (227{val=;})) (21 (32 (800{val=entryPointInputsPerModule}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=module}) (234{val=,}) (800{val=input}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isCall}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=child}) (235{val=.}) (802{val=getParent}) (216{val=()})) (236{val===}) (800{val=n})) (215{val=)})) (227{val=;})) (21 (32 (802{val=normalizeNodeTypes}) (214{val=(}) (800{val=child}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=thisType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=moduleSpecifier}) (235{val=.}) (802{val=isString}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (32 (800{val=ref}) (235{val=.}) (802{val=getTwin}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=isObjKey}) (250{val=||}) (800{val=isQName})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (32 (40{val=ref.node}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isExprResult}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=child}) (235{val=.}) (802{val=hasOneChild}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=cycleCount}) (242{val=!=}) (800{val=maxIterations})) (234{val=,}) (800{val=NON_HALTING_ERROR_MSG}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=int}) (802{val=getArgIndex}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=argIndex})) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=argIndex})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=JSType})) (802{val=getExpectedType}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=expected})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=JSType})) (802{val=getFoundType}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=found})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=String})) (802{val=getPropName}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=propName})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=firstScript}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=namespace}) (235{val=.}) (802{val=hasExternsRoot}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=namespace}) (235{val=.}) (802{val=hasExternsRoot}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=namespace})) (204{val==}) (800{val=namespace})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (32 (800{val=prevUsedRenameMap}) (235{val=.}) (802{val=getNewNameToOriginalNameMap}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=newName})) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=newName})) (204{val==}) (800{val=newName})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=nameNode}) (235{val=.}) (802{val=isName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isAnd}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isOr}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=replacementFnType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=type}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=resultType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=var}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=objectType}) (235{val=.}) (802{val=isUnknownType}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=errorRoot}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=knownConstants})) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=knownConstants})) (204{val==}) (800{val=knownConstants})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isFunctionObjectApply}) (214{val=(}) (800{val=callNode}) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=callSiteType}) (242{val=!=}) (40{val=CallSiteType.UNSUPPORTED})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=type}) (236{val===}) (40{val=DecompositionType.DECOMPOSABLE})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=CallSiteType.DECOMPOSABLE_EXPRESSION}) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=type}) (236{val===}) (40{val=DecompositionType.UNDECOMPOSABLE})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (315{val=this}) (242{val=!=}) (800{val=callSiteType})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (315{val=this}) (242{val=!=}) (800{val=callSiteType})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getLifeCycleStage}) (216{val=()})) (235{val=.}) (802{val=isNormalized}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=fnRecursionName}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isDo}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isVanillaFor}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isWhile}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isExprConditional}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstFirstChild}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isSimpleAssignment}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isSimpleAssignment}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isSwitch}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=subtree}) (235{val=.}) (802{val=isAssign}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isTry}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=namespaceType})) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=NominalType})) (59 (800{val=builtinObj}) (204{val==}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (802{val=getObjectType}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (7 (800{val=protoNT}) (204{val==}) (800{val=builtinObj})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (22 (315{val=this}) (235{val=.}) (800{val=isFrozen}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (22 (315{val=this}) (235{val=.}) (800{val=isFrozen}))) (215{val=)})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=addProperty}) (214{val=(}) (800{val=pname}) (234{val=,}) (800{val=defSite}) (234{val=,}) (800{val=type}) (234{val=,}) (800{val=isConstant}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (22 (315{val=this}) (235{val=.}) (800{val=isFrozen}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (22 (315{val=this}) (235{val=.}) (800{val=isFrozen}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (22 (315{val=this}) (235{val=.}) (800{val=isFrozen}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (22 (315{val=this}) (235{val=.}) (800{val=isFrozen}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (22 (315{val=this}) (235{val=.}) (800{val=isFrozen}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isClass}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=name})) (235{val=.}) (802{val=equals}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (802{val=getAllPropsOfClass}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isInterface}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isClass}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=ancestor}) (235{val=.}) (802{val=isInterface}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (22 (315{val=this}) (235{val=.}) (800{val=isFrozen}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=ancestor}) (235{val=.}) (802{val=isClass}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (22 (315{val=this}) (235{val=.}) (800{val=isFrozen}))) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=ctorFn})) (204{val==}) (800{val=ctorFn})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=isStruct}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (802{val=isFrozen}) (216{val=()})) (250{val=||}) (32 (802{val=isClass}) (216{val=()}))) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (22 (315{val=this}) (235{val=.}) (800{val=objectKind})) (235{val=.}) (802{val=isStruct}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (43 (801{val=JSType})) (802{val=getPrototypeObject}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=isFrozen})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=protoObject})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=objectKind}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=commonTypes}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=objs})) (204{val==}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=objs}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=commonTypes}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=objs})) (204{val==}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=objs}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (74 (43 (800{val=ImmutableSet})) (230{val=<}) (43 (800{val=EnumType})) (231{val=>})) (802{val=getEnums}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=enums}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (74 (43 (800{val=ImmutableSet})) (230{val=<}) (43 (800{val=ObjectType})) (231{val=>})) (802{val=getObjs}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=objs}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (83{val=final}) (74 (43 (800{val=Iterable})) (230{val=<}) (43 (800{val=TypeI})) (231{val=>})) (802{val=getParameterTypes}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (32 (802{val=getFunType}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=getParameterTypes}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isSingletonObj}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (32 (315{val=this}) (235{val=.}) (802{val=getNominalTypeIfSingletonObj}) (216{val=()})) (235{val=.}) (802{val=isClassy}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isSingletonObj}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isSingletonObj}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (32 (315{val=this}) (235{val=.}) (802{val=getObjTypeIfSingletonObj}) (216{val=()})) (235{val=.}) (802{val=getPropertyDefSite}) (214{val=(}) (800{val=propertyName}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isSingletonObj}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (32 (315{val=this}) (235{val=.}) (802{val=getObjTypeIfSingletonObj}) (216{val=()})) (235{val=.}) (802{val=getOwnPropertyDefSite}) (214{val=(}) (800{val=propertyName}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isSingletonObj}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isSingletonObj}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isFunctionType}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (32 (802{val=getFunTypeIfSingletonObj}) (216{val=()})) (235{val=.}) (802{val=getReturnType}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isFunctionType}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (32 (315{val=this}) (235{val=.}) (802{val=getFunTypeIfSingletonObj}) (216{val=()})) (235{val=.}) (802{val=getMinArity}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isFunctionType}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isFunctionType}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (32 (802{val=getFunTypeIfSingletonObj}) (216{val=()})) (235{val=.}) (802{val=getThisType}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isFunctionType}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isFunctionType}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (27 (32 (32 (802{val=getFunTypeIfSingletonObj}) (216{val=()})) (235{val=.}) (802{val=getInstanceTypeOfCtor}) (216{val=()})) (242{val=!=}) (500{val=null})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isFunctionType}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=pname}) (235{val=.}) (802{val=isIdentifier}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=pname}) (235{val=.}) (802{val=isIdentifier}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (32 (802{val=getObjs}) (216{val=()})) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=type}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=arrayType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=pname}) (235{val=.}) (802{val=isIdentifier}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (32 (802{val=getObjs}) (216{val=()})) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (32 (802{val=getEnums}) (216{val=()})) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (215{val=)})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (800{val=areSubtypes})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=type}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isSingletonObj}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (32 (802{val=getObjs}) (216{val=()})) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=private}) (802{val=JSType}) (214{val=(}) (44 (43 (801{val=JSTypes})) (800{val=commonTypes})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=commonTypes}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (204{val==}) (800{val=commonTypes})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=newExpr}) (235{val=.}) (802{val=isNew}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=newExpr}) (235{val=.}) (802{val=isNew}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isCallOrNew}) (214{val=(}) (800{val=call}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=function}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=value}) (235{val=.}) (802{val=getParent}) (216{val=()})) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=DefinitionUseSiteFinder}) (235{val=.}) (802{val=isCallOrNewSite}) (214{val=(}) (800{val=site}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=compiler}) (235{val=.}) (802{val=getLifeCycleStage}) (216{val=()})) (236{val===}) (40{val=LifeCycleStage.NORMALIZED})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isIdentifier}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isIdentifier}) (216{val=()}))) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=QualifiedName})) (214{val=(}) (32 (800{val=parts}) (235{val=.}) (802{val=subList}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=parts}) (235{val=.}) (802{val=size}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=fnNode}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=unsafe}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isFunctionObjectApply}) (214{val=(}) (800{val=callNode}) (215{val=)}))) (215{val=)})) (227{val=;})) (21 (32 (800{val=argMap}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=THIS_MARKER}) (234{val=,}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=newUndefinedNode}) (214{val=(}) (800{val=callNode}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=lValue}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=setIn}) (214{val=(}) (44 (43 (801{val=L})) (800{val=in})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=in}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=in})) (204{val==}) (800{val=in})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=outBefore}) (235{val=.}) (802{val=size}) (216{val=()})) (236{val===}) (32 (40{val=state.out}) (235{val=.}) (802{val=size}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=setOut}) (214{val=(}) (44 (43 (801{val=L})) (800{val=out})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=out}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=out})) (204{val==}) (800{val=out})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=setIn}) (214{val=(}) (44 (43 (801{val=L})) (800{val=in})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=in}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=in})) (204{val==}) (800{val=in})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=dep}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=dep}) (242{val=!=}) (315{val=this})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (21 (32 (800{val=deps}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=dep}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=inputs}) (235{val=.}) (802{val=contains}) (214{val=(}) (800{val=other}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isSwitch}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=allCatchNodes}) (235{val=.}) (802{val=hasOneChild}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (62 (800{val=type}) (328{val=instanceof}) (43 (800{val=TypeDeclarationNode}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=reader}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=whitelist}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=whitelist})) (204{val==}) (32 (802{val=normalizeWhitelist}) (214{val=(}) (800{val=whitelist}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=JSTypeExpression})) (802{val=getTypeExprForErrorReporting}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=state})) (236{val===}) (40{val=State.DURING_RESOLUTION})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=typeExpr}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=state})) (242{val=!=}) (40{val=State.RESOLVED})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=JSType})) (802{val=getPropType}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=state})) (236{val===}) (40{val=State.RESOLVED})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=enumPropType}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=JSType})) (802{val=getEnumeratedType}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=state})) (236{val===}) (40{val=State.RESOLVED})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=declaredType}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=typeExpr}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isVarBlock}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isReturnExpressBlock}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstFirstChild}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isFoldableExpressBlock}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isNot}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=objLit}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=objLit}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=script}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (32 (800{val=declaration}) (235{val=.}) (802{val=isName}) (216{val=()})) (250{val=||}) (32 (800{val=declaration}) (235{val=.}) (802{val=isStringKey}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isCallOrNew}) (214{val=(}) (800{val=call}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (802{val=getNthSibling}) (214{val=(}) (32 (800{val=call}) (235{val=.}) (802{val=getSecondChild}) (216{val=()})) (234{val=,}) (800{val=index}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=function}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (802{val=getNthSibling}) (214{val=(}) (32 (32 (800{val=function}) (235{val=.}) (802{val=getSecondChild}) (216{val=()})) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (800{val=index}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=fnNode}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=fnNode}) (235{val=.}) (802{val=getSecondChild}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (27 (32 (800{val=n}) (235{val=.}) (802{val=hasChildren}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=isCatch}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isTry}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=n}) (235{val=.}) (802{val=getSecondChild}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isTry}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isObjectDefinePropertiesDefinition}) (214{val=(}) (800{val=definePropertiesCall}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isLValue}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (800{val=lhsNodes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=function}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (802{val=isNameReferenced}) (214{val=(}) (32 (800{val=function}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=MATCH_NOT_THIS_BINDING}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=fn}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (234{val=,}) (800{val=fn}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=fn}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=block}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=tryNode}) (235{val=.}) (802{val=isTry}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isName}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=objlit}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isClassMembers}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isNew}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=n}) (235{val=.}) (802{val=isOnlyModifiesThisCall}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isCall}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (27 (36 (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getSideEffectFlags}) (216{val=()})) (213{val=&}) (40{val=Node.FLAG_LOCAL_RESULTS})) (215{val=)})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=hasTwoChildren}) (216{val=()})) (234{val=,}) (800{val=node}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isClass}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=n}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isClass}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isClass}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=descriptor}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isAssignmentOp}) (214{val=(}) (800{val=assignNode}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isAssignmentOp}) (214{val=(}) (800{val=assignNode}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=var}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=function}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=function}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=modifyCallSites}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=defFinder}) (215{val=)})) (227{val=;})) (21 (7 (800{val=callSiteOptimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=CallSiteOptimizer})) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=defFinder}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getLifeCycleStage}) (216{val=()})) (235{val=.}) (802{val=isNormalized}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=fn})) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=fn})) (204{val==}) (800{val=fn})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=changed}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=functionState}) (235{val=.}) (802{val=hasExistingFunctionDefinition}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isName}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=name}) (235{val=.}) (802{val=isName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isGet}) (214{val=(}) (800{val=child}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=fn}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getLifeCycleStage}) (216{val=()})) (235{val=.}) (802{val=isNormalized}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=data}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (800{val=hasProcessBeenRun}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=definitionNodeByDefinitionSite}) (235{val=.}) (802{val=values}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=site}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (800{val=hasProcessBeenRun})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=colorToNodeMap}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=exitCodeValue}) (204{val==}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=exitCode}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=entryPoints}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=entryPoints})) (204{val==}) (800{val=entryPoints})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (236{val===}) (32 (800{val=Iterables}) (235{val=.}) (802{val=size}) (214{val=(}) (800{val=inputs}) (215{val=)}))) (215{val=)})) (227{val=;})) (500{val=return;}) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (22 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (800{val=outputJs})) (236{val===}) (40{val=OutputJs.NORMAL})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=specs}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=zipEntryName}) (235{val=.}) (802{val=contains}) (214{val=(}) (800{val=filename}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=input}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=exitCodeReceiver})) (204{val==}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=newExitCodeReceiver}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (27 (800{val=inputsSupplier}) (236{val===}) (500{val=null})) (212{val=^}) (27 (800{val=modulesSupplier}) (236{val===}) (500{val=null}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=currentInfo}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=compilerOptions})) (204{val==}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=compilerOptions}) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=c}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=hotSwapScript}) (214{val=(}) (800{val=c}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=sourceString}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (40{val=js.length}) (236{val===}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=block}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=nameNode}) (235{val=.}) (802{val=isQualifiedName}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (32 (32 (800{val=nameNode}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=startsWith}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=TokenStream}) (235{val=.}) (802{val=isJSIdentifier}) (214{val=(}) (800{val=tempVarName}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=newSourceInd}) (230{val=<}) (32 (800{val=sources}) (235{val=.}) (802{val=size}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (27 (40{val=parts.length}) (236{val===}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (40{val=parts.length}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (27 (40{val=parts.length}) (236{val===}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (40{val=parts.length}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=result}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isNew}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isCall}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=compiler}) (235{val=.}) (802{val=getLifeCycleStage}) (216{val=()})) (236{val===}) (40{val=LifeCycleStage.NORMALIZED})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (500{val=null}) (236{val===}) (32 (800{val=m}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=type}) (234{val=,}) (800{val=top}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Integer})) (59 (800{val=priority}) (204{val==}) (32 (800{val=priorities}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=n}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=priority}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=priority}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=handler}) (235{val=.}) (802{val=isTry}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=cur}) (235{val=.}) (802{val=getParent}) (216{val=()})) (242{val=!=}) (500{val=null})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=next}) (235{val=.}) (802{val=isCase}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=createEdge}) (214{val=(}) (800{val=node}) (234{val=,}) (40{val=Branch.ON_FALSE}) (234{val=,}) (800{val=next}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=exceptionHandler}) (235{val=.}) (802{val=peek}) (216{val=()})) (236{val===}) (800{val=parent})) (215{val=)})) (227{val=;})) (21 (32 (800{val=exceptionHandler}) (235{val=.}) (802{val=pop}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=aliasExpanded}) (204{val==}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (32 (800{val=aliasDefinition}) (235{val=.}) (802{val=getQualifiedName}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (800{val=aliasReference}) (235{val=.}) (802{val=hasChildren}) (216{val=()}))) (215{val=)})) (227{val=;})) (21 (32 (800{val=aliasReference}) (235{val=.}) (802{val=addChildToFront}) (214{val=(}) (800{val=replacement}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=matches}) (235{val=.}) (802{val=size}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (800{val=matches}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=currentStatement}) (235{val=.}) (802{val=isDo}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=parent}) (236{val===}) (32 (800{val=scope}) (235{val=.}) (802{val=getParent}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=nameNode}) (235{val=.}) (802{val=isName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (40{val=ancestors.length}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=private}) (39{val=int}) (802{val=getMaskForBitIndex}) (214{val=(}) (44 (39{val=int}) (800{val=bitIndex})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=bitIndex}) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (27 (34{val=NUMBER_CONSTANT}) (230{val=<}) (230{val=<}) (800{val=bitIndex})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()})) (235{val=.}) (802{val=isFunctionBlockScope}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=edgeAnnotationStack}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=popAnnotations}) (214{val=(}) (800{val=edgeAnnotationStack}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=nodeAnnotationStack}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=popAnnotations}) (214{val=(}) (800{val=nodeAnnotationStack}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=call}) (235{val=.}) (802{val=isCall}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=call}) (235{val=.}) (802{val=putBooleanProp}) (214{val=(}) (40{val=Node.FREE_CALL}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=call}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isCall}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=parent}) (234{val=,}) (800{val=GOOG_CLASS_DESCRIPTOR_NOT_VALID}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=call}) (235{val=.}) (802{val=isCall}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isVar}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=parent}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=nameNode}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=createsBlockScope}) (214{val=(}) (800{val=root}) (215{val=)})) (234{val=,}) (800{val=scope}) (215{val=)})) (227{val=;})) (21 (32 (800{val=symbolStack}) (235{val=.}) (802{val=push}) (214{val=(}) (14 (304{val=new}) (43 (801{val=NameContext})) (214{val=(}) (800{val=anonymousNode}) (234{val=,}) (800{val=scope}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isGeneric}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isGeneric}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (802{val=substituteParametricGenerics}) (214{val=(}) (800{val=typeMap}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=String})) (800{val=typeParam})) (226{val=:}) (22 (315{val=this}) (235{val=.}) (800{val=typeParameters})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (800{val=typeMap}) (235{val=.}) (802{val=containsKey}) (214{val=(}) (800{val=typeParam}) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (315{val=this}) (235{val=.}) (802{val=isLoose}) (216{val=()})) (250{val=||}) (32 (800{val=f2}) (235{val=.}) (802{val=isLoose}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (40{val=boxedInfo.length}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (21 (32 (800{val=f1}) (235{val=.}) (802{val=isSubtypeOfHelper}) (214{val=(}) (800{val=f2}) (234{val=,}) (9{val=true}) (234{val=,}) (800{val=subSuperMap}) (234{val=,}) (800{val=boxedInfo}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (32 (800{val=f1}) (235{val=.}) (802{val=isLoose}) (216{val=()})) (250{val=||}) (32 (800{val=f2}) (235{val=.}) (802{val=isLoose}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isTopFunction}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isTopFunction}) (216{val=()}))) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=requiredFormals}) (235{val=.}) (802{val=size}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isTopFunction}) (216{val=()}))) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=outerVarPreconditions}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=name}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isTopFunction}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=JSType})) (802{val=getRestFormalsType}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=restFormals}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=restFormals}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isUniqueConstructor}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=commonTypes}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (62 (800{val=o}) (328{val=instanceof}) (43 (800{val=DeferredCheck}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=pname}) (235{val=.}) (802{val=isIdentifier}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (800{val=insideQualifiedName}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=type}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (27 (800{val=pname}) (236{val===}) (500{val=null})) (250{val=||}) (32 (800{val=pname}) (235{val=.}) (802{val=isIdentifier}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=type}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=varName}) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=env}) (235{val=.}) (802{val=putType}) (214{val=(}) (800{val=varName}) (234{val=,}) (800{val=type}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=pname}) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=env}) (235{val=.}) (802{val=getType}) (214{val=(}) (800{val=pname}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (32 (800{val=expr}) (235{val=.}) (802{val=isNew}) (216{val=()})) (250{val=||}) (32 (800{val=expr}) (235{val=.}) (802{val=isCall}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (32 (800{val=callNode}) (235{val=.}) (802{val=isCall}) (216{val=()})) (250{val=||}) (32 (800{val=callNode}) (235{val=.}) (802{val=isNew}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=type}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=thisExpr}) (235{val=.}) (802{val=isThis}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=propAccessNode}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (250{val=||}) (32 (800{val=propAccessNode}) (235{val=.}) (802{val=isGetElem}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=getProp}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (32 (800{val=propAccessNode}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (250{val=||}) (32 (800{val=propAccessNode}) (235{val=.}) (802{val=isGetElem}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=funType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (27 (800{val=receiver}) (236{val===}) (500{val=null})) (250{val=||}) (800{val=isFwd})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (800{val=formalType}) (235{val=.}) (802{val=isBottom}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=call}) (235{val=.}) (802{val=isCall}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=logicalOp}) (236{val===}) (40{val=Token.AND})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=n}) (242{val=!=}) (500{val=null})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeEnv})) (59 (800{val=outEnv}) (204{val==}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (32 (802{val=getOutEnv}) (214{val=(}) (800{val=dn}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=fnType}) (235{val=.}) (802{val=getFunType}) (216{val=()})) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=fnType}) (235{val=.}) (802{val=isUnknown}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (802{val=qmarkFunction}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=qnameRoot}) (235{val=.}) (802{val=isName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=original}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (27 (27 (800{val=original}) (242{val=!=}) (22 (315{val=this}) (235{val=.}) (800{val=node}))) (250{val=||}) (32 (315{val=this}) (235{val=.}) (802{val=isChanged}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isNot}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (36 (214{val=(}) (2 (32 (802{val=normalizeChildren}) (214{val=(}) (800{val=node}) (234{val=,}) (800{val=children}) (215{val=)})) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (215{val=)})) (235{val=.}) (802{val=change}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=dNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=dNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=doSanityChecks}) (249{val=&&}) (27 (800{val=sourceFile}) (242{val=!=}) (500{val=null}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=sourceFile}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getSourceFileName}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=declaration})) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=declaration})) (204{val==}) (800{val=ref})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=otherScopeParent}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=globalScope}) (236{val===}) (500{val=null})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=declNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=fn}) (235{val=.}) (802{val=isConstructor}) (216{val=()})) (250{val=||}) (32 (800{val=fn}) (235{val=.}) (802{val=isInterface}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=fn}) (235{val=.}) (802{val=isConstructor}) (216{val=()})) (250{val=||}) (32 (800{val=fn}) (235{val=.}) (802{val=isInterface}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=destructuringLhs}) (235{val=.}) (802{val=isDestructuringLhs}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=lhs}) (235{val=.}) (802{val=isName}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=checkShortName}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=lhs}) (234{val=,}) (32 (32 (800{val=callNode}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=callNode}) (235{val=.}) (802{val=isCall}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=currentModule}) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getLifeCycleStage}) (216{val=()})) (235{val=.}) (802{val=isNormalized}) (216{val=()}))) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=compiler})) (204{val==}) (800{val=compiler})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=languageIn}) (242{val=!=}) (40{val=LanguageMode.NO_TRANSPILE})) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=languageIn})) (204{val==}) (800{val=languageIn})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=language}) (242{val=!=}) (40{val=LanguageMode.NO_TRANSPILE})) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=languageIn})) (204{val==}) (800{val=language})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=languageOut})) (204{val==}) (800{val=language})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=entryPoints}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=funAstSize}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=maxFunctionSizeAfterInlining})) (204{val==}) (800{val=funAstSize})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (62 (800{val=value}) (328{val=instanceof}) (43 (800{val=String}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=script}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=script}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=script}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=script}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=hasReferenceName}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (32 (802{val=getReferenceName}) (216{val=()})) (235{val=.}) (802{val=hashCode}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (236{val===}) (800{val=n})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=cloneTree}) (216{val=()})) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=script})) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=script})) (204{val==}) (800{val=n})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=root}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=root}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=newReachable}) (235{val=.}) (802{val=getAnnotation}) (216{val=()})) (242{val=!=}) (800{val=REACHABLE})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=source}) (215{val=)}) (227{val=;})) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=source}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=excerpt})) (204{val==}) (800{val=excerpt})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=paramType}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isAssign}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=protected}) (39{val=boolean}) (802{val=isASTNormalized}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getLifeCycleStage}) (216{val=()})) (235{val=.}) (802{val=isNormalized}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=compiler}) (235{val=.}) (802{val=areNodesEqualForInlining}) (214{val=(}) (800{val=n1}) (234{val=,}) (800{val=n2}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=typeParameters}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=nominalType})) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=nominalType})) (204{val==}) (800{val=t})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=returnType}) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})) (21 (7 (800{val=returnType}) (204{val==}) (800{val=t})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=restFormals}) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})) (21 (7 (800{val=restFormals}) (204{val==}) (800{val=t})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=t}) (235{val=.}) (802{val=isBottom}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=FunctionTypeBuilder}) (214{val=(}) (44 (43 (801{val=JSTypes})) (800{val=commonTypes})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (204{val==}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=commonTypes}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (27 (800{val=qName}) (242{val=!=}) (500{val=null})) (249{val=&&}) (27 (800{val=ownerName}) (242{val=!=}) (500{val=null}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=variableName}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=inputId}) (215{val=)})) (227{val=;})) (21 (7 (800{val=sourceName}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getSourceName}) (214{val=(}) (800{val=n}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (62 (800{val=o}) (328{val=instanceof}) (43 (800{val=Property}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=inferredType}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=inputId}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=inputId}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=registry}) (234{val=,}) (800{val=templateTypeMap}) (215{val=)}) (227{val=;})) (21 (32 (802{val=setReferencedType}) (214{val=(}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=referencedType}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=DEFAULT_EXTERNS}) (235{val=.}) (802{val=length}) (216{val=()})) (242{val=!=}) (32 (800{val=externs}) (235{val=.}) (802{val=length}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=behaviorObjLit}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=behaviorObjLit}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=keys}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=namedType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=name}) (215{val=)})) (227{val=;})) (21 (32 (800{val=nonNullableTypeNames}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=name}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (27 (800{val=source}) (236{val===}) (500{val=null})) (250{val=||}) (32 (800{val=source}) (235{val=.}) (802{val=isFunction}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=source}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (234{val=,}) (800{val=source}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=namesToTypes}) (235{val=.}) (802{val=containsKey}) (214{val=(}) (800{val=name}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=register}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=name}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=name}) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=namesToTypes}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=name}) (234{val=,}) (800{val=type}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=TemplateType})) (802{val=getObjectIndexKey}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=iObjectIndexTemplateKey}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=iObjectIndexTemplateKey})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=inputId}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=hasOneChild}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getLifeCycleStage}) (216{val=()})) (235{val=.}) (802{val=isNormalized}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=compiler})) (204{val==}) (800{val=compiler})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=realSource}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=realSource})) (204{val==}) (800{val=realSource})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=reportParseErrors})) (204{val==}) (800{val=reportParseErrors})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=declaration}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isClassMembers}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (62 (800{val=obj}) (328{val=instanceof}) (43 (800{val=AstChange}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=functionName}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (800{val=parameterName}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=labeledVariable}) (235{val=.}) (802{val=isVar}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Property})) (59 (800{val=nameProp}) (204{val==}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (32 (802{val=getOrCreateProperty}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=blockNode}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (32 (800{val=blockNode}) (235{val=.}) (802{val=hasChildren}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=markAllPropsRead}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=assignedAt}) (235{val=.}) (802{val=isQualifiedName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=lhs}) (235{val=.}) (802{val=isQualifiedName}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=writes}) (235{val=.}) (802{val=addLast}) (214{val=(}) (14 (304{val=new}) (43 (801{val=PropertyWrite})) (214{val=(}) (800{val=lhs}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=obj}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=internalScopeCreator}) (215{val=)})) (227{val=;})) (21 (32 (800{val=internalScopeCreator}) (235{val=.}) (802{val=patchGlobalScope}) (214{val=(}) (800{val=topScope}) (234{val=,}) (800{val=scriptRoot}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=defParent}) (235{val=.}) (802{val=isExprResult}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=use}) (235{val=.}) (802{val=isName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (32 (800{val=t}) (235{val=.}) (802{val=getScopeRoot}) (216{val=()})) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (27 (40{val=parts.length}) (236{val===}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (40{val=parts.length}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (27 (40{val=parts.length}) (236{val===}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (40{val=parts.length}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=callOrNew}) (235{val=.}) (802{val=isCall}) (216{val=()})) (250{val=||}) (32 (800{val=callOrNew}) (235{val=.}) (802{val=isNew}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (27 (40{val=parts.length}) (236{val===}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (40{val=parts.length}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (27 (40{val=parts.length}) (236{val===}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (40{val=parts.length}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=userOrderedInputs}) (235{val=.}) (802{val=containsAll}) (214{val=(}) (800{val=rootInputs}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=nameNode}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (800{val=name}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (40{val=current.renameMap}) (235{val=.}) (802{val=containsKey}) (214{val=(}) (800{val=name}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=fnNode}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=callNode}) (235{val=.}) (802{val=isCall}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=ORDER_CODE_REPLACEMENTS}) (235{val=.}) (802{val=isOrdered}) (214{val=(}) (800{val=replacements}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=ORDER_CODE_REPLACEMENTS}) (235{val=.}) (802{val=isOrdered}) (214{val=(}) (800{val=replacements}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=namespaceType})) (236{val===}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=interfaceType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=node}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=J2clSourceFileChecker}) (235{val=.}) (802{val=shouldRunJ2clPasses}) (214{val=(}) (800{val=compiler}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6ScopeRoots}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=changedScopeNodes}) (234{val=,}) (315{val=this}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ProcessLabels})) (214{val=(}) (800{val=markChanges}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (802{val=RenameLabels}) (214{val=(}) (44 (83{val=final}) (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=DefaultNameSupplier})) (216{val=()})) (234{val=,}) (9{val=true}) (234{val=,}) (9{val=true}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=J2clClinitPrunerPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (32 (800{val=compiler}) (235{val=.}) (802{val=getChangedScopeNodesForPass}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=J2clEqualitySameRewriterPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (32 (800{val=compiler}) (235{val=.}) (802{val=getChangedScopeNodesForPass}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=static}) (43 (801{val=CompilerPass})) (802{val=getContextualRenameInverter}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ContextualRenameInverter})) (214{val=(}) (800{val=compiler}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (802{val=MakeDeclaredNamesUnique}) (216{val=()}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ContextualRenamer})) (216{val=()})) (234{val=,}) (9{val=true}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=EnvTypePair})) (59 (800{val=pair}) (204{val==}) (32 (802{val=analyzeExprFwd}) (214{val=(}) (800{val=prop}) (234{val=,}) (40{val=recvLvalue.env}) (234{val=,}) (16 (32 (800{val=indexType}) (235{val=.}) (802{val=isBottom}) (216{val=()})) (233{val=?}) (800{val=UNKNOWN}) (226{val=:}) (800{val=indexType})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=builder}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=typeParam}) (234{val=,}) (16 (32 (800{val=t}) (235{val=.}) (802{val=isBottom}) (216{val=()})) (233{val=?}) (800{val=UNKNOWN}) (226{val=:}) (800{val=t})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=pair}) (204{val==}) (32 (802{val=analyzeExprFwd}) (214{val=(}) (800{val=index}) (234{val=,}) (40{val=pair.env}) (234{val=,}) (16 (32 (800{val=indexType}) (235{val=.}) (802{val=isBottom}) (216{val=()})) (233{val=?}) (800{val=UNKNOWN}) (226{val=:}) (800{val=indexType})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=builder}) (235{val=.}) (802{val=addRetType}) (214{val=(}) (16 (32 (800{val=actualRetType}) (235{val=.}) (802{val=isBottom}) (216{val=()})) (233{val=?}) (800{val=TOP}) (226{val=:}) (800{val=actualRetType})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=moduleResolutionMode}) (204{val==}) (40{val=ModuleLoader.ResolutionMode.LEGACY})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testEs6ThisWithImportModule}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testError}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (40{val=Es6CheckModule.ES6_MODULE_REFERENCES_THIS}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=result}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=result}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=forAnnotations}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=sb}) (235{val=.}) (802{val=append}) (214{val=(}) (32 (802{val=getReferenceName}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=UnreachableCodeElimination})) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=removeNoOpStatements}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=create}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=UnreachableCodeElimination})) (214{val=(}) (800{val=compiler}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=create}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=UnreachableCodeElimination})) (214{val=(}) (800{val=compiler}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=J2clSourceFileChecker}) (235{val=.}) (802{val=shouldRunJ2clPasses}) (214{val=(}) (800{val=compiler}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=static}) (43 (801{val=CompilerPass})) (802{val=getContextualRenameInverter}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ContextualRenameInverter})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (802{val=MakeDeclaredNamesUnique}) (216{val=()}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ContextualRenamer})) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=J2clEqualitySameRewriterPass})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=J2clClinitPrunerPass})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ProcessLabels})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (802{val=RenameLabels}) (214{val=(}) (44 (83{val=final}) (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=DefaultNameSupplier})) (216{val=()})) (234{val=,}) (9{val=true}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=config}) (234{val=,}) (800{val=errorReporter}) (234{val=,}) (800{val=source}) (234{val=,}) (800{val=offset}) (234{val=,}) (9{val=false}) (234{val=,}) (9{val=true}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ParseResult})) (214{val=(}) (800{val=root}) (234{val=,}) (800{val=comments}) (234{val=,}) (800{val=features}) (234{val=,}) (32 (800{val=p}) (235{val=.}) (802{val=getInlineSourceMap}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=objectLit}) (204{val==}) (32 (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=getFirstChild}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (801{val=Override})) (43 (801{val=MustDef})) (802{val=createEntryLattice}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=MustDef})) (214{val=(}) (32 (800{val=jsScope}) (235{val=.}) (802{val=getVarIterable}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=JSType}) (235{val=.}) (802{val=fromObjectType}) (214{val=(}) (32 (800{val=ObjectType}) (235{val=.}) (802{val=fromNominalType}) (214{val=(}) (32 (800{val=tmp}) (235{val=.}) (802{val=instantiateGenerics}) (214{val=(}) (800{val=typeMap}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (27 (800{val=nominal}) (236{val===}) (500{val=null})) (233{val=?}) (500{val=null}) (226{val=:}) (32 (32 (800{val=nominal}) (235{val=.}) (802{val=instantiateGenerics}) (214{val=(}) (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=MAP_TO_UNKNOWN})) (215{val=)})) (235{val=.}) (802{val=getInstanceAsJSType}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=interf}) (235{val=.}) (802{val=inheritsFromIObjectReflexive}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=result}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=interf}) (235{val=.}) (802{val=instantiateGenerics}) (214{val=(}) (800{val=typeMap}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=NominalType})) (800{val=interf})) (226{val=:}) (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=getInterfaces}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=result}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=interf}) (235{val=.}) (802{val=instantiateGenerics}) (214{val=(}) (800{val=typeMap}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=getSuperClass}) (216{val=()})) (235{val=.}) (802{val=instantiateGenerics}) (214{val=(}) (800{val=typeMap}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=handleConstructorAnnotation}) (214{val=(}) (800{val=functionName}) (234{val=,}) (800{val=funNode}) (234{val=,}) (800{val=constructorType}) (234{val=,}) (800{val=parentClass}) (234{val=,}) (800{val=implementedIntfs}) (234{val=,}) (800{val=registry}) (234{val=,}) (800{val=builder}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (802{val=isInvalidatingType}) (214{val=(}) (800{val=dest}) (215{val=)}))))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (800{val=props}) (235{val=.}) (802{val=containsKey}) (214{val=(}) (800{val=propName}) (215{val=)}))) (249{val=&&}) (38 (207{val=!}) (32 (802{val=isInvalidatingType}) (214{val=(}) (800{val=type}) (215{val=)}))) (249{val=&&}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isImmutableValue}) (214{val=(}) (800{val=value}) (215{val=)})) (249{val=&&}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isExecutedExactlyOnce}) (214{val=(}) (800{val=value}) (215{val=)}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=fn}) (204{val==}) (16 (27 (800{val=fn}) (236{val===}) (500{val=null})) (233{val=?}) (500{val=null}) (226{val=:}) (32 (800{val=fn}) (235{val=.}) (802{val=withLoose}) (216{val=()})))) (227{val=;})) (21 (7 (800{val=props}) (204{val==}) (32 (802{val=joinPropsLoosely}) (214{val=(}) (800{val=commonTypes}) (234{val=,}) (40{val=obj1.props}) (234{val=,}) (40{val=obj2.props}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=props}) (204{val==}) (32 (802{val=joinPropsLoosely}) (214{val=(}) (800{val=commonTypes}) (234{val=,}) (40{val=obj1.props}) (234{val=,}) (40{val=obj2.props}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=doSlicing}) (215{val=)}) (8 (218{val={}) (21 (7 (40{val=pair.env}) (204{val==}) (32 (802{val=envPutType}) (214{val=(}) (40{val=pair.env}) (234{val=,}) (800{val=name}) (234{val=,}) (16 (27 (800{val=declType}) (242{val=!=}) (500{val=null})) (233{val=?}) (800{val=declType}) (226{val=:}) (800{val=UNKNOWN})) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=preciseType}) (204{val==}) (16 (27 (800{val=declType}) (236{val===}) (500{val=null})) (233{val=?}) (800{val=requiredType}) (226{val=:}) (800{val=declType}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=JSType})) (59 (800{val=result}) (204{val==}) (32 (800{val=ft}) (235{val=.}) (802{val=getSuperPrototype}) (216{val=()}))) (227{val=;})) (21 (7 (40{val=pair.type}) (204{val==}) (16 (27 (800{val=result}) (242{val=!=}) (500{val=null})) (233{val=?}) (800{val=result}) (226{val=:}) (800{val=UNDEFINED}))) (227{val=;})) (41 (329{val=return}) (800{val=pair}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=JSType})) (59 (800{val=tmp}) (204{val==}) (32 (800{val=t}) (235{val=.}) (802{val=getIndexedType}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (16 (27 (800{val=tmp}) (236{val===}) (500{val=null})) (233{val=?}) (800{val=UNKNOWN}) (226{val=:}) (800{val=tmp})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=declRetType}) (204{val==}) (16 (27 (800{val=declRetType}) (236{val===}) (500{val=null})) (233{val=?}) (800{val=UNKNOWN}) (226{val=:}) (800{val=declRetType}))) (227{val=;})))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalStateException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=InstrumentFunctions})) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=functionNames}) (234{val=,}) (40{val=options.instrumentationTemplate}) (234{val=,}) (40{val=options.appNameStr}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=variableMap}) (204{val==}) (32 (802{val=runVariableRenaming}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=prevVariableMap}) (234{val=,}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=propertyMap}) (204{val==}) (32 (800{val=rprop}) (235{val=.}) (802{val=getPropertyMap}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=anonymousFunctionNameMap}) (204{val==}) (32 (800{val=naf}) (235{val=.}) (802{val=getFunctionMap}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=CrossModuleMethodMotion})) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=crossModuleIdGenerator}) (234{val=,}) (40{val=options.removeUnusedPrototypePropertiesInExterns}) (234{val=,}) (40{val=options.crossModuleCodeMotionNoStubMethods}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=stringMap}) (204{val==}) (32 (800{val=pass}) (235{val=.}) (802{val=getStringMap}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=idGeneratorMap}) (204{val==}) (32 (800{val=pass}) (235{val=.}) (802{val=getSerializedIdMappings}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=functionNames}) (204{val==}) (32 (800{val=pass}) (235{val=.}) (802{val=getFunctionNames}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=cssNames}) (204{val==}) (800{val=newCssNames})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=CrossModuleMethodMotion})) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (40{val=CrossModuleMethodMotion.IdGenerator})) (216{val=()})) (234{val=,}) (800{val=canMoveExterns}) (234{val=,}) (800{val=noStubs}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=shouldPreservesGoogProvidesAndRequires}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (22 (315{val=this}) (235{val=.}) (800{val=preserveGoogProvidesAndRequires})) (250{val=||}) (32 (315{val=this}) (235{val=.}) (802{val=shouldGenerateTypedExterns}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=preserveGoogProvidesAndRequires}) (204{val==}) (9{val=false})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=static}) (43 (801{val=Matcher})) (802{val=googModuleOrProvide}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=anyOf}) (214{val=(}) (32 (802{val=functionCall}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=functionCall}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=expectedCode}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (802{val=testModules}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (802{val=parse}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=skipStringLiteralEscapeSequence}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=private}) (39{val=boolean}) (802{val=skipStringLiteralChar}) (216{val=()}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (802{val=peek}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=skipStringLiteralEscapeSequence}) (216{val=()})) (227{val=;})) (219{val=}}))) (21 (32 (802{val=nextChar}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (802{val=isUnknown}) (216{val=()})) (250{val=||}) (36 (214{val=(}) (27 (32 (802{val=isUnknownObject}) (216{val=()})) (249{val=&&}) (32 (802{val=isLoose}) (216{val=()}))) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (27 (800{val=ft}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=ft}) (235{val=.}) (802{val=isTopFunction}) (216{val=()}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (27 (27 (27 (800{val=objType}) (236{val===}) (500{val=null})) (250{val=||}) (32 (800{val=types}) (235{val=.}) (802{val=contains}) (214{val=(}) (800{val=objType}) (215{val=)}))) (250{val=||}) (32 (800{val=objType}) (235{val=.}) (802{val=isUnknownObject}) (216{val=()}))) (250{val=||}) (32 (800{val=objType}) (235{val=.}) (802{val=isUnknownType}) (216{val=()}))) (250{val=||}) (32 (800{val=objType}) (235{val=.}) (802{val=isBottom}) (216{val=()}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (800{val=objType}) (235{val=.}) (802{val=isUnknownObject}) (216{val=()})) (250{val=||}) (36 (214{val=(}) (27 (27 (27 (800{val=ft}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=ft}) (235{val=.}) (802{val=isConstructor}) (216{val=()}))) (249{val=&&}) (32 (802{val=isInvalidatingType}) (214{val=(}) (32 (800{val=ft}) (235{val=.}) (802{val=getInstanceType}) (216{val=()})) (215{val=)}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=JSType})) (800{val=type})))
(AST_ROOT_SC2NF (44 (43 (801{val=JSType})) (800{val=type})))
(AST_ROOT_SC2NF (44 (43 (801{val=JSType})) (800{val=type})))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=mustReplaceThisAndArguments}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=thisAndArgumentsContext}) (235{val=.}) (802{val=isAsyncContext}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (32 (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isCall}) (216{val=()})) (249{val=&&}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isCallOrNewTarget}) (214{val=(}) (800{val=parent}) (215{val=)}))))
(AST_ROOT_SC2NF (21 (32 (802{val=checkArgument}) (214{val=(}) (32 (800{val=expr}) (235{val=.}) (802{val=isCall}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkArgument}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (250{val=||}) (36 (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isName}) (216{val=()})) (249{val=&&}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isCallOrNewTarget}) (214{val=(}) (800{val=n}) (215{val=)}))) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=analyzeCallNodeArgsFwdWhenError}) (214{val=(}) (800{val=call}) (234{val=,}) (800{val=inEnv}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=pname}) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=env}) (235{val=.}) (802{val=getType}) (214{val=(}) (800{val=pname}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=FunctionTypeI})) (800{val=impl})) (226{val=:}) (32 (800{val=constructor}) (235{val=.}) (802{val=getSubTypes}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=list}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=impl}) (235{val=.}) (802{val=getInstanceType}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=constructor}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=FunctionTypeI})) (800{val=subType})) (226{val=:}) (32 (800{val=constructor}) (235{val=.}) (802{val=getSubTypes}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=addRelatedInstance}) (214{val=(}) (800{val=subType}) (234{val=,}) (800{val=related}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=expectedCode}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=shouldPreservesGoogProvidesAndRequires}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (22 (315{val=this}) (235{val=.}) (800{val=preserveClosurePrimitives})) (250{val=||}) (32 (315{val=this}) (235{val=.}) (802{val=shouldGenerateTypedExterns}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=preserveClosurePrimitives}) (204{val==}) (9{val=false})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.LINT_CHECKS}) (234{val=,}) (40{val=CheckLevel.WARNING}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=typeCheck}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (40{val=NewTypeInference.TEMPLATE_ARGUMENT_MISMATCH}) (234{val=,}) (40{val=NewTypeInference.WRONG_ARGUMENT_COUNT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (800{val=TEST_EXTERNS}) (200{val=+}) (800{val=externs})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=GlobalTypeInfo.REDECLARED_PROPERTY}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (800{val=TEST_EXTERNS}) (200{val=+}) (800{val=externs})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=GlobalTypeInfo.REDECLARED_PROPERTY}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=typeCheck}) (214{val=(}) (800{val=js}) (234{val=,}) (40{val=GlobalTypeInfo.CTOR_IN_DIFFERENT_SCOPE}) (234{val=,}) (40{val=NewTypeInference.MISTYPED_ASSIGN_RHS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=typeCheck}) (214{val=(}) (800{val=js}) (234{val=,}) (40{val=GlobalTypeInfo.ANONYMOUS_NOMINAL_TYPE}) (234{val=,}) (40{val=GlobalTypeInfo.ANONYMOUS_NOMINAL_TYPE}) (234{val=,}) (40{val=NewTypeInference.MISTYPED_ASSIGN_RHS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=typeCheck}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=GlobalTypeInfo.INEXISTENT_PARAM}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=typeCheck}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (40{val=GlobalTypeInfo.WRONG_PARAMETER_COUNT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testUnknownTypeReferenceDoesntCrash}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=typeCheck}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (40{val=GlobalTypeInfo.UNRECOGNIZED_TYPE_NAME}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=typeCheck}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=GlobalTypeInfo.INEXISTENT_PARAM}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testVarDecls}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=typeCheck}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=GlobalTypeInfo.ONE_TYPE_FOR_MANY_VARS}) (215{val=)})) (227{val=;})) (21 (32 (802{val=typeCheck}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=NewTypeInference.MISTYPED_ASSIGN_RHS}) (215{val=)})) (227{val=;})) (21 (32 (802{val=typeCheck}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=NewTypeInference.MISTYPED_ASSIGN_RHS}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=typeCheck}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=GlobalTypeInfo.UNRECOGNIZED_TYPE_NAME}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=typeCheck}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=GlobalTypeInfo.UNRECOGNIZED_TYPE_NAME}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=DEFAULT_EXTERNS}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=GlobalTypeInfo.UNRECOGNIZED_TYPE_NAME}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=symbolTable})) (204{val==}) (11 (214{val=(}) (43 (800{val=GlobalTypeInfo})) (215{val=)}) (32 (800{val=compiler}) (235{val=.}) (802{val=getSymbolTable}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (802{val=makePassFactory}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=compiler}) (235{val=.}) (802{val=getSymbolTable}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=options}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=GlobalTypeInfo.UNRECOGNIZED_TYPE_NAME}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=create}) (214{val=(}) (44 (83{val=final}) (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=compiler}) (235{val=.}) (802{val=getSymbolTable}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=symbolTable}) (204{val==}) (40{val=compilerState.symbolTable})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=symbolTable})) (204{val==}) (40{val=compiler.symbolTable})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (32 (802{val=getSymbolTable}) (216{val=()})) (235{val=.}) (802{val=getImplicitInterfaceUses}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (32 (802{val=getSymbolTable}) (216{val=()})) (235{val=.}) (802{val=getMismatches}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=symbolTable}) (204{val==}) (500{val=null})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=typeCheck}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (40{val=GlobalTypeInfo.INVALID_PROP_OVERRIDE}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=ignoreWarnings}) (214{val=(}) (40{val=GlobalTypeInfo.INTERFACE_METHOD_NOT_IMPLEMENTED}) (234{val=,}) (40{val=TypeValidator.INTERFACE_METHOD_NOT_IMPLEMENTED}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=parseWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (802{val=getRequiresEs6Message}) (214{val=(}) (40{val=Feature.DESTRUCTURING}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=parseWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (802{val=getRequiresEs6Message}) (214{val=(}) (40{val=Feature.DESTRUCTURING}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=parseWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=TRAILING_COMMA_MESSAGE}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=parseWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=TRAILING_COMMA_MESSAGE}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=parseWarning}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=warning}) (234{val=,}) (800{val=warning}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=Node})) (800{val=ast})))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=union}) (214{val=(}) (32 (800{val=factory}) (235{val=.}) (802{val=getFeatures}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (32 (800{val=ImmutableMap}) (235{val=.}) (230{val=<}) (43 (800{val=Pattern})) (234{val=,}) (43 (800{val=DiagnosticType})) (231{val=>}) (802{val=builder}) (216{val=()})) (235{val=.}) (802{val=put}) (214{val=(}) (32 (800{val=Pattern}) (235{val=.}) (802{val=compile}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (800{val=TRAILING_COMMA}) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=union}) (214{val=(}) (40{val=FeatureSet.TYPESCRIPT}) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (22 (32 (802{val=nextToken}) (216{val=()})) (235{val=.}) (800{val=type})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=parseWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (802{val=getRequiresEs6Message}) (214{val=(}) (40{val=Feature.DESTRUCTURING}) (215{val=)})) (234{val=,}) (32 (802{val=getRequiresEs6Message}) (214{val=(}) (40{val=Feature.ARRAY_PATTERN_REST}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=parseWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (802{val=getRequiresEs6Message}) (214{val=(}) (40{val=Feature.DESTRUCTURING}) (215{val=)})) (234{val=,}) (32 (802{val=getRequiresEs6Message}) (214{val=(}) (40{val=Feature.ARRAY_PATTERN_REST}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=parseWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (802{val=requiresLanguageModeMessage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT5}) (234{val=,}) (40{val=Feature.TRAILING_COMMA}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=parseWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (802{val=requiresLanguageModeMessage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT5}) (234{val=,}) (40{val=Feature.TRAILING_COMMA}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=parseWarning}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=warning}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (78 (208{val=@}) (801{val=Nullable})) (43 (801{val=Node})) (800{val=ast})))
(AST_ROOT_SC2NF (21 (7 (800{val=features}) (204{val==}) (32 (800{val=factory}) (235{val=.}) (802{val=getFeatures}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (32 (800{val=ImmutableMap}) (235{val=.}) (230{val=<}) (43 (800{val=Pattern})) (234{val=,}) (43 (800{val=DiagnosticType})) (231{val=>}) (802{val=builder}) (216{val=()})) (235{val=.}) (802{val=put}) (214{val=(}) (32 (800{val=Pattern}) (235{val=.}) (802{val=compile}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (234{val=,}) (800{val=TRAILING_COMMA}) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=with}) (214{val=(}) (40{val=Feature.ACCESSIBILITY_MODIFIER}) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (22 (32 (802{val=nextToken}) (216{val=()})) (235{val=.}) (800{val=type})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=CheckRequiresForConstructors})) (214{val=(}) (800{val=compiler}) (234{val=,}) (40{val=CheckRequiresForConstructors.Mode.SINGLE_FILE}) (215{val=)})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=CheckRequiresForConstructors})) (214{val=(}) (800{val=compiler}) (234{val=,}) (40{val=CheckRequiresForConstructors.Mode.FULL_COMPILE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (83{val=final}) (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=CheckRequiresForConstructors})) (214{val=(}) (800{val=compiler}) (234{val=,}) (40{val=CheckRequiresForConstructors.Mode.SINGLE_FILE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=HotSwapCompilerPass})) (802{val=create}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=CheckRequiresForConstructors})) (214{val=(}) (800{val=compiler}) (234{val=,}) (40{val=CheckRequiresForConstructors.Mode.FULL_COMPILE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFailGoogArray}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=mode}) (204{val==}) (40{val=CheckRequiresForConstructors.Mode.SINGLE_FILE})) (227{val=;})) (21 (32 (802{val=testMissingRequireStrict}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFailConstant}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=mode}) (204{val==}) (40{val=CheckRequiresForConstructors.Mode.SINGLE_FILE})) (227{val=;})) (21 (32 (802{val=testMissingRequireStrict}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testMissingRequireStrict}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=CheckRequiresForConstructors})) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=mode}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2017}) (215{val=)})) (227{val=;})) (21 (7 (800{val=mode}) (204{val==}) (40{val=CheckRequiresForConstructors.Mode.FULL_COMPILE})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=n}) (235{val=.}) (802{val=isName}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=ARGUMENT_ARRAY_ALIAS}) (215{val=)})) (249{val=&&}) (36 (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=jsScope}) (235{val=.}) (802{val=isDeclaredSloppy}) (214{val=(}) (800{val=ARGUMENT_ARRAY_ALIAS}) (234{val=,}) (9{val=false}) (215{val=)}))) (250{val=||}) (38 (207{val=!}) (800{val=childDeclared}))) (215{val=)}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isName}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=ARGUMENT_ARRAY_ALIAS}) (215{val=)})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=jsScope}) (235{val=.}) (802{val=isDeclaredSloppy}) (214{val=(}) (800{val=ARGUMENT_ARRAY_ALIAS}) (234{val=,}) (9{val=false}) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=jsScope}) (235{val=.}) (802{val=isDeclaredSloppy}) (214{val=(}) (800{val=name}) (234{val=,}) (9{val=false}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (800{val=fBlockScope}) (235{val=.}) (802{val=isDeclaredSloppy}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (800{val=fBlockScope}) (235{val=.}) (802{val=isDeclaredSloppy}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (800{val=fBlockScope}) (235{val=.}) (802{val=isDeclaredSloppy}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=functionBlockScope}) (235{val=.}) (802{val=isDeclaredSloppy}) (214{val=(}) (800{val=name}) (234{val=,}) (9{val=false}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=current}) (235{val=.}) (802{val=isDeclaredSloppy}) (214{val=(}) (800{val=oldName}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (7 (800{val=current}) (204{val==}) (32 (800{val=current}) (235{val=.}) (802{val=getParent}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=expectedCode}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=shouldPreservesGoogProvidesAndRequires}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (22 (315{val=this}) (235{val=.}) (800{val=preserveGoogProvidesAndRequires})) (250{val=||}) (32 (315{val=this}) (235{val=.}) (802{val=shouldGenerateTypedExterns}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=preserveGoogProvidesAndRequires}) (204{val==}) (9{val=false})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=static}) (43 (801{val=Matcher})) (802{val=googModuleOrProvide}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=anyOf}) (214{val=(}) (32 (802{val=functionCall}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=functionCall}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=maybeProcessAccessibilityModifier}) (214{val=(}) (800{val=member}) (234{val=,}) (40{val=tree.access}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=maybeProcessAccessibilityModifier}) (214{val=(}) (800{val=n}) (234{val=,}) (40{val=tree.access}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=maybeProcessAccessibilityModifier}) (214{val=(}) (800{val=member}) (234{val=,}) (40{val=functionTree.access}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableGatherExternProperties}) (216{val=()})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableGatherExternProperties}) (216{val=()})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_NEXT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=env}) (204{val==}) (22 (32 (802{val=analyzeExprBwd}) (214{val=(}) (32 (800{val=prop}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (800{val=env}) (234{val=,}) (800{val=enumeratedType}) (215{val=)})) (235{val=.}) (800{val=env}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=EnvTypePair})) (59 (800{val=pair}) (204{val==}) (32 (802{val=analyzeExprBwd}) (214{val=(}) (32 (800{val=prop}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (800{val=env}) (234{val=,}) (800{val=reqPtype}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EnvTypePair})) (59 (800{val=pair}) (204{val==}) (32 (802{val=analyzeExprFwd}) (214{val=(}) (32 (800{val=prop}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (800{val=env}) (234{val=,}) (800{val=enumeratedType}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EnvTypePair})) (59 (800{val=pair}) (204{val==}) (32 (802{val=analyzeExprFwd}) (214{val=(}) (32 (800{val=prop}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (800{val=env}) (234{val=,}) (800{val=reqPtype}) (234{val=,}) (800{val=specPtype}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PropertyDef})) (59 (800{val=propdef}) (204{val==}) (32 (802{val=checkNotNull}) (214{val=(}) (32 (802{val=getPropDefFromClass}) (214{val=(}) (800{val=superType}) (234{val=,}) (800{val=pname}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (22 (32 (800{val=state}) (235{val=.}) (802{val=getIn}) (216{val=()})) (235{val=.}) (800{val=reachingDef})) (235{val=.}) (802{val=get}) (214{val=(}) (32 (800{val=jsScope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (800{val=name}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Var})) (59 (800{val=dep}) (204{val==}) (32 (800{val=jsScope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (801{val=Override})) (43 (801{val=MustDef})) (802{val=createEntryLattice}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=MustDef})) (214{val=(}) (32 (802{val=returnAllVars}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Iterable})) (230{val=<}) (76 (233{val=?}) (332{val=extends}) (43 (800{val=Var}))) (231{val=>})) (800{val=vars})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (22 (32 (800{val=state}) (235{val=.}) (802{val=getOut}) (216{val=()})) (235{val=.}) (800{val=mayUseMap})) (235{val=.}) (802{val=get}) (214{val=(}) (32 (800{val=jsScope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (800{val=name}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Pattern})) (59 (800{val=pattern}) (204{val==}) (14 (304{val=new}) (43 (801{val=Pattern})) (216{val=()}))) (227{val=;})) (21 (7 (40{val=pattern.regExp}) (204{val==}) (32 (800{val=RegExp}) (235{val=.}) (802{val=compile}) (214{val=(}) (800{val=string}) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (800{val=pattern}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=node}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Node})) (232{val=<>})) (214{val=(}) (800{val=e}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Map})) (230{val=<}) (74 (43 (800{val=Node})) (230{val=<}) (43 (800{val=E})) (231{val=>})) (234{val=,}) (74 (43 (40{val=ImmutableSet.Builder})) (230{val=<}) (43 (800{val=E})) (231{val=>})) (231{val=>})) (59 (800{val=groupsTmp}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=E})) (800{val=e})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=add}) (214{val=(}) (44 (43 (801{val=E})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=union}) (214{val=(}) (800{val=e}) (234{val=,}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=E})) (800{val=elem})) (226{val=:}) (32 (800{val=other}) (235{val=.}) (802{val=elements}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=union}) (214{val=(}) (800{val=elem}) (234{val=,}) (32 (800{val=other}) (235{val=.}) (802{val=find}) (214{val=(}) (800{val=elem}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testUnusedLocalConst_withES6Modules}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=enableUnusedLocalAssignmentCheck}) (204{val==}) (9{val=true})) (227{val=;})) (21 (32 (802{val=assertUnusedEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testUnusedLocalConst}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=enableUnusedLocalAssignmentCheck}) (204{val==}) (9{val=true})) (227{val=;})) (21 (32 (802{val=assertUnusedEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testUnusedLocalLet_withES6Modules}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=enableUnusedLocalAssignmentCheck}) (204{val==}) (9{val=true})) (227{val=;})) (21 (32 (802{val=assertUnusedEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=enableUnusedLocalAssignmentCheck}) (204{val==}) (9{val=true})) (227{val=;})) (21 (32 (802{val=assertUnused}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertUnusedEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertUnusedEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testDefaultParam_withES6Modules}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=assertEarlyReferenceError}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertNoWarningEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testES6Module_destructuring}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=enableUnusedLocalAssignmentCheck}) (204{val==}) (9{val=true})) (227{val=;})) (21 (32 (802{val=assertNoWarningEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testUnusedCompoundAssign_withES6Modules}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=assertNoWarningEs6}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testUsedInShorthandObjLit_withES6Modules}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=enableUnusedLocalAssignmentCheck}) (204{val==}) (9{val=true})) (227{val=;})) (21 (32 (802{val=assertUndeclaredEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertUndeclaredEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testForOf}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=assertEarlyReferenceError}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertNoWarningEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testRedeclare_withES6Modules}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=assertRedeclare}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertNoWarningEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertNoWarningEs6}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=isVar}) (216{val=()})))
(AST_ROOT_SC2NF (44 (43 (801{val=Pattern})) (800{val=includeFilePattern})))
(AST_ROOT_SC2NF (21 (32 (32 (14 (304{val=new}) (43 (801{val=ProcessDefines})) (214{val=(}) (800{val=compiler}) (234{val=,}) (32 (800{val=ImmutableMap}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=replacements}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=injectNamespace}) (214{val=(}) (800{val=namespaceForChecks}) (215{val=)})) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=jsRoot}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Set})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (59 (800{val=defines}) (204{val==}) (32 (32 (14 (304{val=new}) (43 (801{val=ProcessDefines})) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (215{val=)})) (235{val=.}) (802{val=collectDefines}) (214{val=(}) (800{val=root}) (215{val=)})) (235{val=.}) (802{val=keySet}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=overrideDefines}) (214{val=(}) (32 (802{val=collectDefines}) (214{val=(}) (800{val=root}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (7 (800{val=mode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT3})) (227{val=;})) (21 (7 (800{val=strictMode}) (204{val==}) (800{val=SLOPPY})) (227{val=;})) (21 (7 (800{val=isIdeMode}) (204{val==}) (9{val=false})) (227{val=;})) (21 (7 (800{val=expectedFeatures}) (204{val==}) (40{val=FeatureSet.ES3})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (32 (800{val=EnumSet}) (235{val=.}) (802{val=of}) (214{val=(}) (40{val=TokenType.IDENTIFIER}) (234{val=,}) (40{val=TokenType.TYPE}) (234{val=,}) (40{val=TokenType.DECLARE}) (234{val=,}) (40{val=TokenType.MODULE}) (234{val=,}) (40{val=TokenType.NAMESPACE}) (215{val=)})) (235{val=.}) (802{val=contains}) (214{val=(}) (800{val=type}) (215{val=)})))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (802{val=peekId}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (32 (800{val=EnumSet}) (235{val=.}) (802{val=of}) (214{val=(}) (40{val=TokenType.VOID}) (234{val=,}) (40{val=TokenType.OPEN_PAREN}) (234{val=,}) (40{val=TokenType.OPEN_CURLY}) (234{val=,}) (40{val=TokenType.TYPEOF}) (215{val=)})) (235{val=.}) (802{val=contains}) (214{val=(}) (32 (802{val=peekType}) (216{val=()})) (215{val=)})))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (7 (800{val=mode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT3})) (227{val=;})) (21 (7 (800{val=strictMode}) (204{val==}) (800{val=SLOPPY})) (227{val=;})) (21 (7 (800{val=isIdeMode}) (204{val==}) (9{val=false})) (227{val=;})) (21 (7 (800{val=expectedFeatures}) (204{val==}) (40{val=FeatureSet.BARE_MINIMUM})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=recordPropertyName}) (214{val=(}) (32 (32 (800{val=getProp}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=getString}) (216{val=()})) (234{val=,}) (800{val=getProp}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=recordPropertyName}) (214{val=(}) (800{val=pname}) (234{val=,}) (800{val=qnameNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Function})) (230{val=<}) (43 (800{val=String})) (234{val=,}) (43 (800{val=Void})) (231{val=>})) (800{val=recordPropertyName})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (7 (800{val=mode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT3})) (227{val=;})) (21 (7 (800{val=strictMode}) (204{val==}) (800{val=SLOPPY})) (227{val=;})) (21 (7 (800{val=isIdeMode}) (204{val==}) (9{val=false})) (227{val=;})) (21 (7 (800{val=expectedFeatures}) (204{val==}) (40{val=FeatureSet.ES3})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (14 (304{val=new}) (43 (801{val=ProcessDefines})) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=overrides}) (234{val=,}) (9{val=false}) (215{val=)})) (235{val=.}) (802{val=injectNamespace}) (214{val=(}) (800{val=namespace}) (215{val=)})) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (14 (304{val=new}) (43 (801{val=ProcessDefines})) (214{val=(}) (800{val=compiler}) (234{val=,}) (32 (800{val=ImmutableMap}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=replacements}) (215{val=)})) (234{val=,}) (40{val=options.checksOnly}) (215{val=)})) (235{val=.}) (802{val=injectNamespace}) (214{val=(}) (800{val=namespaceForChecks}) (215{val=)})) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=jsRoot}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Set})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (59 (800{val=defines}) (204{val==}) (32 (32 (14 (304{val=new}) (43 (801{val=ProcessDefines})) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (234{val=,}) (9{val=false}) (215{val=)})) (235{val=.}) (802{val=collectDefines}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (235{val=.}) (802{val=keySet}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (36 (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isName}) (216{val=()})) (215{val=)})) (249{val=&&}) (32 (802{val=isDeclaration}) (214{val=(}) (800{val=n}) (215{val=)}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=isAsyncFunction}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getBooleanProp}) (214{val=(}) (800{val=ASYNC_FN}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=isArrowFunction}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getBooleanProp}) (214{val=(}) (800{val=ARROW_FN}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=key}) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (215{val=)}) (8 (218{val={}) (500{val=continue;}) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (802{val=isInvalidatingType}) (214{val=(}) (800{val=recvType}) (215{val=)})) (250{val=||}) (32 (802{val=isStructuralInterfacePrototype}) (214{val=(}) (800{val=recv}) (215{val=)}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (802{val=isInvalidatingType}) (214{val=(}) (800{val=type}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=invalidate}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))) (21 (32 (800{val=rootTypesByNode}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=node}) (234{val=,}) (800{val=type}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isInvalidatingType}) (214{val=(}) (800{val=top}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=invalidate}) (216{val=()})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=PolymerPassStaticUtils}) (235{val=.}) (802{val=extractProperties}) (214{val=(}) (800{val=behaviorValue}) (234{val=,}) (800{val=compiler}) (215{val=)})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=MemberDefinition})) (231{val=>})) (59 (800{val=properties}) (204{val==}) (32 (800{val=PolymerPassStaticUtils}) (235{val=.}) (802{val=extractProperties}) (214{val=(}) (800{val=behaviorValue}) (234{val=,}) (800{val=compiler}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (14 (304{val=new}) (43 (801{val=PolymerPass})) (214{val=(}) (800{val=compiler}) (215{val=)})) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (14 (304{val=new}) (43 (801{val=PolymerPass})) (214{val=(}) (800{val=compiler}) (215{val=)})) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externsRoot}) (234{val=,}) (800{val=mainRoot}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PolymerClassDefinition})) (59 (800{val=def}) (204{val==}) (32 (802{val=parseAndExtractClassDef}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PolymerClassDefinition})) (59 (800{val=def}) (204{val==}) (32 (802{val=parseAndExtractClassDef}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PolymerClassDefinition})) (59 (800{val=def}) (204{val==}) (32 (802{val=parseAndExtractClassDef}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PolymerClassDefinition})) (59 (800{val=def}) (204{val==}) (32 (802{val=parseAndExtractClassDef}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Property})) (59 (800{val=p}) (204{val==}) (32 (802{val=getProp}) (214{val=(}) (800{val=pname}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Property})) (59 (800{val=p}) (204{val==}) (32 (802{val=getPropFromClass}) (214{val=(}) (800{val=pname}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=rhs}) (235{val=.}) (802{val=matchesQualifiedName}) (214{val=(}) (800{val=ABSTRACT_METHOD_NAME}) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (32 (800{val=GlobalTypeInfo}) (235{val=.}) (802{val=isCtorDefinedByCall}) (214{val=(}) (800{val=lhs}) (215{val=)})) (249{val=&&}) (38 (207{val=!}) (32 (802{val=isFunctionBind}) (214{val=(}) (32 (800{val=rhs}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (800{val=inEnv}) (234{val=,}) (9{val=true}) (215{val=)})))) (215{val=)}))))
(AST_ROOT_SC2NF (36 (214{val=(}) (27 (32 (800{val=GlobalTypeInfo}) (235{val=.}) (802{val=isCtorDefinedByCall}) (214{val=(}) (800{val=nameNode}) (215{val=)})) (249{val=&&}) (38 (207{val=!}) (32 (802{val=isFunctionBind}) (214{val=(}) (32 (800{val=rhs}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (800{val=inEnv}) (234{val=,}) (9{val=true}) (215{val=)})))) (215{val=)})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=maybeWin}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=maybeWin}) (235{val=.}) (802{val=getProp}) (214{val=(}) (800{val=pname}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (22 (315{val=this}) (235{val=.}) (800{val=nominalType})) (235{val=.}) (802{val=getProp}) (214{val=(}) (800{val=pname}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=nom}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=nom}) (235{val=.}) (802{val=getProp}) (214{val=(}) (800{val=pname}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Property})) (59 (800{val=p}) (204{val==}) (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=getProp}) (214{val=(}) (800{val=pname}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Property})) (59 (800{val=p}) (204{val==}) (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=getOwnProp}) (214{val=(}) (800{val=pname}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (36 (214{val=(}) (27 (27 (32 (800{val=ns}) (235{val=.}) (802{val=hasProp}) (214{val=(}) (800{val=pname}) (215{val=)})) (249{val=&&}) (27 (800{val=previousPropType}) (242{val=!=}) (500{val=null}))) (249{val=&&}) (38 (207{val=!}) (32 (802{val=suppressDupPropWarning}) (214{val=(}) (800{val=jsdoc}) (234{val=,}) (800{val=propDeclType}) (234{val=,}) (800{val=previousPropType}) (215{val=)})))) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=GlobalTypeInfo}) (235{val=.}) (802{val=isCtorDefinedByCall}) (214{val=(}) (800{val=getProp}) (215{val=)})))
(AST_ROOT_SC2NF (27 (27 (32 (800{val=classType}) (235{val=.}) (802{val=hasCtorProp}) (214{val=(}) (800{val=pname}) (215{val=)})) (249{val=&&}) (27 (800{val=previousPropType}) (242{val=!=}) (500{val=null}))) (249{val=&&}) (38 (207{val=!}) (32 (802{val=suppressDupPropWarning}) (214{val=(}) (800{val=jsdoc}) (234{val=,}) (800{val=propDeclType}) (234{val=,}) (800{val=previousPropType}) (215{val=)})))))
(AST_ROOT_SC2NF (32 (800{val=GlobalTypeInfo}) (235{val=.}) (802{val=isCtorDefinedByCall}) (214{val=(}) (800{val=nameNode}) (215{val=)})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=CompilerPass})) (59 (800{val=simplifier}) (204{val==}) (14 (304{val=new}) (43 (801{val=PeepholeOptimizationsPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=PeepholeSimplifyRegExp})) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PeepholeOptimizationsPass})) (59 (800{val=peepholePass}) (204{val==}) (14 (304{val=new}) (43 (801{val=PeepholeOptimizationsPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=PeepholeRemoveDeadCode})) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=PeepholeOptimizationsPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ExploitAssigns})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=PeepholeOptimizationsPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ReorderConstantExpression})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=PeepholeOptimizationsPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=PeepholeCollectPropertyAssignments})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=PeepholeOptimizationsPass})) (59 (800{val=peepholePass}) (204{val==}) (14 (304{val=new}) (43 (801{val=PeepholeOptimizationsPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=PeepholeSubstituteAlternateSyntax})) (214{val=(}) (800{val=late}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=PeepholeOptimizationsPass})) (59 (800{val=peepholePass}) (204{val==}) (14 (304{val=new}) (43 (801{val=PeepholeOptimizationsPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=StatementFusion})) (214{val=(}) (800{val=favorsCommas}) (215{val=)})) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (800{val=peepholePass}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=PeepholeOptimizationsPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ExploitAssigns})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=create}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=createPeepholeOptimizationsPass}) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=create}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=createPeepholeOptimizationsPass}) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=PeepholeOptimizationsPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=PeepholeRemoveDeadCode})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=computeEscaped}) (214{val=(}) (32 (800{val=jsScope}) (235{val=.}) (802{val=getParent}) (216{val=()})) (234{val=,}) (800{val=jsScope}) (234{val=,}) (800{val=escaped}) (234{val=,}) (800{val=compiler}) (234{val=,}) (800{val=scopeCreator}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=computeEscaped}) (214{val=(}) (32 (800{val=jsScope}) (235{val=.}) (802{val=getParent}) (216{val=()})) (234{val=,}) (800{val=jsScope}) (234{val=,}) (800{val=escaped}) (234{val=,}) (800{val=compiler}) (234{val=,}) (800{val=scopeCreator}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=computeEscaped}) (214{val=(}) (800{val=jsScope}) (234{val=,}) (800{val=jsScopeChild}) (234{val=,}) (800{val=escaped}) (234{val=,}) (800{val=compiler}) (234{val=,}) (800{val=scopeCreator}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=isObjLit}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=declareVarsForObjLitValues}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=alias}) (234{val=,}) (800{val=rvalue}) (234{val=,}) (800{val=varNode}) (234{val=,}) (32 (800{val=varNode}) (235{val=.}) (802{val=getPrevious}) (216{val=()})) (234{val=,}) (800{val=varParent}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (800{val=inExterns}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (800{val=isExtern}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=inExterns}) (215{val=)}) (227{val=;})) (21 (32 (802{val=checkArgument}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isAssign}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (7 (800{val=assignment}) (204{val==}) (800{val=node})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=inExterns}) (215{val=)}) (227{val=;})) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isClass}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (7 (800{val=c}) (204{val==}) (800{val=node})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=inExterns}) (215{val=)}) (227{val=;})) (21 (32 (802{val=checkArgument}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (7 (800{val=function}) (204{val==}) (800{val=node})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (800{val=inExterns}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Property})) (59 (800{val=p}) (204{val==}) (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=getProp}) (214{val=(}) (800{val=pname}) (234{val=,}) (40{val=PropAccess.INCLUDE_STRAY_PROPS}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=superType}) (235{val=.}) (802{val=isInterface}) (216{val=()})) (249{val=&&}) (32 (800{val=current}) (235{val=.}) (802{val=isClass}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (802{val=isCtorDefinedByCall}) (214{val=(}) (800{val=current}) (215{val=)}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=current}) (235{val=.}) (802{val=mayHaveProp}) (214{val=(}) (800{val=pname}) (215{val=)})))))
(AST_ROOT_SC2NF (27 (32 (800{val=superClass}) (235{val=.}) (802{val=isAbstractClass}) (216{val=()})) (249{val=&&}) (32 (800{val=superClass}) (235{val=.}) (802{val=hasAbstractMethod}) (214{val=(}) (800{val=pname}) (215{val=)})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=rawType}) (235{val=.}) (802{val=isAbstractClass}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=rawType}) (235{val=.}) (802{val=mayHaveOwnProp}) (214{val=(}) (800{val=pname}) (215{val=)})))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=maybeWin}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=maybeWin}) (235{val=.}) (802{val=getProp}) (214{val=(}) (800{val=pname}) (234{val=,}) (40{val=PropAccess.INCLUDE_STRAY_PROPS}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=apply}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=n})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=isFunctionDeclaration}) (214{val=(}) (800{val=n}) (215{val=)})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isVar}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=isVar}) (216{val=()})))
(AST_ROOT_SC2NF (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isVar}) (216{val=()})))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isVarOrSimpleAssignLhs}) (214{val=(}) (800{val=callNode}) (234{val=,}) (800{val=parent}) (215{val=)}))))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isVarOrSimpleAssignLhs}) (214{val=(}) (800{val=name}) (234{val=,}) (32 (800{val=name}) (235{val=.}) (802{val=getParent}) (216{val=()})) (215{val=)}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isVarOrSimpleAssignLhs}) (214{val=(}) (800{val=parent}) (234{val=,}) (800{val=grandparent}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=validProperties}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=propName}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isVarOrSimpleAssignLhs}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isVarOrSimpleAssignLhs}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)})) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=referring}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=recordReference}) (214{val=(}) (800{val=referringName}) (234{val=,}) (800{val=name}) (234{val=,}) (40{val=RefType.REGULAR}) (215{val=)})) (227{val=;})) (219{val=}}))) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isVarOrSimpleAssignLhs}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=nextParent}) (236{val===}) (500{val=null})) (250{val=||}) (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isVarOrSimpleAssignLhs}) (214{val=(}) (800{val=nextNode}) (234{val=,}) (800{val=nextParent}) (215{val=)})))) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=readsState}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isVarOrSimpleAssignLhs}) (214{val=(}) (800{val=n}) (234{val=,}) (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (215{val=)})))
(AST_ROOT_SC2NF (27 (32 (800{val=dest}) (235{val=.}) (802{val=isString}) (216{val=()})) (249{val=&&}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isExprAssign}) (214{val=(}) (800{val=grandParent}) (215{val=)})) (249{val=&&}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isVarOrSimpleAssignLhs}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testEs6EnhancedObjLiteralsPropertyShorthand}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testES6ClassComputedProperty}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableGatherExternProperties}) (216{val=()})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=int}) (800{val=prop})))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=propType})))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=propType})))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=propType})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=putBooleanProp}) (214{val=(}) (44 (39{val=int}) (800{val=propType})) (234{val=,}) (44 (39{val=boolean}) (800{val=value})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=putIntProp}) (214{val=(}) (800{val=propType}) (234{val=,}) (16 (800{val=value}) (233{val=?}) (34{val=NUMBER_CONSTANT}) (226{val=:}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=propType})))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=propType})))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=propType})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=getBooleanProp}) (214{val=(}) (44 (39{val=int}) (800{val=propType})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=getIntProp}) (214{val=(}) (800{val=propType}) (215{val=)})) (242{val=!=}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=propType})))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=propType})))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=propType})))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=propType})))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=propType})))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=propType})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=int}) (802{val=getType}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=propType}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=propType})))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=propType})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Set})) (230{val=<}) (43 (800{val=Var})) (231{val=>})) (800{val=escaped})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Set})) (230{val=<}) (43 (800{val=N})) (231{val=>})) (59 (800{val=entrySet}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashSet})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Set})) (230{val=<}) (43 (800{val=N})) (231{val=>})) (59 (800{val=nodes}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashSet})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=lValueName}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getBestLValueName}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getBestLValue}) (214{val=(}) (800{val=rValue}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (802{val=isStatementBlock}) (214{val=(}) (800{val=parent}) (215{val=)})) (250{val=||}) (32 (802{val=isSwitchCase}) (214{val=(}) (800{val=node}) (215{val=)}))))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (802{val=computeEscapedLocals}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=validateChildCount}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=validateChildCount}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (802{val=validateExpression}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=validateExpression}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=private}) (39{val=void}) (802{val=validateUnaryOp}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=n})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=validateChildCount}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (802{val=validateExpression}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=ReorderConstantExpression})) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isParamList}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}})) (322{val=else}) (25 (313{val=if}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isVar}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=n}) (235{val=.}) (802{val=hasChildren}) (216{val=()})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Scope})) (231{val=>})) (59 (800{val=allScopes}) (204{val==}) (32 (800{val=liveness}) (235{val=.}) (802{val=getScopeStack}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (32 (800{val=statements}) (235{val=.}) (802{val=get}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=isMovableDeclaration}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=isTrue}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isParamList}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}})) (322{val=else}) (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isNameDeclaration}) (214{val=(}) (800{val=parent}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=n}) (235{val=.}) (802{val=hasChildren}) (216{val=()})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (59 (800{val=thisProps}) (204{val==}) (16 (27 (38 (207{val=!}) (32 (800{val=thisNt}) (235{val=.}) (802{val=isBuiltinObject}) (216{val=()}))) (249{val=&&}) (32 (800{val=thisNt}) (235{val=.}) (802{val=isStructuralInterface}) (216{val=()}))) (233{val=?}) (32 (800{val=thisNt}) (235{val=.}) (802{val=getAllPropsOfInterface}) (216{val=()})) (226{val=:}) (32 (22 (315{val=this}) (235{val=.}) (800{val=props})) (235{val=.}) (802{val=keySet}) (216{val=()})))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=otherPropNames}) (204{val==}) (32 (800{val=otherNt}) (235{val=.}) (802{val=getAllPropsOfInterface}) (216{val=()}))) (227{val=;})) (25 (313{val=if}) (214{val=(}) (27 (800{val=otherPropNames}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=QualifiedName})) (59 (800{val=setterPname}) (204{val==}) (14 (304{val=new}) (43 (801{val=QualifiedName})) (214{val=(}) (32 (800{val=JSType}) (235{val=.}) (802{val=createSetterPropName}) (214{val=(}) (32 (800{val=pname}) (235{val=.}) (802{val=getLeftmostName}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=QualifiedName})) (59 (800{val=getterPname}) (204{val==}) (14 (304{val=new}) (43 (801{val=QualifiedName})) (214{val=(}) (32 (800{val=JSType}) (235{val=.}) (802{val=createGetterPropName}) (214{val=(}) (800{val=pname}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=scopeRoots}) (235{val=.}) (802{val=push}) (214{val=(}) (800{val=node}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=validateChildCount}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (802{val=validateAssignmentTarget}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=validateExpression}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=validateAssignmentTarget}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInvalidAnnotation5}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=testWarning}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (800{val=INVALID_NO_SIDE_EFFECT_ANNOTATION}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInvalidAnnotation4}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=testWarning}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (800{val=INVALID_NO_SIDE_EFFECT_ANNOTATION}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()})) (235{val=.}) (802{val=isHoistScope}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()})) (235{val=.}) (802{val=isHoistScope}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=pop}) (214{val=(}) (800{val=blockStack}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()})) (235{val=.}) (802{val=isHoistScope}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=blockStack}) (235{val=.}) (802{val=add}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BasicBlock})) (214{val=(}) (800{val=parent}) (234{val=,}) (800{val=n}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()})) (235{val=.}) (802{val=isHoistScope}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=pop}) (214{val=(}) (800{val=blockStack}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()})) (235{val=.}) (802{val=isHoistScope}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=blockStack}) (235{val=.}) (802{val=add}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BasicBlock})) (214{val=(}) (800{val=parent}) (234{val=,}) (800{val=n}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=hoistRoot}) (204{val==}) (32 (32 (800{val=t}) (235{val=.}) (802{val=getClosestHoistScope}) (216{val=()})) (235{val=.}) (802{val=getRootNode}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isVar}) (216{val=()})) (249{val=&&}) (27 (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()})) (242{val=!=}) (32 (800{val=t}) (235{val=.}) (802{val=getClosestHoistScope}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=hoistVarIfNeeded}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=scopeType}) (236{val===}) (40{val=ScopeType.EXEC_CONTEXT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (32 (800{val=t}) (235{val=.}) (802{val=getClosestHoistScope}) (216{val=()})) (235{val=.}) (802{val=getRootNode}) (216{val=()})) (236{val===}) (40{val=currentScript.rootNode})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (236{val===}) (40{val=currentScript.rootNode})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=scopeRoot}) (204{val==}) (32 (32 (800{val=t}) (235{val=.}) (802{val=getClosestHoistScope}) (216{val=()})) (235{val=.}) (802{val=getRootNode}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=hasChildren}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=rewriteEs6ObjectLiteralShorthandPropertySyntax}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=compiler}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (214{val=(}) (800{val=n}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=yield}) (235{val=.}) (802{val=setYieldFor}) (214{val=(}) (40{val=tree.isYieldFor}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isYieldFor}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=checkNotNull}) (214{val=(}) (800{val=first}) (215{val=)})) (227{val=;})) (21 (32 (802{val=add}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=isGlobal}) (216{val=()})) (250{val=||}) (32 (802{val=isModuleScope}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalStateException})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (315{val=this})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (83{val=final}) (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ClosureOptimizePrimitives})) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=propertyRenamingEnabled}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=testRewrite}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=testRewrite}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (43 (801{val=DiagnosticType})) (800{val=warning})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableRunTypeCheckAfterProcessing}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=testWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=RhinoErrorReporter.TOO_MANY_TEMPLATE_PARAMS}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=RhinoErrorReporter.TOO_MANY_TEMPLATE_PARAMS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isParamList}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}})) (322{val=else}) (25 (313{val=if}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isVar}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=n}) (235{val=.}) (802{val=hasChildren}) (216{val=()})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=options}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=options}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getLifeCycleStage}) (216{val=()})) (235{val=.}) (802{val=isNormalized}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=hasParamWithNumberObjectLit}) (214{val=(}) (800{val=fnNode}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=functionState}) (235{val=.}) (802{val=setInline}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=tryMergeBlock}) (214{val=(}) (800{val=moduleBody}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=newChild}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=tryMergeBlock}) (214{val=(}) (800{val=newChild}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=tryMergeBlock}) (214{val=(}) (800{val=scopeClosureBlock}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=tryMergeBlock}) (214{val=(}) (800{val=callbackBlock}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=tryMergeBlock}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=tryMergeBlock}) (214{val=(}) (800{val=moduleBody}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=Exception})) (800{val=cause})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=unexpectedException})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=throwUnexpectedException}) (214{val=(}) (800{val=unexpectedException}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=unexpectedException})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=throwUnexpectedException}) (214{val=(}) (800{val=unexpectedException}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=unexpectedException})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=throwUnexpectedException}) (214{val=(}) (800{val=unexpectedException}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=unexpectedException})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=throwUnexpectedException}) (214{val=(}) (800{val=unexpectedException}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=Exception})) (800{val=unexpectedException})))
(AST_ROOT_SC2NF (31 (83{val=abstract}) (39{val=void}) (802{val=throwInternalError}) (214{val=(}) (44 (43 (801{val=String})) (800{val=msg})) (234{val=,}) (44 (43 (801{val=Exception})) (800{val=cause})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=NominalType})) (59 (800{val=nt}) (204{val==}) (32 (802{val=getNominalTypeIfSingletonObj}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (16 (32 (800{val=nt}) (235{val=.}) (802{val=isGeneric}) (216{val=()})) (233{val=?}) (32 (32 (800{val=nt}) (235{val=.}) (802{val=getRawNominalTypeAfterTypeChecking}) (216{val=()})) (235{val=.}) (802{val=getInstanceAsJSType}) (216{val=()})) (226{val=:}) (500{val=null})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=init}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=init}) (235{val=.}) (802{val=isVar}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=init}) (204{val==}) (32 (802{val=trySimplifyUnusedResult}) (214{val=(}) (800{val=init}) (234{val=,}) (9{val=false}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isVar}) (216{val=()})) (249{val=&&}) (32 (800{val=n}) (235{val=.}) (802{val=hasOneChild}) (216{val=()})) (249{val=&&}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getFirstFirstChild}) (216{val=()})) (242{val=!=}) (500{val=null}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=globalScope}) (235{val=.}) (802{val=getType}) (214{val=(}) (800{val=typeName}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=declRetType}) (204{val==}) (32 (32 (22 (315{val=this}) (235{val=.}) (800{val=currentScope})) (235{val=.}) (802{val=getDeclaredFunctionType}) (216{val=()})) (235{val=.}) (802{val=getReturnType}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=declRetType}) (204{val==}) (32 (32 (22 (315{val=this}) (235{val=.}) (800{val=currentScope})) (235{val=.}) (802{val=getDeclaredFunctionType}) (216{val=()})) (235{val=.}) (802{val=getReturnType}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DeclaredFunctionType})) (59 (800{val=dft}) (204{val==}) (32 (22 (315{val=this}) (235{val=.}) (800{val=currentScope})) (235{val=.}) (802{val=getDeclaredFunctionType}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (22 (315{val=this}) (235{val=.}) (800{val=registry})) (235{val=.}) (802{val=evaluateTypeExpression}) (214{val=(}) (800{val=expr}) (234{val=,}) (800{val=typeEnv}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=typeEnv}) (235{val=.}) (802{val=getType}) (214{val=(}) (800{val=name}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=mapFunctionBody}) (204{val==}) (32 (802{val=getFunctionBody}) (214{val=(}) (800{val=mapFunction}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=registry})) (204{val==}) (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeRegistry}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=ImmutableList})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (800{val=names})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=NominalType})) (59 (800{val=nt}) (204{val==}) (32 (802{val=getNominalTypeIfSingletonObj}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (16 (32 (800{val=nt}) (235{val=.}) (802{val=isGeneric}) (216{val=()})) (233{val=?}) (32 (32 (800{val=nt}) (235{val=.}) (802{val=getRawNominalType}) (216{val=()})) (235{val=.}) (802{val=getInstanceAsJSType}) (216{val=()})) (226{val=:}) (500{val=null})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=TemplatizedType})) (59 (800{val=t}) (204{val==}) (32 (802{val=toMaybeTemplatizedType}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (16 (27 (800{val=t}) (236{val===}) (500{val=null})) (233{val=?}) (500{val=null}) (226{val=:}) (32 (800{val=t}) (235{val=.}) (802{val=getReferencedType}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (45{val=STRING_CONSTANT}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=name}) (215{val=)})) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=hasThis}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (32 (802{val=getDeclaredFunctionType}) (216{val=()})) (235{val=.}) (802{val=getThisType}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (32 (800{val=ImmutableSet}) (235{val=.}) (802{val=of}) (214{val=(}) (40{val=TokenType.IDENTIFIER}) (234{val=,}) (40{val=TokenType.TYPE}) (234{val=,}) (40{val=TokenType.DECLARE}) (234{val=,}) (40{val=TokenType.MODULE}) (234{val=,}) (40{val=TokenType.NAMESPACE}) (215{val=)})) (235{val=.}) (802{val=contains}) (214{val=(}) (800{val=type}) (215{val=)})))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (802{val=peekId}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (32 (800{val=ImmutableSet}) (235{val=.}) (802{val=of}) (214{val=(}) (40{val=TokenType.VOID}) (234{val=,}) (40{val=TokenType.OPEN_PAREN}) (234{val=,}) (40{val=TokenType.OPEN_CURLY}) (234{val=,}) (40{val=TokenType.TYPEOF}) (215{val=)})) (235{val=.}) (802{val=contains}) (214{val=(}) (32 (802{val=peekType}) (216{val=()})) (215{val=)})))))
(AST_ROOT_SC2NF (21 (7 (800{val=compiler}) (204{val==}) (32 (802{val=multistageSerializeAndDeserialize}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=inputs}) (234{val=,}) (800{val=recentChange}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=functionBody}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=current}) (215{val=)})) (227{val=;})) (21 (7 (800{val=insertAfter}) (204{val==}) (32 (802{val=addToFront}) (214{val=(}) (800{val=functionBody}) (234{val=,}) (800{val=current}) (234{val=,}) (800{val=insertAfter}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (214{val=(}) (800{val=functionBody}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (214{val=(}) (800{val=n}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (214{val=(}) (800{val=n}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=hasUnfilledTemplateKeys}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=numUnfilledTemplateKeys}) (216{val=()})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setStrictModeInput}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=Object})) (802{val=getObjectValue}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=addToDebugLog}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=defineName})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=addToDebugLog}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (40{val=var.name})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=addToDebugLog}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=name}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=newName})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=RuntimeException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=t}) (235{val=.}) (802{val=getCompiler}) (216{val=()})) (235{val=.}) (802{val=addToDebugLog}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=fn}) (235{val=.}) (802{val=getName}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=IntPropListItem})) (214{val=(}) (32 (802{val=getType}) (216{val=()})) (234{val=,}) (800{val=intValue}) (234{val=,}) (800{val=next}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ObjectPropListItem})) (214{val=(}) (32 (802{val=getType}) (216{val=()})) (234{val=,}) (800{val=objectValue}) (234{val=,}) (800{val=next}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testRestParam}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=var}) (235{val=.}) (802{val=setStaticSourceFile}) (214{val=(}) (32 (800{val=input}) (235{val=.}) (802{val=getSourceFile}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=export}) (234{val=,}) (40{val=Es6ToEs3Converter.CANNOT_CONVERT_YET}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=n}) (234{val=,}) (40{val=Es6ToEs3Converter.CANNOT_CONVERT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=controlCanExit}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=n}) (234{val=,}) (40{val=Es6ToEs3Converter.CANNOT_CONVERT_YET}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=currentStatement}) (235{val=.}) (802{val=hasChildren}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=currentStatement}) (234{val=,}) (40{val=Es6ToEs3Converter.CANNOT_CONVERT_YET}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=loop}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=currentStatement}) (234{val=,}) (40{val=Es6ToEs3Converter.CANNOT_CONVERT_YET}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=HotSwapCompilerPass})) (802{val=create}) (214{val=(}) (44 (83{val=final}) (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Es6ToEs3Converter})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertPassOrder}) (214{val=(}) (800{val=checks}) (234{val=,}) (800{val=chromePass}) (234{val=,}) (800{val=checkJsDoc}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=HotSwapCompilerPass})) (802{val=create}) (214{val=(}) (44 (83{val=final}) (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=EarlyEs6ToEs3Converter})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=export}) (234{val=,}) (40{val=Es6ToEs3Util.CANNOT_CONVERT_YET}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=n}) (234{val=,}) (40{val=Es6ToEs3Util.CANNOT_CONVERT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=controlCanExit}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=n}) (234{val=,}) (40{val=Es6ToEs3Util.CANNOT_CONVERT_YET}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=currentStatement}) (235{val=.}) (802{val=hasChildren}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=currentStatement}) (234{val=,}) (40{val=Es6ToEs3Util.CANNOT_CONVERT_YET}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=loop}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=currentStatement}) (234{val=,}) (40{val=Es6ToEs3Util.CANNOT_CONVERT_YET}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=ImmutableList})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (800{val=typeParameters})))
(AST_ROOT_SC2NF (31 (83{val=public}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (802{val=getTypeParameters}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=typeParameters}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=builder}) (235{val=.}) (802{val=addTypeParameters}) (214{val=(}) (32 (800{val=nt}) (235{val=.}) (802{val=getTypeParameters}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=typeParameters})) (204{val==}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=ImmutableList})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (800{val=typeParameters})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=ImmutableList})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (800{val=typeParameters})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=isDeleted}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getBooleanProp}) (214{val=(}) (800{val=DELETED}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Nullable})) (43 (801{val=PropListItem})) (802{val=getPropListHeadForTesting}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=propListHead}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=int}) (802{val=getSourcePosition}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=sourcePosition}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=int}) (802{val=getCharno}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=extractCharno}) (214{val=(}) (800{val=sourcePosition}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=int}) (802{val=getLineno}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=extractLineno}) (214{val=(}) (800{val=sourcePosition}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=int}) (802{val=getLength}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=length})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=hasProps}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (800{val=propListHead}) (242{val=!=}) (500{val=null})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=hasChildren}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (800{val=first}) (242{val=!=}) (500{val=null})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=validateExpression}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2017}) (215{val=)})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=isVar}) (216{val=()})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=toStringIsEqualTo}) (214{val=(}) (44 (43 (801{val=String})) (800{val=typeString})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertEquals}) (214{val=(}) (32 (32 (802{val=actual}) (216{val=()})) (235{val=.}) (802{val=toString}) (216{val=()})) (234{val=,}) (800{val=typeString}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isParamList}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=requiresTypes}) (204{val==}) (9{val=true})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=checks}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (802{val=createEmptyPass}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=passName}) (235{val=.}) (802{val=equals}) (214{val=(}) (40{val=Compiler.PARSING_PASS_NAME}) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (800{val=checks}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (802{val=createEmptyPass}) (214{val=(}) (40{val=PassNames.AFTER_STANDARD_CHECKS}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=passName}) (235{val=.}) (802{val=equals}) (214{val=(}) (40{val=PassNames.PARSE_INPUTS}) (215{val=)})))
(AST_ROOT_SC2NF (27 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isVar}) (216{val=()})) (249{val=&&}) (32 (800{val=n}) (235{val=.}) (802{val=isName}) (216{val=()}))))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (27 (800{val=e}) (242{val=!=}) (500{val=null})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Typedef})) (59 (800{val=td}) (204{val==}) (32 (800{val=Typedef}) (235{val=.}) (802{val=make}) (214{val=(}) (32 (800{val=jsdoc}) (235{val=.}) (802{val=getTypedefType}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=typeEnv}) (235{val=.}) (802{val=getNamespaceType}) (214{val=(}) (800{val=name}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setPackageJsonEntryNames}) (214{val=(}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=CompilerOptions.PACKAGE_JSON_MAIN}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=packageJsonEntryNames}) (204{val==}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (40{val=CompilerOptions.PACKAGE_JSON_MAIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=checks}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (802{val=createEmptyPass}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=passName}) (235{val=.}) (802{val=equals}) (214{val=(}) (40{val=Compiler.PARSING_PASS_NAME}) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=nameNode}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=renamer}) (235{val=.}) (802{val=addDeclaredName}) (214{val=(}) (32 (800{val=nameNode}) (235{val=.}) (802{val=getString}) (216{val=()})) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (22 (315{val=this}) (235{val=.}) (800{val=classProps})) (235{val=.}) (802{val=containsKey}) (214{val=(}) (800{val=pname}) (215{val=)})) (250{val=||}) (32 (22 (315{val=this}) (235{val=.}) (800{val=protoProps})) (235{val=.}) (802{val=containsKey}) (214{val=(}) (800{val=pname}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=allProps})) (204{val==}) (32 (32 (32 (800{val=builder}) (235{val=.}) (802{val=addAll}) (214{val=(}) (32 (800{val=classProps}) (235{val=.}) (802{val=keySet}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=addAll}) (214{val=(}) (32 (800{val=protoProps}) (235{val=.}) (802{val=keySet}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=build}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Property})) (59 (800{val=p}) (204{val==}) (32 (802{val=getOwnProp}) (214{val=(}) (800{val=pname}) (234{val=,}) (800{val=propAccess}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Property})) (59 (800{val=p}) (204{val==}) (32 (802{val=getOwnProp}) (214{val=(}) (800{val=pname}) (234{val=,}) (800{val=propAccess}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=ObjectType})) (59 (800{val=obj}) (204{val==}) (32 (802{val=getObjTypeIfSingletonObj}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (27 (27 (800{val=obj}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=obj}) (235{val=.}) (802{val=hasOwnProperty}) (214{val=(}) (14 (304{val=new}) (43 (801{val=QualifiedName})) (214{val=(}) (800{val=propertyName}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkState}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isSingletonObj}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (32 (315{val=this}) (235{val=.}) (802{val=getObjTypeIfSingletonObj}) (216{val=()})) (235{val=.}) (802{val=getOwnPropertyDefSite}) (214{val=(}) (800{val=propertyName}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (27 (32 (800{val=classType}) (235{val=.}) (802{val=mayHaveOwnProp}) (214{val=(}) (800{val=pname}) (215{val=)})) (249{val=&&}) (27 (800{val=previousPropType}) (242{val=!=}) (500{val=null}))) (249{val=&&}) (38 (207{val=!}) (32 (802{val=suppressDupPropWarning}) (214{val=(}) (800{val=jsdoc}) (234{val=,}) (800{val=typeInJsdoc}) (234{val=,}) (800{val=previousPropType}) (215{val=)})))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=externs})) (204{val==}) (32 (802{val=makeCompilerInput}) (214{val=(}) (800{val=externs}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=HotSwapCompilerPass})) (802{val=create}) (214{val=(}) (44 (83{val=final}) (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Es6ToEs3Converter})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=export}) (234{val=,}) (40{val=Es6ToEs3Converter.CANNOT_CONVERT_YET}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=n}) (234{val=,}) (40{val=Es6ToEs3Converter.CANNOT_CONVERT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=controlCanExit}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=n}) (234{val=,}) (40{val=Es6ToEs3Converter.CANNOT_CONVERT_YET}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=currentStatement}) (235{val=.}) (802{val=hasChildren}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=currentStatement}) (234{val=,}) (40{val=Es6ToEs3Converter.CANNOT_CONVERT_YET}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=loop}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=currentStatement}) (234{val=,}) (40{val=Es6ToEs3Converter.CANNOT_CONVERT_YET}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Var})) (800{val=var})) (226{val=:}) (32 (800{val=scriptToVarMap}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=script}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=undeclareInteral}) (214{val=(}) (800{val=var}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=visitForOf}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=ensureLibraryInjected}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=function}) (235{val=.}) (802{val=toLowerCase}) (214{val=(}) (40{val=Locale.US}) (215{val=)}))) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=CompilerInput})) (59 (800{val=newInput}) (204{val==}) (11 (214{val=(}) (43 (800{val=CompilerInput})) (215{val=)}) (32 (802{val=deserialize}) (214{val=(}) (32 (802{val=serialize}) (214{val=(}) (800{val=input}) (215{val=)})) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=FeatureSet})) (802{val=featureSet}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=ES8}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=madeChange}) (204{val==}) (9{val=true})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=preloadEs6RuntimeFunction}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=function}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=visitForOf}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=FeatureSet})) (802{val=featureSet}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=ES8_MODULES}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=HotSwapCompilerPass})) (802{val=create}) (214{val=(}) (44 (83{val=final}) (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=EarlyEs6ToEs3Converter})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=export}) (234{val=,}) (40{val=Es6ToEs3Util.CANNOT_CONVERT_YET}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=n}) (234{val=,}) (40{val=Es6ToEs3Util.CANNOT_CONVERT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=controlCanExit}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=n}) (234{val=,}) (40{val=Es6ToEs3Util.CANNOT_CONVERT_YET}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=currentStatement}) (235{val=.}) (802{val=hasChildren}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=currentStatement}) (234{val=,}) (40{val=Es6ToEs3Util.CANNOT_CONVERT_YET}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=loop}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=currentStatement}) (234{val=,}) (40{val=Es6ToEs3Util.CANNOT_CONVERT_YET}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (22 (315{val=this}) (235{val=.}) (800{val=globalScope})) (235{val=.}) (802{val=getInstanceType}) (214{val=(}) (800{val=typeName}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=t}) (204{val==}) (32 (802{val=getInstanceType}) (214{val=(}) (800{val=typeName}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testTypeTransformationNoneType}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=inFunction}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (21 (32 (802{val=verify}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=JSTypeNative.NO_TYPE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=tmpEnv}) (204{val==}) (32 (802{val=collectTypesForFreeVarsFwd}) (214{val=(}) (800{val=callee}) (234{val=,}) (800{val=tmpEnv}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeEnv})) (59 (800{val=outEnv}) (204{val==}) (32 (802{val=collectTypesForFreeVarsFwd}) (214{val=(}) (800{val=expr}) (234{val=,}) (800{val=inEnv}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeEnv})) (59 (800{val=exitEnv}) (204{val==}) (32 (802{val=getInEnv}) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=cfg})) (235{val=.}) (802{val=getImplicitReturn}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=HotSwapCompilerPass})) (802{val=create}) (214{val=(}) (44 (83{val=final}) (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Es6ToEs3Converter})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=export}) (234{val=,}) (40{val=Es6ToEs3Converter.CANNOT_CONVERT_YET}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=n}) (234{val=,}) (40{val=Es6ToEs3Converter.CANNOT_CONVERT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=controlCanExit}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=n}) (234{val=,}) (40{val=Es6ToEs3Converter.CANNOT_CONVERT_YET}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=currentStatement}) (235{val=.}) (802{val=hasChildren}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=currentStatement}) (234{val=,}) (40{val=Es6ToEs3Converter.CANNOT_CONVERT_YET}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=loop}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=currentStatement}) (234{val=,}) (40{val=Es6ToEs3Converter.CANNOT_CONVERT_YET}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=handleGet}) (214{val=(}) (800{val=module}) (234{val=,}) (800{val=scope}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=parent}) (234{val=,}) (800{val=prefix}) (234{val=,}) (40{val=Ref.Type.PROTOTYPE_GET}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=handleGet}) (214{val=(}) (800{val=module}) (234{val=,}) (800{val=scope}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=parent}) (234{val=,}) (800{val=name}) (234{val=,}) (800{val=type}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (249{val=&&}) (32 (800{val=parent}) (235{val=.}) (802{val=isClassMembers}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportChangeToEnclosingScope}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (800{val=n}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=RemoveEmptyClassMembers})) (214{val=(}) (800{val=compiler}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=ensureLibraryInjected}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=function}) (235{val=.}) (802{val=toLowerCase}) (214{val=(}) (40{val=Locale.US}) (215{val=)}))) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=visitForOf}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=builder}) (235{val=.}) (802{val=addRetType}) (214{val=(}) (32 (802{val=firstNonBottom}) (214{val=(}) (800{val=actualRetType}) (234{val=,}) (800{val=TOP}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=ObjectTypeI})) (800{val=interfaceType})) (226{val=:}) (32 (800{val=funType}) (235{val=.}) (802{val=getAncestorInterfaces}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=interfaces}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=interfaceType}) (235{val=.}) (802{val=toAnnotationString}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (32 (800{val=record}) (235{val=.}) (802{val=toAnnotationString}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=record}) (235{val=.}) (802{val=toAnnotationString}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (800{val=runOptimizeCalls})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (802{val=getRemoveUnusedVars}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=checks}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (802{val=createEmptyPass}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=t}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (242{val=!=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=statementNode}) (204{val==}) (32 (32 (800{val=rhsNode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=getParent}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (32 (800{val=call}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (242{val=!=}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (38 (207{val=!}) (32 (800{val=legacyNamespaceNode}) (235{val=.}) (802{val=isString}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=t}) (235{val=.}) (802{val=report}) (214{val=(}) (800{val=legacyNamespaceNode}) (234{val=,}) (800{val=INVALID_GET_NAMESPACE}) (215{val=)})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (32 (800{val=call}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (242{val=!=}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (38 (207{val=!}) (32 (800{val=namespaceNode}) (235{val=.}) (802{val=isString}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=t}) (235{val=.}) (802{val=report}) (214{val=(}) (800{val=namespaceNode}) (234{val=,}) (800{val=INVALID_FORWARD_DECLARE_NAMESPACE}) (215{val=)})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=grandparent}) (235{val=.}) (802{val=isStringKey}) (216{val=()})) (249{val=&&}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isObjectDefinePropertiesDefinition}) (214{val=(}) (32 (32 (800{val=grandparent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=getParent}) (216{val=()})) (215{val=)}))))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (32 (32 (800{val=fnName}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=getParent}) (216{val=()})) (234{val=,}) (800{val=uniquifier}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=entry}) (235{val=.}) (802{val=isObjectLit}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=checkState}) (214{val=(}) (27 (800{val=entryName}) (236{val===}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (21 (32 (802{val=processBrowserFieldAdvancedUsage}) (214{val=(}) (800{val=dirName}) (234{val=,}) (800{val=entry}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkState}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=setUpRan})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=ignoredWarnings}) (235{val=.}) (802{val=addAll}) (214{val=(}) (32 (800{val=Arrays}) (235{val=.}) (802{val=asList}) (214{val=(}) (800{val=warnings}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=apply}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=n})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=name}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getQualifiedName}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=expected})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (32 (800{val=expected}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (235{val=.}) (802{val=contains}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=classNode}) (204{val==}) (32 (32 (32 (800{val=root}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=getFirstChild}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=fNode}) (204{val==}) (32 (32 (32 (800{val=root}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=getFirstChild}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=js}) (204{val==}) (27 (800{val=renameFunctionDefinition}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=js}) (204{val==}) (27 (800{val=renameFunctionDefinition}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=js}) (204{val==}) (27 (800{val=renameFunctionDefinition}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalStateException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertEquals}) (214{val=(}) (40{val=FixedPointGraphTraversal.NON_HALTING_ERROR_MSG}) (234{val=,}) (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (27 (800{val=kExterns}) (200{val=+}) (800{val=extraExterns})) (234{val=,}) (800{val=source}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=noSideEffectCalls}) (215{val=)})) (227{val=;})) (21 (32 (800{val=noSideEffectCalls}) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=fNode}) (204{val==}) (32 (32 (800{val=root}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=getFirstChild}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (500{val=null}) (234{val=,}) (800{val=noInline}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isVar}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=parent}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=node}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=node}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=line}) (235{val=.}) (802{val=indexOf}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)})) (236{val===}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=line}) (235{val=.}) (802{val=indexOf}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testImportedNameCollision}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=checkSynthesizedExtern}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isName}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isStringKey}) (216{val=()}))) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=FeatureSet})) (802{val=featureSet}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=ES8_MODULES}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isTry}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=root}) (204{val==}) (32 (802{val=typeInfoCheckAndGetRoot}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=root}) (204{val==}) (32 (802{val=typeInfoCheckAndGetRoot}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=root}) (204{val==}) (32 (802{val=typeInfoCheckAndGetRoot}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=root}) (204{val==}) (32 (802{val=typeInfoCheckAndGetRoot}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=root}) (204{val==}) (32 (802{val=typeInfoCheckAndGetRoot}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=iterableType}) (204{val==}) (32 (32 (800{val=iterable}) (235{val=.}) (802{val=getTypeI}) (216{val=()})) (235{val=.}) (802{val=toMaybeObjectType}) (216{val=()}))) (227{val=;})) (21 (7 (800{val=typeParam}) (204{val==}) (32 (32 (800{val=iterableType}) (235{val=.}) (802{val=getTemplateTypes}) (216{val=()})) (235{val=.}) (802{val=get}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2017}) (215{val=)})) (227{val=;})) (21 (32 (802{val=allowExternsChanges}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableRunTypeCheckAfterProcessing}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (802{val=test}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (802{val=tryRemovingClinit}) (214{val=(}) (800{val=node}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (802{val=test}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (802{val=tryRemovingClinit}) (214{val=(}) (800{val=node}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (802{val=test}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (802{val=tryRemovingClinit}) (214{val=(}) (800{val=node}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=newEmptyClinitMethod}) (204{val==}) (9{val=true})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=options}) (235{val=.}) (802{val=getNewTypeInference}) (216{val=()})) (249{val=&&}) (32 (800{val=options}) (235{val=.}) (802{val=getRunOTIafterNTI}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=addOldTypeCheckerPasses}) (214{val=(}) (800{val=checks}) (234{val=,}) (800{val=options}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Renamer})) (59 (800{val=renamer}) (204{val==}) (32 (800{val=nameStack}) (235{val=.}) (802{val=peek}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isFunctionBlock}) (214{val=(}) (32 (800{val=t}) (235{val=.}) (802{val=getScopeRoot}) (216{val=()})) (215{val=)})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=t}) (235{val=.}) (802{val=inGlobalScope}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=nameStack}) (235{val=.}) (802{val=pop}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (14 (304{val=new}) (43 (40{val=PureFunctionIdentifier.Driver})) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (215{val=)})) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (14 (304{val=new}) (43 (40{val=PureFunctionIdentifier.DriverInJ2cl})) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (215{val=)})) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=returnType}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=builder}) (235{val=.}) (802{val=append}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)})) (227{val=;})) (21 (32 (800{val=returnType}) (235{val=.}) (802{val=appendTo}) (214{val=(}) (800{val=builder}) (234{val=,}) (800{val=ctx}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=options}) (235{val=.}) (802{val=getNewTypeInference}) (216{val=()})) (249{val=&&}) (32 (800{val=options}) (235{val=.}) (802{val=getRunOTIafterNTI}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (40{val=options.checksOnly}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=addOldTypeCheckerPasses}) (214{val=(}) (800{val=checks}) (234{val=,}) (800{val=options}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=lit}) (235{val=.}) (802{val=setJSType}) (214{val=(}) (32 (800{val=exportedObjectLit}) (235{val=.}) (802{val=getJSType}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=allowExternsChanges}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableRunTypeCheckAfterProcessing}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableParseTypeInfo}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=assertExternProperties}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=tagAsStrict}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=add}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectDefineProperties6}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectDefineProperties5}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectDefineProperties4}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testConstructorProperty2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testConstructorProperty1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (800{val=v}) (242{val=!=}) (500{val=null})) (250{val=||}) (32 (802{val=isShadowingDisallowed}) (214{val=(}) (800{val=name}) (234{val=,}) (800{val=s}) (215{val=)}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (40{val=options.j2clPassMode}) (235{val=.}) (802{val=shouldAddJ2clPasses}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=j2clConstantHoisterPass}) (215{val=)})) (227{val=;})) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=j2clOptBundlePass}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=shouldPrintExterns}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=printExterns})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=TypeSubject})) (214{val=(}) (800{val=THROW_ASSERTION_ERROR}) (234{val=,}) (800{val=actualPropType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=t}) (235{val=.}) (802{val=inGlobalScope}) (216{val=()})) (249{val=&&}) (32 (802{val=isDeclaration}) (214{val=(}) (800{val=n}) (215{val=)})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=getBooleanProp}) (214{val=(}) (40{val=Node.IS_NAMESPACE}) (215{val=)}))) (249{val=&&}) (38 (207{val=!}) (32 (802{val=isWhitelisted}) (214{val=(}) (800{val=n}) (215{val=)})))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertFalse}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isFunctionDeclaration}) (214{val=(}) (32 (802{val=getFunctionNode}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (32 (802{val=warning}) (214{val=(}) (800{val=TYPE_MISMATCH_WARNING}) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=disableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=enableTypeCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (27 (800{val=curNode}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=isFunctionExpression}) (204{val==}) (27 (36 (214{val=(}) (27 (800{val=parent}) (242{val=!=}) (500{val=null})) (215{val=)})) (249{val=&&}) (32 (800{val=NodeUtil}) (235{val=.}) (800{val=isFunctionExpression}) (214{val=(}) (800{val=n}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (27 (32 (800{val=s}) (235{val=.}) (802{val=isGlobal}) (216{val=()})) (250{val=||}) (32 (800{val=s}) (235{val=.}) (802{val=isModuleScope}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkArgument}) (214{val=(}) (27 (40{val=child.parent}) (236{val===}) (500{val=null})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=child}) (234{val=,}) (800{val=parent}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (802{val=createEmptyPass}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testJSDocCopiedForClasses}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testScoped}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (800{val=SCOPE_NAMESPACE}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectLiteralMethods}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testScoped}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (800{val=SCOPE_NAMESPACE}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectLiteralShorthand}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testScoped}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (800{val=SCOPE_NAMESPACE}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testDefaultParameter}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testScoped}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (800{val=SCOPE_NAMESPACE}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testClassDefinition3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testScoped}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (800{val=SCOPE_NAMESPACE}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testClassDefinition2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testScoped}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (800{val=SCOPE_NAMESPACE}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testClassDefinition1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testScoped}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (800{val=SCOPE_NAMESPACE}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArrowFunction}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testScoped}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (800{val=SCOPE_NAMESPACE}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNonTopLevelDestructuring}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testScoped}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (800{val=SCOPE_NAMESPACE}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectDescructuringError2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testScopedError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectDescructuringError1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testScopedError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testDestructuringError}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testScopedError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testYieldExpression}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testScoped}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (800{val=SCOPE_NAMESPACE}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInlineEmptyFunction6}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6ScopeRoots}) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (234{val=,}) (32 (800{val=Lists}) (235{val=.}) (802{val=newArrayList}) (214{val=(}) (800{val=fooFunction}) (234{val=,}) (800{val=barFunction}) (234{val=,}) (800{val=bazFunction}) (215{val=)})) (234{val=,}) (800{val=callback}) (234{val=,}) (800{val=callback}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testMakeLocalNamesUniqueWithContext10}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=useDefaultRenamer})) (204{val==}) (9{val=true})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testMakeLocalNamesUniqueWithContext9}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=useDefaultRenamer})) (204{val==}) (9{val=true})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isBleedingFunctionName}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=renameBleedingFunctionName}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=newNode}) (204{val==}) (32 (800{val=IR}) (235{val=.}) (802{val=assign}) (214{val=(}) (800{val=getprop}) (234{val=,}) (32 (800{val=rhs}) (235{val=.}) (802{val=cloneNode}) (216{val=()})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=FunctionType})) (59 (800{val=getterType}) (204{val==}) (32 (800{val=typeRegistry}) (235{val=.}) (802{val=createFunctionType}) (214{val=(}) (800{val=objectType}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=codingConvention}) (235{val=.}) (802{val=applySingletonGetterOld}) (214{val=(}) (800{val=functionType}) (234{val=,}) (800{val=getterType}) (234{val=,}) (800{val=objectType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=superCtor}) (242{val=!=}) (500{val=null})) (249{val=&&}) (27 (800{val=subCtor}) (242{val=!=}) (500{val=null}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=codingConvention}) (235{val=.}) (802{val=applySubclassRelationship}) (214{val=(}) (800{val=superCtor}) (234{val=,}) (800{val=subCtor}) (234{val=,}) (40{val=relationship.type}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=when}) (214{val=(}) (32 (800{val=mockCompiler}) (235{val=.}) (802{val=compile}) (214{val=(}) (800{val=FOO_JS}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=thenReturn}) (214{val=(}) (14 (304{val=new}) (43 (40{val=BaseTranspiler.CompileResult})) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=NO_ERRORS}) (234{val=,}) (9{val=false}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=when}) (214{val=(}) (32 (800{val=mockCompiler}) (235{val=.}) (802{val=compile}) (214{val=(}) (800{val=FOO_JS}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=thenReturn}) (214{val=(}) (14 (304{val=new}) (43 (40{val=BaseTranspiler.CompileResult})) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=NO_ERRORS}) (234{val=,}) (9{val=true}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=inFunction}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=replacement}) (204{val==}) (32 (800{val=replacement}) (235{val=.}) (802{val=useSourceInfoIfMissingFrom}) (214{val=(}) (800{val=node}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=node}) (235{val=.}) (802{val=replaceWith}) (214{val=(}) (800{val=replacement}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=replacement}) (204{val==}) (32 (800{val=measuredNodeReplacement}) (235{val=.}) (802{val=applyTo}) (214{val=(}) (800{val=original}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=replacement}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (315{val=this}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=right}) (215{val=)})) (227{val=;})) (21 (32 (800{val=parent}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=right}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=right}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=redeclareVarsInsideBranch}) (214{val=(}) (800{val=caseNode}) (215{val=)})) (227{val=;})) (21 (32 (800{val=switchNode}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=caseNode}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=maybeBreak}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=subtree}) (235{val=.}) (802{val=replaceWith}) (214{val=(}) (32 (800{val=right}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=right}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=child}) (234{val=,}) (32 (800{val=IR}) (235{val=.}) (802{val=number}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=codeChanged}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=newLiteralNode}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=replaceWith}) (214{val=(}) (800{val=newLiteralNode}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=newLiteralNode}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.CALL}) (215{val=)})) (227{val=;})) (21 (32 (800{val=n}) (235{val=.}) (802{val=putBooleanProp}) (214{val=(}) (40{val=Node.FREE_CALL}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=compileFilesError}) (214{val=(}) (40{val=SourceFile.DUPLICATE_ZIP_CONTENTS}) (234{val=,}) (800{val=zipFile1}) (234{val=,}) (800{val=zipFile2}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (40{val=options.j2clPassMode}) (235{val=.}) (802{val=equals}) (214{val=(}) (40{val=CompilerOptions.J2clPassMode.AUTO}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=checks}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=j2clSourceFileChecker}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=j2clPassMode}) (204{val==}) (40{val=J2clPassMode.OFF})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (27 (40{val=child.parent}) (236{val===}) (315{val=this})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=child}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (27 (40{val=child.parent}) (236{val===}) (315{val=this})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=assertThat}) (214{val=(}) (40{val=result.transpiled}) (215{val=)})) (235{val=.}) (802{val=isFalse}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=assertThat}) (214{val=(}) (40{val=result.transpiled}) (215{val=)})) (235{val=.}) (802{val=isTrue}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=MockitoAnnotations}) (235{val=.}) (802{val=initMocks}) (214{val=(}) (315{val=this}) (215{val=)})) (227{val=;})) (21 (7 (800{val=transpiler}) (204{val==}) (14 (304{val=new}) (43 (800{val=Transpiler})) (214{val=(}) (800{val=mockCompiler}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (7 (800{val=compiler}) (204{val==}) (14 (304{val=new}) (43 (40{val=Transpiler.CompilerSupplier})) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=Files}) (235{val=.}) (802{val=asCharSink}) (214{val=(}) (800{val=jsFile}) (234{val=,}) (40{val=Charsets.UTF_8}) (215{val=)})) (235{val=.}) (802{val=write}) (214{val=(}) (800{val=code}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=Files}) (235{val=.}) (802{val=asCharSink}) (214{val=(}) (800{val=jsFile}) (234{val=,}) (40{val=Charsets.UTF_8}) (215{val=)})) (235{val=.}) (802{val=write}) (214{val=(}) (800{val=code}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=Files}) (235{val=.}) (802{val=asCharSink}) (214{val=(}) (800{val=jsFile}) (234{val=,}) (40{val=Charsets.UTF_8}) (215{val=)})) (235{val=.}) (802{val=write}) (214{val=(}) (800{val=code}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=Files}) (235{val=.}) (802{val=asCharSink}) (214{val=(}) (800{val=jsFile}) (234{val=,}) (40{val=Charsets.UTF_8}) (215{val=)})) (235{val=.}) (802{val=write}) (214{val=(}) (800{val=code}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=def})) (204{val==}) (800{val=def})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=use})) (204{val==}) (800{val=use})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=rewriteState}) (235{val=.}) (802{val=containsModule}) (214{val=(}) (800{val=legacyNamespace}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=unrecognizedRequires}) (235{val=.}) (802{val=add}) (214{val=(}) (14 (304{val=new}) (43 (801{val=UnrecognizedRequire})) (214{val=(}) (800{val=call}) (234{val=,}) (800{val=legacyNamespace}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=inFunction}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=AnalyzePrototypeProperties})) (59 (800{val=analyzer}) (204{val==}) (14 (304{val=new}) (43 (801{val=AnalyzePrototypeProperties})) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=canModifyExterns}) (234{val=,}) (800{val=anchorUnusedVars}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=analyzer})) (204{val==}) (14 (304{val=new}) (43 (801{val=AnalyzePrototypeProperties})) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=moduleGraph}) (234{val=,}) (800{val=canModifyExterns}) (234{val=,}) (9{val=false}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=compilationLevelParsed}) (204{val==}) (32 (800{val=COMPILATION_LEVEL_MAP}) (235{val=.}) (802{val=get}) (214{val=(}) (32 (800{val=Ascii}) (235{val=.}) (802{val=toUpperCase}) (214{val=(}) (800{val=compilationLevel}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=cacheEntry.input}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (40{val=cacheEntry.input}) (204{val==}) (14 (304{val=new}) (43 (800{val=CompilerInput})) (214{val=(}) (800{val=source}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=transformed}) (204{val==}) (38 (207{val=!}) (32 (40{val=result.transpiledFiles}) (235{val=.}) (802{val=isEmpty}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (800{val=FeatureSet})) (802{val=featureSet}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=ES8}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInlineIntoNestedNonHoistedNamedFunctions}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (27 (27 (800{val=jsDoc}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=jsDoc}) (235{val=.}) (802{val=isConstant}) (216{val=()}))) (249{val=&&}) (27 (32 (800{val=jsDoc}) (235{val=.}) (802{val=getType}) (216{val=()})) (236{val===}) (500{val=null}))))
(AST_ROOT_SC2NF (21 (32 (800{val=newNode}) (235{val=.}) (802{val=useSourceInfoWithoutLengthIfMissingFromForTree}) (214{val=(}) (800{val=sourceInfoNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=expr}) (235{val=.}) (802{val=useSourceInfoWithoutLengthIfMissingFromForTree}) (214{val=(}) (800{val=parent}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isClass}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=shouldAmbiguateProperties}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=ambiguateProperties})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=shouldDisambiguateProperties}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=disambiguateProperties})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=shouldInlineProperties}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=inlineProperties}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Es6RewriteClass})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=decl}) (235{val=.}) (802{val=maybeRemoveRhs}) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFor}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=isForIn}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (802{val=typeCheck}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (40{val=NewTypeInference.NULLABLE_DEREFERENCE}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=typeCheck}) (214{val=(}) (27 (800{val=CLOSURE_DEFS}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=typeCheck}) (214{val=(}) (27 (800{val=CLOSURE_BASE}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Node})) (231{val=>})) (800{val=replacements})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=String})) (802{val=toString}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=appendTo}) (214{val=(}) (14 (304{val=new}) (43 (801{val=StringBuilder})) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=toString}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=hasReferenceName}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=sb}) (235{val=.}) (802{val=append}) (214{val=(}) (32 (802{val=getReferenceName}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (802{val=isPrettyPrint}) (216{val=()}))) (250{val=||}) (27 (315{val=this}) (236{val===}) (32 (800{val=registry}) (235{val=.}) (802{val=getNativeType}) (214{val=(}) (40{val=JSTypeNative.FUNCTION_INSTANCE_TYPE}) (215{val=)})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=sb}) (235{val=.}) (802{val=append}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkArgument}) (214{val=(}) (32 (800{val=qnameNode}) (235{val=.}) (802{val=isQualifiedName}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=declarations}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=PotentialDeclaration}) (235{val=.}) (802{val=from}) (214{val=(}) (800{val=qnameNode}) (234{val=,}) (800{val=scope}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=isImport}) (204{val==}) (27 (27 (800{val=rhs}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (802{val=isImportRhs}) (214{val=(}) (800{val=rhs}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.OTI_ONLY})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInherits6}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInherits4}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInherits3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInherits2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testLoggerOnObject3b}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.OTI_ONLY})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (800{val=callClassType}) (235{val=.}) (802{val=isBottom}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=callClassType}) (235{val=.}) (802{val=isUnknownType}) (216{val=()})))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=doSanityChecks}) (249{val=&&}) (27 (800{val=sourceFile}) (242{val=!=}) (500{val=null}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=sourceFile}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getSourceFileName}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=devMode}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=runSanityCheck}) (216{val=()})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (32 (802{val=hasErrors}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=maybeSanityCheck}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=create}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=SanityCheck})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=options.devMode}) (236{val===}) (40{val=DevMode.EVERY_PASS})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=phaseOptimizer}) (235{val=.}) (802{val=setSanityCheck}) (214{val=(}) (800{val=sanityCheck}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=options.devMode}) (236{val===}) (40{val=DevMode.START_AND_END})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=runSanityCheck}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (38 (207{val=!}) (800{val=sanityCheck})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=declarationCheck}) (204{val==}) (38 (207{val=!}) (800{val=sanityCheck}))) (227{val=;})) (21 (32 (802{val=disableCompareAsTree}) (216{val=()})) (227{val=;})) (21 (32 (802{val=testExternChanges}) (214{val=(}) (800{val=extern}) (234{val=,}) (800{val=input}) (234{val=,}) (800{val=expectedExtern}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=sanityCheck}) (204{val==}) (9{val=true})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testViolatedModuleDependencyNonStrictNotPromoted}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=sanityCheck}) (204{val==}) (9{val=true})) (227{val=;})) (21 (7 (800{val=strictModuleDepErrorLevel}) (204{val==}) (40{val=CheckLevel.ERROR})) (227{val=;})) (21 (32 (802{val=testDependentModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testMissingModuleDependencySkipNonStrictNotPromoted}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=sanityCheck}) (204{val==}) (9{val=true})) (227{val=;})) (21 (7 (800{val=strictModuleDepErrorLevel}) (204{val==}) (40{val=CheckLevel.ERROR})) (227{val=;})) (21 (32 (802{val=testIndependentModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testViolatedModuleDependencySkipNonStrict}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=sanityCheck}) (204{val==}) (9{val=true})) (227{val=;})) (21 (32 (802{val=testDependentModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testMissingModuleDependencySkipNonStrict}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=sanityCheck}) (204{val==}) (9{val=true})) (227{val=;})) (21 (32 (802{val=testIndependentModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=sanityCheck}) (204{val==}) (9{val=false})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=ObjectBuilder})) (800{val=prototype}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=prototype}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=ObjectBuilder})) (800{val=instance}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=instance}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=ObjectBuilder})) (800{val=constructor}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=constructor}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=convention}) (235{val=.}) (802{val=applySingletonGetter}) (214{val=(}) (14 (304{val=new}) (43 (801{val=NominalTypeBuilderNti})) (214{val=(}) (800{val=lateProps}) (234{val=,}) (800{val=rawType}) (215{val=)})) (234{val=,}) (800{val=getInstanceType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (14 (304{val=new}) (43 (801{val=FunctionTypeBuilder})) (214{val=(}) (32 (802{val=getCommonTypes}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=addReqFormal}) (214{val=(}) (32 (32 (802{val=getCommonTypes}) (216{val=()})) (235{val=.}) (802{val=getNativeType}) (214{val=(}) (800{val=U2U_CONSTRUCTOR_TYPE}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=reportBadGoogBaseUse}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=node}) (234{val=,}) (800{val=INVALID_SUPER_CALL}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=initializer}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=inferredType}) (204{val==}) (32 (802{val=simpleInferExprType}) (214{val=(}) (800{val=initializer}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (27 (40{val=bindComponents.thisValue}) (236{val===}) (500{val=null})) (233{val=?}) (500{val=null}) (226{val=:}) (32 (802{val=simpleInferExprType}) (214{val=(}) (40{val=bindComponents.thisValue}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=currentScope}) (235{val=.}) (802{val=isConstructor}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=rhsType}) (204{val==}) (32 (802{val=simpleInferExprType}) (214{val=(}) (800{val=rhs}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=newPropType}) (204{val==}) (16 (27 (800{val=rhs}) (236{val===}) (500{val=null})) (233{val=?}) (500{val=null}) (226{val=:}) (32 (802{val=simpleInferExprType}) (214{val=(}) (800{val=rhs}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=recvType}) (204{val==}) (32 (802{val=simpleInferExprType}) (214{val=(}) (800{val=recv}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=t}) (204{val==}) (16 (27 (800{val=initializer}) (236{val===}) (500{val=null})) (233{val=?}) (500{val=null}) (226{val=:}) (32 (802{val=simpleInferExprType}) (214{val=(}) (800{val=initializer}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=initializer}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=inferredType}) (204{val==}) (32 (802{val=simpleInferExprType}) (214{val=(}) (800{val=initializer}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=t}) (204{val==}) (32 (802{val=simpleInferExprType}) (214{val=(}) (32 (800{val=prop}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isName}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=requireName}) (204{val==}) (32 (32 (800{val=require}) (235{val=.}) (802{val=getSecondChild}) (216{val=()})) (235{val=.}) (802{val=getString}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=compiler}) (234{val=,}) (9{val=true}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=testModules}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (32 (40{val=CompilerTestCase.LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (40{val=CompilerTestCase.LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (219{val=}}))))
(AST_ROOT_SC2NF (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (32 (40{val=CompilerTestCase.LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (219{val=}}))) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (219{val=}}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (802{val=test}) (214{val=(}) (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (219{val=}}))) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (219{val=}}))) (215{val=)})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (40{val=options.processCommonJSModules}) (215{val=)}) (8 (218{val={}) (60 (43 (801{val=ProcessCommonJSModules})) (59 (800{val=cjs}) (204{val==}) (14 (304{val=new}) (43 (801{val=ProcessCommonJSModules})) (214{val=(}) (315{val=this}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=cjs}) (235{val=.}) (802{val=process}) (214{val=(}) (500{val=null}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (802{val=testModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (802{val=testModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (802{val=testModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=options}) (235{val=.}) (802{val=needsTranspilationOf}) (214{val=(}) (40{val=FeatureSet.Feature.MODULES}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6ModulePass}) (214{val=(}) (800{val=checks}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=options}) (235{val=.}) (802{val=needsTranspilationOf}) (214{val=(}) (40{val=FeatureSet.Feature.MODULES}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6ModulePass}) (214{val=(}) (800{val=passes}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (32 (32 (800{val=options}) (235{val=.}) (802{val=getLanguageIn}) (216{val=()})) (235{val=.}) (802{val=toFeatureSet}) (216{val=()})) (235{val=.}) (802{val=has}) (214{val=(}) (40{val=FeatureSet.Feature.MODULES}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6ModulePass}) (214{val=(}) (800{val=checks}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (32 (32 (800{val=options}) (235{val=.}) (802{val=getLanguageIn}) (216{val=()})) (235{val=.}) (802{val=toFeatureSet}) (216{val=()})) (235{val=.}) (802{val=has}) (214{val=(}) (40{val=FeatureSet.Feature.MODULES}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6ModulePass}) (214{val=(}) (800{val=passes}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (40{val=options.processCommonJSModules}) (215{val=)}) (8 (218{val={}) (60 (43 (801{val=ProcessCommonJSModules})) (59 (800{val=cjs}) (204{val==}) (14 (304{val=new}) (43 (801{val=ProcessCommonJSModules})) (214{val=(}) (315{val=this}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=cjs}) (235{val=.}) (802{val=process}) (214{val=(}) (500{val=null}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (32 (40{val=CompilerTestCase.LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (40{val=CompilerTestCase.LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (219{val=}}))))
(AST_ROOT_SC2NF (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (32 (40{val=CompilerTestCase.LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (219{val=}}))) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (219{val=}}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (802{val=test}) (214{val=(}) (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (219{val=}}))) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (219{val=}}))) (215{val=)})))
(AST_ROOT_SC2NF (32 (802{val=testModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (802{val=testModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (802{val=testModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testModules}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=requireName}) (204{val==}) (32 (800{val=ProcessCommonJSModules}) (235{val=.}) (802{val=getCommonJsImportPath}) (214{val=(}) (800{val=require}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=compiler})) (204{val==}) (800{val=compiler})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (45{val=STRING_CONSTANT}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (800{val=type}) (235{val=.}) (802{val=getDisplayName}) (216{val=()})) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (49 (326{val=case}) (800{val=REMOVE_RHS}) (226{val=:})))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=markProvided}) (214{val=(}) (44 (43 (801{val=String})) (800{val=providedName})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=providedNamespaces}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=providedName}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=markNameProcessed}) (214{val=(}) (44 (43 (801{val=String})) (800{val=fullyQualifiedName})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=seenNames}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=fullyQualifiedName}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ObjectLiteralPropertyDefinition})) (214{val=(}) (800{val=parent}) (234{val=,}) (800{val=n}) (234{val=,}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (800{val=isExtern}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Var})) (231{val=>})) (59 (800{val=orderedVars}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Var})) (231{val=>})) (59 (800{val=orderedVars}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT3}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (32 (40{val=CompilerTestCase.LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (40{val=CompilerTestCase.LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (219{val=}}))))
(AST_ROOT_SC2NF (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (32 (40{val=CompilerTestCase.LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (219{val=}}))) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (219{val=}}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (802{val=test}) (214{val=(}) (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (219{val=}}))) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (219{val=}}))) (215{val=)})))
(AST_ROOT_SC2NF (32 (802{val=testModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (802{val=testModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (802{val=testModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (40{val=options.processCommonJSModules}) (215{val=)}) (8 (218{val={}) (60 (43 (801{val=ProcessCommonJSModules})) (59 (800{val=cjs}) (204{val==}) (14 (304{val=new}) (43 (801{val=ProcessCommonJSModules})) (214{val=(}) (315{val=this}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=cjs}) (235{val=.}) (802{val=process}) (214{val=(}) (500{val=null}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testModules}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=requireName}) (204{val==}) (32 (32 (800{val=require}) (235{val=.}) (802{val=getSecondChild}) (216{val=()})) (235{val=.}) (802{val=getString}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=compiler}) (234{val=,}) (9{val=true}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testDontPreserveUnknownTypeDeclarations}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testWarning}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (40{val=CheckConformance.CONFORMANCE_VIOLATION}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=typeCheck}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (800{val=FORWARD_DECLARATION_DEFINITIONS}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isUnknown}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=checkArgument}) (214{val=(}) (32 (800{val=nameNode}) (235{val=.}) (802{val=isQualifiedName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=options}) (235{val=.}) (802{val=needsTranspilationOf}) (214{val=(}) (40{val=FeatureSet.Feature.MODULES}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6ModulePass}) (214{val=(}) (800{val=checks}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=options}) (235{val=.}) (802{val=needsTranspilationOf}) (214{val=(}) (40{val=FeatureSet.Feature.MODULES}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6ModulePass}) (214{val=(}) (800{val=passes}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=options}) (235{val=.}) (802{val=needsTranspilationFrom}) (214{val=(}) (40{val=FeatureSet.ES6_MODULES}) (215{val=)})) (250{val=||}) (40{val=options.transformAMDToCJSModules}) (250{val=||}) (40{val=options.processCommonJSModules})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCoercionSubstitution_expression}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCoercionSubstitution_booleanResult0}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=PeepholeOptimizationsPass})) (59 (800{val=peepholePass}) (204{val==}) (14 (304{val=new}) (43 (801{val=PeepholeOptimizationsPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (32 (802{val=getName}) (216{val=()})) (234{val=,}) (14 (304{val=new}) (43 (801{val=PeepholeMinimizeConditions})) (214{val=(}) (800{val=late}) (234{val=,}) (800{val=useTypes}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TernaryValue})) (59 (800{val=result}) (204{val==}) (32 (802{val=evaluateComparison}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (234{val=,}) (800{val=left}) (234{val=,}) (800{val=right}) (234{val=,}) (800{val=shouldUseTypes}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Double})) (59 (800{val=rightValObj}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getNumberValue}) (214{val=(}) (800{val=right}) (234{val=,}) (800{val=shouldUseTypes}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Double})) (59 (800{val=result}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getNumberValue}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=shouldUseTypes}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=PeepholeMinimizeConditions})) (214{val=(}) (800{val=late}) (234{val=,}) (9{val=false}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=PeepholeMinimizeConditions})) (214{val=(}) (800{val=late}) (234{val=,}) (9{val=false}) (215{val=)})))
(AST_ROOT_SC2NF (21 (7 (800{val=caseMatches}) (204{val==}) (32 (800{val=PeepholeFoldConstants}) (235{val=.}) (802{val=evaluateComparison}) (214{val=(}) (40{val=Token.SHEQ}) (234{val=,}) (800{val=cond}) (234{val=,}) (800{val=caseLabel}) (234{val=,}) (9{val=false}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=PeepholeOptimizationsPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (32 (802{val=getName}) (216{val=()})) (234{val=,}) (14 (304{val=new}) (43 (801{val=PeepholeRemoveDeadCode})) (216{val=()})) (234{val=,}) (14 (304{val=new}) (43 (801{val=PeepholeMinimizeConditions})) (214{val=(}) (9{val=true}) (234{val=,}) (9{val=false}) (215{val=)})) (234{val=,}) (14 (304{val=new}) (43 (801{val=PeepholeFoldConstants})) (214{val=(}) (9{val=true}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=PeepholeMinimizeConditions})) (214{val=(}) (800{val=late}) (234{val=,}) (800{val=useTypesForOptimization}) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizations}) (235{val=.}) (802{val=add}) (214{val=(}) (14 (304{val=new}) (43 (801{val=PeepholeMinimizeConditions})) (214{val=(}) (800{val=late}) (234{val=,}) (800{val=useTypesForOptimization}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=n}) (204{val==}) (32 (802{val=parseError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=replacement}) (235{val=.}) (802{val=setJSType}) (214{val=(}) (32 (800{val=call}) (235{val=.}) (802{val=getJSType}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkArgument}) (214{val=(}) (27 (40{val=boxedInfo.length}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (21 (32 (800{val=f1}) (235{val=.}) (802{val=isSubtypeOfHelper}) (214{val=(}) (800{val=f2}) (234{val=,}) (9{val=true}) (234{val=,}) (800{val=subSuperMap}) (234{val=,}) (800{val=boxedInfo}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=isSubtypeOfHelper}) (214{val=(}) (800{val=other}) (234{val=,}) (9{val=true}) (234{val=,}) (800{val=subSuperMap}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=isSubtypeOfHelper}) (214{val=(}) (800{val=other}) (234{val=,}) (9{val=false}) (234{val=,}) (32 (800{val=SubtypeCache}) (235{val=.}) (802{val=create}) (216{val=()})) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFunctionArgRemoval_defaultValue3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCallOrApply}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNoRewriteArrLit}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (802{val=newlineJoin}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=source}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=create}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=RemoveUnusedVars})) (214{val=(}) (800{val=compiler}) (234{val=,}) (9{val=false}) (234{val=,}) (9{val=false}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=process}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=externs})) (234{val=,}) (44 (43 (801{val=Node})) (800{val=root})) (234{val=,}) (44 (43 (801{val=DefinitionUseSiteFinder})) (800{val=definitions})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=disableCompareAsTree}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=create}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=RemoveUnusedVars})) (214{val=(}) (800{val=compiler}) (234{val=,}) (9{val=false}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=process}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=externs})) (234{val=,}) (44 (43 (801{val=Node})) (800{val=root})) (234{val=,}) (44 (43 (801{val=ReferenceMap})) (800{val=references})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFunctionArgRemoval_defaultValue3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCallOrApply}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNoRewriteArrLit}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=source}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setEmitUseStrict}) (214{val=(}) (800{val=emitUseStrict}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=passes}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=passes}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=passes}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})) (21 (32 (802{val=addInlineVariables}) (216{val=()})) (227{val=;})) (21 (32 (802{val=addPeephole}) (216{val=()})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=passes}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=passes}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=passes}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=passes}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})) (21 (32 (802{val=addDeadCodeElimination}) (216{val=()})) (227{val=;})) (21 (32 (802{val=addInlineVariables}) (216{val=()})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=passes}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=passes}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})) (21 (32 (802{val=addInlineVariables}) (216{val=()})) (227{val=;})) (21 (32 (802{val=addPeephole}) (216{val=()})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=messages}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})) (21 (7 (800{val=mode}) (204{val==}) (40{val=JsMessage.Style.LEGACY})) (227{val=;})) (21 (7 (800{val=compilerOptions}) (204{val==}) (500{val=null})) (227{val=;})) (21 (7 (800{val=renameMessages}) (204{val==}) (9{val=false})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (32 (32 (802{val=getTopObject}) (216{val=()})) (235{val=.}) (802{val=getNominalTypeIfSingletonObj}) (216{val=()})) (235{val=.}) (802{val=getPrototypePropertyOfCtor}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (27 (800{val=superClass}) (236{val===}) (500{val=null})) (233{val=?}) (500{val=null}) (226{val=:}) (32 (800{val=superClass}) (235{val=.}) (802{val=getPrototypePropertyOfCtor}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=proto}) (204{val==}) (32 (32 (802{val=getNominalTypeIfSingletonObj}) (216{val=()})) (235{val=.}) (802{val=getPrototypePropertyOfCtor}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isCall}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=RuntimeException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=RuntimeException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalStateException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalStateException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalStateException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalStateException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=RuntimeException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (40{val=ref.scope}) (235{val=.}) (802{val=isGlobal}) (216{val=()})))
(AST_ROOT_SC2NF (32 (32 (40{val=ref.scope}) (235{val=.}) (802{val=getClosestHoistScope}) (216{val=()})) (235{val=.}) (802{val=isGlobal}) (216{val=()})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=compile}) (214{val=(}) (800{val=EXTERNS}) (234{val=,}) (800{val=inputs}) (234{val=,}) (800{val=options}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=RuntimeException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (60 (43 (801{val=Result})) (59 (800{val=result}) (204{val==}) (32 (800{val=compiler}) (235{val=.}) (802{val=compile}) (214{val=(}) (800{val=EXTERNS}) (234{val=,}) (800{val=inputs}) (234{val=,}) (800{val=options}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Result})) (59 (800{val=result}) (204{val==}) (32 (800{val=compiler}) (235{val=.}) (802{val=compile}) (214{val=(}) (800{val=EXTERNS}) (234{val=,}) (800{val=inputs}) (234{val=,}) (800{val=options}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Result})) (59 (800{val=result}) (204{val==}) (32 (800{val=compiler}) (235{val=.}) (802{val=compile}) (214{val=(}) (800{val=EXTERNS}) (234{val=,}) (800{val=inputs}) (234{val=,}) (800{val=options}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=type}) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=type}) (204{val==}) (32 (800{val=type}) (235{val=.}) (802{val=substring}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=type}) (235{val=.}) (802{val=lastIndexOf}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=shortName}) (204{val==}) (32 (32 (800{val=parent}) (235{val=.}) (802{val=getQualifiedName}) (216{val=()})) (235{val=.}) (802{val=substring}) (214{val=(}) (27 (32 (32 (800{val=parent}) (235{val=.}) (802{val=getQualifiedName}) (216{val=()})) (235{val=.}) (802{val=lastIndexOf}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=suffixes}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=polyfillName}) (235{val=.}) (802{val=substring}) (214{val=(}) (27 (32 (800{val=polyfillName}) (235{val=.}) (802{val=lastIndexOf}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (32 (40{val=cls.target}) (235{val=.}) (802{val=getQualifiedName}) (216{val=()})) (235{val=.}) (802{val=replaceAll}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (200{val=+}) (45{val=STRING_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Map})) (230{val=<}) (74 (43 (800{val=Node})) (230{val=<}) (43 (800{val=E})) (231{val=>})) (234{val=,}) (74 (43 (40{val=ImmutableSet.Builder})) (230{val=<}) (43 (800{val=E})) (231{val=>})) (231{val=>})) (59 (800{val=groupsTmp}) (204{val==}) (32 (800{val=Maps}) (235{val=.}) (802{val=newLinkedHashMap}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Map})) (230{val=<}) (43 (800{val=String})) (234{val=,}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=map}) (204{val==}) (32 (800{val=Maps}) (235{val=.}) (802{val=newHashMap}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getLhsNodesOfDeclaration}) (214{val=(}) (800{val=n}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getLhsNodesOfDeclaration}) (214{val=(}) (800{val=n}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getLhsNodesOfDeclaration}) (214{val=(}) (800{val=decl}) (215{val=)})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Iterable})) (230{val=<}) (43 (800{val=Node})) (231{val=>})) (59 (800{val=allVars}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getLhsNodesOfDeclaration}) (214{val=(}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=names}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getLhsNodesOfDeclaration}) (214{val=(}) (800{val=c}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getLhsNodesOfDeclaration}) (214{val=(}) (800{val=paramList}) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=sideEffectInfo}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=function}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getLhsNodesOfDeclaration}) (214{val=(}) (800{val=varNode}) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=lhs})) (226{val=:}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getLhsNodesOfDeclaration}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=declareVar}) (214{val=(}) (800{val=s}) (234{val=,}) (800{val=lhs}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getLhsNodesOfDeclaration}) (214{val=(}) (800{val=declaration}) (215{val=)})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getLhsNodesOfDeclaration}) (214{val=(}) (800{val=nameDecl}) (215{val=)})) (235{val=.}) (802{val=size}) (216{val=()})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (500{val=continue;}) (219{val=}}))))
(AST_ROOT_SC2NF (32 (40{val=ref.scope}) (235{val=.}) (802{val=isGlobal}) (216{val=()})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=failing_testLocalAliasWithLet3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=failing_testLocalAliasWithLet2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=languageIn}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT3})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Var})) (231{val=>})) (59 (800{val=orderedVars}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Node})) (231{val=>})) (59 (800{val=arrayFoldedChildren}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Deque})) (230{val=<}) (43 (800{val=ScriptDescription})) (231{val=>})) (59 (800{val=scriptDescriptions}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Node})) (231{val=>})) (59 (800{val=newVars}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=orderedVars})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=orderedVars})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Var})) (231{val=>})) (59 (800{val=orderedVars}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=orderedVars})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageIn}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT_2017})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCallOrApply}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNoRewriteArrLit}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (802{val=newlineJoin}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=source}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFunctionArgRemoval_defaultValue3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=create}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=RemoveUnusedVars})) (214{val=(}) (800{val=compiler}) (234{val=,}) (9{val=false}) (234{val=,}) (9{val=false}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=process}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=externs})) (234{val=,}) (44 (43 (801{val=Node})) (800{val=root})) (234{val=,}) (44 (43 (801{val=DefinitionUseSiteFinder})) (800{val=definitions})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageIn}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT3})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testConst}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=inFunction}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=languageIn}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT_2017})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=varify}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=varify}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=Node})) (800{val=varName})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkLocalityOfMarkedCalls}) (214{val=(}) (800{val=source}) (234{val=,}) (32 (800{val=ImmutableList}) (235{val=.}) (230{val=<}) (43 (800{val=String})) (231{val=>}) (802{val=of}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkLocalityOfMarkedCalls}) (214{val=(}) (800{val=source}) (234{val=,}) (32 (800{val=ImmutableList}) (235{val=.}) (230{val=<}) (43 (800{val=String})) (231{val=>}) (802{val=of}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertFalse}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=evaluatesToLocalValue}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageIn}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT3})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=languageIn}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT_2017})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=sourceName})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=fullExportedName}) (204{val==}) (27 (32 (800{val=currentScript}) (235{val=.}) (802{val=getBinaryNamespace}) (216{val=()})) (200{val=+}) (32 (800{val=exportDefinition}) (235{val=.}) (802{val=getExportPostfix}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=binaryNamespaceName}) (204{val==}) (32 (800{val=IR}) (235{val=.}) (802{val=name}) (214{val=(}) (32 (800{val=currentScript}) (235{val=.}) (802{val=getBinaryNamespace}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (40{val=currentScript.isModule})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (40{val=currentScript.isModule})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (40{val=currentScript.isModule})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=exportedNamespace}) (204{val==}) (32 (800{val=rewriteState}) (235{val=.}) (802{val=getExportedNamespaceOrScript}) (214{val=(}) (800{val=legacyNamespace}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (40{val=currentScript.isModule}) (234{val=,}) (800{val=currentScript}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (40{val=currentScript.isModule})) (250{val=||}) (38 (207{val=!}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (250{val=||}) (38 (207{val=!}) (32 (802{val=isAssignTarget}) (214{val=(}) (800{val=n}) (215{val=)})))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=languageIn}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT3})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=et}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=et}) (235{val=.}) (802{val=enumLiteralHasKey}) (214{val=(}) (800{val=pname}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=et}) (235{val=.}) (802{val=getEnumeratedType}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=type}) (204{val==}) (32 (800{val=locals}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=name}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=locals}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=name}) (234{val=,}) (800{val=newDeclType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=fullExportedName}) (204{val==}) (27 (32 (32 (800{val=currentScript}) (235{val=.}) (802{val=getBinaryNamespace}) (216{val=()})) (235{val=.}) (802{val=get}) (216{val=()})) (200{val=+}) (32 (800{val=exportDefinition}) (235{val=.}) (802{val=getExportPostfix}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=binaryNamespaceName}) (204{val==}) (32 (800{val=IR}) (235{val=.}) (802{val=name}) (214{val=(}) (32 (32 (800{val=currentScript}) (235{val=.}) (802{val=getBinaryNamespace}) (216{val=()})) (235{val=.}) (802{val=get}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=currentScript}) (235{val=.}) (802{val=isModule}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=currentScript}) (235{val=.}) (802{val=isModule}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=currentScript}) (235{val=.}) (802{val=isModule}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=exportedNamespace}) (204{val==}) (32 (32 (800{val=rewriteState}) (235{val=.}) (802{val=getExportedNamespaceOrScript}) (214{val=(}) (800{val=legacyNamespace}) (215{val=)})) (235{val=.}) (802{val=get}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=currentScript}) (235{val=.}) (802{val=isModule}) (216{val=()})) (234{val=,}) (800{val=currentScript}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=currentScript}) (235{val=.}) (802{val=isModule}) (216{val=()}))) (250{val=||}) (38 (207{val=!}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (250{val=||}) (38 (207{val=!}) (32 (802{val=isAssignTarget}) (214{val=(}) (800{val=n}) (215{val=)})))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isName}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=finder}) (235{val=.}) (802{val=visitTree}) (214{val=(}) (32 (802{val=getAstRoot}) (214{val=(}) (800{val=compiler}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (32 (40{val=cls.target}) (235{val=.}) (802{val=getQualifiedName}) (216{val=()})) (235{val=.}) (802{val=replace}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (200{val=+}) (45{val=STRING_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=statementNode}) (235{val=.}) (802{val=isVar}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=declNode}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (802{val=getGlobalScope}) (216{val=()})) (235{val=.}) (802{val=addNamespaceLit}) (214{val=(}) (800{val=qnameNode}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=compilerOptions}) (235{val=.}) (802{val=setPreserveGoogProvidesAndRequires}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compilerOptions}) (235{val=.}) (802{val=setPreserveGoogProvidesAndRequires}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=keyNode}) (235{val=.}) (802{val=isStringKey}) (216{val=()})) (250{val=||}) (32 (800{val=keyNode}) (235{val=.}) (802{val=isMemberFunctionDef}) (216{val=()}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=externsRoot}) (204{val==}) (32 (802{val=parse}) (214{val=(}) (800{val=compiler}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=externsRoot}) (204{val==}) (32 (802{val=parse}) (214{val=(}) (800{val=compiler}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=helperExposeExpression}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (21 (32 (802{val=helperExposeExpression}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (800{val=JSType})) (59 (800{val=jsdocType}) (204{val==}) (32 (800{val=symbolTable}) (235{val=.}) (802{val=getPropDeclaredType}) (214{val=(}) (800{val=prop}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (40{val=pair.type}) (204{val==}) (32 (800{val=symbolTable}) (235{val=.}) (802{val=getCastType}) (214{val=(}) (800{val=expr}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=JSType})) (59 (800{val=jsdocType}) (204{val==}) (32 (800{val=symbolTable}) (235{val=.}) (802{val=getPropDeclaredType}) (214{val=(}) (800{val=prop}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=JSType})) (59 (800{val=toType}) (204{val==}) (32 (800{val=symbolTable}) (235{val=.}) (802{val=getCastType}) (214{val=(}) (800{val=expr}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=visitNamespacePropertyDeclaration}) (214{val=(}) (800{val=getProp}) (234{val=,}) (800{val=recv}) (234{val=,}) (800{val=pname}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=JSType})) (59 (800{val=propDeclType}) (204{val==}) (32 (32 (802{val=getDeclaredObjLitProps}) (216{val=()})) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=prop}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (32 (22 (315{val=this}) (235{val=.}) (800{val=gti})) (235{val=.}) (802{val=getCastTypes}) (216{val=()})) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=getOptions}) (214{val=(}) (800{val=options}) (215{val=)})) (227{val=;})) (21 (32 (800{val=options}) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.ANALYZER_CHECKS}) (234{val=,}) (40{val=CheckLevel.WARNING}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=options}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=js}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=js}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=fileoverview}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testFunctionNamesAndIds}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (219{val=}}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testFunctionNamesAndIds}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (219{val=}}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testFunctionNamesAndIds}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (219{val=}}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=js}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSets}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=js}) (234{val=,}) (800{val=output}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=NewTypeInference.MISTYPED_ASSIGN_RHS}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEarlyReferenceError}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertNoWarning}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertNoWarning}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEarlyReferenceError}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (22 (32 (802{val=getLastCompiler}) (216{val=()})) (235{val=.}) (800{val=injected})) (215{val=)})) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=script}) (204{val==}) (32 (800{val=compiler}) (235{val=.}) (802{val=parseSyntheticCode}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=externs}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=externs}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=externs}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=modules}) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (219{val=}}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (802{val=test}) (214{val=(}) (32 (802{val=createModuleChain}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (219{val=}}))) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=createModuleStar}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (219{val=}}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=modules}) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (219{val=}}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testError}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (40{val=VarCheck.UNDEFINED_VAR_ERROR}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=externs}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (800{val=DEFAULT_EXTERNS}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (32 (802{val=config}) (214{val=(}) (32 (802{val=rule}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=testNoWarning}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=testNoWarning}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testNoWarning}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=js}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=js}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=configuration}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (21 (32 (802{val=testNoWarning}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (219{val=}}))))
(AST_ROOT_SC2NF (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (219{val=}}))))
(AST_ROOT_SC2NF (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=typeCheck}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testWarning}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (800{val=MISSING_RETURN_JSDOC}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testWarning}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (800{val=MISSING_RETURN_JSDOC}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testWarning}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (800{val=MISSING_RETURN_JSDOC}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=localVar}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=js}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fold}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PolymerClassDefinition})) (59 (800{val=def}) (204{val==}) (32 (802{val=parseAndExtractClassDefFromCall}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PolymerClassDefinition})) (59 (800{val=def}) (204{val==}) (32 (802{val=parseAndExtractClassDefFromCall}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PolymerClassDefinition})) (59 (800{val=def}) (204{val==}) (32 (802{val=parseAndExtractClassDefFromCall}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PolymerClassDefinition})) (59 (800{val=def}) (204{val==}) (32 (802{val=parseAndExtractClassDefFromCall}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=foldSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=body}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=body}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testReference}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=legacyScript}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=legacyScript}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=googModule}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=googModule}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=googModule}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=legacyScript}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=legacyScript}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=t}) (235{val=.}) (802{val=inGlobalHoistScope}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isFunctionExpression}) (214{val=(}) (800{val=n}) (215{val=)})))))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isFunctionExpression}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (800{val=checkForNewObjects}) (250{val=||}) (38 (207{val=!}) (32 (802{val=isFunctionExpression}) (214{val=(}) (800{val=n}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isEs6ModuleRoot}) (214{val=(}) (800{val=root}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=FindModuleDependencies}) (235{val=.}) (802{val=isEs6ModuleRoot}) (214{val=(}) (800{val=root}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=moduleType}) (204{val==}) (40{val=ModuleType.ES6})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (802{val=testModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Es6RewriteModules})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isFunctionExpression}) (214{val=(}) (800{val=parent}) (215{val=)})) (215{val=)}) (8 (218{val={}) (500{val=break;}) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=FindStaticMembers})) (59 (800{val=findStaticMembers}) (204{val==}) (14 (304{val=new}) (43 (801{val=FindStaticMembers})) (216{val=()}))) (227{val=;})) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=processTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (800{val=findStaticMembers}) (215{val=)})) (227{val=;})) (21 (32 (802{val=processInherits}) (214{val=(}) (40{val=findStaticMembers.inheritsCalls}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=processInherits}) (214{val=(}) (40{val=findStaticMembers.inheritsCalls}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertChangesRecorded}) (214{val=(}) (800{val=code}) (234{val=,}) (14 (304{val=new}) (43 (801{val=NameChangingCallback})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertChangesRecorded}) (214{val=(}) (800{val=code}) (234{val=,}) (14 (304{val=new}) (43 (801{val=NameChangingCallback})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=src}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (800{val=lines}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=src}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (800{val=lines}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=js}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=js}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=js}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=js}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=js}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=js}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=js}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=fn}) (235{val=.}) (802{val=isFromExterns}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (32 (802{val=getScopes}) (216{val=()})) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=fnScope}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=typeCheck}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (40{val=NewTypeInference.NULLABLE_DEREFERENCE}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=node}) (235{val=.}) (802{val=useSourceInfoWithoutLengthIfMissingFromForTree}) (214{val=(}) (800{val=basisNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (800{val=JSErrorSubject})) (214{val=(}) (800{val=THROW_ASSERTION_ERROR}) (234{val=,}) (800{val=error}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (800{val=NodeSubject})) (214{val=(}) (800{val=THROW_ASSERTION_ERROR}) (234{val=,}) (800{val=node}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=processTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (800{val=findStaticMembers}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=processTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=processTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=externs}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=processTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=processCheck}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (234{val=,}) (14 (304{val=new}) (43 (801{val=SelfReferenceRewriter})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=processTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (234{val=,}) (14 (304{val=new}) (43 (801{val=SelfReferenceRewriter})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapCheck}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=processCheck}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=processTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (802{val=maybeExternMethod}) (214{val=(}) (800{val=first}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=DecompositionType.UNDECOMPOSABLE}) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (40{val=DecompositionType.DECOMPOSABLE}) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (802{val=allowObjectCallDecomposing}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=name}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=newQName}) (214{val=(}) (800{val=compiler}) (234{val=,}) (27 (800{val=prototypeAlias}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (40{val=declar.memberName})) (234{val=,}) (40{val=declar.node}) (234{val=,}) (40{val=declar.memberName}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=var}) (204{val==}) (32 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=newVarNode}) (214{val=(}) (800{val=prototypeAlias}) (234{val=,}) (500{val=null}) (215{val=)})) (235{val=.}) (802{val=useSourceInfoIfMissingFromForTree}) (214{val=(}) (800{val=injectionPoint}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=declNode}) (235{val=.}) (802{val=isAssign}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=NominalType})) (59 (800{val=nt}) (204{val==}) (32 (802{val=getNominalTypeIfSingletonObj}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (27 (32 (800{val=nt}) (235{val=.}) (802{val=isLiteralObject}) (216{val=()})) (250{val=||}) (32 (800{val=nt}) (235{val=.}) (802{val=isBuiltinObject}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=isPropertyRemovable}) (214{val=(}) (44 (43 (801{val=String})) (800{val=propertyName})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (27 (800{val=isEntirelyRemovable}) (250{val=||}) (27 (800{val=unreferencedPropertiesMayBeRemoved}) (249{val=&&}) (38 (207{val=!}) (32 (800{val=referencedPropertyNames}) (235{val=.}) (802{val=contains}) (214{val=(}) (800{val=propertyName}) (215{val=)}))))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=resultPair}) (204{val==}) (32 (802{val=analyzeCastFwd}) (214{val=(}) (800{val=expr}) (234{val=,}) (800{val=inEnv}) (234{val=,}) (800{val=specializedType}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Name})) (59 (800{val=superclassNameObj}) (204{val==}) (32 (802{val=getOrCreateName}) (214{val=(}) (800{val=superclassName}) (234{val=,}) (9{val=false}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=abstract}) (39{val=void}) (802{val=verify}) (214{val=(}) (44 (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=currentArgumentsAccess}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=MemberDefinition})) (231{val=>})) (59 (800{val=allProperties}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=SourceFile})) (231{val=>})) (59 (800{val=files}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=SourceFile})) (231{val=>})) (59 (800{val=files}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=SourceFile})) (231{val=>})) (59 (800{val=files}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (59 (800{val=entryPoints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=cur}) (204{val==}) (22 (32 (40{val=instance.declarations}) (235{val=.}) (802{val=getLast}) (216{val=()})) (235{val=.}) (800{val=node}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PrototypeMemberDeclaration})) (59 (800{val=first}) (204{val==}) (32 (40{val=instance.declarations}) (235{val=.}) (802{val=getFirst}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=lValue}) (235{val=.}) (802{val=isRest}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=lValue}) (204{val==}) (32 (800{val=lValue}) (235{val=.}) (802{val=getFirstChild}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=VarInfo})) (59 (800{val=varInfo}) (204{val==}) (32 (802{val=getVarInfo}) (214{val=(}) (32 (800{val=classScope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (32 (800{val=classNameNode}) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=VarInfo})) (59 (800{val=varInfo}) (204{val==}) (32 (802{val=getVarInfo}) (214{val=(}) (800{val=var}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=varInfo}) (235{val=.}) (802{val=addRemovable}) (214{val=(}) (32 (14 (304{val=new}) (43 (801{val=RemovableBuilder})) (216{val=()})) (235{val=.}) (802{val=buildDestructuringAssign}) (214{val=(}) (800{val=c}) (234{val=,}) (800{val=c}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=VarInfo})) (59 (800{val=varInfo}) (204{val==}) (32 (802{val=getVarInfo}) (214{val=(}) (800{val=var}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=VarInfo})) (59 (800{val=varInfo}) (204{val==}) (32 (802{val=getVarInfo}) (214{val=(}) (800{val=var}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=VarInfo})) (59 (800{val=varInfo}) (204{val==}) (32 (802{val=getVarInfo}) (214{val=(}) (32 (802{val=checkNotNull}) (214{val=(}) (32 (800{val=scope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (32 (800{val=nameNode}) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)})) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=VarInfo})) (59 (800{val=varInfo}) (204{val==}) (32 (802{val=getVarInfo}) (214{val=(}) (32 (800{val=scope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (32 (800{val=nameNode}) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=VarInfo})) (59 (800{val=exceptionVarInfo}) (204{val==}) (32 (802{val=getVarInfo}) (214{val=(}) (32 (800{val=scope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (32 (800{val=exceptionNameNode}) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=VarInfo})) (59 (800{val=varInfo}) (204{val==}) (32 (802{val=getVarInfo}) (214{val=(}) (800{val=var}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=varInfo}) (235{val=.}) (802{val=addRemovable}) (214{val=(}) (32 (14 (304{val=new}) (43 (801{val=RemovableBuilder})) (216{val=()})) (235{val=.}) (802{val=buildDestructuringAssign}) (214{val=(}) (800{val=restNode}) (234{val=,}) (800{val=target}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=VarInfo})) (59 (800{val=classVarInfo}) (204{val==}) (32 (802{val=getVarInfo}) (214{val=(}) (800{val=classVar}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isCallOrNew}) (214{val=(}) (800{val=invocation}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=Scope})) (800{val=scope})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=current}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=current}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=current}) (235{val=.}) (802{val=isLabel}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=isControlStructure}) (214{val=(}) (800{val=parent}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isClassMembers}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isObjectLit}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isClassMembers}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isObjectLit}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=callNode}) (235{val=.}) (802{val=isNew}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=callNode}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalStateException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalStateException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isObjectLitKey}) (214{val=(}) (800{val=n}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=isMarkedConst}) (204{val==}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isConst}) (216{val=()})) (250{val=||}) (36 (214{val=(}) (27 (27 (800{val=jsdoc}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=jsdoc}) (235{val=.}) (802{val=isConstant}) (216{val=()}))) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Queue})) (230{val=<}) (43 (800{val=Property})) (231{val=>})) (59 (800{val=propertyQueue}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (214{val=(}) (800{val=propertiesSet}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)}) (8 (218{val={}) (500{val=break;}) (219{val=}}))) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=ancestors})) (235{val=.}) (802{val=add}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (800{val=source}) (234{val=,}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=Var})) (800{val=v})))
(AST_ROOT_SC2NF (44 (43 (801{val=Node})) (800{val=definitionRValue})))
(AST_ROOT_SC2NF (32 (802{val=isStaticCtorProp}) (214{val=(}) (800{val=getProp}) (234{val=,}) (800{val=currentScope}) (215{val=)})))
(AST_ROOT_SC2NF (44 (43 (801{val=JSModule})) (800{val=module})))
(AST_ROOT_SC2NF (44 (43 (801{val=JSModule})) (800{val=module})))
(AST_ROOT_SC2NF (44 (43 (801{val=DefinitionProvider})) (800{val=definitionProvider})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=defs}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (801{val=VisibleForTesting})) (74 (43 (800{val=Multimap})) (230{val=<}) (43 (800{val=String})) (234{val=,}) (43 (800{val=UseSite})) (231{val=>})) (802{val=getUseSitesByName}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=LinkedHashMultimap}) (235{val=.}) (802{val=create}) (214{val=(}) (800{val=useSitesByName}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=inExterns}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=visitExterns}) (214{val=(}) (800{val=traversal}) (234{val=,}) (800{val=node}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (802{val=visitCode}) (214{val=(}) (800{val=traversal}) (234{val=,}) (800{val=node}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testAnnotationInExterns_new5}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=assertPureCallsMarked}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=create}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=RemoveUnusedVars})) (214{val=(}) (800{val=compiler}) (234{val=,}) (9{val=false}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (14 (304{val=new}) (43 (801{val=RemoveUnusedVars})) (214{val=(}) (800{val=compiler}) (234{val=,}) (9{val=true}) (234{val=,}) (9{val=false}) (215{val=)})) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (14 (304{val=new}) (43 (801{val=RemoveUnusedVars})) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=removeGlobal}) (234{val=,}) (800{val=preserveFunctionExpressionNames}) (215{val=)})) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=RemoveUnusedVars})) (214{val=(}) (800{val=compiler}) (234{val=,}) (38 (207{val=!}) (800{val=removeOnlyLocals})) (234{val=,}) (800{val=preserveAnonymousFunctionNames}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=visitScript}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=assertThat}) (214{val=(}) (800{val=packageJsonMainEntries}) (215{val=)})) (235{val=.}) (802{val=containsEntry}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=NodeModuleResolver.JSC_BROWSER_BLACKLISTED_MARKER}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkArgument}) (214{val=(}) (32 (800{val=fnNode}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=LinkedHashMap})) (230{val=<}) (43 (800{val=String})) (234{val=,}) (43 (800{val=Node})) (231{val=>})) (59 (800{val=actualMap}) (204{val==}) (32 (800{val=FunctionArgumentInjector}) (235{val=.}) (802{val=getFunctionCallParameterMap}) (214{val=(}) (800{val=fn}) (234{val=,}) (800{val=call}) (234{val=,}) (32 (802{val=getNameSupplier}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFindModifiedParameters12}) (216{val=()}) (8 (218{val={}) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=FunctionArgumentInjector}) (235{val=.}) (802{val=findModifiedParameters}) (214{val=(}) (32 (802{val=parseFunction}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFindModifiedParameters2}) (216{val=()}) (8 (218{val={}) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=FunctionArgumentInjector}) (235{val=.}) (802{val=findModifiedParameters}) (214{val=(}) (32 (802{val=parseFunction}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFindModifiedParameters1}) (216{val=()}) (8 (218{val={}) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=FunctionArgumentInjector}) (235{val=.}) (802{val=findModifiedParameters}) (214{val=(}) (32 (802{val=parseFunction}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFindModifiedParameters0}) (216{val=()}) (8 (218{val={}) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=FunctionArgumentInjector}) (235{val=.}) (802{val=findModifiedParameters}) (214{val=(}) (32 (802{val=parseFunction}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Boolean})) (59 (800{val=replaceParent}) (204{val==}) (9{val=true})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=tracer}) (204{val==}) (14 (304{val=new}) (43 (801{val=Tracer})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=edgeAnnotationStack}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=edgeAnnotationStack}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})) (219{val=}}))) (21 (32 (802{val=pushAnnotations}) (214{val=(}) (800{val=edgeAnnotationStack}) (234{val=,}) (32 (802{val=getEdges}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=nodeAnnotationStack}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=nodeAnnotationStack}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})) (219{val=}}))) (21 (32 (802{val=pushAnnotations}) (214{val=(}) (800{val=nodeAnnotationStack}) (234{val=,}) (32 (802{val=getNodes}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE}) (230{val=<}) (27 (32 (800{val=blockScope}) (235{val=.}) (802{val=getVarCount}) (216{val=()})) (200{val=+}) (32 (800{val=functionScope}) (235{val=.}) (802{val=getVarCount}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE}) (230{val=<}) (32 (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()})) (235{val=.}) (802{val=getVarCount}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (27 (800{val=i}) (230{val=<}) (27 (40{val=LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE}) (200{val=+}) (34{val=NUMBER_CONSTANT}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (32 (800{val=var}) (235{val=.}) (802{val=getParentNode}) (216{val=()})) (235{val=.}) (802{val=isParamList}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (7 (40{val=varInfo.propertyAssignmentsWillPreventRemoval}) (204{val==}) (9{val=true})) (227{val=;})) (21 (7 (40{val=varInfo.unreferencedPropertiesMayBeRemoved}) (204{val==}) (9{val=false})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=exceptionVarInfo}) (235{val=.}) (802{val=setCannotRemoveAnything}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=canonicalTotallyUnremovableVarInfo}) (235{val=.}) (802{val=setCannotRemoveAnything}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Set})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (800{val=namesToAlias})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Set})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (800{val=needAliases})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=LinkedHashMap})) (230{val=<}) (43 (800{val=String})) (234{val=,}) (43 (800{val=Node})) (231{val=>})) (800{val=argMap})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (40{val=LiveVariablesAnalysisEs6.MAX_VARIABLES_TO_ANALYZE}) (231{val=>}) (32 (800{val=orderedVars}) (235{val=.}) (802{val=size}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=LiveVariablesAnalysisEs6.MAX_VARIABLES_TO_ANALYZE}) (230{val=<}) (32 (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()})) (235{val=.}) (802{val=getVarCount}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (27 (800{val=i}) (230{val=<}) (27 (40{val=LiveVariablesAnalysisEs6.MAX_VARIABLES_TO_ANALYZE}) (200{val=+}) (34{val=NUMBER_CONSTANT}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=isVar}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=parent}) (235{val=.}) (802{val=isVar}) (216{val=()})) (249{val=&&}) (32 (800{val=nameNode}) (235{val=.}) (802{val=hasOneChild}) (216{val=()}))))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=isVar}) (216{val=()})))
(AST_ROOT_SC2NF (27 (800{val=removeUnusedProperties}) (249{val=&&}) (32 (800{val=r}) (235{val=.}) (802{val=isNamedPropertyAssignment}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=referencedPropertyNames}) (235{val=.}) (802{val=contains}) (214{val=(}) (32 (800{val=r}) (235{val=.}) (802{val=getPropertyName}) (216{val=()})) (215{val=)})))))
(AST_ROOT_SC2NF (27 (800{val=removeUnusedProperties}) (249{val=&&}) (32 (800{val=removable}) (235{val=.}) (802{val=isNamedPropertyAssignment}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=referencedPropertyNames}) (235{val=.}) (802{val=contains}) (214{val=(}) (32 (800{val=removable}) (235{val=.}) (802{val=getPropertyName}) (216{val=()})) (215{val=)})))))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=isString}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (802{val=isConstantNameNode}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=knownConstants}) (215{val=)})))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (27 (800{val=rValue}) (236{val===}) (500{val=null})) (250{val=||}) (38 (207{val=!}) (32 (800{val=rValue}) (235{val=.}) (802{val=isFunction}) (216{val=()})))) (250{val=||}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isVarArgsFunction}) (214{val=(}) (800{val=rValue}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isVarArgsFunction}) (214{val=(}) (800{val=fnc}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=computeEscapedEs6}) (214{val=(}) (32 (800{val=jsScope}) (235{val=.}) (802{val=getParent}) (216{val=()})) (234{val=,}) (800{val=escaped}) (234{val=,}) (800{val=compiler}) (234{val=,}) (800{val=scopeCreator}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=computeEscapedEs6}) (214{val=(}) (800{val=jsScope}) (234{val=,}) (800{val=escaped}) (234{val=,}) (800{val=compiler}) (234{val=,}) (800{val=scopeCreator}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=computeEscapedEs6}) (214{val=(}) (32 (800{val=jsScope}) (235{val=.}) (802{val=getParent}) (216{val=()})) (234{val=,}) (800{val=escaped}) (234{val=,}) (800{val=compiler}) (234{val=,}) (800{val=scopeCreator}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (802{val=isConstructorCall}) (214{val=(}) (800{val=expr}) (215{val=)})))
(AST_ROOT_SC2NF (31 (83{val=private}) (43 (800{val=Scope})) (802{val=newScope}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Scope}) (235{val=.}) (802{val=createGlobalScope}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.SCRIPT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=allowMethodCallDecomposing}) (204{val==}) (9{val=false})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=createCompilerOptions}) (216{val=()})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (32 (40{val=CompilerTestCase.LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (40{val=CompilerTestCase.LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (802{val=testModules}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testES6Modules}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testB3473189}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=BlackHoleErrorManager}) (235{val=.}) (802{val=silence}) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=classAndItsMethodAliasedAsExtern}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=String})) (802{val=getPropertyName}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=checkState}) (214{val=(}) (32 (802{val=isNamedPropertyAssignment}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (802{val=checkNotNull}) (214{val=(}) (800{val=propertyName}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=toRemove}) (235{val=.}) (802{val=isParamList}) (216{val=()})) (215{val=)}) (8 (220{val={}})) (322{val=else}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalStateException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (40{val=options.collapseProperties}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (40{val=options.collapseProperties}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (40{val=options.collapseProperties}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (40{val=options.collapseProperties}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=isApplied}) (214{val=(}) (44 (43 (801{val=CompilerOptions})) (800{val=options})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=options.collapseProperties}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=FeatureSet})) (802{val=featureSet}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=ES5}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (38 (207{val=!}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=isVar}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNoGlobalSchopeChanges}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=RemoveUnusedVars})) (214{val=(}) (800{val=compiler}) (234{val=,}) (38 (207{val=!}) (800{val=removeOnlyLocals})) (234{val=,}) (800{val=preserveAnonymousFunctionNames}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (36 (214{val=(}) (27 (32 (802{val=getTypeDeprecationInfo}) (214{val=(}) (32 (32 (800{val=t}) (235{val=.}) (802{val=getTypedScope}) (216{val=()})) (235{val=.}) (802{val=getTypeOfThis}) (216{val=()})) (215{val=)})) (242{val=!=}) (500{val=null})) (215{val=)})))
(AST_ROOT_SC2NF (44 (43 (801{val=TypedVar})) (800{val=var})))
(AST_ROOT_SC2NF (44 (43 (801{val=TypedVar})) (800{val=var})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (39{val=boolean}) (802{val=isMethodDeclaration}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=isIndependentlyRemovableNamedProperty}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=isPrototypeObjectNamedPropertyAssignment}) (216{val=()})) (250{val=||}) (32 (802{val=isMethodDeclaration}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=isMethodDeclaration}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (800{val=isGlobal}) (249{val=&&}) (38 (207{val=!}) (800{val=removeGlobals})) (249{val=&&}) (38 (207{val=!}) (800{val=removeUnusedProperties}))))
(AST_ROOT_SC2NF (27 (800{val=removeUnusedProperties}) (249{val=&&}) (32 (800{val=removable}) (235{val=.}) (802{val=isNamedProperty}) (216{val=()}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=removeUnusedProperties}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=removeUnreferencedProperties}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=options.removeUnusedVars}) (250{val=||}) (40{val=options.removeUnusedLocalVars})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (802{val=getRemoveUnusedVars}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=flowSensitiveInlineVariables}) (215{val=)})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (27 (40{val=options.removeUnusedVars}) (250{val=||}) (40{val=options.removeUnusedLocalVars})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (802{val=lastRemoveUnusedVars}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (32 (14 (304{val=new}) (43 (40{val=RemoveUnusedVars.Builder})) (214{val=(}) (800{val=compiler}) (215{val=)})) (235{val=.}) (802{val=removeGlobals}) (214{val=(}) (9{val=true}) (215{val=)})) (235{val=.}) (802{val=build}) (216{val=()})) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=options.removeUnusedVars}) (250{val=||}) (40{val=options.removeUnusedLocalVars})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (802{val=getRemoveUnusedCode}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=RewriteGlobalFunctionStatementsToVarAssignmentsCallback})) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (32 (32 (32 (32 (14 (304{val=new}) (43 (40{val=SimpleDependencyInfo.Builder})) (214{val=(}) (800{val=closureRelativePath}) (234{val=,}) (800{val=filePath}) (215{val=)})) (235{val=.}) (802{val=setProvides}) (214{val=(}) (800{val=provides}) (215{val=)})) (235{val=.}) (802{val=setRequires}) (214{val=(}) (800{val=requires}) (215{val=)})) (235{val=.}) (802{val=setWeakRequires}) (214{val=(}) (800{val=weakRequires}) (215{val=)})) (235{val=.}) (802{val=setLoadFlags}) (214{val=(}) (800{val=loadFlags}) (215{val=)})) (235{val=.}) (802{val=build}) (216{val=()})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=options.removeUnusedVars}) (250{val=||}) (40{val=options.removeUnusedLocalVars})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=removeUnusedCode}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=atLeast8}) (204{val==}) (27 (800{val=mode}) (236{val===}) (40{val=Mode.ES8_OR_GREATER}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (74 (43 (800{val=ImmutableCollection})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (802{val=getWeakRequires}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (802{val=getRequires}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (802{val=getProvides}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testDefaultParam_argIsUnknown}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testDefaultParam_argIsUndefined}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=disabled_testArrayPatternParam}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=visitParamList}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Annotation})) (59 (800{val=annotation}) (204{val==}) (32 (800{val=annotationNames}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=annotationName}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (40{val=config.languageMode}) (242{val=!=}) (40{val=LanguageMode.TYPESCRIPT})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=config.languageMode}) (236{val===}) (40{val=LanguageMode.ECMASCRIPT3})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=errorReporter}) (235{val=.}) (802{val=error}) (214{val=(}) (800{val=SETTER_ERROR_MESSAGE}) (234{val=,}) (800{val=sourceName}) (234{val=,}) (32 (802{val=lineno}) (214{val=(}) (800{val=node}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=config.languageMode}) (236{val===}) (40{val=LanguageMode.ECMASCRIPT3})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=errorReporter}) (235{val=.}) (802{val=error}) (214{val=(}) (800{val=GETTER_ERROR_MESSAGE}) (234{val=,}) (800{val=sourceName}) (234{val=,}) (32 (802{val=lineno}) (214{val=(}) (800{val=node}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=config.languageMode}) (236{val===}) (40{val=LanguageMode.ECMASCRIPT3})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=errorReporter}) (235{val=.}) (802{val=warning}) (214{val=(}) (800{val=INVALID_ES3_PROP_NAME}) (234{val=,}) (800{val=sourceName}) (234{val=,}) (32 (800{val=node}) (235{val=.}) (802{val=getLineno}) (216{val=()})) (234{val=,}) (32 (800{val=node}) (235{val=.}) (802{val=getCharno}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkState}) (214{val=(}) (27 (40{val=config.keepGoing}) (236{val===}) (40{val=Config.RunMode.KEEP_GOING})) (215{val=)})) (227{val=;})) (21 (7 (800{val=bodyNode}) (204{val==}) (32 (800{val=IR}) (235{val=.}) (802{val=block}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (40{val=RemoveUnusedCode.Builder})) (214{val=(}) (800{val=compiler}) (215{val=)})) (235{val=.}) (802{val=build}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (40{val=options.removeUnusedPrototypeProperties}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=removeUnusedPrototypeProperties}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (23 (43 (801{val=CollapseProperties})) (59 (800{val=collapseProperties}) (204{val==}) (14 (304{val=new}) (43 (801{val=CollapseProperties})) (214{val=(}) (800{val=compiler}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=create}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=CollapseProperties})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=CollapseProperties})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=apply}) (214{val=(}) (44 (43 (801{val=CompilerOptions})) (800{val=options})) (234{val=,}) (44 (39{val=boolean}) (800{val=value})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (800{val=value}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=p}) (242{val=!=}) (500{val=null})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=p}) (235{val=.}) (802{val=canCollapse}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (500{val=continue;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (800{val=canCollapseChildNames})) (250{val=||}) (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=canCollapse}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (800{val=canCollapseChildNames})) (250{val=||}) (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=canCollapse}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (27 (800{val=isObjLit}) (249{val=&&}) (32 (800{val=n}) (235{val=.}) (802{val=canEliminate}) (216{val=()}))))
(AST_ROOT_SC2NF (27 (800{val=isObjLit}) (249{val=&&}) (32 (800{val=n}) (235{val=.}) (802{val=canEliminate}) (216{val=()}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=canCollapse}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=updateGlobalNameDeclaration}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=alias}) (234{val=,}) (800{val=canCollapseChildNames}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (14 (304{val=new}) (43 (801{val=CollapseProperties})) (214{val=(}) (800{val=compiler}) (215{val=)})) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (83{val=final}) (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=CollapseProperties})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapseProperties}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=collapseProperties}) (204{val==}) (9{val=false})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=shouldRunRemoveUnusedCode}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=removeUnusedCode}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (14 (304{val=new}) (43 (40{val=RemoveUnusedCode.Builder})) (214{val=(}) (800{val=compiler}) (215{val=)})) (235{val=.}) (802{val=removeLocalVars}) (214{val=(}) (9{val=true}) (215{val=)})) (235{val=.}) (802{val=build}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=isVar}) (216{val=()})) (250{val=||}) (32 (800{val=parent}) (235{val=.}) (802{val=isFunction}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (40{val=RemoveUnusedCode.Builder})) (214{val=(}) (800{val=compiler}) (215{val=)})) (235{val=.}) (802{val=build}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (40{val=options.removeUnusedPrototypeProperties}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=removeUnusedPrototypeProperties}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=options}) (235{val=.}) (802{val=setCollapsePropertiesLevel}) (214{val=(}) (40{val=PropertyCollapseLevel.ALL}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=String})) (800{val=filename})) (226{val=:}) (800{val=files}) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=fix}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=fix}) (214{val=(}) (800{val=filename}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (802{val=lint}) (214{val=(}) (800{val=filename}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=extraSmartNamePass}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=qualifiedName}) (204{val==}) (32 (32 (800{val=aliasVar}) (235{val=.}) (802{val=getInitialValue}) (216{val=()})) (235{val=.}) (802{val=getQualifiedName}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=aliasExpanded}) (204{val==}) (32 (802{val=checkNotNull}) (214{val=(}) (32 (800{val=aliasDefinition}) (235{val=.}) (802{val=getQualifiedName}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=allowGlobalFunctionInlining}) (204{val==}) (9{val=false})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testLocalFunctionInliningOnly4}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=allowGlobalFunctionInlining})) (204{val==}) (9{val=false})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testLocalFunctionInliningOnly3}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=allowGlobalFunctionInlining})) (204{val==}) (9{val=false})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testLocalFunctionInliningOnly2}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=allowGlobalFunctionInlining})) (204{val==}) (9{val=false})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=allowGlobalFunctionInlining}) (204{val==}) (9{val=true})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT_NEXT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageOut}) (214{val=(}) (16 (800{val=value}) (233{val=?}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT5}) (226{val=:}) (40{val=CompilerOptions.LanguageMode.NO_TRANSPILE})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=includesGlobals}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (315{val=this}) (236{val===}) (800{val=ALL})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=addToDebugLog}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=file}) (235{val=.}) (802{val=getName}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isAssignmentOp}) (214{val=(}) (800{val=assignNode}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=superClassNameNode}) (204{val==}) (32 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=newQName}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=superClassString}) (215{val=)})) (235{val=.}) (802{val=useSourceInfoIfMissingFrom}) (214{val=(}) (40{val=metadata.superClassNameNode}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=VarInfo})) (59 (800{val=varInfo}) (204{val==}) (32 (802{val=traverseVar}) (214{val=(}) (32 (800{val=classScope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (32 (800{val=classNameNode}) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=VarInfo})) (59 (800{val=varInfo}) (204{val==}) (32 (802{val=traverseVar}) (214{val=(}) (32 (800{val=scope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (32 (800{val=classNameNode}) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=VarInfo})) (59 (800{val=varInfo}) (204{val==}) (32 (802{val=traverseVar}) (214{val=(}) (32 (802{val=checkNotNull}) (214{val=(}) (32 (800{val=scope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (32 (800{val=nameNode}) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)})) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=VarInfo})) (59 (800{val=varInfo}) (204{val==}) (32 (802{val=traverseVar}) (214{val=(}) (32 (800{val=scope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (32 (800{val=nameNode}) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=VarInfo})) (59 (800{val=exceptionVarInfo}) (204{val==}) (32 (802{val=traverseVar}) (214{val=(}) (32 (800{val=scope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (32 (800{val=exceptionNameNode}) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testIssue618_2}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=removeGlobal})) (204{val==}) (9{val=false})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (27 (27 (27 (800{val=rhs}) (236{val===}) (500{val=null})) (250{val=||}) (32 (802{val=isTypedRhs}) (214{val=(}) (800{val=rhs}) (215{val=)}))) (250{val=||}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isCallTo}) (214{val=(}) (800{val=rhs}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (250{val=||}) (32 (802{val=isImportRhs}) (214{val=(}) (800{val=rhs}) (215{val=)}))))
(AST_ROOT_SC2NF (32 (802{val=getAllSymbolsSorted}) (216{val=()})))
(AST_ROOT_SC2NF (31 (83{val=public}) (74 (43 (800{val=Iterable})) (230{val=<}) (43 (800{val=Symbol})) (231{val=>})) (802{val=getAllSymbols}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Collections}) (235{val=.}) (802{val=unmodifiableCollection}) (214{val=(}) (32 (800{val=symbols}) (235{val=.}) (802{val=values}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=foldSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (802{val=getAllSymbolsSorted}) (216{val=()})))
(AST_ROOT_SC2NF (32 (802{val=getAllSymbolsSorted}) (216{val=()})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=key}) (235{val=.}) (802{val=hasChildren}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=maybeWarn}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=node}) (235{val=.}) (802{val=isStringKey}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=node}) (235{val=.}) (802{val=hasChildren}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=t}) (235{val=.}) (802{val=report}) (214{val=(}) (800{val=node}) (234{val=,}) (800{val=SHORTHAND_ASSIGNMENT_IN_ENUM}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isObjectPattern}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (38 (207{val=!}) (36 (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isStringKey}) (216{val=()})) (249{val=&&}) (32 (800{val=n}) (235{val=.}) (802{val=hasChildren}) (216{val=()}))) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=validateObjectLitStringKey}) (214{val=(}) (800{val=c}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=removeUnusedCodeOnce}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setInlineFunctions}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setInlineFunctions}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setInlineFunctions}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setInlineFunctions}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=inlineFunctions})) (204{val==}) (800{val=inlineFunctions})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Iterables}) (235{val=.}) (802{val=addAll}) (214{val=(}) (800{val=allSymbols}) (234{val=,}) (32 (800{val=table}) (235{val=.}) (802{val=getAllSymbols}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=isIndependentlyRemovableNamedProperty}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=isPrototypeObjectNamedPropertyAssignment}) (216{val=()})) (250{val=||}) (32 (802{val=isClassOrPrototypeNamedProperty}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isClassMemberFunction}) (214{val=(}) (800{val=functionNode}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (45{val=STRING_CONSTANT}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (32 (800{val=functionNode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (802{val=isClassMemberFunction}) (214{val=(}) (800{val=functionNode}) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=isImport}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=currentFile}) (235{val=.}) (802{val=recordImport}) (214{val=(}) (32 (800{val=name}) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (800{val=currentFile}) (235{val=.}) (802{val=recordDeclaration}) (214{val=(}) (800{val=name}) (234{val=,}) (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=name}) (204{val==}) (32 (800{val=ConvertToTypedInterface}) (235{val=.}) (802{val=getPrototypeNameOfMethod}) (214{val=(}) (800{val=functionNode}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=isConstructor}) (214{val=(}) (800{val=n}) (215{val=)})) (249{val=&&}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=hasChildren}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=currentFile}) (235{val=.}) (802{val=markConstructorToProcess}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (27 (800{val=newJsdoc}) (236{val===}) (500{val=null})) (249{val=&&}) (32 (802{val=isThisProp}) (214{val=(}) (800{val=nameNode}) (215{val=)}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isClassMethod}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=currentFile}) (235{val=.}) (802{val=recordMethod}) (214{val=(}) (800{val=n}) (234{val=,}) (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (802{val=isConstructor}) (214{val=(}) (800{val=n}) (215{val=)}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (802{val=isTypeCompatible}) (214{val=(}) (800{val=receiverType}) (234{val=,}) (40{val=method.type}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=unusedMethodPolyfills}) (235{val=.}) (802{val=remove}) (214{val=(}) (800{val=method}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkArgument}) (214{val=(}) (32 (800{val=functionNode}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=private}) (39{val=boolean}) (802{val=isAssignmentToPrototype}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=n})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isAssign}) (216{val=()})) (249{val=&&}) (32 (802{val=isPrototypeGetProp}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (39{val=long}) (59 (800{val=nodeCount}) (204{val==}) (32 (32 (800{val=graph}) (235{val=.}) (802{val=getNodes}) (216{val=()})) (235{val=.}) (802{val=size}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isName}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isStringKey}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isImportStar}) (216{val=()}))) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isAssignmentTarget}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=n}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isAssignmentTarget}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=n}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isAssignmentTarget}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=n}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=isPrototypeProperty}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=isPrototypeObjectNamedPropertyAssignment}) (216{val=()})) (250{val=||}) (32 (802{val=isClassOrPrototypeNamedProperty}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (800{val=removeUnusedThisProperties}) (249{val=&&}) (32 (800{val=removable}) (235{val=.}) (802{val=isThisNamedPropertyAssignment}) (216{val=()}))))
(AST_ROOT_SC2NF (60 (43 (801{val=RemovableBuilder})) (59 (800{val=builder}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=RemovableBuilder})) (216{val=()})) (235{val=.}) (802{val=setIsThisNamedPropertyAssignment}) (214{val=(}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=fsCalled}) (235{val=.}) (802{val=setRemove}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=minimizeCost}) (214{val=(}) (800{val=fsCalled}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=fsCalled}) (235{val=.}) (802{val=setInline}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=rootNode}) (204{val==}) (32 (800{val=scopeRoots}) (235{val=.}) (802{val=get}) (214{val=(}) (27 (800{val=i}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})) (25 (313{val=if}) (214{val=(}) (32 (800{val=Scope}) (235{val=.}) (802{val=isHoistScopeRootNode}) (214{val=(}) (800{val=rootNode}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=rootNode}) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=isHoistScope}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Scope}) (235{val=.}) (802{val=isHoistScopeRootNode}) (214{val=(}) (32 (802{val=getScopeRoot}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (27 (36 (214{val=(}) (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isNameDeclaration}) (214{val=(}) (800{val=parent}) (215{val=)})) (249{val=&&}) (32 (40{val=var.scope}) (235{val=.}) (802{val=isGlobal}) (216{val=()}))) (215{val=)})) (250{val=||}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isFunctionDeclaration}) (214{val=(}) (800{val=parent}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=aliasVar}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (40{val=aliasVar.scope}) (235{val=.}) (802{val=isGlobal}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=name}) (204{val==}) (32 (800{val=importSpec}) (235{val=.}) (802{val=getFirstChild}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=validateChildCountIn}) (214{val=(}) (800{val=n}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=validateChildCountIn}) (214{val=(}) (800{val=n}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=Builder})) (800{val=removeUnusedConstructorProperties}) (214{val=(}) (44 (39{val=boolean}) (800{val=value})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=removeUnusedConstructorProperties})) (204{val==}) (800{val=value})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=removeUnusedConstructorProperties})) (204{val==}) (40{val=builder.removeUnusedConstructorProperties})) (227{val=;})))
(AST_ROOT_SC2NF (32 (802{val=test}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (60 (43 (801{val=Scope})) (59 (800{val=s}) (204{val==}) (32 (802{val=getScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (800{val=refinedScope}) (242{val=!=}) (500{val=null})) (249{val=&&}) (27 (32 (802{val=getScope}) (216{val=()})) (242{val=!=}) (800{val=refinedScope}))))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (27 (27 (800{val=name}) (242{val=!=}) (500{val=null})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=name}) (235{val=.}) (802{val=isEmpty}) (216{val=()})))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=name}) (204{val==}) (32 (800{val=ClassUtil}) (235{val=.}) (802{val=getPrototypeNameOfMethod}) (214{val=(}) (800{val=functionNode}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=deleteNode}) (214{val=(}) (32 (802{val=getStatement}) (216{val=()})) (234{val=,}) (800{val=compiler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=oldStatement}) (204{val==}) (32 (802{val=getStatement}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=Node})) (802{val=getStatement}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getEnclosingStatement}) (214{val=(}) (800{val=lhs}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=hasReferenceName}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=referencedObjType}) (236{val===}) (500{val=null})) (233{val=?}) (500{val=null}) (226{val=:}) (32 (800{val=referencedObjType}) (235{val=.}) (802{val=hasReferenceName}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=extraSmartNamePass}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testModules}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (32 (40{val=CompilerTestCase.LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (219{val=}}))))
(AST_ROOT_SC2NF (3 (304{val=new}) (5 (43 (801{val=String})) (85{val=[]})) (4 (218{val={}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=mayHaveSideEffects}) (214{val=(}) (800{val=objExpression}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=replaceExpressionWith}) (214{val=(}) (800{val=incOrDecNode}) (234{val=,}) (32 (800{val=objExpression}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (802{val=removeExpressionCompletely}) (214{val=(}) (800{val=incOrDecNode}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=mayHaveSideEffects}) (214{val=(}) (800{val=objExpression}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=replaceExpressionWith}) (214{val=(}) (800{val=referenceNode}) (234{val=,}) (32 (800{val=objExpression}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (802{val=removeExpressionCompletely}) (214{val=(}) (800{val=referenceNode}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (802{val=Arguments}) (214{val=(}) (44 (43 (801{val=Scope})) (800{val=scope})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=scope}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (500{val=null}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (800{val=TypedScope})) (802{val=getScope}) (214{val=(}) (44 (43 (801{val=TypedVar})) (800{val=var})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=var.scope}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=ScopeCreator})) (59 (800{val=creator}) (204{val==}) (14 (304{val=new}) (43 (801{val=Es6SyntacticScopeCreator})) (214{val=(}) (800{val=compiler}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ScopeCreator})) (59 (800{val=creator}) (204{val==}) (14 (304{val=new}) (43 (801{val=Es6SyntacticScopeCreator})) (214{val=(}) (800{val=compiler}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ScopeCreator})) (59 (800{val=creator}) (204{val==}) (14 (304{val=new}) (43 (801{val=Es6SyntacticScopeCreator})) (214{val=(}) (800{val=compiler}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ScopeCreator})) (59 (800{val=creator}) (204{val==}) (14 (304{val=new}) (43 (801{val=Es6SyntacticScopeCreator})) (214{val=(}) (800{val=compiler}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ScopeCreator})) (59 (800{val=creator}) (204{val==}) (14 (304{val=new}) (43 (801{val=Es6SyntacticScopeCreator})) (214{val=(}) (800{val=compiler}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=scope}) (235{val=.}) (802{val=declare}) (214{val=(}) (800{val=name}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=input}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=ScopeCreator})) (59 (800{val=scopeCreator}) (204{val==}) (14 (304{val=new}) (43 (801{val=Es6SyntacticScopeCreator})) (214{val=(}) (800{val=compiler}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ScopeCreator})) (59 (800{val=scopeCreator}) (204{val==}) (14 (304{val=new}) (43 (801{val=Es6SyntacticScopeCreator})) (214{val=(}) (800{val=compiler}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=Scope})) (800{val=s})))
(AST_ROOT_SC2NF (31 (83{val=private}) (39{val=void}) (802{val=pushScope}) (214{val=(}) (44 (43 (801{val=Scope})) (800{val=s})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=pushScope}) (214{val=(}) (800{val=s}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=Scope})) (800{val=refinedScope})))
(AST_ROOT_SC2NF (44 (43 (801{val=Scope})) (800{val=scope})))
(AST_ROOT_SC2NF (44 (43 (801{val=Scope})) (800{val=s})))
(AST_ROOT_SC2NF (60 (43 (801{val=Scope})) (59 (800{val=hoistedScope}) (204{val==}) (32 (800{val=t}) (235{val=.}) (802{val=getClosestHoistScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ScopeCreator})) (59 (800{val=scopeCreator}) (204{val==}) (14 (304{val=new}) (43 (801{val=Es6SyntacticScopeCreator})) (214{val=(}) (800{val=compiler}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ScopeCreator})) (59 (800{val=scopeCreator}) (204{val==}) (14 (304{val=new}) (43 (801{val=Es6SyntacticScopeCreator})) (214{val=(}) (800{val=compiler}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Var})) (59 (800{val=var}) (204{val==}) (14 (304{val=new}) (43 (801{val=Var})) (214{val=(}) (800{val=name}) (234{val=,}) (800{val=nameNode}) (234{val=,}) (315{val=this}) (234{val=,}) (32 (800{val=vars}) (235{val=.}) (802{val=size}) (216{val=()})) (234{val=,}) (800{val=input}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=Scope})) (800{val=parent})))
(AST_ROOT_SC2NF (60 (43 (801{val=ScopeCreator})) (59 (800{val=scopeCreator}) (204{val==}) (32 (802{val=createScopeCreator}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=Scope})) (800{val=parent})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=FeatureSet})) (214{val=(}) (32 (800{val=Sets}) (235{val=.}) (802{val=union}) (214{val=(}) (800{val=features}) (234{val=,}) (40{val=other.features}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=FeatureSet})) (802{val=withoutTypes}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=FeatureSet})) (214{val=(}) (32 (800{val=Sets}) (235{val=.}) (802{val=difference}) (214{val=(}) (800{val=features}) (234{val=,}) (32 (40{val=LangVersion.TYPESCRIPT}) (235{val=.}) (800{val=features}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=private}) (802{val=FeatureSet}) (214{val=(}) (44 (74 (43 (800{val=Set})) (230{val=<}) (43 (800{val=Feature})) (231{val=>})) (800{val=features})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=features})) (204{val==}) (32 (800{val=ImmutableSet}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=features}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (800{val=scope}) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (800{val=name}) (234{val=,}) (9{val=false}) (215{val=)}))) (249{val=&&}) (38 (207{val=!}) (36 (214{val=(}) (27 (32 (800{val=scope}) (235{val=.}) (802{val=isLocal}) (216{val=()})) (249{val=&&}) (32 (800{val=name}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=ARGUMENTS}) (215{val=)}))) (215{val=)})))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (45{val=STRING_CONSTANT}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=name}) (215{val=)})) (249{val=&&}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isVanillaFunction}) (214{val=(}) (32 (800{val=scope}) (235{val=.}) (802{val=getRootNode}) (216{val=()})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=scope}) (235{val=.}) (802{val=getArgumentsVar}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=S})) (802{val=getScope}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=scope}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (802{val=isFunctionScope}) (216{val=()}))) (250{val=||}) (32 (800{val=rootNode}) (235{val=.}) (802{val=isArrowFunction}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=parent}) (235{val=.}) (802{val=getArgumentsVar}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (800{val=TypedScope})) (802{val=getScope}) (214{val=(}) (44 (43 (801{val=TypedVar})) (800{val=var})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=TypedScope})) (215{val=)}) (40{val=var.scope})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizations}) (235{val=.}) (802{val=add}) (214{val=(}) (14 (304{val=new}) (43 (801{val=MinimizeExitPoints})) (214{val=(}) (800{val=compiler}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (800{val=expectedCode}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (800{val=expectedCode}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (800{val=expectedCode}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (800{val=expectedCode}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (800{val=expectedCode}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (800{val=expectedCode}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (800{val=expectedCode}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (800{val=expectedCode}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (800{val=expectedCode}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (800{val=expectedCode}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (800{val=expectedCode}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (800{val=expectedCode}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (800{val=expectedCode}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (800{val=expectedCode}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (800{val=expectedCode}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (800{val=expectedCode}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (800{val=expectedCode}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (800{val=expectedCode}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (800{val=expectedCode}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (800{val=expectedCode}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertChanges}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=originalCode}) (234{val=,}) (800{val=expectedCode}) (234{val=,}) (800{val=template}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=clearTemplates}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=templates}) (204{val==}) (500{val=null})) (227{val=;})) (21 (7 (800{val=matchedTemplate}) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=checkNotNull}) (214{val=(}) (800{val=funType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=ProcessCommonJSModules}) (235{val=.}) (802{val=isCommonJsImport}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=visitRequireCall}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=moduleLoader})) (204{val==}) (14 (304{val=new}) (43 (801{val=ModuleLoader})) (214{val=(}) (500{val=null}) (234{val=,}) (40{val=options.moduleRoots}) (234{val=,}) (800{val=inputs}) (234{val=,}) (40{val=ModuleLoader.PathResolver.RELATIVE}) (234{val=,}) (40{val=options.moduleResolutionMode}) (234{val=,}) (500{val=null}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setModuleResolutionMode}) (214{val=(}) (40{val=ModuleLoader.ResolutionMode.NODE}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=JsonFileSpec}) (214{val=(}) (44 (43 (801{val=String})) (800{val=src})) (234{val=,}) (44 (43 (801{val=String})) (800{val=path})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=src}) (234{val=,}) (800{val=path}) (234{val=,}) (500{val=null}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (32 (800{val=var}) (235{val=.}) (802{val=getParentNode}) (216{val=()})) (235{val=.}) (802{val=isParamList}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (7 (40{val=varInfo.propertyAssignmentsWillPreventRemoval}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=RuntimeException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=preventsRemovalOfVariableWithNonLocalOrNonLiteralValueOrPrototype}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fold}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNewOperatior3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNewOperatior2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNewOperatior1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=getLeastSupertype}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=that}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=hasOneChild}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=newDeclaration}) (204{val==}) (32 (32 (800{val=IR}) (235{val=.}) (802{val=declaration}) (214{val=(}) (32 (800{val=lhsToSplit}) (235{val=.}) (802{val=detach}) (216{val=()})) (234{val=,}) (800{val=rhs}) (234{val=,}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=srcref}) (214{val=(}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2017}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Map})) (230{val=<}) (43 (800{val=String})) (234{val=,}) (43 (800{val=TypeI})) (231{val=>})) (59 (800{val=props}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (802{val=mayBeStatement}) (214{val=(}) (800{val=stmt}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NameDeclarationStatement})) (59 (800{val=removable}) (204{val==}) (32 (32 (800{val=builder}) (235{val=.}) (802{val=setAssignedValue}) (214{val=(}) (800{val=valueNode}) (215{val=)})) (235{val=.}) (802{val=buildNameDeclarationStatement}) (214{val=(}) (800{val=declarationStatement}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (36 (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isForIn}) (216{val=()})) (215{val=)})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=grandparent}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=grandparent}) (235{val=.}) (802{val=isVar}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testLoggerMethodCallByVariableType}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=ParseTree})) (59 (800{val=right}) (204{val==}) (32 (802{val=parseUnaryExpression}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=findModifiedParameters}) (214{val=(}) (32 (800{val=fnNode}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=names}) (234{val=,}) (800{val=unsafeNames}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testDirectPrototypeAssignment2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testPropertyInference6}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getErrorManager}) (216{val=()})) (235{val=.}) (802{val=report}) (214{val=(}) (40{val=CheckLevel.ERROR}) (234{val=,}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (40{val=AbstractCompiler.READ_ERROR}) (234{val=,}) (32 (802{val=getName}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (40{val=SimpleDependencyInfo.EMPTY}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IOException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (40{val=AbstractCompiler.READ_ERROR}) (234{val=,}) (32 (800{val=sourceFile}) (235{val=.}) (802{val=getName}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=allowDupe}) (204{val==}) (32 (800{val=VarCheck}) (235{val=.}) (802{val=hasDuplicateDeclarationSuppression}) (214{val=(}) (800{val=referenceNode}) (234{val=,}) (800{val=v}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testClosureTypesMultipleWarnings}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testMissingProperty30}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=TemplateAstMatcher})) (59 (800{val=astMatcher}) (204{val==}) (14 (304{val=new}) (43 (801{val=TemplateAstMatcher})) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeIRegistry}) (216{val=()})) (234{val=,}) (800{val=templateRoot}) (234{val=,}) (40{val=TypeMatchingStrategy.LOOSE}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (32 (800{val=fnThisType}) (235{val=.}) (802{val=isUnknownType}) (216{val=()})) (233{val=?}) (500{val=null}) (226{val=:}) (32 (800{val=fnThisType}) (235{val=.}) (802{val=toObjectType}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=IR}) (235{val=.}) (802{val=string}) (214{val=(}) (32 (800{val=modulePath}) (235{val=.}) (802{val=toString}) (216{val=()})) (215{val=)})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=HotSwapCompilerPass})) (802{val=create}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=CheckMissingSuper})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=checks}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=checkMissingSuper}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=checkMissingSuper}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=visitInterfaceGetprop}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=assign}) (234{val=,}) (800{val=object}) (234{val=,}) (800{val=pname}) (234{val=,}) (800{val=lvalue}) (234{val=,}) (800{val=rvalue}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=visitGetProp}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkArgument}) (214{val=(}) (32 (800{val=scriptNode}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=enclosingNode}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getEnclosingNode}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=loopPredicate}) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (27 (27 (800{val=enclosingNode}) (242{val=!=}) (500{val=null})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=enclosingNode}) (235{val=.}) (802{val=isFunction}) (216{val=()})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Es6RewriteClass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (38 (207{val=!}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=inIncrementalCheckMode}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (32 (800{val=typeRegistry}) (235{val=.}) (802{val=getNativeType}) (214{val=(}) (40{val=JSTypeNative.BOOLEAN_TYPE}) (215{val=)})) (234{val=,}) (32 (800{val=typeRegistry}) (235{val=.}) (802{val=getType}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=suppressors}) (235{val=.}) (802{val=put}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (14 (304{val=new}) (43 (801{val=DiagnosticGroupWarningsGuard})) (214{val=(}) (14 (304{val=new}) (43 (801{val=DiagnosticGroup})) (214{val=(}) (40{val=DiagnosticGroups.CHECK_TYPES}) (234{val=,}) (40{val=DiagnosticGroups.STRICT_MISSING_PROPERTIES}) (215{val=)})) (234{val=,}) (40{val=CheckLevel.OFF}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=rewriteState}) (235{val=.}) (802{val=containsModule}) (214{val=(}) (800{val=legacyNamespace}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=unrecognizedRequires}) (235{val=.}) (802{val=add}) (214{val=(}) (14 (304{val=new}) (43 (801{val=UnrecognizedRequire})) (214{val=(}) (800{val=call}) (234{val=,}) (800{val=legacyNamespace}) (234{val=,}) (9{val=false}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=inIncrementalCheckMode}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (800{val=incrementalCheckMode}) (242{val=!=}) (40{val=IncrementalCheckMode.OFF})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=originalFunction}) (204{val==}) (32 (40{val=functionContext.function}) (235{val=.}) (802{val=get}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=PotentialDeclaration})) (800{val=decl})) (226{val=:}) (32 (32 (800{val=currentFile}) (235{val=.}) (802{val=getDeclarations}) (216{val=()})) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=name}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=processDeclaration}) (214{val=(}) (800{val=decl}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=getRhs}) (216{val=()})) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isConstToBeInferred}) (214{val=(}) (800{val=originalJsdoc}) (234{val=,}) (800{val=nameNode}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=isImport}) (204{val==}) (32 (802{val=isImportRhs}) (214{val=(}) (800{val=rhs}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=lhsToSplit}) (235{val=.}) (802{val=isDestructuringLhs}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (802{val=isImportRhs}) (214{val=(}) (32 (800{val=lhsToSplit}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (215{val=)})))))
(AST_ROOT_SC2NF (27 (32 (802{val=isConstToBeInferred}) (214{val=(}) (800{val=jsdoc}) (234{val=,}) (800{val=nameNode}) (215{val=)})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=nameNode}) (235{val=.}) (802{val=isFromExterns}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=JsdocUtil}) (235{val=.}) (802{val=isPrivate}) (214{val=(}) (800{val=jsdoc}) (215{val=)})))))
(AST_ROOT_SC2NF (27 (27 (27 (800{val=jsdoc}) (236{val===}) (500{val=null})) (250{val=||}) (38 (207{val=!}) (32 (800{val=jsdoc}) (235{val=.}) (802{val=containsDeclaration}) (216{val=()})))) (250{val=||}) (32 (800{val=ConvertToTypedInterface}) (235{val=.}) (802{val=isConstToBeInferred}) (214{val=(}) (800{val=jsdoc}) (234{val=,}) (800{val=jsdocNode}) (215{val=)}))))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=caseBody}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (32 (800{val=first}) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testIssue2508576_1}) (216{val=()}) (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=externs}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testClassExtern}) (216{val=()}) (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=externs}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectLitExtern2}) (216{val=()}) (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=externs}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectLitExtern1}) (216{val=()}) (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=externs}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (40{val=CompilerTypeTestCase.DEFAULT_EXTERNS}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=SHARED_EXTERNS}) (234{val=,}) (800{val=js}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=METHOD_DEFS}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=code}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=code}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=source}) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=found}) (215{val=)})) (227{val=;})) (21 (32 (800{val=found}) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=tester}) (235{val=.}) (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=ALL_NATIVE_EXTERN_TYPES}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=code}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (800{val=EXTERNS}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=private}) (39{val=void}) (802{val=testSameEs6Strict}) (214{val=(}) (44 (43 (801{val=String})) (800{val=js})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (800{val=js}) (234{val=,}) (800{val=js}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testTypes}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=externs}) (204{val==}) (32 (800{val=DEFAULT_EXTERNS}) (235{val=.}) (802{val=replace}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Map})) (230{val=<}) (43 (800{val=String})) (234{val=,}) (74 (43 (800{val=StaticTypedSlot})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (231{val=>})) (59 (800{val=slots}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedHashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=isVar}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=declNode}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getEnclosingNode}) (214{val=(}) (32 (800{val=coalescedName}) (235{val=.}) (802{val=getParentNode}) (216{val=()})) (234{val=,}) (40{val=NodeUtil.isNameDeclaration}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=declNode}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.VAR}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=var}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getEnclosingNode}) (214{val=(}) (800{val=name}) (234{val=,}) (40{val=NodeUtil.isNameDeclaration}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=nameDecl}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getEnclosingNode}) (214{val=(}) (32 (800{val=v}) (235{val=.}) (802{val=getNode}) (216{val=()})) (234{val=,}) (40{val=NodeUtil.isNameDeclaration}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=declNode}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getEnclosingNode}) (214{val=(}) (32 (800{val=coalescedName}) (235{val=.}) (802{val=getParentNode}) (216{val=()})) (234{val=,}) (90 (800{val=NodeUtil}) (226{val=:}) (226{val=:}) (800{val=isNameDeclaration})) (215{val=)}))) (227{val=;})) (21 (32 (800{val=declNode}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.VAR}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=var}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getEnclosingNode}) (214{val=(}) (800{val=name}) (234{val=,}) (90 (800{val=NodeUtil}) (226{val=:}) (226{val=:}) (800{val=isNameDeclaration})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=nameDecl}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getEnclosingNode}) (214{val=(}) (32 (800{val=v}) (235{val=.}) (802{val=getNode}) (216{val=()})) (234{val=,}) (90 (800{val=NodeUtil}) (226{val=:}) (226{val=:}) (800{val=isNameDeclaration})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=add}) (214{val=(}) (32 (800{val=first}) (235{val=.}) (802{val=getNext}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFindExpressionRoot5}) (216{val=()}) (8 (218{val={}) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (802{val=findExpressionRoot}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=isNull}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (38 (207{val=!}) (32 (802{val=isStringifiable}) (214{val=(}) (32 (32 (800{val=templatizedType}) (235{val=.}) (802{val=getTemplateTypes}) (216{val=()})) (235{val=.}) (802{val=get}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=that}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (32 (802{val=getNativeType}) (214{val=(}) (40{val=JSTypeNative.OBJECT_NUMBER_STRING_BOOLEAN}) (215{val=)})) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=UNKNOWN}) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (800{val=FALSE}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=registerMismatchAndReport}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=INVALID_OPERAND_TYPE}) (234{val=,}) (800{val=msg}) (234{val=,}) (800{val=type}) (234{val=,}) (32 (802{val=getNativeType}) (214{val=(}) (800{val=NUMBER_TYPE}) (215{val=)})) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=allValueTypes})) (204{val==}) (32 (800{val=typeRegistry}) (235{val=.}) (802{val=createUnionType}) (214{val=(}) (800{val=STRING_TYPE}) (234{val=,}) (800{val=NUMBER_TYPE}) (234{val=,}) (800{val=BOOLEAN_TYPE}) (234{val=,}) (800{val=NULL_TYPE}) (234{val=,}) (800{val=VOID_TYPE}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=allDeps}) (235{val=.}) (802{val=addAll}) (214{val=(}) (32 (800{val=input}) (235{val=.}) (802{val=getRequires}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=input}) (235{val=.}) (802{val=getKnownRequires}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (802{val=writeJsArray}) (214{val=(}) (800{val=out}) (234{val=,}) (32 (800{val=info}) (235{val=.}) (802{val=getRequires}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (74 (43 (800{val=ImmutableList})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (802{val=getRequires}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=input}) (235{val=.}) (802{val=addOrderedRequire}) (214{val=(}) (800{val=require}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=abstract}) (43 (801{val=Builder})) (802{val=setRequires}) (214{val=(}) (44 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (800{val=requires})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (32 (32 (32 (800{val=SimpleDependencyInfo}) (235{val=.}) (802{val=builder}) (214{val=(}) (800{val=CLOSURE_PATH}) (234{val=,}) (800{val=SRC_PATH}) (215{val=)})) (235{val=.}) (802{val=setProvides}) (214{val=(}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=setRequires}) (214{val=(}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=addRequire}) (214{val=(}) (44 (43 (801{val=String})) (800{val=require})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=extraRequires}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=require}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=String})) (800{val=require})))
(AST_ROOT_SC2NF (32 (800{val=rootInput}) (235{val=.}) (802{val=getRequires}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=userOrderedInput}) (235{val=.}) (802{val=getRequires}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=input}) (235{val=.}) (802{val=getRequires}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (800{val=requires}) (235{val=.}) (802{val=addAll}) (214{val=(}) (32 (800{val=deps}) (235{val=.}) (802{val=getRequires}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=String})) (800{val=require})) (226{val=:}) (32 (800{val=dependency}) (235{val=.}) (802{val=getRequires}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=addDependency}) (214{val=(}) (800{val=require}) (234{val=,}) (800{val=seen}) (234{val=,}) (800{val=list}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testGithubIssue2818}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=noInline}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=noInline}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=inline}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testError}) (214{val=(}) (32 (802{val=srcs}) (214{val=(}) (800{val=js}) (215{val=)})) (234{val=,}) (32 (802{val=error}) (214{val=(}) (800{val=BAD_PRIVATE_PROPERTY_ACCESS}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (802{val=error}) (214{val=(}) (800{val=BAD_PRIVATE_PROPERTY_ACCESS}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (802{val=error}) (214{val=(}) (800{val=BAD_PRIVATE_PROPERTY_ACCESS}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=srcs}) (214{val=(}) (800{val=js}) (215{val=)})) (234{val=,}) (32 (802{val=warning}) (214{val=(}) (800{val=MISSING_REQUIRE_FOR_GOOG_SCOPE}) (234{val=,}) (800{val=warningText}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=srcs}) (214{val=(}) (800{val=js}) (215{val=)})) (234{val=,}) (32 (802{val=warning}) (214{val=(}) (800{val=MISSING_REQUIRE_WARNING}) (234{val=,}) (800{val=warningText}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=srcs}) (214{val=(}) (800{val=js}) (215{val=)})) (234{val=,}) (32 (802{val=warning}) (214{val=(}) (800{val=MISSING_REQUIRE_WARNING}) (234{val=,}) (800{val=warningText}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=srcs}) (214{val=(}) (800{val=js}) (215{val=)})) (234{val=,}) (32 (802{val=warning}) (214{val=(}) (800{val=MISSING_REQUIRE_STRICT_WARNING}) (234{val=,}) (800{val=warningText}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=testError}) (214{val=(}) (32 (802{val=srcs}) (214{val=(}) (800{val=js}) (215{val=)})) (234{val=,}) (32 (802{val=error}) (214{val=(}) (40{val=VarCheck.VAR_MULTIPLY_DECLARED_ERROR}) (234{val=,}) (800{val=message}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testError}) (214{val=(}) (32 (802{val=srcs}) (214{val=(}) (800{val=js}) (215{val=)})) (234{val=,}) (32 (802{val=error}) (214{val=(}) (40{val=VarCheck.VAR_MULTIPLY_DECLARED_ERROR}) (234{val=,}) (800{val=message}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (32 (800{val=externs}) (214{val=(}) (27 (800{val=DEFAULT_EXTERNS}) (200{val=+}) (800{val=externs})) (215{val=)})) (234{val=,}) (32 (802{val=srcs}) (214{val=(}) (800{val=js}) (215{val=)})) (234{val=,}) (32 (802{val=expected}) (214{val=(}) (802{val=expected}) (215{val=)})) (234{val=,}) (32 (802{val=warning}) (214{val=(}) (802{val=warning}) (234{val=,}) (800{val=description}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=externs}) (214{val=(}) (802{val=externs}) (215{val=)})) (234{val=,}) (32 (802{val=srcs}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=expected}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=warning}) (214{val=(}) (800{val=e}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertNotNull}) (214{val=(}) (800{val=warning}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=externs}) (214{val=(}) (802{val=externs}) (215{val=)})) (234{val=,}) (32 (802{val=srcs}) (214{val=(}) (800{val=js}) (215{val=)})) (234{val=,}) (32 (800{val=warning}) (214{val=(}) (800{val=warning}) (234{val=,}) (800{val=description}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertNotNull}) (214{val=(}) (800{val=warning}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=srcs}) (214{val=(}) (800{val=inputs}) (215{val=)})) (234{val=,}) (32 (800{val=warning}) (214{val=(}) (800{val=warning}) (234{val=,}) (800{val=description}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertNotNull}) (214{val=(}) (800{val=warning}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=srcs}) (214{val=(}) (800{val=js}) (215{val=)})) (234{val=,}) (32 (800{val=warning}) (214{val=(}) (800{val=warning}) (234{val=,}) (800{val=description}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertNotNull}) (214{val=(}) (800{val=error}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=srcs}) (214{val=(}) (800{val=inputs}) (215{val=)})) (234{val=,}) (32 (800{val=error}) (214{val=(}) (800{val=error}) (234{val=,}) (800{val=description}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertNotNull}) (214{val=(}) (800{val=error}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=srcs}) (214{val=(}) (800{val=js}) (215{val=)})) (234{val=,}) (32 (800{val=error}) (214{val=(}) (800{val=error}) (234{val=,}) (800{val=description}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=testWarning}) (214{val=(}) (32 (802{val=srcs}) (214{val=(}) (800{val=js}) (215{val=)})) (234{val=,}) (32 (800{val=warning}) (214{val=(}) (800{val=MISSING_PROVIDE_WARNING}) (234{val=,}) (800{val=warning}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testWarning}) (214{val=(}) (32 (802{val=srcs}) (214{val=(}) (800{val=js}) (215{val=)})) (234{val=,}) (32 (800{val=warning}) (214{val=(}) (800{val=MISSING_PROVIDE_WARNING}) (234{val=,}) (800{val=warning}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testWarning}) (214{val=(}) (32 (802{val=srcs}) (214{val=(}) (800{val=js}) (215{val=)})) (234{val=,}) (32 (800{val=warning}) (214{val=(}) (800{val=MISSING_PROVIDE_WARNING}) (234{val=,}) (800{val=warning}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=abstract}) (43 (801{val=Builder})) (802{val=setRequires}) (214{val=(}) (44 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Require})) (231{val=>})) (800{val=requires})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=addRequire}) (214{val=(}) (44 (43 (801{val=Require})) (800{val=require})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=extraRequires}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=require}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=Require})) (800{val=require})))
(AST_ROOT_SC2NF (21 (32 (800{val=allDeps}) (235{val=.}) (802{val=addAll}) (214{val=(}) (32 (800{val=input}) (235{val=.}) (802{val=getRequiredSymbols}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=input}) (235{val=.}) (802{val=getKnownRequiredSymbols}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=rootInput}) (235{val=.}) (802{val=getRequiredSymbols}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (800{val=requires}) (235{val=.}) (802{val=addAll}) (214{val=(}) (32 (800{val=deps}) (235{val=.}) (802{val=getRequiredSymbols}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=String})) (800{val=require})) (226{val=:}) (32 (800{val=dependency}) (235{val=.}) (802{val=getRequiredSymbols}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=addDependency}) (214{val=(}) (800{val=require}) (234{val=,}) (800{val=seen}) (234{val=,}) (800{val=list}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (32 (32 (800{val=SimpleDependencyInfo}) (235{val=.}) (802{val=builder}) (214{val=(}) (800{val=CLOSURE_PATH}) (234{val=,}) (800{val=SRC_PATH}) (215{val=)})) (235{val=.}) (802{val=setProvides}) (214{val=(}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=setRequires}) (214{val=(}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (32 (802{val=googRequireSymbol}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (32 (802{val=googRequireSymbol}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=googRequireSymbol}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (802{val=writeJsArray}) (214{val=(}) (800{val=out}) (234{val=,}) (32 (800{val=Require}) (235{val=.}) (802{val=asSymbolList}) (214{val=(}) (32 (800{val=info}) (235{val=.}) (802{val=getRequires}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (74 (43 (800{val=ImmutableList})) (230{val=<}) (43 (800{val=Require})) (231{val=>})) (802{val=getRequires}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=userOrderedInput}) (235{val=.}) (802{val=getRequiredSymbols}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=input}) (235{val=.}) (802{val=getRequiredSymbols}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=input}) (235{val=.}) (802{val=addOrderedRequire}) (214{val=(}) (32 (800{val=Require}) (235{val=.}) (802{val=compilerModule}) (214{val=(}) (800{val=require}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (32 (32 (800{val=options}) (235{val=.}) (802{val=getLanguageIn}) (216{val=()})) (235{val=.}) (802{val=toFeatureSet}) (216{val=()})) (235{val=.}) (802{val=has}) (214{val=(}) (40{val=FeatureSet.Feature.MODULES}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6ModulePass}) (214{val=(}) (800{val=checks}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (32 (32 (800{val=options}) (235{val=.}) (802{val=getLanguageIn}) (216{val=()})) (235{val=.}) (802{val=toFeatureSet}) (216{val=()})) (235{val=.}) (802{val=has}) (214{val=(}) (40{val=FeatureSet.Feature.MODULES}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6ModulePass}) (214{val=(}) (800{val=passes}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=n}) (235{val=.}) (802{val=putBooleanProp}) (214{val=(}) (40{val=Node.GOOG_MODULE_ALIAS}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6ModulePass}) (214{val=(}) (800{val=factories}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Es6RewriteModules})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=inline}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=inline}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=TemplateType})) (800{val=ignore})) (226{val=:}) (32 (32 (800{val=obj}) (235{val=.}) (802{val=getTemplateTypeMap}) (216{val=()})) (235{val=.}) (802{val=getTemplateKeys}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=unknowns}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (802{val=getNativeType}) (214{val=(}) (800{val=UNKNOWN_TYPE}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testIssue70b}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=args}) (235{val=.}) (802{val=add}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=RhinoErrorReporter.ES6_FEATURE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testIssue70a}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=args}) (235{val=.}) (802{val=add}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=RhinoErrorReporter.ES6_FEATURE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=rewriteGeneratorBody}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=node}) (235{val=.}) (802{val=hasChildren}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=node}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=isString}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (40{val=info.importedModules}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (32 (800{val=node}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=MemoizedTypedScopeCreator})) (59 (800{val=typedScopeCreator}) (204{val==}) (32 (802{val=getTypedScopeCreator}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=scopeCreator}) (204{val==}) (14 (304{val=new}) (43 (801{val=MemoizedTypedScopeCreator})) (214{val=(}) (14 (304{val=new}) (43 (801{val=TypedScopeCreator})) (214{val=(}) (800{val=compiler}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=MemoizedTypedScopeCreator})) (800{val=scopeCreator})))
(AST_ROOT_SC2NF (31 (43 (801{val=MemoizedTypedScopeCreator})) (802{val=getTypedScopeCreator}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=typedScopeCreator}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=MemoizedTypedScopeCreator})) (800{val=scopeCreator})))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=abstract}) (43 (801{val=Builder})) (802{val=setRequires}) (214{val=(}) (44 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (800{val=requires})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (32 (32 (32 (800{val=SimpleDependencyInfo}) (235{val=.}) (802{val=builder}) (214{val=(}) (800{val=CLOSURE_PATH}) (234{val=,}) (800{val=SRC_PATH}) (215{val=)})) (235{val=.}) (802{val=setProvides}) (214{val=(}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=setRequires}) (214{val=(}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=userOrderedInput}) (235{val=.}) (802{val=getRequires}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=input}) (235{val=.}) (802{val=getRequires}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=rootInput}) (235{val=.}) (802{val=getRequires}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (800{val=requires}) (235{val=.}) (802{val=addAll}) (214{val=(}) (32 (800{val=deps}) (235{val=.}) (802{val=getRequires}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=String})) (800{val=require})) (226{val=:}) (32 (800{val=dependency}) (235{val=.}) (802{val=getRequires}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=addDependency}) (214{val=(}) (800{val=require}) (234{val=,}) (800{val=seen}) (234{val=,}) (800{val=list}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=writeJsArray}) (214{val=(}) (800{val=out}) (234{val=,}) (32 (800{val=info}) (235{val=.}) (802{val=getRequires}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (74 (43 (800{val=ImmutableList})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (802{val=getRequires}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=addRequire}) (214{val=(}) (44 (43 (801{val=String})) (800{val=require})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=extraRequires}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=require}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=String})) (800{val=require})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=input}) (235{val=.}) (802{val=addOrderedRequire}) (214{val=(}) (800{val=require}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=allDeps}) (235{val=.}) (802{val=addAll}) (214{val=(}) (32 (800{val=input}) (235{val=.}) (802{val=getRequires}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=input}) (235{val=.}) (802{val=getKnownRequires}) (216{val=()})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=shouldPreservesGoogProvidesAndRequires}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (22 (315{val=this}) (235{val=.}) (800{val=preserveClosurePrimitives})) (250{val=||}) (32 (315{val=this}) (235{val=.}) (802{val=shouldGenerateTypedExterns}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=inline}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNoInlineGetEle}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=noInline}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNoInlineGetProp}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=noInline}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (74 (43 (800{val=StaticTypedScope})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (802{val=getParentScope}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=getFunctionScope}) (216{val=()})) (235{val=.}) (802{val=getParentScope}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=Scope})) (800{val=usageScope})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (59 (800{val=provides}) (204{val==}) (32 (800{val=Lists}) (235{val=.}) (802{val=newArrayList}) (214{val=(}) (32 (800{val=depInfo}) (235{val=.}) (802{val=getProvides}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=nullOrUndefined})) (204{val==}) (32 (800{val=typeRegistry}) (235{val=.}) (802{val=createUnionType}) (214{val=(}) (800{val=NULL_TYPE}) (234{val=,}) (800{val=VOID_TYPE}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=testForEquality}) (214{val=(}) (800{val=that}) (215{val=)})) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=UNKNOWN}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.STRICT_MISSING_PROPERTIES}) (234{val=,}) (40{val=CheckLevel.OFF}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.STRICT_MISSING_PROPERTIES}) (234{val=,}) (40{val=CheckLevel.OFF}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.STRICT_MISSING_PROPERTIES}) (234{val=,}) (40{val=CheckLevel.OFF}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.STRICT_MISSING_PROPERTIES}) (234{val=,}) (40{val=CheckLevel.OFF}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.STRICT_MISSING_PROPERTIES}) (234{val=,}) (40{val=CheckLevel.OFF}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.STRICT_MISSING_PROPERTIES}) (234{val=,}) (40{val=CheckLevel.OFF}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.STRICT_MISSING_PROPERTIES}) (234{val=,}) (40{val=CheckLevel.OFF}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.STRICT_MISSING_PROPERTIES}) (234{val=,}) (40{val=CheckLevel.OFF}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.STRICT_MISSING_PROPERTIES}) (234{val=,}) (40{val=CheckLevel.OFF}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.STRICT_MISSING_PROPERTIES}) (234{val=,}) (40{val=CheckLevel.OFF}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.STRICT_MISSING_PROPERTIES}) (234{val=,}) (40{val=CheckLevel.OFF}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.STRICT_MISSING_PROPERTIES}) (234{val=,}) (40{val=CheckLevel.OFF}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.STRICT_MISSING_PROPERTIES}) (234{val=,}) (40{val=CheckLevel.OFF}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.STRICT_MISSING_PROPERTIES}) (234{val=,}) (40{val=CheckLevel.OFF}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.STRICT_MISSING_PROPERTIES}) (234{val=,}) (40{val=CheckLevel.OFF}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.STRICT_MISSING_PROPERTIES}) (234{val=,}) (40{val=CheckLevel.OFF}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=rewriteGeneratorBodyWithVars}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=context}) (235{val=.}) (802{val=writeGeneratedNode}) (214{val=(}) (32 (32 (800{val=IR}) (235{val=.}) (802{val=ifNode}) (214{val=(}) (800{val=condition}) (234{val=,}) (32 (800{val=context}) (235{val=.}) (802{val=createJumpToBlock}) (214{val=(}) (800{val=startCase}) (234{val=,}) (800{val=n}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=useSourceInfoFrom}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (32 (800{val=IR}) (235{val=.}) (802{val=ifNode}) (214{val=(}) (32 (32 (800{val=IR}) (235{val=.}) (802{val=not}) (214{val=(}) (800{val=condition}) (215{val=)})) (235{val=.}) (802{val=useSourceInfoFrom}) (214{val=(}) (800{val=condition}) (215{val=)})) (234{val=,}) (32 (800{val=context}) (235{val=.}) (802{val=createJumpToBlock}) (214{val=(}) (800{val=endCase}) (234{val=,}) (800{val=n}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=useSourceInfoFrom}) (214{val=(}) (800{val=n}) (215{val=)})))
(AST_ROOT_SC2NF (32 (32 (800{val=IR}) (235{val=.}) (802{val=ifNode}) (214{val=(}) (32 (32 (800{val=IR}) (235{val=.}) (802{val=not}) (214{val=(}) (800{val=condition}) (215{val=)})) (235{val=.}) (802{val=useSourceInfoFrom}) (214{val=(}) (800{val=condition}) (215{val=)})) (234{val=,}) (32 (800{val=context}) (235{val=.}) (802{val=createJumpToBlock}) (214{val=(}) (800{val=endCase}) (234{val=,}) (800{val=n}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=useSourceInfoFrom}) (214{val=(}) (800{val=n}) (215{val=)})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=options}) (235{val=.}) (802{val=needsTranspilationFrom}) (214{val=(}) (800{val=ES_NEXT}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs2018Passes}) (214{val=(}) (800{val=passes}) (215{val=)})) (227{val=;})) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (802{val=setFeatureSet}) (214{val=(}) (800{val=ES8}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=parseWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (802{val=getRequiresEsNextMessage}) (214{val=(}) (40{val=Feature.OBJECT_PATTERN_REST}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=parseWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (802{val=getRequiresEsNextMessage}) (214{val=(}) (40{val=Feature.OBJECT_PATTERN_REST}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=options}) (235{val=.}) (802{val=needsTranspilationFrom}) (214{val=(}) (800{val=ES_NEXT}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs2018Passes}) (214{val=(}) (800{val=checks}) (215{val=)})) (227{val=;})) (21 (32 (800{val=checks}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (802{val=setFeatureSet}) (214{val=(}) (800{val=ES8}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (800{val=rhs}) (235{val=.}) (802{val=isQualifiedName}) (216{val=()})) (250{val=||}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isCallTo}) (214{val=(}) (800{val=rhs}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=replacements}) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (45{val=STRING_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (59 (800{val=allJsDocParams}) (204{val==}) (16 (36 (214{val=(}) (27 (800{val=info}) (236{val===}) (500{val=null})) (215{val=)})) (233{val=?}) (14 (304{val=new}) (74 (43 (801{val=HashSet})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (216{val=()})) (226{val=:}) (14 (304{val=new}) (74 (43 (801{val=HashSet})) (232{val=<>})) (214{val=(}) (32 (800{val=info}) (235{val=.}) (802{val=getParameterNames}) (216{val=()})) (215{val=)})))))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=type}) (204{val==}) (32 (800{val=typeRegistry}) (235{val=.}) (802{val=getType}) (214{val=(}) (800{val=dottedName}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=type}) (204{val==}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeIRegistry}) (216{val=()})) (235{val=.}) (802{val=getType}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (32 (800{val=metadata}) (235{val=.}) (802{val=getCompiler}) (216{val=()})) (235{val=.}) (802{val=getTypeRegistry}) (216{val=()})) (235{val=.}) (802{val=getType}) (214{val=(}) (800{val=type}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=mathType}) (204{val==}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeIRegistry}) (216{val=()})) (235{val=.}) (802{val=getType}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=registry}) (235{val=.}) (802{val=getType}) (214{val=(}) (800{val=typeName}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=domHelperType}) (204{val==}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeIRegistry}) (216{val=()})) (235{val=.}) (802{val=getType}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=requirement}) (215{val=)}) (227{val=;})) (21 (7 (800{val=errorObjType}) (204{val==}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeIRegistry}) (216{val=()})) (235{val=.}) (802{val=getType}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=methodClassType}) (204{val==}) (32 (800{val=registry}) (235{val=.}) (802{val=getType}) (214{val=(}) (40{val=r.type}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=typeWithBannedProp}) (204{val==}) (32 (800{val=registry}) (235{val=.}) (802{val=getType}) (214{val=(}) (40{val=prop.type}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=registry}) (235{val=.}) (802{val=getType}) (214{val=(}) (800{val=typeName}) (215{val=)}))) (227{val=;})) (25 (313{val=if}) (214{val=(}) (27 (800{val=type}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=types}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=type}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=methodClassType}) (204{val==}) (32 (800{val=registry}) (235{val=.}) (802{val=getType}) (214{val=(}) (800{val=className}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Scope})) (59 (800{val=scope}) (204{val==}) (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6Passes}) (214{val=(}) (800{val=passes}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=Predicates}) (235{val=.}) (230{val=<}) (43 (800{val=Node})) (231{val=>}) (802{val=alwaysTrue}) (216{val=()})))
(AST_ROOT_SC2NF (60 (74 (43 (40{val=ImmutableList.Builder})) (230{val=<}) (43 (800{val=Callback})) (231{val=>})) (59 (800{val=callbacks}) (204{val==}) (32 (800{val=ImmutableList}) (235{val=.}) (230{val=<}) (43 (800{val=Callback})) (231{val=>}) (802{val=builder}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (32 (800{val=parent}) (235{val=.}) (802{val=isAssign}) (216{val=()})) (249{val=&&}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (236{val===}) (800{val=getProp}))) (249{val=&&}) (32 (32 (32 (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))))
(AST_ROOT_SC2NF (27 (27 (32 (800{val=parent}) (235{val=.}) (802{val=isAssign}) (216{val=()})) (249{val=&&}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (236{val===}) (800{val=getProp}))) (249{val=&&}) (32 (32 (32 (800{val=getProp}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=declNode}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getEnclosingNode}) (214{val=(}) (32 (800{val=coalescedName}) (235{val=.}) (802{val=getParentNode}) (216{val=()})) (234{val=,}) (40{val=NodeUtil.isNameDeclaration}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=declNode}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.VAR}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=var}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getEnclosingNode}) (214{val=(}) (800{val=name}) (234{val=,}) (40{val=NodeUtil.isNameDeclaration}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=nameDecl}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getEnclosingNode}) (214{val=(}) (32 (800{val=v}) (235{val=.}) (802{val=getNode}) (216{val=()})) (234{val=,}) (40{val=NodeUtil.isNameDeclaration}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (32 (800{val=StreamSupport}) (235{val=.}) (802{val=stream}) (214{val=(}) (32 (800{val=fixChoices}) (235{val=.}) (802{val=spliterator}) (216{val=()})) (234{val=,}) (9{val=false}) (215{val=)})) (235{val=.}) (802{val=map}) (214{val=(}) (86 (59 (800{val=choices})) (201{val=-}) (231{val=>}) (32 (32 (800{val=choices}) (235{val=.}) (802{val=getAlternatives}) (216{val=()})) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=choiceIndex}) (215{val=)}))) (215{val=)})))
(AST_ROOT_SC2NF (32 (32 (800{val=StreamSupport}) (235{val=.}) (802{val=stream}) (214{val=(}) (32 (800{val=fixChoices}) (235{val=.}) (802{val=spliterator}) (216{val=()})) (234{val=,}) (9{val=false}) (215{val=)})) (235{val=.}) (802{val=map}) (214{val=(}) (86 (59 (800{val=f})) (201{val=-}) (231{val=>}) (32 (32 (800{val=f}) (235{val=.}) (802{val=getAlternatives}) (216{val=()})) (235{val=.}) (802{val=size}) (216{val=()}))) (215{val=)})))
(AST_ROOT_SC2NF (21 (7 (800{val=newVar}) (204{val==}) (32 (800{val=scopeToDeclareIn}) (235{val=.}) (802{val=declare}) (214{val=(}) (800{val=variableName}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=type}) (234{val=,}) (800{val=input}) (234{val=,}) (800{val=inferred}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=Keywords}) (235{val=.}) (802{val=isKeyword}) (214{val=(}) (40{val=importedName.value}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=reportError}) (214{val=(}) (800{val=importedName}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=importedName.value}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=Keywords}) (235{val=.}) (802{val=isKeyword}) (214{val=(}) (40{val=importedName.value}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=reportExpectedError}) (214{val=(}) (500{val=null}) (234{val=,}) (40{val=PredefinedName.AS}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=scanner})) (204{val==}) (14 (304{val=new}) (43 (801{val=Scanner})) (214{val=(}) (800{val=errorReporter}) (234{val=,}) (800{val=commentRecorder}) (234{val=,}) (800{val=source}) (234{val=,}) (800{val=offset}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testNotEs6Typed}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testNotEs6Typed}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testNotEs6Typed}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=parse}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=expectErrors}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=parse}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testNotEs6Typed}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=nameNode}) (235{val=.}) (802{val=isName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Case})) (800{val=currentCase})) (226{val=:}) (800{val=allCases}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=switchNode}) (235{val=.}) (802{val=addChildToBack}) (214{val=(}) (40{val=currentCase.caseNode}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (40{val=currentCase.embedInto}) (235{val=.}) (802{val=replaceWith}) (214{val=(}) (32 (40{val=currentCase.caseBlock}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=it}) (235{val=.}) (802{val=remove}) (216{val=()})) (227{val=;})) (500{val=continue;}) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=context})) (204{val==}) (14 (304{val=new}) (43 (801{val=TranspilationContext})) (214{val=(}) (800{val=originalGeneratorBody}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=ImmutableSortedSet}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=ENTRY_COMPARATOR}) (234{val=,}) (32 (800{val=map}) (235{val=.}) (802{val=entrySet}) (216{val=()})) (215{val=)})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=modulePaths})) (204{val==}) (32 (802{val=resolvePaths}) (214{val=(}) (32 (800{val=Iterables}) (235{val=.}) (802{val=transform}) (214{val=(}) (32 (800{val=Iterables}) (235{val=.}) (802{val=transform}) (214{val=(}) (800{val=inputs}) (234{val=,}) (800{val=UNWRAP_DEPENDENCY_INFO}) (215{val=)})) (234{val=,}) (800{val=pathResolver}) (215{val=)})) (234{val=,}) (800{val=moduleRootPaths}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=cache})) (204{val==}) (32 (800{val=builder}) (235{val=.}) (802{val=build}) (214{val=(}) (32 (800{val=CacheLoader}) (235{val=.}) (802{val=from}) (214{val=(}) (86 (59 (800{val=source})) (201{val=-}) (231{val=>}) (32 (800{val=delegate}) (235{val=.}) (800{val=transform}) (214{val=(}) (800{val=source}) (215{val=)}))) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (86 (59 (800{val=x})) (201{val=-}) (231{val=>}) (32 (800{val=transform}) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (86 (59 (800{val=x})) (201{val=-}) (231{val=>}) (32 (800{val=function}) (235{val=.}) (800{val=apply}) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=Predicates}) (235{val=.}) (230{val=<}) (74 (43 (800{val=DiGraphEdge})) (230{val=<}) (43 (800{val=Node})) (234{val=,}) (43 (40{val=ControlFlowGraph.Branch})) (231{val=>})) (231{val=>}) (802{val=alwaysTrue}) (216{val=()})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=has}) (214{val=(}) (800{val=node}) (234{val=,}) (800{val=pred}) (234{val=,}) (32 (800{val=Predicates}) (235{val=.}) (230{val=<}) (43 (800{val=Node})) (231{val=>}) (802{val=alwaysTrue}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=behavior}) (234{val=,}) (800{val=creator}) (234{val=,}) (32 (800{val=Predicates}) (235{val=.}) (230{val=<}) (43 (800{val=Var})) (231{val=>}) (802{val=alwaysTrue}) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=has}) (214{val=(}) (800{val=callNode}) (234{val=,}) (800{val=hasSpreadCallArgumentPredicate}) (234{val=,}) (32 (800{val=Predicates}) (235{val=.}) (230{val=<}) (43 (800{val=Node})) (231{val=>}) (802{val=alwaysTrue}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (38 (207{val=!}) (800{val=referencesArguments})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=has}) (214{val=(}) (800{val=block}) (234{val=,}) (800{val=p}) (234{val=,}) (32 (800{val=Predicates}) (235{val=.}) (230{val=<}) (43 (800{val=Node})) (231{val=>}) (802{val=alwaysTrue}) (216{val=()})) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (27 (800{val=result}) (236{val===}) (500{val=null})) (233{val=?}) (32 (800{val=ImmutableList}) (235{val=.}) (230{val=<}) (43 (800{val=Symbol})) (231{val=>}) (802{val=of}) (216{val=()})) (226{val=:}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (800{val=result}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=customPasses}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=customPasses}) (204{val==}) (32 (800{val=LinkedHashMultimap}) (235{val=.}) (230{val=<}) (43 (800{val=CustomPassExecutionTime})) (234{val=,}) (43 (800{val=CompilerPass})) (231{val=>}) (802{val=create}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (800{val=Node})) (800{val=typeNode})) (226{val=:}) (32 (800{val=info}) (235{val=.}) (802{val=getTypeNodes}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=visitPreOrder}) (214{val=(}) (800{val=typeNode}) (234{val=,}) (800{val=fixJsdocTypeNodes}) (234{val=,}) (32 (800{val=Predicates}) (235{val=.}) (230{val=<}) (43 (800{val=Node})) (231{val=>}) (802{val=alwaysTrue}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=maybeAddUsage}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=typeNode}) (234{val=,}) (9{val=false}) (234{val=,}) (32 (800{val=Predicates}) (235{val=.}) (230{val=<}) (43 (800{val=Node})) (231{val=>}) (802{val=alwaysTrue}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=Predicates}) (235{val=.}) (230{val=<}) (43 (800{val=Node})) (231{val=>}) (802{val=alwaysTrue}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=eval}) (214{val=(}) (800{val=ttlAst}) (234{val=,}) (800{val=typeVars}) (234{val=,}) (32 (800{val=ImmutableMap}) (235{val=.}) (230{val=<}) (43 (800{val=String})) (234{val=,}) (43 (800{val=String})) (231{val=>}) (802{val=of}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Ref})) (231{val=>})) (802{val=getRefs}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=refs}) (236{val===}) (500{val=null})) (233{val=?}) (32 (800{val=ImmutableList}) (235{val=.}) (230{val=<}) (43 (800{val=Ref})) (231{val=>}) (802{val=of}) (216{val=()})) (226{val=:}) (800{val=refs})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=chars}) (236{val===}) (500{val=null})) (233{val=?}) (32 (800{val=ImmutableSet}) (235{val=.}) (230{val=<}) (43 (800{val=Character})) (231{val=>}) (802{val=of}) (216{val=()})) (226{val=:}) (32 (800{val=ImmutableSet}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (32 (800{val=Chars}) (235{val=.}) (802{val=asList}) (214{val=(}) (800{val=chars}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (59 (800{val=reserved}) (204{val==}) (16 (27 (800{val=previousMap}) (242{val=!=}) (500{val=null})) (233{val=?}) (32 (32 (800{val=previousMap}) (235{val=.}) (802{val=getNewNameToOriginalNameMap}) (216{val=()})) (235{val=.}) (802{val=keySet}) (216{val=()})) (226{val=:}) (32 (800{val=Collections}) (235{val=.}) (230{val=<}) (43 (800{val=String})) (231{val=>}) (802{val=emptySet}) (216{val=()})))))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (32 (800{val=invocation}) (235{val=.}) (802{val=hasOneChild}) (216{val=()})) (233{val=?}) (32 (800{val=ImmutableList}) (235{val=.}) (230{val=<}) (43 (800{val=Node})) (231{val=>}) (802{val=of}) (216{val=()})) (226{val=:}) (32 (32 (800{val=invocation}) (235{val=.}) (802{val=getSecondChild}) (216{val=()})) (235{val=.}) (802{val=siblings}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getCount}) (214{val=(}) (800{val=node}) (234{val=,}) (14 (304{val=new}) (43 (801{val=MatchNameNode})) (214{val=(}) (800{val=name}) (215{val=)})) (234{val=,}) (32 (800{val=Predicates}) (235{val=.}) (230{val=<}) (43 (800{val=Node})) (231{val=>}) (802{val=alwaysTrue}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=Predicates}) (235{val=.}) (230{val=<}) (43 (800{val=Node})) (231{val=>}) (802{val=alwaysTrue}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (800{val=Arrays}) (235{val=.}) (802{val=sort}) (214{val=(}) (800{val=arr}) (234{val=,}) (32 (800{val=Ordering}) (235{val=.}) (230{val=<}) (43 (800{val=String})) (231{val=>}) (802{val=natural}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (800{val=Node})) (800{val=typeNode})) (226{val=:}) (32 (800{val=info}) (235{val=.}) (802{val=getTypeNodes}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=visitPreOrder}) (214{val=(}) (800{val=typeNode}) (234{val=,}) (800{val=replaceJsDocRefs}) (234{val=,}) (32 (800{val=Predicates}) (235{val=.}) (230{val=<}) (43 (800{val=Node})) (231{val=>}) (802{val=alwaysTrue}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=ImmutableSet}) (235{val=.}) (230{val=<}) (43 (800{val=String})) (231{val=>}) (802{val=of}) (216{val=()})))
(AST_ROOT_SC2NF (59 (800{val=invalidations}) (204{val==}) (32 (32 (32 (800{val=FluentIterable}) (235{val=.}) (802{val=from}) (214{val=(}) (32 (800{val=invalidationMap}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=t}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=transform}) (214{val=(}) (32 (800{val=Suppliers}) (235{val=.}) (230{val=<}) (43 (800{val=JSError})) (231{val=>}) (802{val=supplierFunction}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=limit}) (214{val=(}) (800{val=MAX_INVALIDATION_WARNINGS_PER_PROPERTY}) (215{val=)}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=invalidationMap})) (204{val==}) (16 (32 (800{val=propertiesToErrorFor}) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (233{val=?}) (500{val=null}) (226{val=:}) (32 (800{val=LinkedHashMultimap}) (235{val=.}) (230{val=<}) (43 (800{val=TypeI})) (234{val=,}) (74 (43 (800{val=Supplier})) (230{val=<}) (43 (800{val=JSError})) (231{val=>})) (231{val=>}) (802{val=create}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=JSTypeExpression})) (214{val=(}) (800{val=typeNode}) (234{val=,}) (40{val=PolymerPass.VIRTUAL_FILE}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=type}) (204{val==}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeRegistry}) (216{val=()})) (235{val=.}) (802{val=getType}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=registry}) (235{val=.}) (802{val=getType}) (214{val=(}) (32 (32 (800{val=target}) (235{val=.}) (802{val=getFirstFirstChild}) (216{val=()})) (235{val=.}) (802{val=getQualifiedName}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (43 (801{val=JSType})) (59 (800{val=voidType}) (204{val==}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeIRegistry}) (216{val=()})) (235{val=.}) (802{val=getNativeType}) (214{val=(}) (40{val=JSTypeNative.VOID_TYPE}) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (32 (800{val=voidType}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=returnType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=isTheObjectType}) (216{val=()})) (250{val=||}) (32 (802{val=isStringObjectType}) (216{val=()})) (250{val=||}) (32 (802{val=isDateType}) (216{val=()})) (250{val=||}) (32 (802{val=isRegexpType}) (216{val=()})) (250{val=||}) (32 (802{val=isArrayType}) (216{val=()})) (250{val=||}) (32 (802{val=isNumberObjectType}) (216{val=()})) (250{val=||}) (32 (802{val=isBooleanObjectType}) (216{val=()})) (250{val=||}) (32 (802{val=hasOverridenNativeProperty}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=matchesNumberContext}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=isNumberObjectType}) (216{val=()})) (250{val=||}) (32 (802{val=isDateType}) (216{val=()})) (250{val=||}) (32 (802{val=isBooleanObjectType}) (216{val=()})) (250{val=||}) (32 (802{val=isStringObjectType}) (216{val=()})) (250{val=||}) (32 (802{val=hasOverridenNativeProperty}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeIRegistry}) (216{val=()})) (235{val=.}) (802{val=getType}) (214{val=(}) (800{val=typeName}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testMissingProperty33}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testMissingProperty22}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testMissingProperty21}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testMissingProperty18}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testMissingProperty15}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testMissingProperty12}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testMissingProperty11}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testMissingProperty10}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testMissingProperty9}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=JSTypeExpression})) (59 (800{val=expr}) (204{val==}) (14 (304{val=new}) (43 (801{val=JSTypeExpression})) (214{val=(}) (32 (802{val=getCallArgument}) (214{val=(}) (800{val=ttlAst}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (32 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=getLanguageOut}) (216{val=()})) (235{val=.}) (802{val=toFeatureSet}) (216{val=()})) (235{val=.}) (802{val=contains}) (214{val=(}) (40{val=FeatureSet.ES6}) (215{val=)})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (32 (32 (800{val=options}) (235{val=.}) (802{val=getLanguageOut}) (216{val=()})) (235{val=.}) (802{val=toFeatureSet}) (216{val=()})) (235{val=.}) (802{val=contains}) (214{val=(}) (40{val=FeatureSet.ES6}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=optimizeToEs6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=options.dartPass}) (249{val=&&}) (38 (207{val=!}) (32 (32 (32 (800{val=options}) (235{val=.}) (802{val=getLanguageOut}) (216{val=()})) (235{val=.}) (802{val=toFeatureSet}) (216{val=()})) (235{val=.}) (802{val=contains}) (214{val=(}) (40{val=FeatureSet.ES6}) (215{val=)})))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=checks}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=dartSuperAccessorsPass}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=CompilerOptions})) (59 (800{val=options}) (204{val==}) (48 (349{val=super}) (235{val=.}) (802{val=getDefaultOptions}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageOut}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT5}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=options}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (36 (214{val=(}) (27 (27 (32 (800{val=nameNode}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (242{val=!=}) (500{val=null})) (250{val=||}) (32 (802{val=isLhsOfEnhancedForExpression}) (214{val=(}) (800{val=nameNode}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=pos}) (251{val=>=}) (32 (800{val=js}) (235{val=.}) (802{val=length}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=js}) (235{val=.}) (802{val=substring}) (214{val=(}) (800{val=pos}) (234{val=,}) (32 (800{val=js}) (235{val=.}) (802{val=length}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=node}) (235{val=.}) (802{val=isQuotedString}) (216{val=()})) (250{val=||}) (27 (32 (800{val=node}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (236{val===}) (500{val=null}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Collections}) (235{val=.}) (802{val=sort}) (214{val=(}) (800{val=declList}) (234{val=,}) (800{val=DECLARATIONS_FIRST}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=JSType})) (59 (800{val=newType}) (204{val==}) (32 (32 (800{val=objType}) (235{val=.}) (802{val=getTemplateTypes}) (216{val=()})) (235{val=.}) (802{val=get}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=redeclareSimpleVar}) (214{val=(}) (800{val=informed}) (234{val=,}) (800{val=item}) (234{val=,}) (800{val=newType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (801{val=Override})) (43 (800{val=JSType})) (802{val=resolveInternal}) (214{val=(}) (44 (43 (801{val=ErrorReporter})) (800{val=t})) (234{val=,}) (44 (74 (43 (800{val=StaticTypedScope})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (800{val=scope})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (801{val=Override})) (43 (800{val=JSType})) (802{val=resolveInternal}) (214{val=(}) (44 (43 (801{val=ErrorReporter})) (800{val=t})) (234{val=,}) (44 (74 (43 (800{val=StaticTypedScope})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (800{val=scope})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=abstract}) (43 (800{val=JSType})) (802{val=resolveInternal}) (214{val=(}) (44 (43 (801{val=ErrorReporter})) (800{val=t})) (234{val=,}) (44 (74 (43 (800{val=StaticTypedScope})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (800{val=scope})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=ErrorReporter})) (800{val=t})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (801{val=Override})) (43 (800{val=JSType})) (802{val=resolveInternal}) (214{val=(}) (44 (43 (801{val=ErrorReporter})) (800{val=t})) (234{val=,}) (44 (74 (43 (800{val=StaticTypedScope})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (800{val=scope})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Es6RewriteModulesToCommonJsModules})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=private}) (43 (801{val=String})) (802{val=transpileEs6Module}) (214{val=(}) (44 (43 (801{val=String})) (800{val=s})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=transpile}) (214{val=(}) (32 (802{val=transpile}) (214{val=(}) (800{val=s}) (234{val=,}) (800{val=es6ModuleTranspiler}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=that}) (235{val=.}) (802{val=isUnknownType}) (216{val=()})) (250{val=||}) (32 (800{val=that}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (32 (802{val=getNativeType}) (214{val=(}) (40{val=JSTypeNative.OBJECT_NUMBER_STRING_BOOLEAN}) (215{val=)})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=UNKNOWN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=t}) (235{val=.}) (802{val=isUnknownType}) (216{val=()})) (250{val=||}) (32 (800{val=t}) (235{val=.}) (802{val=isNoResolvedType}) (216{val=()})) (250{val=||}) (38 (207{val=!}) (32 (800{val=t}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=type}) (215{val=)})))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=restricted}) (235{val=.}) (802{val=addAlternate}) (214{val=(}) (800{val=t}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=alternate}) (235{val=.}) (802{val=isUnknownType}) (216{val=()}))) (249{val=&&}) (32 (800{val=that}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=alternate}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=isStructural}) (249{val=&&}) (38 (207{val=!}) (800{val=thisUnresolved})) (249{val=&&}) (38 (207{val=!}) (800{val=thatUnresolved}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=rightType}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=leftType}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=rightType}) (235{val=.}) (802{val=isSubtypeWithoutStructuralTyping}) (214{val=(}) (800{val=leftType}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (32 (800{val=type}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (32 (802{val=getNativeType}) (214{val=(}) (800{val=ARRAY_TYPE}) (215{val=)})) (215{val=)})) (233{val=?}) (500{val=null}) (226{val=:}) (800{val=type})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=JSType})) (59 (800{val=arrayType}) (204{val==}) (32 (802{val=getNativeType}) (214{val=(}) (800{val=ARRAY_TYPE}) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (16 (32 (800{val=arrayType}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=type}) (215{val=)})) (233{val=?}) (800{val=arrayType}) (226{val=:}) (500{val=null})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=resultEqualsValue}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=ctorType}) (235{val=.}) (802{val=getGreatestSubtype}) (214{val=(}) (800{val=type}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (16 (32 (800{val=type}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=ctorType}) (215{val=)})) (233{val=?}) (500{val=null}) (226{val=:}) (800{val=type})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (800{val=x}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (32 (800{val=windowCtor}) (235{val=.}) (802{val=getInstanceType}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (800{val=x}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (32 (800{val=windowCtor}) (235{val=.}) (802{val=getInstanceType}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (800{val=y}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (32 (802{val=getNativeType}) (214{val=(}) (800{val=STRING_TYPE}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=rawThat}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})) (322{val=else}) (25 (313{val=if}) (214{val=(}) (32 (800{val=rawThat}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (315{val=this}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=filterNoResolvedType}) (214{val=(}) (800{val=rawThat}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (800{val=unknown}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=STRING_TYPE}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (800{val=NULL_TYPE}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=nullOrUnknown}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=argType}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=paramType}) (215{val=)}))))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=rightType}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=leftType}) (215{val=)}))))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (800{val=leftType}) (235{val=.}) (802{val=isNoType}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=rightType}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=leftType}) (215{val=)})))))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (800{val=switchType}) (235{val=.}) (802{val=canTestForShallowEqualityWith}) (214{val=(}) (800{val=caseType}) (215{val=)}))) (249{val=&&}) (36 (214{val=(}) (27 (27 (32 (800{val=caseType}) (235{val=.}) (802{val=autoboxesTo}) (216{val=()})) (236{val===}) (500{val=null})) (250{val=||}) (38 (207{val=!}) (32 (32 (800{val=caseType}) (235{val=.}) (802{val=autoboxesTo}) (216{val=()})) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=switchType}) (215{val=)})))) (215{val=)}))))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (800{val=type}) (235{val=.}) (802{val=isNoType}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=type}) (235{val=.}) (802{val=isUnknownType}) (216{val=()}))) (249{val=&&}) (32 (800{val=type}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=nullOrUndefined}) (215{val=)})) (249{val=&&}) (38 (207{val=!}) (32 (802{val=containsForwardDeclaredUnresolvedName}) (214{val=(}) (800{val=type}) (215{val=)})))))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=type}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (32 (802{val=getNativeType}) (214{val=(}) (800{val=NUMBER_STRING_SYMBOL}) (215{val=)})) (215{val=)}))))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=type}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (32 (802{val=getNativeType}) (214{val=(}) (800{val=NUMBER_STRING}) (215{val=)})) (215{val=)}))))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (800{val=type}) (235{val=.}) (802{val=matchesNumberContext}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=type}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=allBitwisableValueTypes}) (215{val=)})))))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=type}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (32 (802{val=getNativeType}) (214{val=(}) (800{val=NUMBER_TYPE}) (215{val=)})) (215{val=)}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=anyObjectType}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=type}) (215{val=)}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=type}) (235{val=.}) (802{val=isEmptyType}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=mismatch}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=msg}) (234{val=,}) (800{val=type}) (234{val=,}) (800{val=anyObjectType}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=funcTarget}) (235{val=.}) (802{val=hasInstanceType}) (216{val=()})) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=type}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (32 (800{val=funcTarget}) (235{val=.}) (802{val=getInstanceType}) (216{val=()})) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (800{val=type}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=objType}) (235{val=.}) (802{val=isNoType}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=objType}) (235{val=.}) (802{val=isUnknownType}) (216{val=()}))) (249{val=&&}) (32 (800{val=objType}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (32 (802{val=getNativeType}) (214{val=(}) (800{val=NULL_VOID}) (215{val=)})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (32 (800{val=castType}) (235{val=.}) (802{val=restrictByNotNullOrUndefined}) (216{val=()})) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=exprType}) (215{val=)})) (250{val=||}) (32 (800{val=expr}) (235{val=.}) (802{val=isObjectLit}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=expr}) (235{val=.}) (802{val=setJSType}) (214{val=(}) (800{val=castType}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=isEmptyType}) (216{val=()})) (250{val=||}) (32 (800{val=that}) (235{val=.}) (802{val=isEmptyType}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=isSubtype}) (214{val=(}) (800{val=that}) (215{val=)})) (250{val=||}) (32 (800{val=that}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (315{val=this}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=JSType})) (59 (800{val=alternate}) (204{val==}) (32 (800{val=alternatesList}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=i}) (215{val=)}))) (227{val=;})) (25 (313{val=if}) (214{val=(}) (32 (800{val=alternate}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=arrayType}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=final}) (39{val=boolean}) (802{val=isSymbol}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=isSubtype}) (214{val=(}) (32 (802{val=getNativeType}) (214{val=(}) (40{val=JSTypeNative.SYMBOL_VALUE_OR_OBJECT_TYPE}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=final}) (39{val=boolean}) (802{val=isNumber}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=isSubtype}) (214{val=(}) (32 (802{val=getNativeType}) (214{val=(}) (40{val=JSTypeNative.NUMBER_VALUE_OR_OBJECT_TYPE}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=final}) (39{val=boolean}) (802{val=isString}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=isSubtype}) (214{val=(}) (32 (802{val=getNativeType}) (214{val=(}) (40{val=JSTypeNative.STRING_VALUE_OR_OBJECT_TYPE}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=that}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (32 (802{val=getNativeType}) (214{val=(}) (40{val=JSTypeNative.OBJECT_NUMBER_STRING_BOOLEAN_SYMBOL}) (215{val=)})) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=UNKNOWN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=type}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (32 (800{val=typeRegistry}) (235{val=.}) (802{val=getNativeType}) (214{val=(}) (800{val=OBJECT_TYPE}) (215{val=)})) (215{val=)}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=varType}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=name}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=type}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (32 (800{val=varType}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=type}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=BooleanOutcomePair})) (214{val=(}) (32 (800{val=jsType}) (235{val=.}) (802{val=getPossibleToBooleanOutcomes}) (216{val=()})) (234{val=,}) (16 (32 (32 (800{val=registry}) (235{val=.}) (802{val=getNativeType}) (214{val=(}) (800{val=BOOLEAN_TYPE}) (215{val=)})) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=jsType}) (215{val=)})) (233{val=?}) (40{val=BooleanLiteralSet.BOTH}) (226{val=:}) (40{val=BooleanLiteralSet.EMPTY})) (234{val=,}) (800{val=flowScope}) (234{val=,}) (800{val=flowScope}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (40{val=outcome.booleanValues}) (236{val===}) (40{val=BooleanLiteralSet.EMPTY})) (249{val=&&}) (32 (32 (802{val=getNativeType}) (214{val=(}) (800{val=BOOLEAN_TYPE}) (215{val=)})) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=type}) (215{val=)}))))
(AST_ROOT_SC2NF (32 (800{val=argObjectType}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=referencedParamType}) (215{val=)})))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (800{val=jsType}) (235{val=.}) (802{val=isUnknownType}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=jsType}) (235{val=.}) (802{val=isAllType}) (216{val=()}))) (249{val=&&}) (32 (800{val=jsType}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=providedJsType}) (215{val=)}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=that}) (235{val=.}) (802{val=isUnknownType}) (216{val=()})) (250{val=||}) (32 (800{val=that}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (32 (802{val=getNativeType}) (214{val=(}) (40{val=JSTypeNative.OBJECT_NUMBER_STRING_BOOLEAN}) (215{val=)})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=UNKNOWN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (43 (801{val=JSType})) (59 (800{val=voidType}) (204{val==}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeRegistry}) (216{val=()})) (235{val=.}) (802{val=getNativeType}) (214{val=(}) (40{val=JSTypeNative.VOID_TYPE}) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (32 (800{val=voidType}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=returnType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=that}) (235{val=.}) (802{val=isUnknownType}) (216{val=()})) (250{val=||}) (32 (800{val=that}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (32 (802{val=getNativeType}) (214{val=(}) (40{val=JSTypeNative.NUMBER_STRING_BOOLEAN}) (215{val=)})) (215{val=)})) (250{val=||}) (32 (800{val=that}) (235{val=.}) (802{val=isObject}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=UNKNOWN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertFalse}) (214{val=(}) (32 (800{val=arrayOfString}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (32 (802{val=createUnionType}) (214{val=(}) (800{val=arrayOfNumber}) (234{val=,}) (800{val=NULL_VOID}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=isSubtype}) (214{val=(}) (44 (43 (801{val=JSType})) (800{val=that})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=isSubtype}) (214{val=(}) (800{val=that}) (234{val=,}) (32 (800{val=ImplCache}) (235{val=.}) (802{val=create}) (216{val=()})) (234{val=,}) (40{val=SubtypingMode.NORMAL}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (800{val=thisType}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=thatType}) (215{val=)})) (250{val=||}) (32 (800{val=thatType}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=thisType}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=thisType}) (235{val=.}) (802{val=isFunctionType}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=thisType}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=functionType}) (215{val=)})) (250{val=||}) (32 (800{val=functionType}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=thisType}) (215{val=)}))) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setLanguageIn}) (214{val=(}) (40{val=CompilerOptions.LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=isConstToBeInferred}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=isConstToBeInferred}) (214{val=(}) (32 (802{val=getJsDoc}) (216{val=()})) (234{val=,}) (32 (802{val=getLhs}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=maybeWarnForConstWithoutExplicitType}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=jsdoc}) (234{val=,}) (800{val=nameNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (83{val=final}) (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=J2clPass})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=astValidationEnabled}) (215{val=)}) (8 (218{val={}) (21 (32 (36 (214{val=(}) (14 (304{val=new}) (43 (801{val=AstValidator})) (214{val=(}) (800{val=compiler}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=validateRoot}) (214{val=(}) (800{val=root}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (14 (304{val=new}) (43 (40{val=PureFunctionIdentifier.DriverInJ2cl})) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (215{val=)})) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=exportedNameToLocalQName}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=name}) (234{val=,}) (800{val=name}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=exportedNameToLocalQName}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=name}) (234{val=,}) (800{val=name}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=exportedNameToLocalQName}) (235{val=.}) (802{val=put}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=name}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (74 (43 (40{val=Map.Entry})) (230{val=<}) (43 (800{val=String})) (234{val=,}) (43 (800{val=String})) (231{val=>})) (800{val=entry})))
(AST_ROOT_SC2NF (21 (7 (800{val=functionNames}) (204{val==}) (40{val=compilerState.functioNames})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=functioNames})) (204{val==}) (40{val=compiler.functionNames})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (800{val=moduleScope}) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (800{val=moduleScope}) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (800{val=blockScope}) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (800{val=fooScope}) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (800{val=forOfScope}) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (800{val=functionBlockScope}) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (800{val=functionScope}) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (800{val=functionBlockScope}) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FlagUsageException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (800{val=e}) (215{val=)})) (235{val=.}) (802{val=hasMessage}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (27 (800{val=s}) (242{val=!=}) (500{val=null})) (233{val=?}) (800{val=s}) (226{val=:}) (32 (802{val=createScope}) (214{val=(}) (800{val=n}) (234{val=,}) (32 (802{val=createScope}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getEnclosingScopeRoot}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (215{val=)})) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeInference})) (59 (800{val=dfa}) (204{val==}) (14 (304{val=new}) (43 (801{val=TypeInference})) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=cfg}) (234{val=,}) (800{val=rai}) (234{val=,}) (800{val=assumedScope}) (234{val=,}) (800{val=ASSERTION_FUNCTION_MAP}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (27 (27 (800{val=v}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=v}) (235{val=.}) (802{val=isLocal}) (216{val=()}))) (249{val=&&}) (32 (800{val=v}) (235{val=.}) (802{val=isMarkedEscaped}) (216{val=()}))) (249{val=&&}) (27 (32 (800{val=v}) (235{val=.}) (802{val=getScope}) (216{val=()})) (236{val===}) (800{val=syntacticScope}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isUnflowable}) (214{val=(}) (32 (800{val=syntacticScope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (800{val=varName}) (215{val=)})) (215{val=)})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=isLocallyInferred}) (204{val==}) (36 (214{val=(}) (27 (800{val=var}) (242{val=!=}) (32 (800{val=syntacticScope}) (235{val=.}) (802{val=getSlot}) (214{val=(}) (800{val=qualifiedName}) (215{val=)}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ttlObj}) (204{val==}) (14 (304{val=new}) (43 (801{val=TypeTransformation})) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=syntacticScope}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypedVar})) (59 (800{val=var}) (204{val==}) (32 (800{val=syntacticScope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (800{val=qKeyName}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypedVar})) (59 (800{val=var}) (204{val==}) (32 (800{val=syntacticScope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (800{val=qName}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypedVar})) (59 (800{val=var}) (204{val==}) (32 (800{val=syntacticScope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (800{val=varName}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=type}) (204{val==}) (32 (32 (800{val=info}) (235{val=.}) (802{val=getType}) (216{val=()})) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=syntacticScope}) (234{val=,}) (800{val=registry}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=info}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=info}) (235{val=.}) (802{val=hasType}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=setJSType}) (214{val=(}) (32 (32 (800{val=info}) (235{val=.}) (802{val=getType}) (216{val=()})) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=syntacticScope}) (234{val=,}) (800{val=registry}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=rename}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=js}) (234{val=,}) (14 (304{val=new}) (43 (801{val=Renamer})) (214{val=(}) (800{val=compiler}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=registry}) (235{val=.}) (802{val=createNullableType}) (214{val=(}) (32 (800{val=registry}) (235{val=.}) (802{val=getType}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=registry}) (234{val=,}) (800{val=reference}) (234{val=,}) (800{val=sourceName}) (234{val=,}) (800{val=lineno}) (234{val=,}) (800{val=charno}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=resolvedNamedTypes}) (235{val=.}) (802{val=putAll}) (214{val=(}) (800{val=scope}) (234{val=,}) (32 (800{val=unresolvedNamedTypes}) (235{val=.}) (802{val=removeAll}) (214{val=(}) (800{val=scope}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=clearNamedTypes}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=resolvedNamedTypes}) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (21 (32 (800{val=unresolvedNamedTypes}) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkArgument}) (214{val=(}) (38 (207{val=!}) (32 (800{val=name}) (235{val=.}) (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=namesToTypes}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=name}) (234{val=,}) (800{val=type}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (32 (802{val=findNameType}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=lastLocalScope}) (215{val=)})) (235{val=.}) (802{val=isEquivalentTo}) (214{val=(}) (32 (800{val=registry}) (235{val=.}) (802{val=getType}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (32 (800{val=registry}) (235{val=.}) (802{val=createNamedType}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (234{val=,}) (32 (32 (800{val=jsdoc}) (235{val=.}) (802{val=getImplementedInterfaces}) (216{val=()})) (235{val=.}) (802{val=get}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (32 (800{val=registry}) (235{val=.}) (802{val=createNamedType}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (234{val=,}) (32 (800{val=types}) (235{val=.}) (802{val=get}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (32 (800{val=registry}) (235{val=.}) (802{val=createNamedType}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (234{val=,}) (32 (800{val=interfaces}) (235{val=.}) (802{val=get}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (32 (800{val=registry}) (235{val=.}) (802{val=createNamedType}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=jsdoc}) (235{val=.}) (802{val=getBaseType}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (32 (800{val=registry}) (235{val=.}) (802{val=createNamedType}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (234{val=,}) (32 (32 (802{val=parse}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=getBaseType}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (32 (800{val=registry}) (235{val=.}) (802{val=createNamedType}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (234{val=,}) (32 (800{val=interfaces}) (235{val=.}) (802{val=get}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (32 (802{val=createNullableType}) (214{val=(}) (32 (800{val=registry}) (235{val=.}) (802{val=createNamedType}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (215{val=)})) (234{val=,}) (32 (800{val=info}) (235{val=.}) (802{val=getType}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (32 (800{val=registry}) (235{val=.}) (802{val=createNamedType}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (234{val=,}) (32 (800{val=info}) (235{val=.}) (802{val=getType}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (32 (800{val=registry}) (235{val=.}) (802{val=createNamedType}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (234{val=,}) (32 (800{val=info}) (235{val=.}) (802{val=getType}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (32 (800{val=registry}) (235{val=.}) (802{val=createNamedType}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (234{val=,}) (32 (800{val=info}) (235{val=.}) (802{val=getType}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=newType}) (235{val=.}) (802{val=isEquivalentTo}) (214{val=(}) (800{val=varType}) (215{val=)}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (32 (802{val=resolve}) (214{val=(}) (800{val=actual}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (38 (207{val=!}) (32 (802{val=checkEquivalenceHelper}) (214{val=(}) (800{val=that}) (234{val=,}) (40{val=EquivalenceMethod.DATA_FLOW}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=constructorI}) (235{val=.}) (802{val=checkEquivalenceHelper}) (214{val=(}) (800{val=constructorJ}) (234{val=,}) (40{val=EquivalenceMethod.IDENTITY}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=shouldCheck}) (204{val==}) (9{val=false})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (32 (800{val=Functions}) (235{val=.}) (230{val=<}) (43 (800{val=String})) (231{val=>}) (802{val=identity}) (216{val=()})) (234{val=,}) (800{val=errorManager}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=ast}) (204{val==}) (32 (802{val=parseSyntheticCode}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=resourceName}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (800{val=originalCode}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=scope}) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (40{val=NodeUtil.JSC_PROPERTY_NAME_FN}) (234{val=,}) (9{val=true}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=scope}) (235{val=.}) (802{val=declare}) (214{val=(}) (40{val=NodeUtil.JSC_PROPERTY_NAME_FN}) (234{val=,}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=scope}) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (800{val=qName}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)}) (8 (218{val={}) (500{val=continue;}) (219{val=}}))))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (800{val=scope}) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (800{val=qName}) (234{val=,}) (9{val=false}) (215{val=)}))) (249{val=&&}) (32 (800{val=n}) (235{val=.}) (802{val=isUnscopedQualifiedName}) (216{val=()}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=name}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=usageScope}) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (800{val=name}) (234{val=,}) (9{val=true}) (215{val=)})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()})) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (800{val=alias}) (234{val=,}) (9{val=true}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=TYPE_ALIAS_ALREADY_DECLARED}) (234{val=,}) (800{val=alias}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=n}) (235{val=.}) (802{val=isName}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()})) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getString}) (216{val=()})) (234{val=,}) (9{val=true}) (215{val=)})))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=current}) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (800{val=oldName}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (7 (800{val=current}) (204{val==}) (32 (800{val=current}) (235{val=.}) (802{val=getParent}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (800{val=fooScope}) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (32 (802{val=getRootNode}) (216{val=()})) (235{val=.}) (802{val=isFunction}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=getClosestNonBlockScope}) (216{val=()})) (235{val=.}) (802{val=getTypeOfThis}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (27 (27 (800{val=v}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=v}) (235{val=.}) (802{val=isLocal}) (216{val=()}))) (249{val=&&}) (32 (800{val=v}) (235{val=.}) (802{val=isMarkedEscaped}) (216{val=()}))) (249{val=&&}) (27 (32 (32 (800{val=v}) (235{val=.}) (802{val=getScope}) (216{val=()})) (235{val=.}) (802{val=getClosestNonBlockScope}) (216{val=()})) (236{val===}) (800{val=cfgRootScope}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=cfgRootScope})) (204{val==}) (800{val=syntacticScope})) (227{val=;})))
(AST_ROOT_SC2NF (61 (350{val=while}) (214{val=(}) (32 (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()})) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (800{val=pseudoName}) (234{val=,}) (9{val=true}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=pseudoName}) (237{val=+=}) (45{val=STRING_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=varsInFunctionBody}) (235{val=.}) (802{val=contains}) (214{val=(}) (800{val=refName}) (215{val=)})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=scope}) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (800{val=refName}) (234{val=,}) (9{val=true}) (215{val=)})))))
(AST_ROOT_SC2NF (32 (800{val=curScope}) (235{val=.}) (802{val=isDeclared}) (214{val=(}) (40{val=assignment.oldName}) (234{val=,}) (9{val=true}) (215{val=)})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=AbstractVar})) (230{val=<}) (76{val=?}) (234{val=,}) (76{val=?}) (231{val=>})) (59 (800{val=var}) (204{val==}) (32 (32 (802{val=getSubject}) (216{val=()})) (235{val=.}) (802{val=getVar}) (214{val=(}) (800{val=name}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=AbstractVar})) (230{val=<}) (76{val=?}) (234{val=,}) (76{val=?}) (231{val=>})) (59 (800{val=var}) (204{val==}) (32 (32 (802{val=getSubject}) (216{val=()})) (235{val=.}) (802{val=getVar}) (214{val=(}) (800{val=name}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isUnflowable}) (214{val=(}) (32 (800{val=currentScope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (800{val=varName}) (215{val=)})) (215{val=)})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=isLocallyInferred}) (204{val==}) (36 (214{val=(}) (27 (800{val=var}) (242{val=!=}) (32 (800{val=currentScope}) (235{val=.}) (802{val=getSlot}) (214{val=(}) (800{val=qualifiedName}) (215{val=)}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=backwardsInferenceFromCallSite}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=ct}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=backwardsInferenceFromCallSite}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=fnType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypedVar})) (59 (800{val=var}) (204{val==}) (32 (800{val=currentScope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (800{val=qKeyName}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=unflowable}) (204{val==}) (27 (800{val=isInferred}) (249{val=&&}) (32 (802{val=isUnflowable}) (214{val=(}) (32 (800{val=currentScope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (800{val=varName}) (215{val=)})) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=type}) (204{val==}) (32 (32 (800{val=info}) (235{val=.}) (802{val=getType}) (216{val=()})) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=currentScope}) (234{val=,}) (800{val=registry}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (800{val=MODULE_EXPORTS_PREFIX}) (200{val=+}) (32 (22 (315{val=this}) (235{val=.}) (800{val=legacyNamespace})) (235{val=.}) (802{val=replace}) (214{val=(}) (13{val=CHAR_CONS}) (234{val=,}) (13{val=CHAR_CONS}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=callee}) (235{val=.}) (802{val=matchesQualifiedName}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (249{val=&&}) (32 (800{val=t}) (235{val=.}) (802{val=inModuleHoistScope}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=t}) (235{val=.}) (802{val=report}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=GOOG_MODULE_USES_GOOG_MODULE_GET}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Es6RewriteModules})) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Es6RewriteModules})) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (234{val=,}) (9{val=false}) (234{val=,}) (40{val=ResolutionMode.BROWSER}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=callee}) (235{val=.}) (802{val=matchesQualifiedName}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (249{val=&&}) (32 (800{val=t}) (235{val=.}) (802{val=inModuleHoistScope}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=t}) (235{val=.}) (802{val=report}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=MODULE_USES_GOOG_MODULE_GET}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=getBinaryModuleNamespace}) (214{val=(}) (800{val=legacyNamespace}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (32 (800{val=externs}) (214{val=(}) (27 (800{val=DEFAULT_EXTERNS}) (200{val=+}) (800{val=externs})) (215{val=)})) (234{val=,}) (32 (802{val=srcs}) (214{val=(}) (800{val=js}) (215{val=)})) (234{val=,}) (32 (32 (802{val=error}) (214{val=(}) (40{val=DisambiguateProperties.Warnings.INVALIDATION_ON_TYPE}) (215{val=)})) (235{val=.}) (802{val=withMessageContaining}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (32 (800{val=externs}) (214{val=(}) (27 (800{val=DEFAULT_EXTERNS}) (200{val=+}) (800{val=externs})) (215{val=)})) (234{val=,}) (32 (802{val=srcs}) (214{val=(}) (800{val=js}) (215{val=)})) (234{val=,}) (32 (32 (802{val=error}) (214{val=(}) (40{val=DisambiguateProperties.Warnings.INVALIDATION_ON_TYPE}) (215{val=)})) (235{val=.}) (802{val=withMessageContaining}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=srcs}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (234{val=,}) (32 (32 (802{val=error}) (214{val=(}) (40{val=DisambiguateProperties.Warnings.INVALIDATION}) (215{val=)})) (235{val=.}) (802{val=withMessageContaining}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=srcs}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (234{val=,}) (32 (32 (802{val=error}) (214{val=(}) (40{val=DisambiguateProperties.Warnings.INVALIDATION}) (215{val=)})) (235{val=.}) (802{val=withMessageContaining}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypedVar})) (59 (800{val=fnVar}) (204{val==}) (32 (800{val=scope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (800{val=fnName}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=rootNode}) (204{val==}) (32 (800{val=scope}) (235{val=.}) (802{val=getRootNode}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=private}) (802{val=GlobalScopeBuilder}) (214{val=(}) (44 (43 (801{val=TypedScope})) (800{val=scope})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=scope}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=scope}) (235{val=.}) (802{val=hasOwnSlot}) (214{val=(}) (800{val=qName}) (215{val=)})) (215{val=)}) (8 (218{val={}) (500{val=continue;}) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=TypedVar})) (59 (800{val=ownerVar}) (204{val==}) (32 (800{val=scope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (800{val=slotName}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypedVar})) (59 (800{val=slot}) (204{val==}) (32 (800{val=scope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (800{val=name}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (800{val=rValueInfo}) (235{val=.}) (802{val=getType}) (216{val=()})) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=scope}) (234{val=,}) (800{val=typeRegistry}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=createEnumTypeFromNodes}) (214{val=(}) (800{val=rValue}) (234{val=,}) (32 (800{val=lValue}) (235{val=.}) (802{val=getQualifiedName}) (216{val=()})) (234{val=,}) (800{val=info}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (800{val=scope}) (235{val=.}) (802{val=isGlobal}) (216{val=()})) (250{val=||}) (38 (207{val=!}) (32 (800{val=type}) (235{val=.}) (802{val=isReturnTypeInferred}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (27 (27 (800{val=parent}) (236{val===}) (500{val=null})) (250{val=||}) (38 (207{val=!}) (32 (800{val=parent}) (235{val=.}) (802{val=isFunction}) (216{val=()})))) (250{val=||}) (27 (800{val=n}) (236{val===}) (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})))) (250{val=||}) (27 (800{val=parent}) (236{val===}) (32 (800{val=scope}) (235{val=.}) (802{val=getRootNode}) (216{val=()})))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (315{val=this}) (235{val=.}) (802{val=getFunctionScope}) (216{val=()})) (242{val=!=}) (32 (800{val=that}) (235{val=.}) (802{val=getFunctionScope}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (27 (800{val=slot}) (242{val=!=}) (500{val=null})) (233{val=?}) (800{val=slot}) (226{val=:}) (32 (32 (802{val=getFunctionScope}) (216{val=()})) (235{val=.}) (802{val=getSlot}) (214{val=(}) (32 (800{val=var}) (235{val=.}) (802{val=getName}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getSlot}) (214{val=(}) (32 (802{val=getVarFromFunctionScope}) (214{val=(}) (800{val=name}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=ScopedName})) (59 (800{val=var}) (204{val==}) (32 (802{val=getVarFromFunctionScope}) (214{val=(}) (800{val=symbol}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=LinkedFlowScope})) (214{val=(}) (14 (304{val=new}) (43 (801{val=FlatFlowScopeCache})) (214{val=(}) (800{val=scope}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=type}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=type}) (204{val==}) (32 (800{val=type}) (235{val=.}) (802{val=resolve}) (214{val=(}) (800{val=errorReporter}) (234{val=,}) (800{val=scope}) (215{val=)}))) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=TemplateType})) (802{val=getObjectIndexKey}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=checkNotNull}) (214{val=(}) (800{val=iObjectIndexTemplateKey}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=iObjectIndexTemplateKey})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=TemplateType})) (802{val=getObjectElementKey}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=iObjectElementTemplateKey})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (32 (32 (14 (304{val=new}) (43 (40{val=InvalidatingTypes.Builder})) (214{val=(}) (800{val=registry}) (215{val=)})) (235{val=.}) (802{val=recordInvalidations}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=invalidationMap})) (215{val=)})) (235{val=.}) (802{val=addTypesInvalidForPropertyRenaming}) (216{val=()})) (235{val=.}) (802{val=addAllTypeMismatches}) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeMismatches}) (216{val=()})) (215{val=)})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=root}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getEnclosingNode}) (214{val=(}) (800{val=n}) (234{val=,}) (90 (800{val=TypeInference}) (226{val=:}) (226{val=:}) (800{val=createsContainerScope})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (802{val=AbstractScope}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=rootNode})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=rootNode})) (204{val==}) (800{val=rootNode})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=callee}) (235{val=.}) (802{val=matchesQualifiedName}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (249{val=&&}) (32 (800{val=t}) (235{val=.}) (802{val=inModuleHoistScope}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=t}) (235{val=.}) (802{val=report}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=GOOG_MODULE_USES_GOOG_MODULE_GET}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Es6RewriteModules})) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (800{val=MODULE_EXPORTS_PREFIX}) (200{val=+}) (32 (22 (315{val=this}) (235{val=.}) (800{val=legacyNamespace})) (235{val=.}) (802{val=replace}) (214{val=(}) (13{val=CHAR_CONS}) (234{val=,}) (13{val=CHAR_CONS}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=moduleType}) (236{val===}) (40{val=ModuleType.GOOG_MODULE})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=moduleType}) (204{val==}) (40{val=ModuleType.LEGACY_GOOG_MODULE})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=declaresNamespace}) (234{val=,}) (800{val=DECLARE_LEGACY_NAMESPACE_OUTSIDE_GOOG_MODULE}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=Keywords}) (235{val=.}) (802{val=isKeyword}) (214{val=(}) (40{val=name.value}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=features}) (204{val==}) (32 (800{val=features}) (235{val=.}) (802{val=with}) (214{val=(}) (40{val=Feature.KEYWORDS_AS_PROPERTIES}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=moduleType}) (236{val===}) (40{val=ModuleType.GOOG_MODULE})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=moduleType}) (204{val==}) (40{val=ModuleType.LEGACY_GOOG_MODULE})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=declaresLegacyNamespace}) (234{val=,}) (800{val=DECLARE_LEGACY_NAMESPACE_OUTSIDE_GOOG_MODULE}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=isVar}) (216{val=()})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isVar}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (227{val=;})) (219{val=}})) (322{val=else}) (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isExprAssign}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstFirstChild}) (216{val=()})) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=child}) (235{val=.}) (802{val=isVar}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isExprAssign}) (214{val=(}) (800{val=child}) (215{val=)})))) (215{val=)}) (8 (218{val={}) (500{val=continue;}) (219{val=}}))))
(AST_ROOT_SC2NF (27 (27 (800{val=parent}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=parent}) (235{val=.}) (802{val=isVar}) (216{val=()}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=node}) (204{val==}) (32 (802{val=withType}) (214{val=(}) (32 (32 (800{val=IR}) (235{val=.}) (802{val=number}) (214{val=(}) (800{val=id}) (215{val=)})) (235{val=.}) (802{val=useSourceInfoFrom}) (214{val=(}) (800{val=sourceNode}) (215{val=)})) (234{val=,}) (800{val=numberType}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=sourceNode}) (235{val=.}) (802{val=replaceWith}) (214{val=(}) (32 (800{val=IR}) (235{val=.}) (802{val=breakNode}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (32 (800{val=IR}) (235{val=.}) (802{val=block}) (214{val=(}) (32 (802{val=callContextMethodResult}) (214{val=(}) (800{val=sourceNode}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=section}) (235{val=.}) (802{val=getNumber}) (214{val=(}) (800{val=sourceNode}) (215{val=)})) (215{val=)})) (234{val=,}) (32 (32 (800{val=IR}) (235{val=.}) (802{val=breakNode}) (216{val=()})) (235{val=.}) (802{val=useSourceInfoFrom}) (214{val=(}) (800{val=sourceNode}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=useSourceInfoFrom}) (214{val=(}) (800{val=sourceNode}) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=writeGeneratedNode}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (21 (32 (802{val=writeGeneratedNode}) (214{val=(}) (32 (32 (800{val=IR}) (235{val=.}) (802{val=breakNode}) (216{val=()})) (235{val=.}) (802{val=useSourceInfoFrom}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (7 (40{val=currentCase.mayFallThrough}) (204{val==}) (9{val=false})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (27 (800{val=var}) (242{val=!=}) (500{val=null})) (249{val=&&}) (27 (32 (800{val=var}) (235{val=.}) (802{val=getScope}) (216{val=()})) (236{val===}) (32 (802{val=getSubject}) (216{val=()})))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkState}) (214{val=(}) (27 (800{val=scope}) (242{val=!=}) (32 (802{val=getSubject}) (216{val=()}))) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=expectScope}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=scope}) (234{val=,}) (800{val=scope}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=private}) (802{val=DeclarationSubject}) (214{val=(}) (44 (74 (43 (800{val=AbstractVar})) (230{val=<}) (76{val=?}) (234{val=,}) (76{val=?}) (231{val=>})) (800{val=var})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=var})) (204{val==}) (800{val=var})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=ImmutableList})) (230{val=<}) (74 (43 (800{val=AbstractVar})) (230{val=<}) (76{val=?}) (234{val=,}) (76{val=?}) (231{val=>})) (231{val=>})) (59 (800{val=declared}) (204{val==}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (32 (32 (802{val=getSubject}) (216{val=()})) (235{val=.}) (802{val=getAllAccessibleVariables}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=replace}) (235{val=.}) (802{val=isVar}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=replace}) (235{val=.}) (802{val=replaceWith}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=newExpr}) (214{val=(}) (800{val=replacement}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (800{val=replace}) (235{val=.}) (802{val=replaceWith}) (214{val=(}) (800{val=replacement}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (32 (800{val=ref}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isVar}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=isVar}) (216{val=()})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (250{val=||}) (32 (800{val=parent}) (235{val=.}) (802{val=isVar}) (216{val=()})) (250{val=||}) (32 (800{val=parent}) (235{val=.}) (802{val=isNew}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (36 (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isVar}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isFunction}) (216{val=()}))) (215{val=)})) (249{val=&&}) (32 (802{val=isWhitelistedName}) (214{val=(}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkArgument}) (214{val=(}) (32 (800{val=returnNode}) (235{val=.}) (802{val=isReturn}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (38 (207{val=!}) (32 (802{val=isValidIndex}) (214{val=(}) (27 (800{val=index}) (200{val=+}) (800{val=offset})) (215{val=)}))) (233{val=?}) (13{val=CHAR_CONS}) (226{val=:}) (32 (40{val=source.contents}) (235{val=.}) (802{val=charAt}) (214{val=(}) (27 (800{val=index}) (200{val=+}) (800{val=offset})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=private}) (39{val=char}) (802{val=nextChar}) (216{val=()}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (802{val=isAtEnd}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (13{val=CHAR_CONS}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (40{val=source.contents}) (235{val=.}) (802{val=charAt}) (214{val=(}) (37 (800{val=index}) (247{val=++})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=value}) (204{val==}) (32 (22 (22 (315{val=this}) (235{val=.}) (800{val=source})) (235{val=.}) (800{val=contents})) (235{val=.}) (802{val=substring}) (214{val=(}) (800{val=startOffset}) (234{val=,}) (800{val=index}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ProcessLabels})) (214{val=(}) (800{val=markChanges}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=collector}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkState}) (214{val=(}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getLifeCycleStage}) (216{val=()})) (235{val=.}) (802{val=isNormalized}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=extractionInfo}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=Callback})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=externs}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (21 (32 (802{val=addWindowProperties}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=body}) (234{val=,}) (800{val=updater}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=symbolMap}) (204{val==}) (32 (802{val=getCssRenamingMap}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=Traversal})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (800{val=traverser}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseRootsEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=renamer}) (234{val=,}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (32 (802{val=checkNotNull}) (214{val=(}) (800{val=root}) (215{val=)})) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Callback})) (800{val=callback})) (226{val=:}) (800{val=callbacks}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=scriptRoot}) (235{val=.}) (802{val=putBooleanProp}) (214{val=(}) (40{val=Node.TRANSPILED}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (800{val=callback}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Callback})) (800{val=callback})) (226{val=:}) (800{val=callbacks}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=singleRoot}) (235{val=.}) (802{val=putBooleanProp}) (214{val=(}) (40{val=Node.TRANSPILED}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=singleRoot}) (234{val=,}) (800{val=callback}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (19 (312{val=do}) (8 (218{val={}) (21 (7 (800{val=codeChanged}) (204{val==}) (9{val=false})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=EliminationPass})) (214{val=(}) (800{val=cfg}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})) (350{val=while}) (214{val=(}) (800{val=codeChanged}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkNotNull}) (214{val=(}) (800{val=root}) (215{val=)})) (227{val=;})) (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=root}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=Es6RewriteModules}) (235{val=.}) (802{val=isEs6ModuleRoot}) (214{val=(}) (800{val=script}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=script}) (234{val=,}) (14 (304{val=new}) (43 (801{val=Rewriter})) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=script}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=finder}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (800{val=finder}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=block}) (234{val=,}) (14 (304{val=new}) (43 (801{val=UnmarkedNodeTranspiler})) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=YieldFinder})) (59 (800{val=yieldFinder}) (204{val==}) (14 (304{val=new}) (43 (801{val=YieldFinder})) (216{val=()}))) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=yieldFinder}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=yieldFinder}) (235{val=.}) (802{val=getYieldNode}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=wrapper}) (234{val=,}) (14 (800{val=context}) (235{val=.}) (304{val=new}) (43 (801{val=UnmarkedNodeTranspiler})) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=originalGeneratorBody}) (234{val=,}) (14 (304{val=new}) (43 (801{val=YieldNodeMarker})) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=LabelFinder})) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=namingCallback}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseRootsEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=pass}) (234{val=,}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseRootsEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (315{val=this}) (234{val=,}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=originalRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=externs}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=externs}) (234{val=,}) (800{val=findExternsCallback}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=js}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=renameMessages}) (215{val=)}) (8 (218{val={}) (60 (43 (801{val=RenameMessagesVisitor})) (59 (800{val=renameMessagesVisitor}) (204{val==}) (14 (304{val=new}) (43 (801{val=RenameMessagesVisitor})) (216{val=()}))) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=renameMessagesVisitor}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=namingCallback}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=originalRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (32 (800{val=function}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (234{val=,}) (800{val=finder}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getLoopCodeBlock}) (214{val=(}) (800{val=loopNode}) (215{val=)})) (234{val=,}) (800{val=continueStatementUpdater}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (32 (800{val=superSet}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=normalizePass}) (215{val=)})) (227{val=;})) (21 (32 (800{val=denormalizePass}) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=CheckProvidesCallback})) (59 (800{val=callback}) (204{val==}) (14 (304{val=new}) (43 (801{val=CheckProvidesCallback})) (214{val=(}) (800{val=codingConvention}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (800{val=callback}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=cfgNode}) (234{val=,}) (800{val=gatherCb}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=gatherCb}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=cfgNode}) (234{val=,}) (800{val=gatherCb}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (32 (800{val=t}) (235{val=.}) (802{val=getScopeRoot}) (216{val=()})) (234{val=,}) (14 (304{val=new}) (43 (801{val=GatherCandidates})) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (14 (304{val=new}) (43 (801{val=InferConsts})) (214{val=(}) (800{val=compiler}) (215{val=)})) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=constFinder}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=sia}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getFunctionBody}) (214{val=(}) (800{val=constructor}) (215{val=)})) (234{val=,}) (800{val=finder}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=externs}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=setExternProperties}) (214{val=(}) (32 (800{val=ImmutableSet}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=externProperties}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=tree}) (234{val=,}) (800{val=test}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=tree}) (234{val=,}) (800{val=test}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=Callback})) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=traversal}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=externs}) (234{val=,}) (800{val=externsCallback}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=originalRoot}) (234{val=,}) (800{val=cb}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ProcessProperties})) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=GatherCollapses})) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkState}) (214{val=(}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getLifeCycleStage}) (216{val=()})) (235{val=.}) (802{val=isNormalized}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6ScopeRoots}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=changedScopes}) (234{val=,}) (14 (304{val=new}) (43 (801{val=EmptyClinitPruner})) (216{val=()})) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=script}) (234{val=,}) (800{val=test}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkArgument}) (214{val=(}) (32 (802{val=isEs6ModuleRoot}) (214{val=(}) (800{val=root}) (215{val=)})) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})) (21 (32 (802{val=clearState}) (216{val=()})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isEs6ModuleRoot}) (214{val=(}) (800{val=scriptNode}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=processFile}) (214{val=(}) (800{val=scriptNode}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptNode}) (234{val=,}) (14 (304{val=new}) (43 (801{val=RewriteRequiresForEs6Modules})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (32 (800{val=callbacks}) (235{val=.}) (802{val=get}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=Strip})) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (32 (802{val=getLastCompiler}) (216{val=()})) (234{val=,}) (22 (32 (802{val=getLastCompiler}) (216{val=()})) (235{val=.}) (800{val=jsRoot})) (234{val=,}) (800{val=s}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (32 (802{val=getLastCompiler}) (216{val=()})) (234{val=,}) (22 (32 (802{val=getLastCompiler}) (216{val=()})) (235{val=.}) (800{val=jsRoot})) (234{val=,}) (800{val=findFunction}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (32 (802{val=getLastCompiler}) (216{val=()})) (234{val=,}) (22 (32 (802{val=getLastCompiler}) (216{val=()})) (235{val=.}) (800{val=jsRoot})) (234{val=,}) (800{val=findParameter}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ExportTestFunctionsNodes})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=externs}) (234{val=,}) (800{val=findExternsCallback}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=callback}) (234{val=,}) (14 (304{val=new}) (43 (801{val=RenameCallback})) (214{val=(}) (800{val=aliasName}) (234{val=,}) (800{val=renamed}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (7 (800{val=aliasName}) (204{val==}) (800{val=renamed})) (227{val=;})) (500{val=break;}) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=callbackBlock}) (234{val=,}) (14 (304{val=new}) (43 (801{val=DefineCallbackReturnCallback})) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=TransformAMDModulesCallback})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=script}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=googRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkArgument}) (214{val=(}) (32 (800{val=scriptNode}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptNode}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=rules}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseRootsEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (315{val=this}) (234{val=,}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=tree}) (234{val=,}) (800{val=cb}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=root}) (235{val=.}) (802{val=isScript}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseRootsEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (315{val=this}) (234{val=,}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=js}) (234{val=,}) (14 (304{val=new}) (43 (40{val=Normalize.NormalizeStatements})) (214{val=(}) (800{val=compiler}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ProcessVars})) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6ScopeRoots}) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=changedScopeRoots}) (234{val=,}) (14 (304{val=new}) (43 (801{val=UseSiteGatheringCallback})) (216{val=()})) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=source}) (215{val=)})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=source}) (234{val=,}) (14 (304{val=new}) (43 (801{val=UseSiteGatheringCallback})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (32 (802{val=getLastCompiler}) (216{val=()})) (234{val=,}) (22 (32 (802{val=getLastCompiler}) (216{val=()})) (235{val=.}) (800{val=jsRoot})) (234{val=,}) (800{val=s}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=requiresLineNumbers}) (204{val==}) (9{val=false})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=constructorBody}) (234{val=,}) (800{val=replaceThisWithSuperThis}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=functionBody}) (234{val=,}) (800{val=checkForDefinedReturnValue}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=enclosingFunction}) (234{val=,}) (800{val=checkAssigns}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=findExportableNodes}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (40{val=parsed.ast}) (234{val=,}) (14 (304{val=new}) (43 (801{val=Traverser})) (214{val=(}) (800{val=info}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=FindPrimitives})) (59 (800{val=pass}) (204{val==}) (14 (304{val=new}) (43 (801{val=FindPrimitives})) (216{val=()}))) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=pass}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=pass}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=body}) (234{val=,}) (800{val=traversal}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=getterSetterCollector}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=body}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6ScopeRoots}) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=changedScopeRoots}) (234{val=,}) (800{val=cb}) (234{val=,}) (800{val=cb}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=requiresTypes}) (204{val==}) (9{val=false})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=J2clSourceFileChecker}) (235{val=.}) (802{val=shouldRunJ2clPasses}) (214{val=(}) (800{val=compiler}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=mode}) (204{val==}) (40{val=Mode.SINGLE_FILE})) (227{val=;})) (21 (32 (802{val=reset}) (216{val=()})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=reset}) (216{val=()})) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseRootsEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (315{val=this}) (234{val=,}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=definitionsGatherer}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6ScopeRoots}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=changedScopeNodes}) (234{val=,}) (14 (304{val=new}) (43 (801{val=PeepCallback})) (216{val=()})) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (800{val=retraverseOnChange})) (215{val=)}) (8 (218{val={}) (500{val=break;}) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ReductionGatherer})) (214{val=(}) (800{val=reducers}) (234{val=,}) (800{val=reductionMap}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=js}) (234{val=,}) (14 (304{val=new}) (43 (801{val=DeadAssignmentsElimination})) (214{val=(}) (800{val=compiler}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ProcessProperties})) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=SourceInformationAnnotator})) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=PolymerPassSuppressBehaviors})) (59 (800{val=suppressBehaviorsCallback}) (204{val==}) (14 (304{val=new}) (43 (801{val=PolymerPassSuppressBehaviors})) (214{val=(}) (800{val=compiler}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=suppressBehaviorsCallback}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=IdentifierToken})) (214{val=(}) (32 (802{val=getTokenRange}) (214{val=(}) (800{val=beginToken}) (215{val=)})) (234{val=,}) (32 (800{val=value}) (235{val=.}) (802{val=intern}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=script}) (234{val=,}) (800{val=cb}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=rootNode}) (234{val=,}) (800{val=callback}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (32 (800{val=metadata}) (235{val=.}) (802{val=getCompiler}) (216{val=()})) (234{val=,}) (800{val=script}) (234{val=,}) (800{val=callback}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (32 (800{val=x}) (235{val=.}) (802{val=getType}) (216{val=()})) (235{val=.}) (802{val=toString}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (32 (800{val=bar}) (235{val=.}) (802{val=getType}) (216{val=()})) (235{val=.}) (802{val=toString}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (32 (800{val=f}) (235{val=.}) (802{val=getPropertyType}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=toString}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=item}) (235{val=.}) (802{val=isVar}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=item}) (204{val==}) (32 (800{val=item}) (235{val=.}) (802{val=getFirstChild}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkArgument}) (214{val=(}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (250{val=||}) (32 (800{val=parent}) (235{val=.}) (802{val=isVar}) (216{val=()})) (250{val=||}) (32 (800{val=parent}) (235{val=.}) (802{val=isParamList}) (216{val=()})) (250{val=||}) (32 (800{val=parent}) (235{val=.}) (802{val=isCatch}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseTyped}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=DiscoverEnumsAndTypedefs})) (214{val=(}) (800{val=typeRegistry}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableTranspile}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=IdentifyGlobalEnumsAndTypedefsAsNonNullable})) (214{val=(}) (800{val=typeRegistry}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ReferenceCollectingCallback})) (59 (800{val=refCollector}) (204{val==}) (14 (304{val=new}) (43 (801{val=ReferenceCollectingCallback})) (214{val=(}) (315{val=this}) (234{val=,}) (40{val=ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR}) (234{val=,}) (32 (800{val=SyntacticScopeCreator}) (235{val=.}) (802{val=makeUntyped}) (214{val=(}) (315{val=this}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=private}) (43 (801{val=TypeCheckResult})) (802{val=parseAndTypeCheckWithScope}) (214{val=(}) (44 (43 (801{val=String})) (800{val=js})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=parseAndTypeCheckWithScope}) (214{val=(}) (800{val=DEFAULT_EXTERNS}) (234{val=,}) (800{val=js}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=private}) (43 (801{val=Node})) (802{val=parseAndTypeCheck}) (214{val=(}) (44 (43 (801{val=String})) (800{val=js})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=parseAndTypeCheck}) (214{val=(}) (800{val=DEFAULT_EXTERNS}) (234{val=,}) (800{val=js}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (800{val=DEFAULT_EXTERNS}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=externs})) (234{val=,}) (800{val=js}) (234{val=,}) (800{val=diag}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=js}) (234{val=,}) (11 (214{val=(}) (43 (800{val=String})) (215{val=)}) (500{val=null})) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (800{val=DEFAULT_EXTERNS}) (234{val=,}) (800{val=js}) (234{val=,}) (800{val=description}) (234{val=,}) (800{val=isError}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCovariantIThenable3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testSymbol2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testSymbol1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testIArrayLikeStructuralMatch6}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testIArrayLikeStructuralMatch5}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testIArrayLikeStructuralMatch4}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testIArrayLikeStructuralMatch3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testIArrayLikeStructuralMatch2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testIArrayLikeStructuralMatch1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testIArrayLikeCovariant2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testIArrayLikeCovariant1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=js1Node}) (204{val==}) (32 (802{val=parseAndTypeCheck}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=js1Node}) (204{val==}) (32 (802{val=parseAndTypeCheck}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=TypeCheckResult})) (59 (800{val=p}) (204{val==}) (32 (802{val=parseAndTypeCheckWithScope}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})) (21 (32 (802{val=testAddingMethodsUsingPrototypeIdiomComplexNamespace}) (214{val=(}) (800{val=p}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=TypeCheckResult})) (59 (800{val=p}) (204{val==}) (32 (802{val=parseAndTypeCheckWithScope}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})) (21 (32 (802{val=testAddingMethodsUsingPrototypeIdiomComplexNamespace}) (214{val=(}) (800{val=p}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=js1Node}) (204{val==}) (32 (802{val=parseAndTypeCheck}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFunctionBind5}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFunctionBind4}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFunctionBind3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFunctionBind2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFunctionBind1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFunctionCall8}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFunctionCall7}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFunctionCall6}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFunctionCall5}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFunctionCall3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFunctionCall2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testFunctionCall1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testAbstractMethodCall13}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testAbstractMethodCall12}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testAbstractMethodCall10}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testAbstractMethodCall8}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testAbstractMethodCall7}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testAbstractMethodCall5}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testAbstractMethodCall3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testAbstractMethodCall1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testIssue1201b}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testThis14}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArrayAccess9}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArrayAccess8}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArrayAccess7}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArrayAccess6}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArrayAccess4}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArrayAccess3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArrayAccess2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArrayAccess1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testGetelemStruct_noErrorForGettingWellKnownSymbol}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testGetelemStruct_noErrorForSettingWellKnownSymbol}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testForOf8}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testForOf6}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testForOf5}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testForOf4}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=number}) (204{val==}) (32 (802{val=createUntypedNumber}) (214{val=(}) (800{val=n}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=number}) (235{val=.}) (802{val=setJSType}) (214{val=(}) (800{val=NUMBER_TYPE}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=number}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=n}) (204{val==}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.NULL}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=n}) (235{val=.}) (802{val=setJSType}) (214{val=(}) (800{val=NULL_TYPE}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=n}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=child}) (235{val=.}) (802{val=inferSlotType}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=NUMBER_TYPE}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testTransformationWithUnionInMaprecord}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTTL}) (214{val=(}) (800{val=UNKNOWN_TYPE}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testTransformationWithInvalidMaprecord}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTTL}) (214{val=(}) (800{val=UNKNOWN_TYPE}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testTransformationWithInvalidNestedMapunion}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTTL}) (214{val=(}) (800{val=UNKNOWN_TYPE}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testTransformationWithNestedMapunionInMapFunctionBody}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTTL}) (214{val=(}) (800{val=STRING_TYPE}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testTransformationWithNestedExpressionInBooleanSecondParam}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTTL}) (214{val=(}) (800{val=STRING_TYPE}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testTransformationWithNestedExpressionInBooleanFirstParam}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTTL}) (214{val=(}) (800{val=STRING_TYPE}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (800{val=type}) (234{val=,}) (800{val=OBJECT_TYPE}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=n}) (204{val==}) (32 (802{val=parseAndTypeCheck}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (800{val=ERROR_TYPE}) (234{val=,}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstFirstChild}) (216{val=()})) (235{val=.}) (802{val=getJSType}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (800{val=NUMBER_TYPE}) (234{val=,}) (800{val=type}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (800{val=NUMBER_TYPE}) (234{val=,}) (800{val=type}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=NUMBER_TYPE}) (234{val=,}) (32 (800{val=googFooGetprop2ObjectType}) (235{val=.}) (802{val=getPropertyType}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testName5}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (800{val=REGEXP_FUNCTION_TYPE}) (234{val=,}) (32 (802{val=testNameNode}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testName4}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (800{val=DATE_FUNCTION_TYPE}) (234{val=,}) (32 (802{val=testNameNode}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testName3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (800{val=ARRAY_FUNCTION_TYPE}) (234{val=,}) (32 (802{val=testNameNode}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testName2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (800{val=OBJECT_FUNCTION_TYPE}) (234{val=,}) (32 (802{val=testNameNode}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testName1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (800{val=VOID_TYPE}) (234{val=,}) (32 (802{val=testNameNode}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (800{val=ARRAY_TYPE}) (234{val=,}) (32 (800{val=a}) (235{val=.}) (802{val=getType}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (800{val=VOID_TYPE}) (234{val=,}) (32 (800{val=n}) (235{val=.}) (802{val=getJSType}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=falseNode}) (204{val==}) (32 (802{val=typeCheck}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.FALSE}) (215{val=)})) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (800{val=BOOLEAN_TYPE}) (234{val=,}) (32 (800{val=falseNode}) (235{val=.}) (802{val=getJSType}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=trueNode}) (204{val==}) (32 (802{val=typeCheck}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.TRUE}) (215{val=)})) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (800{val=BOOLEAN_TYPE}) (234{val=,}) (32 (800{val=trueNode}) (235{val=.}) (802{val=getJSType}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=Node})) (59 (800{val=n}) (204{val==}) (32 (802{val=typeCheck}) (214{val=(}) (32 (800{val=Node}) (235{val=.}) (802{val=newString}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (800{val=STRING_TYPE}) (234{val=,}) (32 (800{val=n}) (235{val=.}) (802{val=getJSType}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=Node})) (59 (800{val=n}) (204{val==}) (32 (802{val=typeCheck}) (214{val=(}) (32 (800{val=Node}) (235{val=.}) (802{val=newNumber}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (800{val=NUMBER_TYPE}) (234{val=,}) (32 (800{val=n}) (235{val=.}) (802{val=getJSType}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=TypeCheckResult})) (59 (800{val=p}) (204{val==}) (32 (802{val=parseAndTypeCheckWithScope}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (800{val=NUMBER_TYPE}) (234{val=,}) (32 (32 (40{val=p.scope}) (235{val=.}) (802{val=getVar}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=getType}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSDocInfo})) (59 (800{val=jsDoc}) (204{val==}) (16 (32 (32 (800{val=node}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isVar}) (216{val=()})) (233{val=?}) (32 (32 (800{val=node}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=getJSDocInfo}) (216{val=()})) (226{val=:}) (32 (800{val=node}) (235{val=.}) (802{val=getJSDocInfo}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=options}) (235{val=.}) (802{val=needsTranspilationFrom}) (214{val=(}) (800{val=ES6}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=checks}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=es6ExternsCheck}) (215{val=)})) (227{val=;})) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6PreTypecheckPasses}) (214{val=(}) (800{val=checks}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6PreTypecheckPasses}) (214{val=(}) (800{val=passes}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6PreTypecheckPasses}) (214{val=(}) (800{val=factories}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6PreTypecheckPasses}) (214{val=(}) (800{val=passes}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (16 (800{val=shouldAddTypes}) (233{val=?}) (32 (22 (315{val=this}) (235{val=.}) (800{val=contextType})) (235{val=.}) (802{val=getPropertyType}) (214{val=(}) (800{val=fieldName}) (215{val=)})) (226{val=:}) (500{val=null})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=embedded}) (204{val==}) (27 (800{val=transpiled}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=URLEncoder}) (235{val=.}) (802{val=encode}) (214{val=(}) (800{val=sourceMap}) (215{val=)})) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (27 (32 (800{val=var}) (235{val=.}) (802{val=getParentNode}) (216{val=()})) (242{val=!=}) (500{val=null})) (249{val=&&}) (27 (32 (800{val=var}) (235{val=.}) (802{val=getType}) (216{val=()})) (236{val===}) (500{val=null}))) (249{val=&&}) (32 (32 (800{val=var}) (235{val=.}) (802{val=getParentNode}) (216{val=()})) (235{val=.}) (802{val=isVar}) (216{val=()}))))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setPreserveGoogProvidesAndRequires}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=ObjectType})) (59 (800{val=regType}) (204{val==}) (32 (800{val=ObjectType}) (235{val=.}) (802{val=cast}) (214{val=(}) (32 (800{val=registry}) (235{val=.}) (802{val=getType}) (214{val=(}) (800{val=qualifiedName}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=windowType}) (204{val==}) (32 (802{val=getType}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=private}) (39{val=void}) (802{val=registerGlobalType}) (214{val=(}) (44 (43 (801{val=JSType})) (800{val=type})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=registerGlobalType}) (214{val=(}) (800{val=type}) (234{val=,}) (32 (800{val=type}) (235{val=.}) (802{val=toString}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=typesIndexedByProperty}) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (21 (32 (800{val=eachRefTypeIndexedByProperty}) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (21 (32 (802{val=initializeBuiltInTypes}) (216{val=()})) (227{val=;})) (21 (32 (800{val=namesToTypes}) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (21 (32 (802{val=initializeRegistry}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (32 (800{val=typeRegistry}) (235{val=.}) (802{val=getNativeType}) (214{val=(}) (800{val=GENERATOR_TYPE}) (215{val=)})) (234{val=,}) (32 (800{val=typeRegistry}) (235{val=.}) (802{val=getType}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (32 (800{val=typeRegistry}) (235{val=.}) (802{val=getNativeType}) (214{val=(}) (800{val=ITERATOR_TYPE}) (215{val=)})) (234{val=,}) (32 (800{val=typeRegistry}) (235{val=.}) (802{val=getType}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (32 (800{val=typeRegistry}) (235{val=.}) (802{val=getNativeType}) (214{val=(}) (800{val=ITERABLE_TYPE}) (215{val=)})) (234{val=,}) (32 (800{val=typeRegistry}) (235{val=.}) (802{val=getType}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=warnImplicitlyNullable}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=noWarning}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=type}) (204{val==}) (32 (800{val=registry}) (235{val=.}) (802{val=getType}) (214{val=(}) (800{val=reference}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6PreTypecheckPasses}) (214{val=(}) (800{val=factories}) (234{val=,}) (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6PreTypecheckPasses}) (214{val=(}) (800{val=passes}) (234{val=,}) (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=options}) (235{val=.}) (802{val=needsTranspilationFrom}) (214{val=(}) (800{val=ES6}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=checks}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=es6ExternsCheck}) (215{val=)})) (227{val=;})) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6PreTypecheckPasses}) (214{val=(}) (800{val=checks}) (234{val=,}) (800{val=options}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6PreTypecheckPasses}) (214{val=(}) (800{val=passes}) (234{val=,}) (800{val=options}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isLoopStructure}) (214{val=(}) (32 (800{val=s}) (235{val=.}) (802{val=getRootNode}) (216{val=()})) (215{val=)})))
(AST_ROOT_SC2NF (21 (7 (800{val=actualYieldType}) (204{val==}) (32 (32 (32 (800{val=actualYieldType}) (235{val=.}) (802{val=dereference}) (216{val=()})) (235{val=.}) (802{val=getTemplateTypeMap}) (216{val=()})) (235{val=.}) (802{val=getResolvedTemplateType}) (214{val=(}) (32 (800{val=typeRegistry}) (235{val=.}) (802{val=getIterableTemplate}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (27 (32 (800{val=var}) (235{val=.}) (802{val=getParentNode}) (216{val=()})) (242{val=!=}) (500{val=null})) (249{val=&&}) (27 (32 (800{val=var}) (235{val=.}) (802{val=getType}) (216{val=()})) (236{val===}) (500{val=null}))) (249{val=&&}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isNameDeclaration}) (214{val=(}) (32 (800{val=var}) (235{val=.}) (802{val=getParentNode}) (216{val=()})) (215{val=)}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2017}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NTI_ONLY})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=foldStringTypes}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=foldStringTypes}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (7 (800{val=late}) (204{val==}) (9{val=false})) (227{val=;})) (21 (7 (800{val=useTypes}) (204{val==}) (9{val=true})) (227{val=;})) (21 (7 (800{val=numRepetitions}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (21 (7 (800{val=mode}) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (32 (802{val=warningOtiNti}) (214{val=(}) (800{val=TYPE_MISMATCH_WARNING}) (234{val=,}) (800{val=MISTYPED_ASSIGN_RHS}) (215{val=)})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=Node})) (802{val=parse}) (214{val=(}) (44 (43 (801{val=String})) (800{val=js})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=parse}) (214{val=(}) (800{val=js}) (234{val=,}) (40{val=TypeInferenceMode.NEITHER}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (40{val=CodePrinter.Builder})) (214{val=(}) (32 (802{val=parse}) (214{val=(}) (800{val=js}) (234{val=,}) (40{val=TypeInferenceMode.OTI_ONLY}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (21 (32 (802{val=assertNoPureCalls}) (214{val=(}) (800{val=source}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=mode}) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=mode}) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=mode}) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=mode}) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=mode}) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertNoPureCalls}) (214{val=(}) (800{val=source}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertNoPureCalls}) (214{val=(}) (800{val=source}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertNoPureCalls}) (214{val=(}) (800{val=source}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=mode}) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=mode}) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=mode}) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=mode}) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.OTI_ONLY})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.OTI_ONLY})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (21 (32 (802{val=enableRunTypeCheckAfterProcessing}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=disable_testClassMethodUnused2}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (21 (32 (802{val=unused}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=used}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testClassMethodUnused1}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (21 (32 (802{val=unused}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=used}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testClassPropUnused1}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (21 (32 (802{val=unused}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testClassWithEmptyMembers}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (21 (32 (802{val=testError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=StrictModeCheck.DUPLICATE_CLASS_METHODS}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testStaticAndNonstaticSetterWithSameName}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testStaticAndNonstaticGetterWithSameName}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testStaticAndNonstaticMethodWithSameName}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testComputedPropInClass}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArguments6}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testUnknownVariable4}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (21 (32 (802{val=testSameEs6Strict}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSameEs6Strict}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (7 (800{val=late}) (204{val==}) (9{val=true})) (227{val=;})) (21 (7 (800{val=useTypes}) (204{val==}) (9{val=true})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectDefinePropertiesQuotesPreventRemoval}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectDefineProperties6}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectDefineProperties5}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testConstructorProperty1}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableGatherExternProperties}) (216{val=()})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2017}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCoercionSubstitution_boxedNumberVsZero}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCoercionSubstitution_allType}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCoercionSubstitution_unknownType}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCoercionSubstitution_while}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCoercionSubstitution_expression}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCoercionSubstitution_booleanResult0}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (7 (800{val=late}) (204{val==}) (9{val=true})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (21 (32 (802{val=ignoreWarnings}) (214{val=(}) (40{val=DiagnosticGroups.NEW_CHECK_TYPES_EXTRA_CHECKS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.OTI_ONLY})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (802{val=testSame}) (214{val=(}) (32 (802{val=externs}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (800{val=MINIMAL_EXTERNS}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (234{val=,}) (32 (802{val=srcs}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (234{val=,}) (32 (802{val=warningOtiNti}) (214{val=(}) (40{val=TypeValidator.TYPE_MISMATCH_WARNING}) (234{val=,}) (40{val=NewTypeInference.INVALID_ARGUMENT_TYPE}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=srcs}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=warningOtiNti}) (214{val=(}) (800{val=TOO_MANY_TEMPLATE_PARAMS}) (234{val=,}) (800{val=INVALID_GENERICS_INSTANTIATION}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=srcs}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=warningOtiNti}) (214{val=(}) (800{val=TOO_MANY_TEMPLATE_PARAMS}) (234{val=,}) (800{val=INVALID_GENERICS_INSTANTIATION}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (21 (32 (802{val=enableRunTypeCheckAfterProcessing}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=testRewrite}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.BOTH})) (227{val=;})) (21 (32 (802{val=testRewrite}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (21 (32 (802{val=enableRunTypeCheckAfterProcessing}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=NamedType})) (800{val=type})) (226{val=:}) (32 (800{val=unresolvedNamedTypes}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=scope}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=type}) (235{val=.}) (802{val=resolve}) (214{val=(}) (800{val=reporter}) (234{val=,}) (800{val=scope}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=activeXObject}) (235{val=.}) (802{val=resolve}) (214{val=(}) (500{val=null}) (234{val=,}) (800{val=scope}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=namedA}) (235{val=.}) (802{val=resolve}) (214{val=(}) (500{val=null}) (234{val=,}) (800{val=scope}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=type}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=type})) (204{val==}) (32 (800{val=type}) (235{val=.}) (802{val=resolve}) (214{val=(}) (800{val=errorReporter}) (234{val=,}) (800{val=scope}) (215{val=)}))) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=a}) (235{val=.}) (802{val=resolve}) (214{val=(}) (500{val=null}) (234{val=,}) (800{val=EMPTY_SCOPE}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=DeferredSetType})) (800{val=deferred})) (226{val=:}) (800{val=deferredSetTypes}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=deferred}) (235{val=.}) (802{val=resolve}) (214{val=(}) (800{val=currentScope}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6PreTypecheckPasses}) (214{val=(}) (800{val=factories}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6PreTypecheckPasses}) (214{val=(}) (800{val=passes}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=options}) (235{val=.}) (802{val=needsTranspilationFrom}) (214{val=(}) (800{val=ES6}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=checks}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=es6ExternsCheck}) (215{val=)})) (227{val=;})) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6PreTypecheckPasses}) (214{val=(}) (800{val=checks}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=addEs6PreTypecheckPasses}) (214{val=(}) (800{val=passes}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testAbstractClass}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (802{val=warning}) (214{val=(}) (800{val=INSTANTIATE_ABSTRACT_CLASS}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (43 (801{val=Node})) (802{val=parse}) (214{val=(}) (44 (43 (801{val=String})) (800{val=js})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=parse}) (214{val=(}) (800{val=js}) (234{val=,}) (40{val=TypeInferenceMode.DISABLED}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectDefinePropertiesQuotesPreventRemoval}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectDefineProperties6}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectDefineProperties5}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testObjectDefineProperties1}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testES6StaticProperty2}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testES6StaticProperty}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testConstructorProperty2}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testConstructorProperty1}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableGatherExternProperties}) (216{val=()})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2017}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=ignoreWarnings}) (214{val=(}) (40{val=DiagnosticGroups.NEW_CHECK_TYPES_EXTRA_CHECKS}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableTranspile}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (21 (32 (802{val=enableRunTypeCheckAfterProcessing}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testClassWithEmptyMembers}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (21 (32 (802{val=testError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=StrictModeCheck.DUPLICATE_CLASS_METHODS}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testStaticAndNonstaticSetterWithSameName}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testStaticAndNonstaticGetterWithSameName}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testStaticAndNonstaticMethodWithSameName}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testComputedPropInClass}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArguments6}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testUnknownVariable4}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (21 (32 (802{val=testSameEs6Strict}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSameEs6Strict}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=foldStringTypes}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=foldStringTypes}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (7 (800{val=late}) (204{val==}) (9{val=true})) (227{val=;})) (21 (7 (800{val=useTypes}) (204{val==}) (9{val=true})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=disable_testClassMethodUnused2}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (21 (32 (802{val=unused}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=used}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testClassMethodUnused1}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (21 (32 (802{val=unused}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=used}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testClassPropUnused1}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (21 (32 (802{val=unused}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=setAcceptedLanguage}) (214{val=(}) (40{val=LanguageMode.ECMASCRIPT_2015}) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (21 (32 (802{val=enableRunTypeCheckAfterProcessing}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableNormalize}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (21 (32 (802{val=assertNoPureCalls}) (214{val=(}) (800{val=source}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=mode}) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=mode}) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=mode}) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=mode}) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=mode}) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertNoPureCalls}) (214{val=(}) (800{val=source}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertNoPureCalls}) (214{val=(}) (800{val=source}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (60 (43 (801{val=String})) (59 (800{val=source}) (204{val==}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertNoPureCalls}) (214{val=(}) (800{val=source}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=mode}) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=mode}) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=mode}) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=mode}) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=ignoreWarnings}) (214{val=(}) (40{val=NewTypeInference.GLOBAL_THIS}) (234{val=,}) (40{val=NewTypeInference.INEXISTENT_PROPERTY}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=testRewrite}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=testRewrite}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})) (21 (32 (802{val=enableRunTypeCheckAfterProcessing}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (40{val=CodePrinter.Builder})) (214{val=(}) (32 (802{val=parse}) (214{val=(}) (800{val=js}) (234{val=,}) (40{val=TypeInferenceMode.CHECKED}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCoercionSubstitution_boxedNumberVsZero}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCoercionSubstitution_allType}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCoercionSubstitution_unknownType}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCoercionSubstitution_while}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCoercionSubstitution_expression}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCoercionSubstitution_booleanResult0}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.CHECKED})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=enableTranspile}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.DISABLED})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=compiler})) (204{val==}) (800{val=compiler})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=addTypes})) (204{val==}) (32 (40{val=MostRecentTypechecker.NTI}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getMostRecentTypechecker}) (216{val=()})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=isTypecheckingEnabled}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (22 (315{val=this}) (235{val=.}) (800{val=checkTypes})) (250{val=||}) (22 (315{val=this}) (235{val=.}) (800{val=useNewTypeInference}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=compiler})) (204{val==}) (800{val=compiler})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=addTypes})) (204{val==}) (32 (40{val=MostRecentTypechecker.NTI}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getMostRecentTypechecker}) (216{val=()})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=addTypes})) (204{val==}) (32 (40{val=MostRecentTypechecker.NTI}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getMostRecentTypechecker}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (32 (800{val=options}) (235{val=.}) (802{val=getNewTypeInference}) (216{val=()})) (233{val=?}) (32 (802{val=getGlobalTypeInfo}) (216{val=()})) (226{val=:}) (32 (802{val=getTypeRegistry}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=addTypes})) (204{val==}) (32 (40{val=MostRecentTypechecker.NTI}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getMostRecentTypechecker}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=ignoreWarnings}) (214{val=(}) (40{val=GlobalTypeInfoCollector.INTERFACE_METHOD_NOT_IMPLEMENTED}) (234{val=,}) (40{val=TypeValidator.INTERFACE_METHOD_NOT_IMPLEMENTED}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testTypeMismatch}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=ignoreWarnings}) (214{val=(}) (40{val=NewTypeInference.MISTYPED_ASSIGN_RHS}) (234{val=,}) (40{val=TypeValidator.TYPE_MISMATCH_WARNING}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testSame}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=DiagnosticGroup})) (59 (800{val=ignored}) (204{val==}) (14 (304{val=new}) (43 (801{val=DiagnosticGroup})) (214{val=(}) (40{val=TypeCheck.INEXISTENT_PROPERTY}) (234{val=,}) (40{val=NewTypeInference.GLOBAL_THIS}) (234{val=,}) (40{val=NewTypeInference.INEXISTENT_PROPERTY}) (234{val=,}) (40{val=NewTypeInference.INVALID_ARGUMENT_TYPE}) (234{val=,}) (40{val=TypeValidator.TYPE_MISMATCH_WARNING}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=validator}) (235{val=.}) (802{val=expectCanAssignTo}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=loopVarNode}) (234{val=,}) (800{val=declaredType}) (234{val=,}) (800{val=actualType}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkArgument}) (214{val=(}) (32 (800{val=setKey}) (235{val=.}) (802{val=isSetterDef}) (216{val=()})) (234{val=,}) (800{val=setKey}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=newGeneratorBody}) (235{val=.}) (802{val=addChildBefore}) (214{val=(}) (800{val=varStatement}) (234{val=,}) (32 (800{val=newGeneratorBody}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=newGeneratorBody}) (235{val=.}) (802{val=addChildBefore}) (214{val=(}) (800{val=n}) (234{val=,}) (32 (800{val=newGeneratorBody}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isStringLiteralValue}) (214{val=(}) (800{val=ast}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=paramNodeMatches}) (235{val=.}) (802{val=set}) (214{val=(}) (800{val=paramIndex}) (234{val=,}) (800{val=ast}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isStringLiteralValue}) (214{val=(}) (800{val=ast}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isCompileTimeConstant}) (214{val=(}) (32 (800{val=traversal}) (235{val=.}) (802{val=getScope}) (216{val=()})) (234{val=,}) (800{val=argument}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=traversal}) (235{val=.}) (802{val=makeError}) (214{val=(}) (800{val=argument}) (234{val=,}) (800{val=CONST_NOT_STRING_LITERAL_ERROR}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=prop}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isStringLiteralValue}) (214{val=(}) (800{val=prop}) (215{val=)})) (215{val=)}) (8 (218{val={}) (500{val=continue;}) (219{val=}}))) (41 (329{val=return}) (800{val=violation}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isLhsOfAssign}) (214{val=(}) (800{val=propAccess}) (215{val=)})) (249{val=&&}) (36 (214{val=(}) (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isLiteralValue}) (214{val=(}) (32 (800{val=propAccess}) (235{val=.}) (802{val=getNext}) (216{val=()})) (234{val=,}) (9{val=false}) (215{val=)})) (250{val=||}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isStringLiteralValue}) (214{val=(}) (32 (800{val=propAccess}) (235{val=.}) (802{val=getNext}) (216{val=()})) (215{val=)}))) (215{val=)}))))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=lastPart}) (204{val==}) (32 (800{val=typeString}) (235{val=.}) (802{val=substring}) (214{val=(}) (27 (32 (800{val=typeString}) (235{val=.}) (802{val=lastIndexOf}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=index}) (204{val==}) (32 (800{val=name}) (235{val=.}) (802{val=indexOf}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkArgument}) (214{val=(}) (27 (27 (800{val=setKey}) (236{val===}) (500{val=null})) (250{val=||}) (32 (800{val=setKey}) (235{val=.}) (802{val=isSetterDef}) (216{val=()}))) (234{val=,}) (800{val=setKey}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=Path})) (800{val=path})))
(AST_ROOT_SC2NF (44 (43 (801{val=Path})) (800{val=path})))
(AST_ROOT_SC2NF (44 (43 (801{val=Path})) (800{val=path})))
(AST_ROOT_SC2NF (44 (43 (801{val=Path})) (800{val=path})))
(AST_ROOT_SC2NF (44 (43 (801{val=Path})) (800{val=path})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setSourceMapLocationMappings}) (214{val=(}) (44 (74 (43 (800{val=List})) (230{val=<}) (43 (40{val=SourceMap.LocationMapping})) (231{val=>})) (800{val=sourceMapLocationMappings})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=sourceMapLocationMappings})) (204{val==}) (800{val=sourceMapLocationMappings})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=locationMappings}) (235{val=.}) (802{val=add}) (214{val=(}) (14 (304{val=new}) (43 (40{val=SourceMap.LocationMapping})) (214{val=(}) (32 (800{val=mapping}) (235{val=.}) (802{val=getKey}) (216{val=()})) (234{val=,}) (32 (800{val=mapping}) (235{val=.}) (802{val=getValue}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=LocationMapping})) (231{val=>})) (800{val=sourceMapLocationMappings})))
(AST_ROOT_SC2NF (44 (43 (801{val=Path})) (800{val=path})))
(AST_ROOT_SC2NF (44 (43 (801{val=Path})) (800{val=path})))
(AST_ROOT_SC2NF (8 (218{val={}) (50 (305{val=switch}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=FOR_OF}) (226{val=:})) (21 (32 (802{val=visitForOf}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})) (500{val=break;}) (500{val=default:}) (500{val=break;}) (219{val=}})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=registry})) (204{val==}) (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeIRegistry}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (59 (800{val=actual}) (204{val==}) (32 (32 (32 (32 (14 (304{val=new}) (43 (40{val=CodePrinter.Builder})) (214{val=(}) (800{val=script}) (215{val=)})) (235{val=.}) (802{val=setCompilerOptions}) (214{val=(}) (800{val=options}) (215{val=)})) (235{val=.}) (802{val=setTypeRegistry}) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeIRegistry}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=build}) (216{val=()})) (235{val=.}) (802{val=trim}) (216{val=()}))))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=fnNode}) (235{val=.}) (802{val=getTypeI}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getTypeI}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=isPrototypeObject}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=isFunctionPrototypeType}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=srcObj}) (235{val=.}) (802{val=getTypeI}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=attrsType}) (204{val==}) (32 (800{val=attrs}) (235{val=.}) (802{val=getTypeI}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=srcObj}) (235{val=.}) (802{val=getTypeI}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ObjectTypeI})) (59 (800{val=targetType}) (204{val==}) (32 (32 (800{val=target}) (235{val=.}) (802{val=getTypeI}) (216{val=()})) (235{val=.}) (802{val=toMaybeObjectType}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=typeName}) (204{val==}) (32 (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=getTypeI}) (216{val=()})) (235{val=.}) (802{val=toString}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getTypeI}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getTypeI}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (27 (27 (27 (32 (800{val=n}) (235{val=.}) (802{val=getTypeI}) (216{val=()})) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (802{val=isKnown}) (214{val=(}) (800{val=n}) (215{val=)}))) (249{val=&&}) (32 (802{val=invalidDeref}) (214{val=(}) (800{val=n}) (215{val=)}))) (249{val=&&}) (38 (207{val=!}) (32 (802{val=isWhitelistedType}) (214{val=(}) (800{val=n}) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=thrown}) (204{val==}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=getTypeI}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=requirement}) (215{val=)}) (227{val=;})) (21 (7 (800{val=errorObjType}) (204{val==}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeIRegistry}) (216{val=()})) (235{val=.}) (802{val=getGlobalType}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=TemplateAstMatcher})) (59 (800{val=astMatcher}) (204{val==}) (14 (304{val=new}) (43 (801{val=TemplateAstMatcher})) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeIRegistry}) (216{val=()})) (234{val=,}) (800{val=templateRoot}) (234{val=,}) (800{val=typeMatchingStrategy}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=FunctionTypeI})) (800{val=restrictedCallType})))
(AST_ROOT_SC2NF (44 (43 (801{val=FunctionTypeI})) (800{val=restrictedCallType})))
(AST_ROOT_SC2NF (44 (43 (801{val=FunctionTypeI})) (800{val=functionType})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getTypeI}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=isAssertionCall}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (215{val=)})) (250{val=||}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getTypeIBeforeCast}) (216{val=()})) (242{val=!=}) (500{val=null}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getTypeI}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (36 (214{val=(}) (27 (27 (800{val=type}) (236{val===}) (500{val=null})) (250{val=||}) (32 (800{val=type}) (235{val=.}) (802{val=isSomeUnknownType}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getTypeI}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (36 (214{val=(}) (27 (27 (800{val=type}) (236{val===}) (500{val=null})) (250{val=||}) (32 (800{val=type}) (235{val=.}) (802{val=isUnknownType}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getTypeI}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (27 (27 (800{val=type}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=type}) (235{val=.}) (802{val=isTop}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=nativeObjectType}) (204{val==}) (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeIRegistry}) (216{val=()})) (235{val=.}) (802{val=getNativeType}) (214{val=(}) (40{val=JSTypeNative.OBJECT_TYPE}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=n}) (235{val=.}) (802{val=setTypeI}) (214{val=(}) (800{val=type}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=FunctionTypeI})) (800{val=getterType})))
(AST_ROOT_SC2NF (44 (43 (801{val=TypeIRegistry})) (800{val=typeRegistry})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=TypeSubject}) (214{val=(}) (44 (43 (801{val=FailureMetadata})) (800{val=failureMetadata})) (234{val=,}) (44 (43 (801{val=TypeI})) (800{val=type})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=failureMetadata}) (234{val=,}) (800{val=type}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=TypeI})) (800{val=type})))
(AST_ROOT_SC2NF (44 (43 (801{val=FunctionTypeI})) (800{val=getterType})))
(AST_ROOT_SC2NF (21 (32 (800{val=builder}) (235{val=.}) (802{val=setTypeRegistry}) (214{val=(}) (32 (802{val=getTypeIRegistry}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=StaticTypedScope})) (230{val=<}) (76 (233{val=?}) (332{val=extends}) (43 (800{val=TypeI}))) (231{val=>})) (800{val=scope})))
(AST_ROOT_SC2NF (31 (83{val=private}) (43 (801{val=String})) (802{val=formatTypeVar}) (214{val=(}) (44 (43 (801{val=TypeI})) (800{val=var})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=var}) (235{val=.}) (802{val=toAnnotationString}) (214{val=(}) (40{val=Nullability.IMPLICIT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=TypeIRegistry})) (800{val=registry})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=typeI}) (204{val==}) (32 (800{val=getPropLhs}) (235{val=.}) (802{val=getTypeI}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getTypeI}) (216{val=()})) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalStateException})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=n}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (802{val=Builder}) (214{val=(}) (44 (43 (801{val=TypeIRegistry})) (800{val=registry})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=registry})) (204{val==}) (800{val=registry})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=ObjectTypeI})) (800{val=objectType})))
(AST_ROOT_SC2NF (44 (78 (208{val=@}) (801{val=Nullable})) (43 (801{val=ObjectTypeI})) (800{val=referenceType})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=name}) (235{val=.}) (802{val=getTypeI}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=TypeIRegistry})) (800{val=typeRegistry})))
(AST_ROOT_SC2NF (44 (43 (801{val=TypeI})) (800{val=type})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=JSType})) (802{val=getReturnType}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (40{val=call.returnType}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=TypeI})) (800{val=type})))
(AST_ROOT_SC2NF (44 (43 (801{val=TypeI})) (800{val=type})))
(AST_ROOT_SC2NF (44 (43 (801{val=TypeI})) (800{val=type})))
(AST_ROOT_SC2NF (44 (43 (801{val=TypeI})) (800{val=type})))
(AST_ROOT_SC2NF (32 (32 (32 (32 (14 (304{val=new}) (43 (40{val=InvalidatingTypes.Builder})) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeIRegistry}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=addTypesInvalidForPropertyRenaming}) (216{val=()})) (235{val=.}) (802{val=addAllTypeMismatches}) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeMismatches}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=addAllTypeMismatches}) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getImplicitInterfaceUses}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=build}) (216{val=()})))
(AST_ROOT_SC2NF (44 (43 (801{val=TypeIRegistry})) (800{val=registry})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=applySingletonGetter}) (214{val=(}) (44 (43 (801{val=NominalTypeBuilder})) (800{val=classType})) (234{val=,}) (44 (43 (801{val=FunctionTypeI})) (800{val=getterType})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=assign}) (204{val==}) (32 (32 (802{val=withType}) (214{val=(}) (32 (800{val=IR}) (235{val=.}) (800{val=assign}) (214{val=(}) (800{val=copiedVarName}) (234{val=,}) (32 (800{val=varName}) (235{val=.}) (802{val=removeFirstChild}) (216{val=()})) (215{val=)})) (234{val=,}) (32 (800{val=varName}) (235{val=.}) (802{val=getTypeI}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=useSourceInfoFrom}) (214{val=(}) (800{val=varName}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=newThis}) (204{val==}) (32 (802{val=withType}) (214{val=(}) (32 (800{val=context}) (235{val=.}) (802{val=getScopedName}) (214{val=(}) (800{val=GENERATOR_THIS}) (215{val=)})) (234{val=,}) (32 (800{val=n}) (235{val=.}) (802{val=getTypeI}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=IR}) (235{val=.}) (802{val=returnNode}) (214{val=(}) (32 (802{val=withType}) (214{val=(}) (32 (800{val=IR}) (235{val=.}) (802{val=call}) (214{val=(}) (800{val=createGenerator}) (234{val=,}) (32 (802{val=withType}) (214{val=(}) (32 (800{val=genFuncName}) (235{val=.}) (802{val=cloneNode}) (216{val=()})) (234{val=,}) (32 (800{val=generatorFunction}) (235{val=.}) (802{val=getTypeI}) (216{val=()})) (215{val=)})) (234{val=,}) (800{val=program}) (215{val=)})) (234{val=,}) (800{val=originalGenReturnType}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (44 (43 (801{val=TypeIRegistry})) (800{val=typeRegistry})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getTypeI}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=TypeIRegistry})) (800{val=registry})))
(AST_ROOT_SC2NF (44 (43 (801{val=TypeIRegistry})) (800{val=registry})))
(AST_ROOT_SC2NF (44 (43 (801{val=FunctionTypeI})) (800{val=getterType})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=stringKey}) (204{val==}) (32 (802{val=withType}) (214{val=(}) (32 (800{val=IR}) (235{val=.}) (800{val=stringKey}) (214{val=(}) (800{val=name}) (234{val=,}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (234{val=,}) (32 (800{val=n}) (235{val=.}) (802{val=getTypeI}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=registry})) (204{val==}) (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeIRegistry}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=ImmutableMap})) (230{val=<}) (43 (800{val=String})) (234{val=,}) (43 (800{val=TypeI})) (231{val=>})) (800{val=typeVars})))
(AST_ROOT_SC2NF (44 (43 (801{val=TypeIRegistry})) (800{val=registry})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getTypeI}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (36 (214{val=(}) (27 (27 (800{val=type}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=type}) (235{val=.}) (802{val=isFunctionType}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (43 (801{val=TypeI})) (800{val=jsType})))
(AST_ROOT_SC2NF (44 (43 (801{val=TypeI})) (800{val=jsType})))
(AST_ROOT_SC2NF (60 (43 (40{val=CodePrinter.Builder})) (59 (800{val=builder}) (204{val==}) (32 (32 (32 (14 (304{val=new}) (43 (40{val=CodePrinter.Builder})) (214{val=(}) (800{val=externsRoot}) (215{val=)})) (235{val=.}) (802{val=setPrettyPrint}) (214{val=(}) (9{val=true}) (215{val=)})) (235{val=.}) (802{val=setOutputTypes}) (214{val=(}) (9{val=true}) (215{val=)})) (235{val=.}) (802{val=setTypeRegistry}) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeIRegistry}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=lit}) (235{val=.}) (802{val=setTypeI}) (214{val=(}) (32 (800{val=exportedObjectLit}) (235{val=.}) (802{val=getTypeI}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TemplateAstMatcher})) (59 (800{val=matcher}) (204{val==}) (14 (304{val=new}) (43 (801{val=TemplateAstMatcher})) (214{val=(}) (32 (800{val=lastCompiler}) (235{val=.}) (802{val=getTypeIRegistry}) (216{val=()})) (234{val=,}) (32 (800{val=templateRoot}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (800{val=typeMatchingStrategy}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=replacement}) (235{val=.}) (802{val=setTypeI}) (214{val=(}) (32 (800{val=call}) (235{val=.}) (802{val=getTypeI}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=expr}) (235{val=.}) (802{val=getTypeI}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (59 (800{val=mathDotPowCall}) (204{val==}) (32 (32 (802{val=withType}) (214{val=(}) (32 (800{val=IR}) (235{val=.}) (802{val=call}) (214{val=(}) (32 (32 (800{val=mathPow}) (235{val=.}) (802{val=get}) (216{val=()})) (235{val=.}) (802{val=cloneTree}) (216{val=()})) (234{val=,}) (800{val=left}) (234{val=,}) (800{val=right}) (215{val=)})) (234{val=,}) (32 (800{val=n}) (235{val=.}) (802{val=getTypeI}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=useSourceInfoIfMissingFromForTree}) (214{val=(}) (800{val=n}) (215{val=)}))))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getTypeI}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=lastCompiler}) (235{val=.}) (802{val=getTypeIRegistry}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=lastCompiler}) (235{val=.}) (802{val=getTypeIRegistry}) (216{val=()})))
(AST_ROOT_SC2NF (44 (43 (801{val=TypeI})) (800{val=type})))
(AST_ROOT_SC2NF (32 (32 (32 (32 (14 (304{val=new}) (43 (40{val=InvalidatingTypes.Builder})) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeIRegistry}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=disallowGlobalThis}) (216{val=()})) (235{val=.}) (802{val=addTypesInvalidForPropertyRenaming}) (216{val=()})) (235{val=.}) (802{val=addAllTypeMismatches}) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeMismatches}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=build}) (216{val=()})))
(AST_ROOT_SC2NF (44 (43 (801{val=TypeI})) (800{val=type})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=receiverType}) (204{val==}) (32 (802{val=determineReceiverType}) (214{val=(}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=registry})) (204{val==}) (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeIRegistry}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getTypeI}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=replacement}) (235{val=.}) (802{val=setTypeI}) (214{val=(}) (32 (802{val=getNativeStringType}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=newName}) (235{val=.}) (802{val=setTypeI}) (214{val=(}) (32 (800{val=child}) (235{val=.}) (802{val=getTypeI}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=TypeI})) (802{val=getType}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Builder})) (802{val=setTypeRegistry}) (214{val=(}) (44 (43 (801{val=TypeIRegistry})) (800{val=registry})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=registry})) (204{val==}) (800{val=registry})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (43 (801{val=ObjectTypeI})) (802{val=prototypeOrInstance}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=declarePrototypeProperty}) (214{val=(}) (44 (43 (801{val=String})) (800{val=name})) (234{val=,}) (44 (43 (801{val=TypeI})) (800{val=type})) (234{val=,}) (44 (43 (801{val=Node})) (800{val=defSite})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=declareInstanceProperty}) (214{val=(}) (44 (43 (801{val=String})) (800{val=name})) (234{val=,}) (44 (43 (801{val=TypeI})) (800{val=type})) (234{val=,}) (44 (43 (801{val=Node})) (800{val=defSite})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=declareConstructorProperty}) (214{val=(}) (44 (43 (801{val=String})) (800{val=name})) (234{val=,}) (44 (43 (801{val=TypeI})) (800{val=type})) (234{val=,}) (44 (43 (801{val=Node})) (800{val=defSite})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=TypeI})) (800{val=type})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (802{val=getType}) (214{val=(}) (800{val=typeObj}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (802{val=getType}) (214{val=(}) (800{val=obj}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=objlitType}) (204{val==}) (32 (802{val=getType}) (214{val=(}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (802{val=getType}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (249{val=&&}) (32 (32 (32 (800{val=n}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (249{val=&&}) (32 (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=getTypeI}) (216{val=()})) (235{val=.}) (802{val=isStructuralInterface}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=recvType}) (204{val==}) (32 (802{val=getType}) (214{val=(}) (800{val=recv}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=TypeI})) (800{val=type})))
(AST_ROOT_SC2NF (44 (43 (801{val=TypeI})) (800{val=type})))
(AST_ROOT_SC2NF (44 (43 (801{val=ObjectTypeI})) (800{val=objectType})))
(AST_ROOT_SC2NF (44 (43 (801{val=ObjectTypeI})) (800{val=objectType})))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getTypeI}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=typeRegistry})) (204{val==}) (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeIRegistry}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=n})) (226{val=:}) (800{val=nodeList}) (215{val=)}) (8 (218{val={}) (21 (7 (40{val=n.typei}) (204{val==}) (11 (214{val=(}) (43 (800{val=TypeI})) (215{val=)}) (32 (800{val=in}) (235{val=.}) (802{val=readObject}) (216{val=()})))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=n})) (226{val=:}) (800{val=nodeList}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=out}) (235{val=.}) (802{val=writeObject}) (214{val=(}) (40{val=n.typei}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=dst}) (235{val=.}) (802{val=setTypeI}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=typei})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Nullable})) (83{val=public}) (83{val=final}) (43 (800{val=JSType})) (802{val=getJSTypeBeforeCast}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=JSType})) (215{val=)}) (32 (802{val=getTypeIBeforeCast}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=FunctionType})) (802{val=getOwnerFunction}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=TypeI})) (59 (800{val=type}) (204{val==}) (32 (800{val=firstArg}) (235{val=.}) (802{val=getTypeI}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (78 (208{val=@}) (801{val=Nullable})) (43 (801{val=TypeI})) (800{val=typeI})))
(AST_ROOT_SC2NF (27 (32 (800{val=n}) (235{val=.}) (802{val=getTypeI}) (216{val=()})) (236{val===}) (500{val=null})))
(AST_ROOT_SC2NF (44 (43 (801{val=URI})) (800{val=path})))
(AST_ROOT_SC2NF (44 (43 (801{val=URI})) (800{val=path})))
(AST_ROOT_SC2NF (44 (43 (801{val=URI})) (800{val=path})))
(AST_ROOT_SC2NF (44 (43 (801{val=URI})) (800{val=path})))
(AST_ROOT_SC2NF (44 (43 (801{val=URI})) (800{val=path})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=List})) (230{val=<}) (76 (233{val=?}) (332{val=extends}) (43 (800{val=LocationMapping}))) (231{val=>})) (800{val=sourceMapLocationMappings})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=locationMappings}) (235{val=.}) (802{val=add}) (214{val=(}) (14 (304{val=new}) (43 (40{val=SourceMap.PrefixLocationMapping})) (214{val=(}) (32 (800{val=mapping}) (235{val=.}) (802{val=getKey}) (216{val=()})) (234{val=,}) (32 (800{val=mapping}) (235{val=.}) (802{val=getValue}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (43 (801{val=URI})) (800{val=path})))
(AST_ROOT_SC2NF (44 (43 (801{val=URI})) (800{val=path})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setSourceMapLocationMappings}) (214{val=(}) (44 (74 (43 (800{val=List})) (230{val=<}) (76 (233{val=?}) (332{val=extends}) (43 (40{val=SourceMap.LocationMapping}))) (231{val=>})) (800{val=sourceMapLocationMappings})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=sourceMapLocationMappings})) (204{val==}) (800{val=sourceMapLocationMappings})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (32 (800{val=c}) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=windowInExterns}) (204{val==}) (9{val=true})) (227{val=;})) (500{val=continue;}) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=abstract}) (43 (801{val=MostRecentTypechecker})) (802{val=getMostRecentTypechecker}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=compiler})) (235{val=.}) (802{val=setMostRecentTypechecker}) (214{val=(}) (40{val=MostRecentTypechecker.OTI}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=addTypes})) (204{val==}) (32 (40{val=MostRecentTypechecker.OTI}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getMostRecentTypechecker}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=setMostRecentTypechecker}) (214{val=(}) (40{val=MostRecentTypechecker.OTI}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=compiler})) (204{val==}) (800{val=compiler})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=addTypes})) (204{val==}) (32 (40{val=MostRecentTypechecker.OTI}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getMostRecentTypechecker}) (216{val=()})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=mostRecentTypechecker}) (204{val==}) (40{val=compilerState.mostRecentTypeChecker})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mostRecentTypeChecker})) (204{val==}) (40{val=compiler.mostRecentTypechecker})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compiler}) (235{val=.}) (802{val=setMostRecentTypechecker}) (214{val=(}) (40{val=MostRecentTypechecker.OTI}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=compiler})) (204{val==}) (800{val=compiler})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=addTypes})) (204{val==}) (32 (40{val=MostRecentTypechecker.OTI}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getMostRecentTypechecker}) (216{val=()})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=addTypes})) (204{val==}) (32 (40{val=MostRecentTypechecker.OTI}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getMostRecentTypechecker}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (32 (800{val=c}) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=WINDOW_NAME}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=windowInExterns}) (204{val==}) (9{val=true})) (227{val=;})) (500{val=continue;}) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.MISSING_OVERRIDE}) (234{val=,}) (40{val=CheckLevel.WARNING}) (215{val=)})) (227{val=;})) (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.STRICT_MISSING_PROPERTIES}) (234{val=,}) (40{val=CheckLevel.WARNING}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=prevUsedRenameMap}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=reusePreviouslyUsedVariableMap}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=validator}) (235{val=.}) (802{val=expectIterable}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=actualYieldType}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SymbolTable})) (59 (800{val=table}) (204{val==}) (32 (802{val=createSymbolTable}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (32 (800{val=c}) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=windowInExterns}) (204{val==}) (9{val=true})) (227{val=;})) (500{val=continue;}) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (40{val=ModuleLoader.ResolutionMode})) (802{val=getModuleResolutionMode}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=moduleResolutionMode})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=ObjectType})) (800{val=objectType})))
(AST_ROOT_SC2NF (44 (43 (801{val=ObjectType})) (800{val=objectType})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=iterableType}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=typeParam}) (204{val==}) (32 (32 (800{val=iterableType}) (235{val=.}) (802{val=getTemplateTypeMap}) (216{val=()})) (235{val=.}) (802{val=getResolvedTemplateType}) (214{val=(}) (32 (800{val=registry}) (235{val=.}) (802{val=getIterableTemplate}) (216{val=()})) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=newType}) (204{val==}) (32 (32 (800{val=objType}) (235{val=.}) (802{val=getTemplateTypeMap}) (216{val=()})) (235{val=.}) (802{val=getResolvedTemplateType}) (214{val=(}) (32 (800{val=registry}) (235{val=.}) (802{val=getIterableTemplate}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=defineSlot}) (214{val=(}) (800{val=astParameter}) (234{val=,}) (800{val=functionNode}) (234{val=,}) (800{val=paramType}) (234{val=,}) (800{val=inferred}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=defineSlot}) (214{val=(}) (800{val=fnNameNode}) (234{val=,}) (800{val=fnNode}) (234{val=,}) (32 (800{val=fnNode}) (235{val=.}) (802{val=getJSType}) (216{val=()})) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=candidate}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=defineSlot}) (214{val=(}) (800{val=candidate}) (234{val=,}) (32 (800{val=candidate}) (235{val=.}) (802{val=getParent}) (216{val=()})) (234{val=,}) (32 (802{val=getNativeType}) (214{val=(}) (800{val=NO_TYPE}) (215{val=)})) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=defineSlot}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=parent}) (234{val=,}) (800{val=valueType}) (234{val=,}) (800{val=inferred}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isFunctionDeclaration}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=defineSlot}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=functionType}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=boolean}) (59 (800{val=inferred}) (204{val==}) (27 (800{val=keyType}) (236{val===}) (500{val=null}))) (227{val=;})) (21 (32 (802{val=defineSlot}) (214{val=(}) (800{val=keyNode}) (234{val=,}) (800{val=objLit}) (234{val=,}) (800{val=qualifiedName}) (234{val=,}) (800{val=keyType}) (234{val=,}) (800{val=inferred}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (800{val=type}) (235{val=.}) (802{val=matchesNumberContext}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=type}) (235{val=.}) (802{val=matchesStringContext}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=type}) (235{val=.}) (802{val=matchesStringContext}) (216{val=()})))))
(AST_ROOT_SC2NF (60 (43 (801{val=FunctionType})) (59 (800{val=makeIteratorType}) (204{val==}) (32 (800{val=registry}) (235{val=.}) (802{val=createFunctionType}) (214{val=(}) (11 (214{val=(}) (43 (800{val=JSType})) (215{val=)}) (800{val=iteratorType})) (234{val=,}) (32 (800{val=paramBuilder}) (235{val=.}) (802{val=build}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=isSubtype}) (214{val=(}) (11 (214{val=(}) (43 (800{val=JSType})) (215{val=)}) (800{val=that})) (234{val=,}) (32 (800{val=ImplCache}) (235{val=.}) (802{val=createWithoutStructuralTyping}) (216{val=()})) (234{val=,}) (40{val=SubtypingMode.NORMAL}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (43 (801{val=Path})) (800{val=path})))
(AST_ROOT_SC2NF (44 (43 (801{val=Path})) (800{val=path})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=LocationMapping})) (231{val=>})) (800{val=sourceMapLocationMappings})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setSourceMapLocationMappings}) (214{val=(}) (44 (74 (43 (800{val=List})) (230{val=<}) (43 (40{val=SourceMap.LocationMapping})) (231{val=>})) (800{val=sourceMapLocationMappings})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=sourceMapLocationMappings})) (204{val==}) (800{val=sourceMapLocationMappings})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=Path})) (800{val=path})))
(AST_ROOT_SC2NF (44 (43 (801{val=Path})) (800{val=path})))
(AST_ROOT_SC2NF (44 (43 (801{val=Path})) (800{val=path})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=locationMappings}) (235{val=.}) (802{val=add}) (214{val=(}) (14 (304{val=new}) (43 (40{val=SourceMap.LocationMapping})) (214{val=(}) (32 (800{val=mapping}) (235{val=.}) (802{val=getKey}) (216{val=()})) (234{val=,}) (32 (800{val=mapping}) (235{val=.}) (802{val=getValue}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (43 (801{val=Path})) (800{val=path})))
(AST_ROOT_SC2NF (44 (43 (801{val=Path})) (800{val=path})))
(AST_ROOT_SC2NF (21 (32 (802{val=visitImport}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=EvalMode})) (59 (800{val=newMode}) (204{val==}) (16 (800{val=useEval}) (233{val=?}) (40{val=EvalMode.EVAL}) (226{val=:}) (40{val=EvalMode.NORMAL}))) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ClosureBundler})) (214{val=(}) (800{val=transpiler}) (234{val=,}) (800{val=newMode}) (234{val=,}) (800{val=sourceUrl}) (234{val=,}) (800{val=path}) (234{val=,}) (800{val=sourceMapCache}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=dereferencePointer}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (800{val=scope}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=tightenTypeAfterDereference}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (800{val=scope}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (27 (800{val=DEFAULT_EXTERNS}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=externs})) (234{val=,}) (800{val=js}) (234{val=,}) (800{val=description}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (800{val=DEFAULT_EXTERNS}) (234{val=,}) (800{val=js}) (234{val=,}) (800{val=diagnosticType}) (234{val=,}) (800{val=isError}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (800{val=DEFAULT_EXTERNS}) (234{val=,}) (800{val=js}) (234{val=,}) (800{val=description}) (234{val=,}) (800{val=isError}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testGenerator_yieldAll_string}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testGenerator_yieldAll1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testGenerator_return2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testGenerator_noDeclaredReturnType3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testGenerator_returnsIterator2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testGenerator_returnsIterable2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testGenerator3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testForOf_StringObject2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testForOf_StringObject1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testForOf_string1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testForOf_array3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testForOf_wrongLoopVarType6a}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testForOf_wrongLoopVarType5}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testForOf_wrongLoopVarType4a}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArrayLitSpread}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (43 (801{val=T})) (802{val=getTypeOfThis}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=StaticTypedScope})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (800{val=scope})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (62 (800{val=sym}) (328{val=instanceof}) (43 (800{val=StaticTypedSlot}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (36 (214{val=(}) (11 (214{val=(}) (74 (43 (800{val=StaticTypedSlot})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (215{val=)}) (800{val=sym})) (215{val=)})) (235{val=.}) (802{val=isTypeInferred}) (216{val=()})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (62 (800{val=s}) (328{val=instanceof}) (43 (800{val=StaticTypedScope}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (36 (214{val=(}) (11 (214{val=(}) (74 (43 (800{val=StaticTypedScope})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (215{val=)}) (800{val=s})) (215{val=)})) (235{val=.}) (802{val=getTypeOfThis}) (216{val=()})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (62 (800{val=sym}) (328{val=instanceof}) (43 (800{val=StaticTypedSlot}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (36 (214{val=(}) (11 (214{val=(}) (74 (43 (800{val=StaticTypedSlot})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (215{val=)}) (800{val=sym})) (215{val=)})) (235{val=.}) (802{val=getType}) (216{val=()})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=StaticTypedScope})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (800{val=scope})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=StaticTypedScope})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (800{val=typeEnv})))
(AST_ROOT_SC2NF (31 (74 (43 (800{val=StaticTypedScope})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (802{val=getDeclarationScope}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=FlowScope})) (802{val=createChildFlowScope}) (214{val=(}) (44 (74 (43 (800{val=StaticTypedScope})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (800{val=scope})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=T})) (802{val=getTypeOfThis}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=StaticTypedScope})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (800{val=scope})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=StaticTypedScope})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (800{val=scope})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=StaticTypedScope})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (800{val=scope})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=StaticTypedScope})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (800{val=scope})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=StaticTypedScope})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (800{val=scope})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=StaticTypedScope})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (800{val=scope})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=StaticTypedScope})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (800{val=scope})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=StaticTypedSlot})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (800{val=slot})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=StaticTypedScope})) (230{val=<}) (43 (800{val=JSType})) (231{val=>})) (800{val=scope})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (801{val=Override})) (74 (43 (800{val=StaticTypedScope})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (802{val=getScope}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isAssignAdd}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=updateScopeForTypeChange}) (214{val=(}) (800{val=scope}) (234{val=,}) (800{val=left}) (234{val=,}) (800{val=leftType}) (234{val=,}) (800{val=type}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=visitParameterList}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=functionType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=visitParameterList}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=fnType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (61 (350{val=while}) (214{val=(}) (27 (27 (40{val=current.parent}) (242{val=!=}) (500{val=null})) (249{val=&&}) (27 (40{val=current.lastSlot}) (236{val===}) (40{val=current.parent.lastSlot}))) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=current}) (204{val==}) (40{val=current.parent})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=n}) (235{val=.}) (802{val=isCall}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isYield}) (216{val=()}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=dereferencePointer}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (800{val=scope}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=updateTypeOfParameters}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=fnType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=updateTypeOfArguments}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=fnType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=HotSwapCompilerPass})) (802{val=create}) (214{val=(}) (44 (83{val=final}) (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=EarlyEs6ToEs3Converter})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=updateTypeOfParameters}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=fnType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (40{val=options.checksOnly})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=es6ForOf}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isAliasDefinition}) (214{val=(}) (800{val=decl}) (215{val=)})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testWarning}) (214{val=(}) (32 (802{val=lines}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (40{val=ConvertToTypedInterface.CONSTANT_WITHOUT_EXPLICIT_TYPE}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isAssignAdd}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=updateScopeForAssignment}) (214{val=(}) (800{val=scope}) (234{val=,}) (800{val=left}) (234{val=,}) (800{val=leftType}) (234{val=,}) (800{val=type}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=flowScope}) (235{val=.}) (802{val=inferSlotType}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=type}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=blind}) (204{val==}) (32 (802{val=newScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=child}) (235{val=.}) (802{val=inferSlotType}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (802{val=getNativeNumberType}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=optimizesToSameScope}) (214{val=(}) (800{val=that}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=output}) (204{val==}) (32 (800{val=input}) (235{val=.}) (802{val=createChildFlowScope}) (214{val=(}) (32 (800{val=scopeCreator}) (235{val=.}) (802{val=createScope}) (214{val=(}) (800{val=root}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=informed}) (204{val==}) (32 (800{val=blindScope}) (235{val=.}) (802{val=createChildFlowScope}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=assign}) (235{val=.}) (802{val=useSourceInfoIfMissingFromForTree}) (214{val=(}) (800{val=member}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=scope}) (204{val==}) (32 (802{val=traverse}) (214{val=(}) (32 (800{val=name}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (800{val=scope}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=parentModuleCanSeeSymbolsDeclaredInChildren}) (204{val==}) (9{val=false})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (59 (800{val=moduleNameRegexList}) (204{val==}) (40{val=options.modulesToPrintAfterEachPassRegexList})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=CrossModuleMethodMotion})) (214{val=(}) (800{val=compiler}) (234{val=,}) (32 (800{val=compiler}) (235{val=.}) (802{val=getCrossModuleIdGenerator}) (216{val=()})) (234{val=,}) (40{val=options.removeUnusedPrototypePropertiesInExterns}) (234{val=,}) (40{val=options.crossModuleCodeMotionNoStubMethods}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=CrossModuleCodeMotion})) (214{val=(}) (800{val=compiler}) (234{val=,}) (32 (800{val=compiler}) (235{val=.}) (802{val=getModuleGraph}) (216{val=()})) (234{val=,}) (40{val=options.parentModuleCanSeeSymbolsDeclaredInChildren}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=create}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=RescopeGlobalSymbols})) (214{val=(}) (800{val=compiler}) (234{val=,}) (40{val=options.renamePrefixNamespace}) (234{val=,}) (40{val=options.renamePrefixNamespaceAssumeCrossModuleNames}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (800{val=REGEXP_TYPE}) (235{val=.}) (802{val=canBeCalled}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (800{val=obj}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=obj}) (235{val=.}) (802{val=isPrototypeObject}) (216{val=()}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=subtype}) (235{val=.}) (802{val=isBottom}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=isVoidable}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=isNullable}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=isNoObjectType}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=type}) (235{val=.}) (802{val=isEnumElement}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=type}) (235{val=.}) (802{val=isPrototypeObject}) (216{val=()})))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (800{val=callClassType}) (235{val=.}) (802{val=isBottom}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=callClassType}) (235{val=.}) (802{val=isSomeUnknownType}) (216{val=()})))))
(AST_ROOT_SC2NF (27 (27 (27 (27 (800{val=type}) (236{val===}) (500{val=null})) (250{val=||}) (32 (800{val=type}) (235{val=.}) (802{val=isUnknownType}) (216{val=()}))) (250{val=||}) (32 (800{val=type}) (235{val=.}) (802{val=isUnresolved}) (216{val=()}))) (250{val=||}) (32 (800{val=type}) (235{val=.}) (802{val=isTop}) (216{val=()}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (38 (207{val=!}) (32 (800{val=type}) (235{val=.}) (802{val=isTop}) (216{val=()}))) (249{val=&&}) (36 (214{val=(}) (27 (32 (800{val=type}) (235{val=.}) (802{val=isNullable}) (216{val=()})) (250{val=||}) (32 (800{val=type}) (235{val=.}) (802{val=isVoidable}) (216{val=()}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=targetType}) (235{val=.}) (802{val=isUnknownType}) (216{val=()})) (250{val=||}) (32 (800{val=targetType}) (235{val=.}) (802{val=isUnresolved}) (216{val=()})) (250{val=||}) (32 (800{val=targetType}) (235{val=.}) (802{val=isTop}) (216{val=()})) (250{val=||}) (32 (800{val=targetType}) (235{val=.}) (802{val=isEquivalentTo}) (214{val=(}) (32 (800{val=registry}) (235{val=.}) (802{val=getNativeType}) (214{val=(}) (40{val=JSTypeNative.OBJECT_TYPE}) (215{val=)})) (215{val=)}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=JSType})) (59 (800{val=type}) (204{val==}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getJSType}) (216{val=()})) (235{val=.}) (802{val=restrictByNotNullOrUndefined}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (32 (800{val=type}) (235{val=.}) (802{val=isBottom}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=JSType})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getJSType}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (27 (27 (800{val=type}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=type}) (235{val=.}) (802{val=isTop}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=ft}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=functionNode}) (235{val=.}) (802{val=setJSType}) (214{val=(}) (32 (800{val=ft}) (235{val=.}) (802{val=convertMethodToFunction}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=body}) (235{val=.}) (802{val=isBottom}) (216{val=()})) (250{val=||}) (32 (800{val=body}) (235{val=.}) (802{val=isEquivalentTo}) (214{val=(}) (32 (802{val=getObjectType}) (216{val=()})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=continue;}) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (32 (800{val=result}) (235{val=.}) (802{val=isBottom}) (216{val=()})) (233{val=?}) (32 (802{val=getUnknownType}) (216{val=()})) (226{val=:}) (800{val=result})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=type}) (235{val=.}) (802{val=isEnumElement}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=type}) (235{val=.}) (802{val=getEnumeratedTypeOfEnumElement}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (800{val=type}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=type}) (235{val=.}) (802{val=containsArray}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=objType}) (235{val=.}) (802{val=isPrototypeObject}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=constructor}) (204{val==}) (32 (800{val=objType}) (235{val=.}) (802{val=getOwnerFunction}) (216{val=()}))) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (7 (800{val=constructor}) (204{val==}) (32 (800{val=objType}) (235{val=.}) (802{val=getConstructor}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=type}) (235{val=.}) (802{val=isEnumElement}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=type}) (235{val=.}) (802{val=isEnumObject}) (216{val=()})) (250{val=||}) (32 (800{val=type}) (235{val=.}) (802{val=isBoxableScalar}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=type}) (235{val=.}) (802{val=isEnumElement}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getTypesToSkipForType}) (214{val=(}) (32 (800{val=type}) (235{val=.}) (802{val=getEnumeratedTypeOfEnumElement}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=t}) (235{val=.}) (802{val=isObjectType}) (216{val=()}))) (250{val=||}) (32 (800{val=t}) (235{val=.}) (802{val=isTop}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=type}) (235{val=.}) (802{val=isTop}) (216{val=()})) (250{val=||}) (32 (800{val=type}) (235{val=.}) (802{val=isUnknownType}) (216{val=()}))))
(AST_ROOT_SC2NF (27 (32 (800{val=type}) (235{val=.}) (802{val=isTop}) (216{val=()})) (250{val=||}) (32 (800{val=type}) (235{val=.}) (802{val=isUnknownType}) (216{val=()}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (800{val=isAbstract}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=isAbstract}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (802{val=treatThisTypesAsCovariant}) (214{val=(}) (800{val=other}) (234{val=,}) (800{val=implicitImplCache}) (215{val=)})) (249{val=&&}) (32 (22 (315{val=this}) (235{val=.}) (800{val=call})) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (40{val=other.call}) (234{val=,}) (800{val=implicitImplCache}) (234{val=,}) (800{val=subtypingMode}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=ObjectType})) (802{val=getPrototypeProperty}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getPrototype}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=isReturnTypeInferred}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (40{val=call.returnTypeInferred}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=JSType})) (802{val=getReturnType}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (40{val=call.returnType}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=canBeCalled}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setDict}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=propAccess}) (204{val==}) (40{val=PropAccess.DICT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setStruct}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=propAccess}) (204{val==}) (40{val=PropAccess.STRUCT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (32 (800{val=restricted}) (235{val=.}) (802{val=isBottom}) (216{val=()})) (233{val=?}) (800{val=type}) (226{val=:}) (800{val=restricted})) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (27 (800{val=retType}) (242{val=!=}) (500{val=null})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=retType}) (235{val=.}) (802{val=isBottom}) (216{val=()})))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=funType}) (235{val=.}) (802{val=isInterface}) (216{val=()})))))
(AST_ROOT_SC2NF (31 (43 (801{val=ObjectType})) (802{val=getReferencedObjTypeInternal}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=referencedObjType}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (43 (801{val=JSType})) (802{val=getReferencedTypeInternal}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=referencedType}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (32 (800{val=receiverType}) (235{val=.}) (802{val=meetWith}) (214{val=(}) (800{val=type}) (215{val=)})) (235{val=.}) (802{val=isBottom}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=matchesSymbolContext}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=matchesStringContext}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=matchesObjectContext}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=matchesNumberContext}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=isConstructor}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (27 (800{val=type}) (236{val===}) (500{val=null})) (250{val=||}) (32 (800{val=type}) (235{val=.}) (802{val=isUnknownType}) (216{val=()}))) (250{val=||}) (32 (800{val=type}) (235{val=.}) (802{val=isTop}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (16 (800{val=allowLooseMatches}) (233{val=?}) (40{val=MatchResult.LOOSE_MATCH}) (226{val=:}) (40{val=MatchResult.NO_MATCH})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=type}) (236{val===}) (500{val=null})) (233{val=?}) (500{val=null}) (226{val=:}) (32 (800{val=type}) (235{val=.}) (802{val=autoboxAndGetObject}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=propdef}) (235{val=.}) (802{val=setJSType}) (214{val=(}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=visitImport}) (214{val=(}) (32 (32 (800{val=t}) (235{val=.}) (802{val=getInput}) (216{val=()})) (235{val=.}) (802{val=getPath}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=isApplied}) (214{val=(}) (44 (43 (801{val=CompilerOptions})) (800{val=options})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=options.crossModuleMethodMotion}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=isApplied}) (214{val=(}) (44 (43 (801{val=CompilerOptions})) (800{val=options})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=options.crossModuleCodeMotion}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=ensureTyped}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=ensureTyped}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=name}) (234{val=,}) (800{val=valueType}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=ensureTyped}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=ensureTyped}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=ensureTyped}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=type}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=ensureTyped}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=iterableNode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (40{val=options.checksOnly})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=lateConvertEs6ToEs3}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=recordUnresolvedTypes}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=unresolvedNamedTypes}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=scope}) (234{val=,}) (800{val=namedType}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=topScope}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=regenerateGlobalTypedScope}) (214{val=(}) (800{val=compiler}) (234{val=,}) (32 (800{val=root}) (235{val=.}) (802{val=getParent}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getTypeRegistry}) (216{val=()})) (235{val=.}) (802{val=resolveTypesInScope}) (214{val=(}) (800{val=topScope}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=whitespaceOnlyPasses}) (216{val=()})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (32 (800{val=options}) (235{val=.}) (802{val=needsTranspilationFrom}) (214{val=(}) (40{val=FeatureSet.ES6}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=transpileAndDontCheck}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (800{val=FeatureSet})) (59 (800{val=features}) (204{val==}) (11 (214{val=(}) (43 (800{val=FeatureSet})) (215{val=)}) (32 (800{val=script}) (235{val=.}) (802{val=getProp}) (214{val=(}) (40{val=Node.FEATURE_SET}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=body}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=body}) (235{val=.}) (802{val=hasChildren}) (216{val=()})))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (36 (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (249{val=&&}) (32 (800{val=n}) (235{val=.}) (802{val=isSyntheticBlock}) (216{val=()}))) (215{val=)})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isScript}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=block}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=block}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=stmt}) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (250{val=||}) (36 (214{val=(}) (27 (32 (800{val=stmt}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=stmt}) (235{val=.}) (802{val=hasChildren}) (216{val=()})))) (215{val=)}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=expr}) (235{val=.}) (802{val=isName}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.CATCH}) (234{val=,}) (800{val=expr}) (234{val=,}) (800{val=body}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=finallyBody}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=tryBody}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=body}) (235{val=.}) (802{val=setIsAddedBlock}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.DEFAULT_CASE}) (234{val=,}) (800{val=body}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=checkState}) (214{val=(}) (32 (802{val=mayBeExpression}) (214{val=(}) (800{val=cond}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.WHILE}) (234{val=,}) (800{val=cond}) (234{val=,}) (800{val=body}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=checkState}) (214{val=(}) (32 (802{val=mayBeExpression}) (214{val=(}) (800{val=cond}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.DO}) (234{val=,}) (800{val=body}) (234{val=,}) (800{val=cond}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkState}) (214{val=(}) (32 (802{val=mayBeExpression}) (214{val=(}) (800{val=cond}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=then}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (40{val=Token.IF}) (234{val=,}) (800{val=cond}) (234{val=,}) (800{val=then}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (27 (32 (800{val=body}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (250{val=||}) (32 (802{val=mayBeExpression}) (214{val=(}) (800{val=body}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isExprResult}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (800{val=favorsCommaOverSemiColon})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=block}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkArgument}) (214{val=(}) (32 (800{val=blockNode}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (32 (800{val=blockNode}) (235{val=.}) (802{val=hasChildren}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=markAllPropsRead}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=visitBlock}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (32 (800{val=target}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isScript}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (32 (800{val=target}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (32 (800{val=target}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isModuleBody}) (216{val=()})))))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=isVar}) (204{val==}) (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isNameDeclaration}) (214{val=(}) (800{val=parent}) (215{val=)})) (249{val=&&}) (32 (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (802{val=isGoogScopeFunctionBody}) (214{val=(}) (800{val=enclosingFunctionBody}) (215{val=)})) (249{val=&&}) (32 (800{val=scopeRoot}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (32 (800{val=scopeRoot}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isFunction}) (216{val=()})))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))) (250{val=||}) (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=hasChildren}) (216{val=()}))) (250{val=||}) (38 (207{val=!}) (32 (802{val=isGoogModuleCall}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (215{val=)})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (27 (32 (800{val=n}) (235{val=.}) (802{val=hasChildren}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=isCatch}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (27 (32 (800{val=addingRoot}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (250{val=||}) (32 (800{val=addingRoot}) (235{val=.}) (802{val=isModuleBody}) (216{val=()})) (250{val=||}) (32 (800{val=addingRoot}) (235{val=.}) (802{val=isScript}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (27 (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (249{val=&&}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (242{val=!=}) (500{val=null}))) (249{val=&&}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isFunction}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=block}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=node}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isRoot}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isScript}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isModuleBody}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=block}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isControlStructureCodeBlock}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=c}) (215{val=)})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=c}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (27 (27 (32 (800{val=body}) (235{val=.}) (802{val=getNext}) (216{val=()})) (236{val===}) (500{val=null})) (249{val=&&}) (32 (800{val=body}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))) (234{val=,}) (800{val=body}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=isFunction}) (216{val=()}))) (250{val=||}) (38 (207{val=!}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=subtree}) (235{val=.}) (802{val=isScript}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=subtree}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=subtree}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=statement}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))) (250{val=||}) (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=hasChildren}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=block}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=block}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isTry}) (216{val=()})) (249{val=&&}) (27 (32 (32 (800{val=block}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (236{val===}) (800{val=block}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (27 (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isArrowFunction}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=parent}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (32 (802{val=getRootNode}) (216{val=()})) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (249{val=&&}) (32 (32 (802{val=getRootNode}) (216{val=()})) (235{val=.}) (802{val=hasOneChild}) (216{val=()})) (249{val=&&}) (32 (32 (32 (802{val=getRootNode}) (216{val=()})) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=isCatch}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=block}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=child})) (226{val=:}) (32 (800{val=node}) (235{val=.}) (802{val=children}) (216{val=()})) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=child}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=blocks}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=child}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=loneBlocks}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (249{val=&&}) (27 (32 (800{val=loneBlocks}) (235{val=.}) (802{val=peek}) (216{val=()})) (236{val===}) (800{val=n}))))
(AST_ROOT_SC2NF (36 (214{val=(}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=isScript}) (216{val=()})) (250{val=||}) (36 (214{val=(}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=parent}) (235{val=.}) (802{val=isSyntheticBlock}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=parent}) (235{val=.}) (802{val=isAddedBlock}) (216{val=()})))) (215{val=)}))) (215{val=)})))
(AST_ROOT_SC2NF (27 (32 (800{val=scopeRoot}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=scopeRoot}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isFunction}) (216{val=()}))))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (800{val=setFunction}) (235{val=.}) (802{val=hasChildren}) (216{val=()}))) (250{val=||}) (38 (207{val=!}) (32 (32 (800{val=setFunction}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))) (250{val=||}) (38 (207{val=!}) (32 (32 (800{val=setFunction}) (235{val=.}) (802{val=getSecondChild}) (216{val=()})) (235{val=.}) (802{val=isParamList}) (216{val=()})))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=getFunction}) (235{val=.}) (802{val=hasChildren}) (216{val=()}))) (250{val=||}) (38 (207{val=!}) (32 (32 (800{val=getFunction}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (24 (303{val=for}) (214{val=(}) (227{val=;}) (27 (38 (207{val=!}) (32 (800{val=currentParent}) (235{val=.}) (802{val=isScript}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=currentParent}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))) (227{val=;}) (7 (800{val=current}) (204{val==}) (800{val=currentParent})) (234{val=,}) (7 (800{val=currentParent}) (204{val==}) (32 (800{val=currentParent}) (235{val=.}) (802{val=getParent}) (216{val=()}))) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (27 (27 (27 (32 (800{val=n}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (249{val=&&}) (27 (800{val=parent}) (242{val=!=}) (500{val=null}))) (249{val=&&}) (32 (800{val=parent}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isFunction}) (216{val=()})))))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isScript}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=validateBlock}) (214{val=(}) (800{val=body}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (802{val=validateExpression}) (214{val=(}) (800{val=body}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (249{val=&&}) (32 (800{val=n}) (235{val=.}) (802{val=hasChildren}) (216{val=()})) (249{val=&&}) (32 (802{val=isReturnTypeNullable}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (215{val=)})) (249{val=&&}) (38 (207{val=!}) (32 (802{val=hasSingleThrow}) (214{val=(}) (800{val=n}) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (250{val=||}) (36 (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=hasChildren}) (216{val=()})))) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (27 (27 (800{val=next}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=next}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))))
(AST_ROOT_SC2NF (21 (32 (802{val=checkArgument}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=node}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getFunctionBody}) (214{val=(}) (800{val=node}) (215{val=)})) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=originalBody}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))))
(AST_ROOT_SC2NF (32 (800{val=block}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=body}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (234{val=,}) (800{val=body}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=block}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=jumpBlock}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=block}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=catchBody}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=context}) (235{val=.}) (802{val=transpileUnmarkedBlock}) (214{val=(}) (16 (27 (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isAddedBlock}) (216{val=()}))) (233{val=?}) (800{val=n}) (226{val=:}) (32 (800{val=IR}) (235{val=.}) (802{val=block}) (214{val=(}) (800{val=n}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=newGeneratorHoistBlock}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (234{val=,}) (800{val=newGeneratorHoistBlock}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (32 (800{val=node}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isExprResult}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=node}) (235{val=.}) (802{val=getGrandparent}) (216{val=()})) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (249{val=&&}) (32 (802{val=isClinitMethod}) (214{val=(}) (32 (32 (800{val=node}) (235{val=.}) (802{val=getGrandparent}) (216{val=()})) (235{val=.}) (802{val=getParent}) (216{val=()})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (38 (207{val=!}) (36 (214{val=(}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=isScript}) (216{val=()})) (250{val=||}) (36 (214{val=(}) (27 (27 (27 (800{val=grandparent}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=grandparent}) (235{val=.}) (802{val=isFunction}) (216{val=()}))) (249{val=&&}) (32 (800{val=parent}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))) (215{val=)}))) (215{val=)}))))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (32 (800{val=body}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))) (250{val=||}) (32 (800{val=body}) (235{val=.}) (802{val=hasChildren}) (216{val=()}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=body}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))) (250{val=||}) (38 (207{val=!}) (32 (800{val=body}) (235{val=.}) (802{val=hasOneChild}) (216{val=()}))) (250{val=||}) (38 (207{val=!}) (32 (32 (800{val=body}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=isReturn}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (27 (38 (207{val=!}) (800{val=isArrow})) (249{val=&&}) (38 (207{val=!}) (800{val=isSignature})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=bodyNode}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=irNode}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))))
(AST_ROOT_SC2NF (27 (32 (800{val=n}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (249{val=&&}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getGrandparent}) (216{val=()})) (235{val=.}) (802{val=isFunction}) (216{val=()})))))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=ifBlock}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (234{val=,}) (800{val=ifBlock}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=block}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (234{val=,}) (800{val=block}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=block}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (234{val=,}) (800{val=block}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=block}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (234{val=,}) (800{val=block}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=innerBlock}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (234{val=,}) (800{val=innerBlock}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=block}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (234{val=,}) (800{val=block}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=block}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (234{val=,}) (800{val=block}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=block}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (234{val=,}) (800{val=block}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=functionBody}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getFunctionBody}) (214{val=(}) (800{val=n}) (215{val=)}))) (227{val=;})) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=functionBody}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=node}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.SCRIPT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (27 (800{val=deleteWhitespaceBefore}) (249{val=&&}) (27 (800{val=parent}) (242{val=!=}) (500{val=null}))) (249{val=&&}) (36 (214{val=(}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=isScript}) (216{val=()})) (250{val=||}) (32 (800{val=parent}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))) (215{val=)}))))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=parentNode}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (800{val=parent}) (242{val=!=}) (500{val=null})) (249{val=&&}) (36 (214{val=(}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (250{val=||}) (32 (800{val=parent}) (235{val=.}) (802{val=isScript}) (216{val=()}))) (215{val=)}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=isScript}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=body}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=body}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))))
(AST_ROOT_SC2NF (27 (32 (800{val=s}) (235{val=.}) (802{val=isFunctionScope}) (216{val=()})) (249{val=&&}) (32 (32 (32 (800{val=s}) (235{val=.}) (802{val=getRootNode}) (216{val=()})) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))))
(AST_ROOT_SC2NF (27 (32 (800{val=n}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (32 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getFunctionBody}) (214{val=(}) (800{val=n}) (215{val=)})) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))))
(AST_ROOT_SC2NF (32 (800{val=c}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=c}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=caseBody}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (234{val=,}) (800{val=caseBody}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=labeledStatement}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()}))))
(AST_ROOT_SC2NF (32 (800{val=last}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=newChild}) (235{val=.}) (802{val=isNormalBlock}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=tryMergeBlock}) (214{val=(}) (800{val=newChild}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=calleeTypeI}) (204{val==}) (32 (802{val=checkNotNull}) (214{val=(}) (32 (800{val=callee}) (235{val=.}) (802{val=getJSType}) (216{val=()})) (234{val=,}) (800{val=callNode}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertFalse}) (214{val=(}) (32 (800{val=numbers}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (800{val=EVAL_ERROR_TYPE}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=languageOutIsAtLeast}) (214{val=(}) (40{val=polyfill.polyfillVersion}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=traversal}) (235{val=.}) (802{val=report}) (214{val=(}) (800{val=node}) (234{val=,}) (800{val=INSUFFICIENT_OUTPUT_VERSION_ERROR}) (234{val=,}) (800{val=name}) (234{val=,}) (32 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=getLanguageOut}) (216{val=()})) (235{val=.}) (802{val=toString}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (32 (32 (800{val=options}) (235{val=.}) (802{val=getLanguageOut}) (216{val=()})) (235{val=.}) (802{val=toFeatureSet}) (216{val=()})) (235{val=.}) (802{val=contains}) (214{val=(}) (800{val=ES6}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=optimizeToEs6}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=options.dartPass}) (249{val=&&}) (38 (207{val=!}) (32 (32 (32 (800{val=options}) (235{val=.}) (802{val=getLanguageOut}) (216{val=()})) (235{val=.}) (802{val=toFeatureSet}) (216{val=()})) (235{val=.}) (802{val=contains}) (214{val=(}) (800{val=ES6}) (215{val=)})))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=checks}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=dartSuperAccessorsPass}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (32 (32 (800{val=options}) (235{val=.}) (802{val=getLanguageOut}) (216{val=()})) (235{val=.}) (802{val=toFeatureSet}) (216{val=()})) (235{val=.}) (802{val=contains}) (214{val=(}) (40{val=FeatureSet.ES5}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FeatureSet})) (59 (800{val=languageOutFeatures}) (204{val==}) (32 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=getLanguageOut}) (216{val=()})) (235{val=.}) (802{val=toFeatureSet}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FeatureSet})) (59 (800{val=languageOutFeatures}) (204{val==}) (32 (32 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (802{val=getLanguageOut}) (216{val=()})) (235{val=.}) (802{val=toFeatureSet}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (32 (32 (800{val=options}) (235{val=.}) (802{val=getLanguageOut}) (216{val=()})) (235{val=.}) (802{val=toFeatureSet}) (216{val=()})) (235{val=.}) (802{val=contains}) (214{val=(}) (40{val=FeatureSet.ES5}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidOptionsException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=incrementalCheckMode}) (236{val===}) (40{val=IncrementalCheckMode.GENERATE_IJS})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (27 (22 (315{val=this}) (235{val=.}) (800{val=quoteKeywordProperties})) (250{val=||}) (27 (800{val=languageOut}) (236{val===}) (40{val=LanguageMode.ECMASCRIPT3}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (32 (32 (802{val=getLanguageIn}) (216{val=()})) (235{val=.}) (802{val=toFeatureSet}) (216{val=()})) (235{val=.}) (802{val=has}) (214{val=(}) (800{val=feature}) (215{val=)})) (249{val=&&}) (38 (207{val=!}) (32 (32 (32 (802{val=getLanguageOut}) (216{val=()})) (235{val=.}) (802{val=toFeatureSet}) (216{val=()})) (235{val=.}) (802{val=has}) (214{val=(}) (800{val=feature}) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (32 (32 (802{val=getLanguageIn}) (216{val=()})) (235{val=.}) (802{val=toFeatureSet}) (216{val=()})) (235{val=.}) (802{val=contains}) (214{val=(}) (800{val=languageLevel}) (215{val=)})) (249{val=&&}) (38 (207{val=!}) (32 (32 (32 (802{val=getLanguageOut}) (216{val=()})) (235{val=.}) (802{val=toFeatureSet}) (216{val=()})) (235{val=.}) (802{val=contains}) (214{val=(}) (800{val=languageLevel}) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkState}) (214{val=(}) (27 (800{val=language}) (242{val=!=}) (40{val=LanguageMode.NO_TRANSPILE})) (215{val=)})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=languageIn})) (204{val==}) (800{val=language})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=languageOut})) (204{val==}) (800{val=language})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=outputTypes}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=Format.TYPED}) (227{val=;})) (219{val=}}))) (25 (313{val=if}) (214{val=(}) (27 (800{val=prettyPrint}) (250{val=||}) (27 (32 (800{val=options}) (235{val=.}) (802{val=getLanguageOut}) (216{val=()})) (236{val===}) (40{val=LanguageMode.ECMASCRIPT6_TYPED}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=Format.PRETTY}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (40{val=Format.COMPACT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArrowception}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testArrowFunctionInObject}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=test}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=compiler})) (204{val==}) (800{val=compiler})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=thisContextStack})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayDeque})) (232{val=<>})) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=private}) (802{val=LocalScopeBuilder}) (214{val=(}) (44 (43 (801{val=TypedScope})) (800{val=scope})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=scope}) (215{val=)}) (227{val=;})) (21 (7 (800{val=thisTypeForProperties}) (204{val==}) (32 (802{val=getThisTypeForCollectingProperties}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=hasErrors}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=isFalse}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (802{val=inTypeSummary}) (214{val=(}) (800{val=error}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=CheckLevel.WARNING}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=outputFeatureSet})) (204{val==}) (800{val=featureSet})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=JsOverlay})) (83{val=public}) (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (802{val=asList}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=JsArrayList})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=objectSet}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=key}) (234{val=,}) (800{val=value}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=HotSwapCompilerPass})) (802{val=create}) (214{val=(}) (44 (83{val=final}) (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Es7ToEs6Converter})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (802{val=GlobalScopeBuilder}) (214{val=(}) (44 (43 (801{val=TypedScope})) (800{val=scope})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=scope}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=GlobalScopeBuilder})) (59 (800{val=scopeBuilder}) (204{val==}) (14 (304{val=new}) (43 (801{val=GlobalScopeBuilder})) (214{val=(}) (800{val=globalScope}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ModulePath})) (214{val=(}) (32 (802{val=normalize}) (214{val=(}) (32 (800{val=ModuleNames}) (235{val=.}) (802{val=escapePath}) (214{val=(}) (32 (800{val=pathResolver}) (235{val=.}) (802{val=apply}) (214{val=(}) (800{val=path}) (215{val=)})) (215{val=)})) (234{val=,}) (800{val=moduleRootPaths}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=visitImport}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=path}) (204{val==}) (32 (800{val=ModuleNames}) (235{val=.}) (802{val=escapePath}) (214{val=(}) (800{val=moduleAddress}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=path}) (204{val==}) (32 (800{val=ModuleNames}) (235{val=.}) (802{val=escapePath}) (214{val=(}) (800{val=moduleAddress}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=private}) (39{val=void}) (802{val=skipOctalDigits}) (216{val=()}) (8 (218{val={}) (61 (350{val=while}) (214{val=(}) (32 (802{val=isOctalDigit}) (214{val=(}) (32 (802{val=peekChar}) (216{val=()})) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=nextChar}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=currentInfo}) (235{val=.}) (802{val=isConstant}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=currentInfo}) (235{val=.}) (802{val=setConstant}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})) (21 (7 (800{val=populated}) (204{val==}) (9{val=true})) (227{val=;})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=jsdoc}) (235{val=.}) (802{val=isConstant}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=isFalse}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (59 (800{val=isConst}) (204{val==}) (27 (32 (32 (800{val=nameNode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (800{val=isConst}) (216{val=()})) (250{val=||}) (32 (802{val=isExportLhs}) (214{val=(}) (800{val=nameNode}) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (27 (800{val=jsdoc}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=jsdoc}) (235{val=.}) (802{val=hasConstAnnotation}) (216{val=()}))) (215{val=)})))))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Token})) (800{val=type})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=String})) (800{val=name})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=String})) (800{val=name})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (800{val=parent}) (236{val===}) (500{val=null})) (250{val=||}) (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=createsScope}) (214{val=(}) (800{val=n}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=JSType})) (800{val=ownerType})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=currentModule}) (235{val=.}) (802{val=setModuleType}) (214{val=(}) (40{val=ModuleType.COMMON_JS}) (234{val=,}) (800{val=t}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (500{val=return;}) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=m}) (235{val=.}) (802{val=getGoogNamespaces}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=containsExactly}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=m}) (235{val=.}) (802{val=getGoogNamespaces}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=m}) (235{val=.}) (802{val=getGoogNamespaces}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=containsExactly}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=m}) (235{val=.}) (802{val=getGoogNamespaces}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=containsExactly}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=m}) (235{val=.}) (802{val=getGoogNamespaces}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=containsExactly}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=m}) (235{val=.}) (802{val=getGoogNamespaces}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=containsExactly}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (78 (208{val=@}) (801{val=Nullable})) (43 (801{val=JSType})) (800{val=ownerType})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=shouldDescend}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=parent}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=Token})) (800{val=type})))
(AST_ROOT_SC2NF (44 (43 (801{val=String})) (800{val=name})))
(AST_ROOT_SC2NF (44 (43 (801{val=String})) (800{val=name})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (32 (800{val=registry}) (235{val=.}) (802{val=createOptionalType}) (214{val=(}) (800{val=STRING_TYPE}) (215{val=)})) (234{val=,}) (32 (800{val=info}) (235{val=.}) (802{val=getParameterType}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=JSDocInfo})) (59 (800{val=info}) (204{val==}) (32 (802{val=parse}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertTypeEquals}) (214{val=(}) (32 (800{val=registry}) (235{val=.}) (802{val=createOptionalType}) (214{val=(}) (800{val=NUMBER_TYPE}) (215{val=)})) (234{val=,}) (32 (800{val=info}) (235{val=.}) (802{val=getParameterType}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=expandObjectLitAssignment}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=root}) (234{val=,}) (40{val=export.scope}) (215{val=)})) (227{val=;})) (500{val=return;}) (219{val=}})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=JsMethod}) (214{val=(}) (80 (800{val=name}) (204{val==}) (45{val=STRING_CONSTANT})) (234{val=,}) (80 (800{val=namespace}) (204{val==}) (45{val=STRING_CONSTANT})) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=validator}) (235{val=.}) (802{val=expectStringOrNumber}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=leftType}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (800{val=parent}) (236{val===}) (500{val=null})) (250{val=||}) (38 (207{val=!}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=createsScope}) (214{val=(}) (800{val=n}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Token})) (800{val=type})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=String})) (800{val=name})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=String})) (800{val=name})))
(AST_ROOT_SC2NF (44 (43 (801{val=JSType})) (800{val=ownerType})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=JsMethod}) (214{val=(}) (80 (800{val=namespace}) (204{val==}) (45{val=STRING_CONSTANT})) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=JsMethod}) (214{val=(}) (80 (800{val=name}) (204{val==}) (45{val=STRING_CONSTANT})) (234{val=,}) (80 (800{val=namespace}) (204{val==}) (45{val=STRING_CONSTANT})) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=EvalMode})) (59 (800{val=newMode}) (204{val==}) (16 (800{val=useEval}) (233{val=?}) (40{val=EvalMode.EVAL}) (226{val=:}) (40{val=EvalMode.NORMAL}))) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ClosureBundler})) (214{val=(}) (800{val=transpiler}) (234{val=,}) (800{val=es6ModuleTranspiler}) (234{val=,}) (800{val=newMode}) (234{val=,}) (800{val=sourceUrl}) (234{val=,}) (800{val=path}) (234{val=,}) (800{val=sourceMapCache}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=EvalMode})) (59 (800{val=newMode}) (204{val==}) (16 (800{val=useEval}) (233{val=?}) (40{val=EvalMode.EVAL}) (226{val=:}) (40{val=EvalMode.NORMAL}))) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ClosureBundler})) (214{val=(}) (800{val=transpiler}) (234{val=,}) (800{val=newMode}) (234{val=,}) (800{val=sourceUrl}) (234{val=,}) (800{val=path}) (234{val=,}) (800{val=sourceMapCache}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=restRhs}) (204{val==}) (32 (802{val=newName}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=rhsResultName})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=int}) (59 (800{val=baseHash}) (204{val==}) (48 (349{val=super}) (235{val=.}) (802{val=hashCode}) (216{val=()}))) (227{val=;})) (25 (313{val=if}) (214{val=(}) (32 (800{val=templateTypes}) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=baseHash}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=Objects}) (235{val=.}) (802{val=hash}) (214{val=(}) (800{val=templateTypes}) (234{val=,}) (800{val=baseHash}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverse}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=rootNode}) (234{val=,}) (14 (304{val=new}) (43 (801{val=CoverageInstrumentationCallback})) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=instrumentationData}) (234{val=,}) (800{val=reach}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=abstract}) (74 (43 (40{val=ImmutableSet.Builder})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (802{val=es6ImportSpecifiersBuilder}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=abstract}) (74 (43 (40{val=ImmutableSet.Builder})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (802{val=requiredTypesBuilder}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=abstract}) (74 (43 (40{val=ImmutableSet.Builder})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (802{val=googNamespacesBuilder}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testSettersForbidden2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=parseError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testGettersForbidden4}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=parseError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testGettersForbidden3}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=parseError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testGettersForbidden2}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=parseError}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (7 (800{val=mode}) (204{val==}) (40{val=LanguageMode.ECMASCRIPT3})) (227{val=;})) (21 (7 (800{val=strictMode}) (204{val==}) (800{val=SLOPPY})) (227{val=;})) (21 (7 (800{val=isIdeMode}) (204{val==}) (9{val=false})) (227{val=;})) (21 (7 (800{val=expectedFeatures}) (204{val==}) (40{val=FeatureSet.BARE_MINIMUM})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=testWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=MISPLACED_ANNOTATION}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=validateDefaultValue}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=info}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setTranspileEs6ModulesToCjsModules}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=isVarArgsParameter}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=parameter})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=parameter}) (235{val=.}) (802{val=isVarArgs}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isParsed}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=parse}) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (21 (32 (800{val=root}) (235{val=.}) (802{val=setInputId}) (214{val=(}) (800{val=inputId}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (800{val=root}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=root})) (204{val==}) (800{val=root})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=originalRoot}) (204{val==}) (32 (800{val=input}) (235{val=.}) (802{val=getAstRoot}) (214{val=(}) (315{val=this}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=input}) (235{val=.}) (802{val=getAstRoot}) (214{val=(}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=findDeps}) (235{val=.}) (802{val=process}) (214{val=(}) (32 (800{val=input}) (235{val=.}) (802{val=getAstRoot}) (214{val=(}) (315{val=this}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=root}) (204{val==}) (32 (800{val=input}) (235{val=.}) (802{val=getAstRoot}) (214{val=(}) (315{val=this}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (800{val=root}) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (40{val=options.checksOnly})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=es6RewriteRestAndSpread}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=matchedNodeInfo}) (204{val==}) (32 (800{val=MatchedNodeInfo}) (235{val=.}) (802{val=create}) (214{val=(}) (800{val=node}) (234{val=,}) (32 (802{val=isInClosurizedFile}) (214{val=(}) (800{val=node}) (234{val=,}) (14 (304{val=new}) (43 (801{val=NodeMetadata})) (214{val=(}) (800{val=compiler}) (215{val=)})) (215{val=)})) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=validateRest}) (214{val=(}) (800{val=type}) (234{val=,}) (800{val=c}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=validateRest}) (214{val=(}) (800{val=type}) (234{val=,}) (800{val=c}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=validateRest}) (214{val=(}) (40{val=Token.PARAM_LIST}) (234{val=,}) (800{val=c}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=disabled_testForOf4}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testTypes}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (802{val=AbstractCommandLineRunner}) (216{val=()}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (40{val=System.in}) (234{val=,}) (40{val=System.out}) (234{val=,}) (40{val=System.err}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=shouldDeclareOnGlobalThis}) (204{val==}) (27 (800{val=isGlobalVar}) (249{val=&&}) (36 (214{val=(}) (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isNameDeclaration}) (214{val=(}) (800{val=parent}) (215{val=)})) (250{val=||}) (32 (800{val=parent}) (235{val=.}) (802{val=isFunction}) (216{val=()}))) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=maybeThisType}) (204{val==}) (32 (32 (32 (800{val=info}) (235{val=.}) (802{val=getThisType}) (216{val=()})) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=scope}) (234{val=,}) (800{val=typeRegistry}) (215{val=)})) (235{val=.}) (802{val=restrictByNotNullOrUndefined}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=returnTypeExpr}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=returnType}) (204{val==}) (32 (800{val=returnTypeExpr}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=scope}) (234{val=,}) (800{val=typeRegistry}) (215{val=)}))) (227{val=;})) (21 (7 (800{val=returnTypeInferred}) (204{val==}) (9{val=false})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=maybeThisType}) (204{val==}) (32 (32 (32 (800{val=info}) (235{val=.}) (802{val=getThisType}) (216{val=()})) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=templateScope}) (234{val=,}) (800{val=typeRegistry}) (215{val=)})) (235{val=.}) (802{val=restrictByNotNullOrUndefined}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=returnTypeExpr}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=returnType}) (204{val==}) (32 (800{val=returnTypeExpr}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=templateScope}) (234{val=,}) (800{val=typeRegistry}) (215{val=)}))) (227{val=;})) (21 (7 (800{val=returnTypeInferred}) (204{val==}) (9{val=false})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (800{val=transpiledFeatures}) (234{val=,}) (14 (304{val=new}) (43 (801{val=GeneratorFunctionsTranspiler})) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=processTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (800{val=transpiledFeatures}) (234{val=,}) (14 (304{val=new}) (43 (801{val=GeneratorFunctionsTranspiler})) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (800{val=transpiledFeatures}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (800{val=transpiledFeatures}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (800{val=transpiledFeatures}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (800{val=transpiledFeatures}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (800{val=transpiledFeatures}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (800{val=transpiledFeatures}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (800{val=transpiledFeatures}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (800{val=transpiledFeatures}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (800{val=transpiledFeatures}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (800{val=transpiledFeatures}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=transpiledFeatures}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=compiler}) (235{val=.}) (802{val=hasHaltingErrors}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=markFeaturesAsTranspiledAway}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=features}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=checkState}) (214{val=(}) (32 (800{val=source}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (234{val=,}) (800{val=source}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=returnType}) (204{val==}) (32 (802{val=explicitReturnExpected}) (214{val=(}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=create}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Es6RewriteImportPaths})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (49 (326{val=case}) (800{val=RESOLVE_IMPORT_PATHS}) (226{val=:})))
(AST_ROOT_SC2NF (60 (43 (800{val=SourceFile})) (59 (800{val=expectedEs6}) (204{val==}) (32 (800{val=SourceFile}) (235{val=.}) (802{val=fromCode}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=HotSwapCompilerPass})) (802{val=create}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Es6RewriteClass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testSpreadLibInjection}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (22 (32 (802{val=getLastCompiler}) (216{val=()})) (235{val=.}) (800{val=injected})) (215{val=)})) (235{val=.}) (802{val=containsExactly}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=JSType})) (59 (800{val=referencedType}) (204{val==}) (32 (802{val=getReferencedType}) (216{val=()}))) (227{val=;})) (25 (313{val=if}) (214{val=(}) (27 (800{val=referencedType}) (236{val===}) (315{val=this})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=handleTypeCycle}) (214{val=(}) (800{val=reporter}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (315{val=this}) (236{val===}) (800{val=that})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=final}) (39{val=boolean}) (802{val=isGlobalThisType}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (315{val=this}) (236{val===}) (32 (800{val=registry}) (235{val=.}) (802{val=getNativeType}) (214{val=(}) (40{val=JSTypeNative.GLOBAL_THIS}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=final}) (39{val=boolean}) (802{val=isUnresolvedOrResolvedUnknown}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=isNoResolvedType}) (216{val=()})) (250{val=||}) (27 (32 (802{val=isNamedType}) (216{val=()})) (249{val=&&}) (32 (802{val=isUnknownType}) (216{val=()})))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=objectType}) (235{val=.}) (802{val=getImplicitPrototype}) (216{val=()})) (236{val===}) (800{val=OBJECT_TYPE})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=defineVar}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=defineVars}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=context}) (235{val=.}) (802{val=isAsyncContext}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=convertAsyncFunction}) (214{val=(}) (800{val=context}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=maybeThisType}) (204{val==}) (32 (32 (32 (800{val=info}) (235{val=.}) (802{val=getThisType}) (216{val=()})) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=scope}) (234{val=,}) (800{val=typeRegistry}) (215{val=)})) (235{val=.}) (802{val=restrictByNotNullOrUndefined}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=returnTypeExpr}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=returnType}) (204{val==}) (32 (800{val=returnTypeExpr}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=scope}) (234{val=,}) (800{val=typeRegistry}) (215{val=)}))) (227{val=;})) (21 (7 (800{val=returnTypeInferred}) (204{val==}) (9{val=false})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=seenNames}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=nameNode}) (235{val=.}) (802{val=getQualifiedName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=seenNames}) (235{val=.}) (802{val=contains}) (214{val=(}) (32 (800{val=nameNode}) (235{val=.}) (802{val=getQualifiedName}) (216{val=()})) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=RemovalType.REMOVE_ALL}) (227{val=;})) (219{val=}}))) (21 (32 (800{val=jsdocNode}) (235{val=.}) (802{val=setJSDocInfo}) (214{val=(}) (32 (802{val=getAllTypeJSDoc}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (40{val=RemovalType.REMOVE_RHS}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (14 (304{val=new}) (43 (801{val=RemoveCode})) (214{val=(}) (800{val=compiler}) (215{val=)})) (215{val=)})) (227{val=;})))
