{|329 return|802 getCumPct|214 (|800 Character|235 .|802 valueOf|214 (|800 v|215 )|215 )|227 ;|219 }|-1
{|329 return|802 getCumFreq|214 (|800 Character|235 .|802 valueOf|214 (|800 v|215 )|215 )|227 ;|219 }|-1
{|329 return|802 getPct|214 (|800 Character|235 .|802 valueOf|214 (|800 v|215 )|215 )|227 ;|219 }|-1
{|329 return|802 getCount|214 (|800 Character|235 .|802 valueOf|214 (|800 v|215 )|215 )|227 ;|219 }|-1
public|802 IntegratorException|214 (|83 final|801 Throwable|800 cause|215 )|218 {|349 super|214 (|800 cause|215 )|227 ;|219 }|-1
final|39 double|800 initialStepSize|-1
final|801 SecondOrderDifferentialEquations|800 equations|-1
public|802 DerivativeException|214 (|83 final|801 Throwable|800 cause|215 )|218 {|349 super|214 (|800 cause|215 )|227 ;|219 }|-1
super|214 (|800 METHOD_NAME|234 ,|800 minStep|234 ,|800 maxStep|234 ,|800 vecAbsoluteTolerance|234 ,|800 vecRelativeTolerance|215 )|227 ;|-1
super|214 (|800 METHOD_NAME|234 ,|800 minStep|234 ,|800 maxStep|234 ,|800 scalAbsoluteTolerance|234 ,|800 scalRelativeTolerance|215 )|227 ;|-1
{|349 super|214 (|45 STRING_CONSTANT|234 ,|800 c|234 ,|800 a|234 ,|800 b|234 ,|304 new|801 GillStepInterpolator|216 ()|234 ,|800 step|215 )|227 ;|219 }|-1
{|349 super|214 (|45 STRING_CONSTANT|234 ,|800 c|234 ,|800 a|234 ,|800 b|234 ,|304 new|801 MidpointStepInterpolator|216 ()|234 ,|800 step|215 )|227 ;|219 }|-1
{|349 super|214 (|45 STRING_CONSTANT|234 ,|800 c|234 ,|800 a|234 ,|800 b|234 ,|304 new|801 EulerStepInterpolator|216 ()|234 ,|800 step|215 )|227 ;|219 }|-1
{|349 super|214 (|45 STRING_CONSTANT|234 ,|800 c|234 ,|800 a|234 ,|800 b|234 ,|304 new|801 ThreeEighthesStepInterpolator|216 ()|234 ,|800 step|215 )|227 ;|219 }|-1
{|349 super|214 (|45 STRING_CONSTANT|234 ,|800 c|234 ,|800 a|234 ,|800 b|234 ,|304 new|801 ClassicalRungeKuttaStepInterpolator|216 ()|234 ,|800 step|215 )|227 ;|219 }|-1
integ|235 .|802 addStepHandler|214 (|304 new|801 KeplerHandler|214 (|800 pb|215 )|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|304 new|801 VariableHandler|216 ()|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|304 new|801 KeplerHandler|214 (|800 pb|215 )|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|304 new|801 KeplerHandler|214 (|800 pb|215 )|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 cm|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|304 new|801 KeplerStepHandler|214 (|800 pb|215 )|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|304 new|801 VariableStepHandler|216 ()|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|304 new|801 KeplerStepHandler|214 (|800 pb|215 )|215 )|227 ;|-1
integrator|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|304 new|801 VariableHandler|216 ()|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|304 new|801 KeplerHandler|214 (|800 pb|215 )|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|304 new|801 KeplerHandler|214 (|800 pb|215 )|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
integ|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|-1
stepHandlers|204 =|304 new|801 ArrayList|230 <|800 StepHandler|231 >|216 ()|227 ;|-1
ODEIntegrator|800 integrator|-1
createRegression|216 ()|235 .|802 newSampleData|214 (|800 y|234 ,|800 x|234 ,|800 omega|215 )|227 ;|-1
createRegression|216 ()|235 .|802 newSampleData|214 (|800 y|234 ,|800 x|234 ,|800 omega|215 )|227 ;|-1
CombinedEventsManager|800 manager|204 =|802 addEndTimeChecker|214 (|800 t0|234 ,|800 t|234 ,|800 eventsHandlersManager|215 )|227 ;|-1
CombinedEventsManager|800 manager|204 =|802 addEndTimeChecker|214 (|800 t0|234 ,|800 t|234 ,|800 eventsHandlersManager|215 )|227 ;|-1
{|800 maxValueError|204 =|34 NUMBER_CONSTANT|227 ;|800 maxTimeError|204 =|34 NUMBER_CONSTANT|227 ;|800 lastError|204 =|34 NUMBER_CONSTANT|227 ;|800 expectedStepStart|204 =|40 Double.NaN|227 ;|219 }|-1
CompositeFormat|800 cf|204 =|304 new|801 ComplexFormat|216 ()|227 ;|-1
CompositeFormat|800 cf|204 =|800 ComplexFormat|235 .|802 getInstance|214 (|802 getLocale|216 ()|215 )|227 ;|-1
this|235 .|800 step|204 =|800 Math|235 .|802 abs|214 (|800 step|215 )|227 ;|-1
stepSize|204 =|800 forward|233 ?|800 step|226 :|201 -|800 step|227 ;|-1
this|235 .|800 step|204 =|800 Math|235 .|802 abs|214 (|800 step|215 )|227 ;|-1
stepSize|204 =|800 forward|233 ?|800 step|226 :|201 -|800 step|227 ;|-1
this|235 .|800 step|204 =|800 Math|235 .|802 abs|214 (|800 step|215 )|227 ;|-1
{|313 if|214 (|800 qrt|236 ==|500 null|215 )|218 {|320 throw|304 new|801 IllegalStateException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|219 }|-1
{|800 System|235 .|802 arraycopy|214 (|801 b|221 [|800 i|222 ]|234 ,|34 NUMBER_CONSTANT|234 ,|800 root|235 .|802 getDataRef|216 ()|221 [|801 index|221 [|800 i|222 ]|222 ]|234 ,|34 NUMBER_CONSTANT|234 ,|800 rank|215 )|227 ;|219 }|-1
{|304 new|801 QRDecompositionImpl|216 ()|235 .|802 isNonSingular|216 ()|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|207 !|802 isNonSingular|216 ()|215 )|218 {|320 throw|304 new|801 InvalidMatrixException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|207 !|802 isNonSingular|216 ()|215 )|218 {|320 throw|304 new|801 InvalidMatrixException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
cachedQT|236 ==|500 null|-1
RealMatrix|800 sse|204 =|800 u|235 .|802 transpose|216 ()|235 .|802 multiply|214 (|802 getOmegaInverse|216 ()|215 )|235 .|802 multiply|214 (|800 u|215 )|227 ;|-1
{|801 RealMatrix|800 XTX|204 =|800 X|235 .|802 transpose|216 ()|235 .|802 multiply|214 (|800 X|215 )|227 ;|329 return|304 new|801 LUDecompositionImpl|214 (|800 XTX|215 )|235 .|802 getInverse|216 ()|227 ;|219 }|-1
if|214 (|207 !|802 isNonSingular|216 ()|215 )|218 {|320 throw|304 new|801 RankDeficientMatrixException|216 ()|227 ;|219 }|-1
if|214 (|207 !|802 isNonSingular|216 ()|215 )|218 {|320 throw|304 new|801 RankDeficientMatrixException|216 ()|227 ;|219 }|-1
{|320 throw|304 new|801 InvalidMatrixException|214 (|45 STRING_CONSTANT|234 ,|304 new|801 Object|221 [|34 NUMBER_CONSTANT|222 ]|215 )|227 ;|219 }|-1
MatrixIndexException|800 ex|204 =|304 new|801 MatrixIndexException|214 (|800 msg|234 ,|304 new|801 Object|221 [|34 NUMBER_CONSTANT|222 ]|215 )|227 ;|-1
if|214 (|800 singular|215 )|218 {|320 throw|304 new|801 SingularMatrixException|216 ()|227 ;|219 }|-1
if|214 (|800 singular|215 )|218 {|320 throw|304 new|801 SingularMatrixException|216 ()|227 ;|219 }|-1
if|214 (|800 singular|215 )|218 {|320 throw|304 new|801 SingularMatrixException|216 ()|227 ;|219 }|-1
if|214 (|207 !|800 matrix|235 .|802 isSquare|216 ()|215 )|218 {|320 throw|304 new|801 NonSquareMatrixException|214 (|800 matrix|235 .|802 getRowDimension|216 ()|234 ,|800 matrix|235 .|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
if|214 (|207 !|800 matrix|235 .|802 isSquare|216 ()|215 )|218 {|320 throw|304 new|801 NonSquareMatrixException|214 (|800 matrix|235 .|802 getRowDimension|216 ()|234 ,|800 matrix|235 .|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
if|214 (|207 !|802 isSquare|216 ()|215 )|218 {|320 throw|304 new|801 NonSquareMatrixException|214 (|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 IndexOutOfBoundsException|800 e|215 )|218 {|802 checkIndex|214 (|800 index|215 )|227 ;|219 }|-1
{|320 throw|304 new|801 InvalidMatrixException|214 (|45 STRING_CONSTANT|234 ,|304 new|801 Object|221 [|34 NUMBER_CONSTANT|222 ]|215 )|227 ;|219 }|-1
throw|304 new|801 MathRuntimeException|214 (|45 STRING_CONSTANT|234 ,|304 new|801 Object|221 [|34 NUMBER_CONSTANT|222 ]|215 )|227 ;|-1
catch|214 (|801 Exception|800 e|215 )|218 {|320 throw|304 new|801 MathRuntimeException|214 (|800 e|215 )|227 ;|219 }|-1
{|329 return|800 arguments|235 .|802 clone|216 ()|227 ;|219 }|-1
{|500 super();|315 this|235 .|800 pattern|204 =|500 null|227 ;|315 this|235 .|800 arguments|204 =|500 null|227 ;|219 }|-1
{|329 return|800 arguments|235 .|802 clone|216 ()|227 ;|219 }|-1
MatrixIndexException|800 ex|204 =|304 new|801 MatrixIndexException|214 (|800 msg|234 ,|500 null|215 )|227 ;|-1
InvalidMatrixException|800 ex|204 =|304 new|801 InvalidMatrixException|214 (|800 msg|234 ,|500 null|215 )|227 ;|-1
assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 ex|235 .|802 getMessage|214 (|40 Locale.FRENCH|215 )|235 .|802 length|216 ()|215 )|227 ;|-1
{|320 throw|304 new|801 InvalidMatrixException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|-1
assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 ex|235 .|802 getMessage|214 (|40 Locale.FRENCH|215 )|235 .|802 length|216 ()|215 )|227 ;|-1
catch|214 (|801 InvalidMatrixException|800 e|215 )|218 {|320 throw|304 new|801 EstimationException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|-1
throw|304 new|801 MathRuntimeException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|-1
public|801 Double|802 getZ|216 ()|218 {|320 throw|304 new|801 MathRuntimeException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|-1
if|214 (|800 norm|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|-1
catch|214 (|801 InvalidMatrixException|800 ime|215 )|218 {|320 throw|304 new|801 EstimationException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|-1
if|214 (|800 normProduct|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|-1
if|214 (|800 threshold|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|-1
if|214 (|800 s|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|-1
if|214 (|800 norm|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|-1
if|214 (|800 norm|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|-1
{|320 throw|304 new|801 InvalidMatrixException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|-1
if|214 (|800 o|236 ==|500 null|215 )|218 {|320 throw|304 new|801 MathException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|-1
{|500 super();|315 this|235 .|800 pattern|204 =|500 null|227 ;|315 this|235 .|800 arguments|204 =|304 new|801 Object|221 [|34 NUMBER_CONSTANT|222 ]|227 ;|219 }|-1
try|218 {|802 setInterpolatedTime|214 (|800 t|215 )|227 ;|219 }|331 catch|214 (|801 DerivativeException|800 e|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIOException|214 (|800 e|215 )|227 ;|219 }|-1
catch|214 (|801 Exception|800 e|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIOException|214 (|800 e|215 )|227 ;|219 }|-1
catch|214 (|801 Exception|800 e|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIOException|214 (|800 e|215 )|227 ;|219 }|-1
catch|214 (|801 Exception|800 e|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIOException|214 (|800 e|215 )|227 ;|219 }|-1
try|218 {|802 finalizeStep|216 ()|227 ;|219 }|331 catch|214 (|801 DerivativeException|800 e|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIOException|214 (|800 e|215 )|227 ;|219 }|-1
try|218 {|802 setInterpolatedTime|214 (|800 t|215 )|227 ;|219 }|331 catch|214 (|801 DerivativeException|800 e|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIOException|214 (|800 e|215 )|227 ;|219 }|-1
catch|214 (|801 IOException|800 ioe|215 )|218 {|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 ioe|235 .|802 getMessage|216 ()|235 .|802 length|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 IOException|800 ioe|215 )|218 {|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 ioe|235 .|802 getMessage|216 ()|235 .|802 length|216 ()|215 )|227 ;|219 }|-1
try|218 {|802 setInterpolatedTime|214 (|800 t|215 )|227 ;|219 }|331 catch|214 (|801 DerivativeException|800 e|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIOException|214 (|800 e|215 )|227 ;|219 }|-1
try|218 {|802 finalizeStep|216 ()|227 ;|219 }|331 catch|214 (|801 DerivativeException|800 e|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIOException|214 (|800 e|215 )|227 ;|219 }|-1
try|218 {|802 setInterpolatedTime|214 (|800 t|215 )|227 ;|219 }|331 catch|214 (|801 DerivativeException|800 e|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIOException|214 (|800 e|215 )|227 ;|219 }|-1
{|313 if|214 (|800 qrt|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|219 }|-1
{|313 if|214 (|800 resultComputed|215 )|218 {|329 return|800 iterationCount|227 ;|219 }|322 else|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|219 }|-1
{|313 if|214 (|800 resultComputed|215 )|218 {|329 return|800 result|227 ;|219 }|322 else|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|-1
{|313 if|214 (|800 lu|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|219 }|-1
{|313 if|214 (|800 resultComputed|215 )|218 {|329 return|800 iterationCount|227 ;|219 }|322 else|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|219 }|-1
{|313 if|214 (|800 resultComputed|215 )|218 {|329 return|800 result|227 ;|219 }|322 else|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|219 }|-1
if|214 (|207 !|800 loaded|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|-1
{|313 if|214 (|800 incMoment|215 )|218 {|800 moment|235 .|802 increment|214 (|800 d|215 )|227 ;|219 }|322 else|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|45 STRING_CONSTANT|200 +|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|219 }|-1
assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 vTv|235 .|802 subtract|214 (|800 id|215 )|235 .|802 getNorm|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 norm|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|802 assertEquals|214 (|801 refValues|221 [|800 i|222 ]|234 ,|801 eigenValues|221 [|800 i|222 ]|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
transformer|204 =|500 null|227 ;|-1
ds|204 =|500 null|227 ;|-1
ds|204 =|500 null|227 ;|-1
{|802 copyIn|214 (|800 d|215 )|227 ;|800 ds|204 =|500 null|227 ;|219 }|-1
ds|204 =|500 null|227 ;|-1
public|39 int|85 []|802 getPivot|214 (|215 )|301 throws|800 IllegalStateException|218 {|329 return|800 pivot|227 ;|219 }|-1
{|329 return|801 eigenvalues|221 [|800 i|222 ]|227 ;|219 }|-1
public|39 double|85 []|802 getEigenvalues|214 (|215 )|301 throws|800 InvalidMatrixException|218 {|329 return|800 eigenvalues|235 .|802 clone|216 ()|227 ;|219 }|-1
EigenDecomposition|800 ed|204 =|304 new|801 DecompositionSolver|214 (|800 distinct|215 )|235 .|802 eigenDecompose|216 ()|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 DecompositionSolver|214 (|800 repeated|215 )|235 .|802 eigenDecompose|216 ()|227 ;|-1
RealMatrix|800 v|204 =|304 new|801 DecompositionSolver|214 (|800 matrix|215 )|235 .|802 eigenDecompose|216 ()|235 .|802 getV|216 ()|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 DecompositionSolver|214 (|800 matrix|215 )|235 .|802 eigenDecompose|216 ()|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 DecompositionSolver|214 (|800 matrix|215 )|235 .|802 eigenDecompose|216 ()|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 DecompositionSolver|214 (|800 matrix|215 )|235 .|802 eigenDecompose|216 ()|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 DecompositionSolver|214 (|800 matrix|215 )|235 .|802 eigenDecompose|216 ()|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 EigenDecompositionImpl|214 (|800 t|235 .|802 getMainDiagonalRef|216 ()|234 ,|800 t|235 .|802 getSecondaryDiagonalRef|216 ()|234 ,|40 MathUtils.SAFE_MIN|215 )|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 DecompositionSolver|214 (|800 matrix|215 )|235 .|802 eigenDecompose|216 ()|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 DecompositionSolver|214 (|800 matrix|215 )|235 .|802 eigenDecompose|216 ()|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 DecompositionSolver|214 (|800 matrix|215 )|235 .|802 eigenDecompose|216 ()|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 DecompositionSolver|214 (|800 matrix|215 )|235 .|802 eigenDecompose|216 ()|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 DecompositionSolver|214 (|800 matrix|215 )|235 .|802 eigenDecompose|216 ()|227 ;|-1
public|39 double|802 getNorm|214 (|215 )|301 throws|800 InvalidMatrixException|218 {|329 return|801 singularValues|221 [|34 NUMBER_CONSTANT|222 ]|227 ;|219 }|-1
public|39 double|85 []|802 getSingularValues|214 (|215 )|301 throws|800 InvalidMatrixException|218 {|329 return|800 singularValues|235 .|802 clone|216 ()|227 ;|219 }|-1
lu|204 =|500 null|227 ;|-1
lu|204 =|500 null|227 ;|-1
{|802 copyIn|214 (|800 d|215 )|227 ;|800 lu|204 =|500 null|227 ;|219 }|-1
lu|204 =|500 null|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 EigenDecompositionImpl|214 (|800 distinct|234 ,|40 MathUtils.SAFE_MIN|215 )|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 EigenDecompositionImpl|214 (|800 repeated|234 ,|40 MathUtils.SAFE_MIN|215 )|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 EigenDecompositionImpl|214 (|800 m|234 ,|40 MathUtils.SAFE_MIN|215 )|227 ;|-1
RealMatrix|800 v|204 =|304 new|801 EigenDecompositionImpl|214 (|800 matrix|234 ,|40 MathUtils.SAFE_MIN|215 )|235 .|802 getV|216 ()|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 EigenDecompositionImpl|214 (|800 matrix|234 ,|40 MathUtils.SAFE_MIN|215 )|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 EigenDecompositionImpl|214 (|800 matrix|234 ,|40 MathUtils.SAFE_MIN|215 )|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 EigenDecompositionImpl|214 (|800 matrix|234 ,|40 MathUtils.SAFE_MIN|215 )|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 EigenDecompositionImpl|214 (|800 matrix|234 ,|40 MathUtils.SAFE_MIN|215 )|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 EigenDecompositionImpl|214 (|800 matrix|234 ,|40 MathUtils.SAFE_MIN|215 )|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 EigenDecompositionImpl|214 (|800 matrix|234 ,|40 MathUtils.SAFE_MIN|215 )|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 EigenDecompositionImpl|214 (|800 matrix|234 ,|40 MathUtils.SAFE_MIN|215 )|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 EigenDecompositionImpl|214 (|800 matrix|234 ,|40 MathUtils.SAFE_MIN|215 )|227 ;|-1
EigenDecomposition|800 ed|204 =|304 new|801 EigenDecompositionImpl|214 (|800 matrix|234 ,|40 MathUtils.SAFE_MIN|215 )|227 ;|-1
public|802 DescriptiveStatistics|214 (|39 int|800 window|215 )|218 {|802 setWindowSize|214 (|800 window|215 )|227 ;|219 }|-1
{|329 return|800 stat|235 .|802 evaluate|214 (|800 eDA|235 .|802 getInternalValues|216 ()|234 ,|800 eDA|235 .|802 start|216 ()|234 ,|800 eDA|235 .|802 getNumElements|216 ()|215 )|227 ;|219 }|-1
final|39 double|85 []|85 []|800 in|-1
final|801 RealVectorImpl|800 v|-1
final|39 double|85 []|800 v|-1
final|801 RealMatrixImpl|800 m|-1
final|801 RealMatrixImpl|800 m|-1
final|801 RealMatrixImpl|800 m|-1
final|39 double|85 []|800 v|-1
{|802 setup|214 (|800 f|215 )|227 ;|329 return|800 factory|235 .|802 newDefaultSolver|216 ()|235 .|802 solve|214 (|800 f|234 ,|800 x0|234 ,|800 x1|215 )|227 ;|219 }|-1
UnivariateRealSolver|800 solver|204 =|800 factory|235 .|802 newSecantSolver|216 ()|227 ;|-1
UnivariateRealSolver|800 solver|204 =|800 factory|235 .|802 newBrentSolver|216 ()|227 ;|-1
UnivariateRealSolver|800 solver|204 =|800 factory|235 .|802 newNewtonSolver|216 ()|227 ;|-1
UnivariateRealSolver|800 solver|204 =|800 factory|235 .|802 newBisectionSolver|216 ()|227 ;|-1
try|218 {|800 iterator|235 .|802 advance|216 ()|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 ConcurrentModificationException|800 cme|215 )|220 {}|-1
RealMatrix|800 m_outerProduct|204 =|800 v1|235 .|802 outerProduct|214 (|800 v2|215 )|227 ;|-1
cachedV|204 =|800 transformer|235 .|802 getV|216 ()|235 .|802 multiply|214 (|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 iData|215 )|215 )|227 ;|-1
cachedU|204 =|800 transformer|235 .|802 getU|216 ()|235 .|802 multiply|214 (|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 iData|215 )|215 )|227 ;|-1
RealMatrix|800 covRM|204 =|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 cov|215 )|227 ;|-1
return|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 bp|215 )|227 ;|-1
return|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 dData|215 )|227 ;|-1
return|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 data|215 )|227 ;|-1
return|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 xData|215 )|227 ;|-1
{|315 this|235 .|800 X|204 =|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 x|215 )|227 ;|219 }|-1
{|315 this|235 .|800 Y|204 =|304 new|801 RealVectorImpl|214 (|800 y|215 )|227 ;|219 }|-1
RealMatrix|800 matrix|204 =|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 testSquare|215 )|227 ;|-1
{|315 this|235 .|800 Omega|204 =|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 omega|215 )|227 ;|315 this|235 .|800 OmegaInverse|204 =|500 null|227 ;|219 }|-1
RealMatrix|800 matrix|204 =|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 testData|215 )|227 ;|-1
RealMatrix|800 matrix|204 =|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 testData|215 )|227 ;|-1
RealMatrix|800 matrix|204 =|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 testData|215 )|227 ;|-1
RealMatrix|800 matrix|204 =|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 testData|215 )|227 ;|-1
return|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 invData|215 )|227 ;|-1
return|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 bp|215 )|227 ;|-1
{|315 this|235 .|800 X|204 =|304 new|801 DenseRealMatrix|214 (|800 x|215 )|227 ;|800 qr|204 =|304 new|801 QRDecompositionImpl|214 (|800 X|215 )|227 ;|219 }|-1
@|802 Test|214 (|800 expected|204 =|800 ArrayIndexOutOfBoundsException|235 .|341 class|215 )|-1
assertFalse|214 (|800 solver|235 .|802 isNonSingular|216 ()|215 )|227 ;|-1
{|329 return|800 solver|235 .|802 solve|214 (|800 b|215 )|227 ;|219 }|-1
{|315 this|235 .|800 solver|204 =|800 decomposition|235 .|802 getSolver|216 ()|227 ;|219 }|-1
{|315 this|235 .|800 X|204 =|304 new|801 RealMatrixImpl|214 (|800 x|215 )|227 ;|800 qr|204 =|304 new|801 QRDecompositionImpl|214 (|800 X|215 )|227 ;|219 }|-1
{|315 this|235 .|800 Omega|204 =|304 new|801 RealMatrixImpl|214 (|800 omega|215 )|227 ;|315 this|235 .|800 OmegaInverse|204 =|500 null|227 ;|219 }|-1
{|315 this|235 .|800 X|204 =|304 new|801 RealMatrixImpl|214 (|800 x|215 )|227 ;|219 }|-1
{|315 this|235 .|800 Y|204 =|304 new|801 RealMatrixImpl|214 (|800 y|215 )|227 ;|219 }|-1
@|802 Test|214 (|800 expected|204 =|800 IllegalArgumentException|235 .|341 class|215 )|-1
return|304 new|801 RealMatrixImpl|214 (|800 data|234 ,|9 false|215 )|227 ;|-1
boolean|802 isSingular|214 (|215 )|227 ;|-1
return|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 data|215 )|227 ;|-1
{|315 this|235 .|800 solver|204 =|800 decomposition|235 .|802 getSolver|216 ()|227 ;|219 }|-1
{|801 eigenvectors|221 [|800 i|222 ]|204 =|802 findEigenvector|214 (|801 realEigenvalues|221 [|800 i|222 ]|234 ,|800 d|234 ,|800 l|215 )|227 ;|219 }|-1
{|801 realEigenvalues|221 [|800 index|222 ]|204 =|801 main|221 [|800 index|222 ]|227 ;|219 }|-1
{|313 if|214 (|800 eigenvectors|236 ==|500 null|215 )|218 {|802 findEigenVectors|216 ()|227 ;|219 }|329 return|304 new|801 Solver|214 (|800 realEigenvalues|234 ,|800 eigenvectors|215 )|227 ;|219 }|-1
{|39 double|800 determinant|204 =|34 NUMBER_CONSTANT|227 ;|303 for|214 (|39 double|800 lambda|226 :|800 realEigenvalues|215 )|218 {|800 determinant|239 *=|800 lambda|227 ;|219 }|329 return|800 determinant|227 ;|219 }|-1
{|313 if|214 (|800 cachedD|236 ==|500 null|215 )|218 {|800 cachedD|204 =|800 MatrixUtils|235 .|802 createRealDiagonalMatrix|214 (|800 realEigenvalues|215 )|227 ;|219 }|329 return|800 cachedD|227 ;|219 }|-1
double|85 []|800 observed|204 =|800 ed|235 .|802 getRealEigenvalues|216 ()|227 ;|-1
double|800 lambda|204 =|800 ed|235 .|802 getRealEigenvalue|214 (|800 i|215 )|227 ;|-1
double|85 []|800 eigenValues|204 =|800 ed|235 .|802 getRealEigenvalues|216 ()|227 ;|-1
double|85 []|800 eigenValues|204 =|800 ed|235 .|802 getRealEigenvalues|216 ()|227 ;|-1
double|85 []|800 eigenValues|204 =|800 ed|235 .|802 getRealEigenvalues|216 ()|227 ;|-1
assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 ed|235 .|802 getRealEigenvalue|214 (|34 NUMBER_CONSTANT|215 )|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
singularValues|204 =|800 eigenDecomposition|235 .|802 getRealEigenvalues|216 ()|227 ;|-1
{|313 if|214 (|800 eigenvectors|236 ==|500 null|215 )|218 {|802 findEigenVectors|216 ()|227 ;|219 }|329 return|304 new|801 Solver|214 (|800 realEigenvalues|234 ,|800 imagEigenvalues|234 ,|800 eigenvectors|215 )|227 ;|219 }|-1
if|214 (|800 n|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|500 null|215 )|227 ;|219 }|-1
{|329 return|800 FastFourierTransformer|235 .|802 scaleArray|214 (|802 fht|214 (|800 f|215 )|234 ,|34 NUMBER_CONSTANT|203 /|40 f.length|215 )|227 ;|219 }|-1
{|801 OpenIntToDoubleHashMap|800 map|204 =|304 new|801 OpenIntToDoubleHashMap|216 ()|227 ;|802 assertTrue|214 (|800 Double|235 .|802 isNaN|214 (|800 map|235 .|802 remove|214 (|34 NUMBER_CONSTANT|215 )|215 )|215 )|227 ;|219 }|-1
this|235 .|800 entries|204 =|304 new|801 OpenIntToDoubleHashMap|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
double|800 previous|204 =|800 missingEntries|227 ;|-1
values|221 [|800 index|222 ]|204 =|800 missingEntries|227 ;|-1
return|304 new|801 LUDecompositionImpl|214 (|800 XTX|215 )|235 .|802 getSolver|216 ()|235 .|802 getInverse|216 ()|227 ;|-1
assertEquals|214 (|304 new|801 DenseRealMatrix|214 (|800 reference|215 )|234 ,|304 new|801 DenseRealMatrix|214 (|800 sub|215 )|215 )|227 ;|-1
assertEquals|214 (|304 new|801 DenseRealMatrix|214 (|800 reference|215 )|234 ,|304 new|801 DenseRealMatrix|214 (|800 sub|215 )|215 )|227 ;|-1
RealMatrix|800 m|204 =|304 new|801 DenseRealMatrix|214 (|800 subTestData|215 )|227 ;|-1
assertEquals|214 (|304 new|801 DenseRealMatrix|214 (|800 reference|215 )|234 ,|800 sub|215 )|227 ;|-1
assertEquals|214 (|304 new|801 DenseRealMatrix|214 (|800 reference|215 )|234 ,|800 sub|215 )|227 ;|-1
RealMatrix|800 m|204 =|304 new|801 DenseRealMatrix|214 (|800 subTestData|215 )|227 ;|-1
rDiag|204 =|304 new|39 double|221 [|800 Math|235 .|802 min|214 (|800 m|234 ,|800 n|215 )|222 ]|227 ;|-1
return|304 new|801 LUDecompositionImpl|214 (|800 XTOIX|215 )|235 .|802 getSolver|216 ()|235 .|802 getInverse|216 ()|227 ;|-1
{|313 if|214 (|800 lu|236 ==|500 null|215 )|218 {|800 lu|204 =|304 new|801 LUDecompositionImpl|214 (|315 this|234 ,|40 MathUtils.SAFE_MIN|215 )|235 .|802 getSolver|216 ()|227 ;|219 }|219 }|-1
if|214 (|800 lu|236 ==|500 null|215 )|218 {|800 lu|204 =|304 new|801 LUDecompositionImpl|214 (|315 this|234 ,|40 MathUtils.SAFE_MIN|215 )|235 .|802 getSolver|216 ()|227 ;|219 }|-1
if|214 (|800 lu|236 ==|500 null|215 )|218 {|800 lu|204 =|304 new|801 LUDecompositionImpl|214 (|315 this|234 ,|40 MathUtils.SAFE_MIN|215 )|235 .|802 getSolver|216 ()|227 ;|219 }|-1
if|214 (|800 lu|236 ==|500 null|215 )|218 {|800 lu|204 =|304 new|801 LUDecompositionImpl|214 (|315 this|234 ,|40 MathUtils.SAFE_MIN|215 )|235 .|802 getSolver|216 ()|227 ;|219 }|-1
if|214 (|800 lu|236 ==|500 null|215 )|218 {|800 lu|204 =|304 new|801 LUDecompositionImpl|214 (|315 this|234 ,|40 MathUtils.SAFE_MIN|215 )|235 .|802 getSolver|216 ()|227 ;|219 }|-1
private|39 double|802 getDeterminant|214 (|801 RealMatrix|800 m|215 )|218 {|329 return|304 new|801 LUDecompositionImpl|214 (|800 m|215 )|235 .|802 getDeterminant|216 ()|227 ;|219 }|-1
{|802 clearResult|216 ()|227 ;|329 return|802 localMin|214 (|800 min|234 ,|800 max|234 ,|800 relativeAccuracy|234 ,|800 absoluteAccuracy|234 ,|800 f|215 )|227 ;|219 }|-1
TestUtils|235 .|802 assertSame|214 (|40 Float.NaN|234 ,|800 MathUtils|235 .|802 sign|214 (|40 Float.NaN|215 )|215 )|227 ;|-1
{|801 vals|221 [|800 i|222 ]|204 =|801 values|221 [|800 i|222 ]|235 .|802 doubleValue|216 ()|227 ;|219 }|-1
roots|235 .|802 computeOmega|214 (|201 -|40 f.length|215 )|227 ;|-1
roots|235 .|802 computeOmega|214 (|201 -|40 f.length|215 )|227 ;|-1
roots|235 .|802 computeOmega|214 (|40 f.length|215 )|227 ;|-1
{|800 roots|235 .|802 computeOmega|214 (|40 f.length|215 )|227 ;|329 return|802 fft|214 (|800 f|215 )|227 ;|219 }|-1
{|303 for|214 (|39 int|800 i|204 =|34 NUMBER_CONSTANT|227 ;|800 i|230 <|800 virtualSize|227 ;|800 i|247 ++|215 )|218 {|802 setEntry|214 (|800 i|234 ,|800 value|215 )|227 ;|219 }|219 }|-1
{|802 setEntry|214 (|800 i|234 ,|800 Math|235 .|802 log|214 (|802 getEntry|214 (|800 i|215 )|215 )|215 )|227 ;|219 }|-1
{|802 setEntry|214 (|800 i|234 ,|800 Math|235 .|802 log10|214 (|802 getEntry|214 (|800 i|215 )|215 )|215 )|227 ;|219 }|-1
{|802 setEntry|214 (|800 i|234 ,|34 NUMBER_CONSTANT|203 /|802 getEntry|214 (|800 i|215 )|215 )|227 ;|219 }|-1
{|802 setEntry|214 (|800 i|234 ,|802 getEntry|214 (|800 i|215 )|200 +|800 d|215 )|227 ;|219 }|-1
{|802 setEntry|214 (|800 i|234 ,|800 Math|235 .|802 acos|214 (|802 getEntry|214 (|800 i|215 )|215 )|215 )|227 ;|219 }|-1
{|800 res|235 .|802 setEntry|214 (|800 i|200 +|800 virtualSize|234 ,|801 a|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 RealVector|800 res|204 =|304 new|801 SparseRealVector|214 (|315 this|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|800 res|235 .|802 setEntry|214 (|800 virtualSize|234 ,|800 d|215 )|227 ;|329 return|800 res|227 ;|219 }|-1
{|802 setSubVector|214 (|800 index|234 ,|40 v.data|215 )|227 ;|219 }|-1
w|235 .|802 setEntry|214 (|800 i|234 ,|800 w|235 .|802 getEntry|214 (|800 i|215 )|203 /|800 si|215 )|227 ;|-1
TestUtils|235 .|802 assertEquals|214 (|45 STRING_CONSTANT|234 ,|800 m3|235 .|802 multiply|214 (|800 m4|215 )|234 ,|800 m5|234 ,|800 entryTolerance|215 )|227 ;|-1
MatrixIndexException|800 ex|204 =|304 new|801 MatrixIndexException|214 (|800 msg|215 )|227 ;|-1
if|214 (|800 expansionMode|242 !=|800 MULTIPLICATIVE_MODE|249 &&|800 expansionMode|242 !=|800 ADDITIVE_MODE|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 expansionMode|234 ,|800 MULTIPLICATIVE_MODE|234 ,|45 STRING_CONSTANT|234 ,|800 ADDITIVE_MODE|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 numElements|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArrayIndexOutOfBoundsException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
public|801 Double|802 getZ|216 ()|218 {|320 throw|304 new|801 MathRuntimeException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
final|800 Object|235 .|235 .|235 .|800 parts|-1
FunctionEvaluationException|800 ex|204 =|304 new|801 FunctionEvaluationException|214 (|800 cause|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
FunctionEvaluationException|800 ex|204 =|304 new|801 FunctionEvaluationException|214 (|800 cause|234 ,|34 NUMBER_CONSTANT|234 ,|800 pattern|234 ,|800 arguments|215 )|227 ;|-1
if|214 (|802 isZero|214 (|800 norm|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
{|349 super|214 (|45 STRING_CONSTANT|234 ,|800 rows|234 ,|800 columns|215 )|227 ;|219 }|-1
{|320 throw|304 new|801 InvalidMatrixException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
catch|214 (|801 ClassCastException|800 cce|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
{|313 if|214 (|800 resultComputed|215 )|218 {|329 return|800 result|227 ;|219 }|322 else|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|219 }|-1
Object|235 .|235 .|235 .|800 arguments|-1
catch|214 (|801 DimensionMismatchException|800 dme|215 )|218 {|320 throw|304 new|801 MathRuntimeException|214 (|800 dme|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
catch|214 (|801 InvalidMatrixException|800 ime|215 )|218 {|320 throw|304 new|801 EstimationException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
Object|235 .|235 .|235 .|800 parts|-1
{|313 if|214 (|800 incMoment|215 )|218 {|800 moment|235 .|802 increment|214 (|800 d|215 )|227 ;|219 }|322 else|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|219 }|-1
{|313 if|214 (|207 !|800 resultComputed|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|219 }|-1
Object|235 .|235 .|235 .|800 arguments|-1
Object|235 .|235 .|235 .|800 parts|-1
if|214 (|800 norm|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 covarianceMatrix|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
catch|214 (|801 InvalidMatrixException|800 e|215 )|218 {|320 throw|304 new|801 EstimationException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 n|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
{|313 if|214 (|800 omegaCount|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|329 return|800 isForward|227 ;|219 }|-1
if|214 (|800 norm|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 norm|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
final|800 Object|235 .|235 .|235 .|800 arguments|-1
{|329 return|802 buildMessage|214 (|800 locale|234 ,|800 pattern|234 ,|800 arguments|215 )|227 ;|219 }|-1
{|313 if|214 (|207 !|800 resultComputed|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|219 }|-1
if|214 (|800 f|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|207 !|214 (|800 f|328 instanceof|800 PolynomialFunction|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 f|328 instanceof|800 PolynomialFunction|215 )|218 {|800 p|204 =|214 (|800 PolynomialFunction|215 )|800 f|227 ;|219 }|322 else|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
Object|235 .|235 .|235 .|800 arguments|-1
MathException|800 ex|204 =|304 new|801 MathException|214 (|800 cause|234 ,|800 pattern|234 ,|800 arguments|215 )|227 ;|-1
{|349 super|214 (|800 isCardan|233 ?|45 STRING_CONSTANT|226 :|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
MathConfigurationException|800 ex|204 =|304 new|801 MathConfigurationException|214 (|800 cause|234 ,|800 pattern|234 ,|800 arguments|215 )|227 ;|-1
Object|235 .|235 .|235 .|800 arguments|-1
ConvergenceException|800 ex|204 =|304 new|801 ConvergenceException|214 (|800 cause|234 ,|800 pattern|234 ,|800 arguments|215 )|227 ;|-1
{|329 return|802 buildMessage|214 (|800 locale|234 ,|800 pattern|234 ,|800 arguments|215 )|227 ;|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
{|320 throw|304 new|801 InvalidMatrixException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
final|800 Object|235 .|235 .|235 .|800 parts|-1
final|800 Object|235 .|235 .|235 .|800 arguments|-1
if|214 (|800 normProduct|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 threshold|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 s|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
final|800 Object|235 .|235 .|235 .|800 parts|-1
if|214 (|40 b.length|242 !=|800 nRows|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|40 b.length|234 ,|800 nRows|215 )|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 nRows|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|40 v.length|234 ,|800 nRows|215 )|227 ;|219 }|-1
if|214 (|207 !|802 isSquare|216 ()|215 )|218 {|320 throw|304 new|801 NonSquareMatrixException|214 (|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
{|320 throw|304 new|801 InvalidMatrixException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
catch|214 (|801 DerivativeException|800 de|215 )|218 {|320 throw|304 new|801 MathRuntimeException|214 (|800 de|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
while|214 (|800 iter|235 .|802 hasNext|216 ()|215 )|218 {|800 iter|235 .|802 advance|216 ()|227 ;|313 if|214 (|800 Double|235 .|802 isNaN|214 (|800 iter|235 .|802 value|216 ()|215 )|215 )|218 {|329 return|9 true|227 ;|219 }|219 }|-1
while|214 (|800 iter|235 .|802 hasNext|216 ()|215 )|218 {|800 iter|235 .|802 advance|216 ()|227 ;|313 if|214 (|800 Double|235 .|802 isInfinite|214 (|800 iter|235 .|802 value|216 ()|215 )|215 )|218 {|329 return|9 true|227 ;|219 }|219 }|-1
if|214 (|800 delta|231 >|800 max|215 )|218 {|800 max|204 =|800 delta|227 ;|219 }|-1
{|315 this|214 (|800 values|234 ,|800 DEFAULT_ZERO_TOLERANCE|215 )|227 ;|219 }|-1
{|313 if|214 (|40 data.length|242 !=|800 n|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|40 data.length|234 ,|800 n|215 )|227 ;|219 }|219 }|-1
if|214 (|40 d.length|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
epsilon|204 =|800 v|235 .|802 getEpsilon|216 ()|227 ;|-1
public|39 void|802 setConvergenceChecker|214 (|801 ScalarConvergenceChecker|800 checker|215 )|218 {|800 optimizer|235 .|802 setConvergenceChecker|214 (|800 checker|215 )|227 ;|219 }|-1
final|801 ScalarOptimizer|800 optimizer|-1
final|800 Comparator|230 <|800 ScalarPointValuePair|231 >|800 comparator|-1
public|39 void|802 setConvergenceChecker|214 (|801 ScalarConvergenceChecker|800 checker|215 )|218 {|315 this|235 .|800 checker|204 =|800 checker|227 ;|219 }|-1
final|801 VectorialObjectiveFunction|800 function|-1
final|801 VectorialObjectiveFunction|800 function|-1
final|801 VectorialObjectiveFunction|800 function|-1
{|349 super|214 (|34 NUMBER_CONSTANT|234 ,|800 startParams|234 ,|800 theoreticalMinCost|234 ,|800 theoreticalMinParams|215 )|227 ;|219 }|-1
{|349 super|214 (|34 NUMBER_CONSTANT|234 ,|800 startParams|234 ,|800 theoreticalMinCost|234 ,|800 theoreticalMinParams|215 )|227 ;|219 }|-1
{|349 super|214 (|800 m|234 ,|802 buildArray|214 (|800 m|234 ,|800 factor|215 )|234 ,|800 theoreticalMinCost|234 ,|800 theoreticalMinParams|215 )|227 ;|219 }|-1
{|349 super|214 (|800 m|234 ,|802 buildChebyquadArray|214 (|800 n|234 ,|800 factor|215 )|234 ,|800 theoreticalMinCost|234 ,|800 theoreticalMinParams|215 )|227 ;|219 }|-1
{|349 super|214 (|800 m|234 ,|800 startParams|234 ,|800 theoreticalMinCost|234 ,|800 theoreticalMinParams|215 )|227 ;|219 }|-1
{|349 super|214 (|800 m|234 ,|800 startParams|234 ,|800 theoreticalMinCost|234 ,|800 theoreticalMinParams|215 )|227 ;|219 }|-1
{|349 super|214 (|34 NUMBER_CONSTANT|234 ,|802 buildArray|214 (|800 n|234 ,|800 x0|215 )|234 ,|800 theoreticalMinCost|234 ,|800 theoreticalMinParams|215 )|227 ;|219 }|-1
{|349 super|214 (|34 NUMBER_CONSTANT|234 ,|800 startParams|234 ,|800 theoreticalMinCost|234 ,|800 theoreticalMinParams|215 )|227 ;|313 if|214 (|800 theoreticalStartCost|231 >|34 NUMBER_CONSTANT|215 )|218 {|802 setCostAccuracy|214 (|34 NUMBER_CONSTANT|215 )|227 ;|802 setParamsAccuracy|214 (|34 NUMBER_CONSTANT|215 )|227 ;|219 }|219 }|-1
{|349 super|214 (|34 NUMBER_CONSTANT|234 ,|800 startParams|234 ,|800 theoreticalMinCost|234 ,|800 theoreticalMinParams|215 )|227 ;|313 if|214 (|800 theoreticalStartCost|231 >|34 NUMBER_CONSTANT|215 )|218 {|802 setCostAccuracy|214 (|34 NUMBER_CONSTANT|215 )|227 ;|802 setParamsAccuracy|214 (|34 NUMBER_CONSTANT|215 )|227 ;|219 }|219 }|-1
{|349 super|214 (|34 NUMBER_CONSTANT|234 ,|802 buildArray|214 (|34 NUMBER_CONSTANT|234 ,|800 x0|215 )|234 ,|800 theoreticalMinCost|234 ,|800 theoreticalMinParams|215 )|227 ;|219 }|-1
{|349 super|214 (|34 NUMBER_CONSTANT|234 ,|800 startParams|234 ,|800 theoreticalMinCost|234 ,|800 theoreticalMinParams|215 )|227 ;|219 }|-1
{|349 super|214 (|34 NUMBER_CONSTANT|234 ,|800 startParams|234 ,|34 NUMBER_CONSTANT|234 ,|802 buildArray|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|219 }|-1
{|349 super|214 (|34 NUMBER_CONSTANT|234 ,|800 startParams|234 ,|34 NUMBER_CONSTANT|234 ,|802 buildArray|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|219 }|-1
{|349 super|214 (|800 m|234 ,|802 buildArray|214 (|800 n|234 ,|800 x0|215 )|234 ,|800 theoreticalMinCost|234 ,|500 null|215 )|227 ;|219 }|-1
final|39 double|800 residual|204 =|801 residuals|221 [|800 i|222 ]|227 ;|-1
optimizer|235 .|802 setMaxIterations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxIterations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxIterations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxIterations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxIterations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxIterations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxIterations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxIterations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxIterations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxIterations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxIterations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxIterations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxIterations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxIterations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxIterations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxIterations|214 (|800 maxCostEval|215 )|227 ;|-1
++|800 jacobianEvaluations|227 ;|-1
{|802 setConvergenceChecker|214 (|304 new|801 SimpleVectorialValueChecker|216 ()|215 )|227 ;|802 setMaxIterations|214 (|800 DEFAULT_MAX_ITERATIONS|215 )|227 ;|219 }|-1
{|349 super|214 (|800 cause|234 ,|800 pattern|234 ,|800 arguments|215 )|227 ;|315 this|235 .|800 argument|204 =|304 new|39 double|85 []|218 {|800 argument|219 }|227 ;|219 }|-1
{|349 super|214 (|800 cause|215 )|227 ;|315 this|235 .|800 argument|204 =|304 new|39 double|85 []|218 {|800 argument|219 }|227 ;|219 }|-1
{|349 super|214 (|800 pattern|234 ,|800 arguments|215 )|227 ;|315 this|235 .|800 argument|204 =|304 new|39 double|85 []|218 {|800 argument|219 }|227 ;|219 }|-1
assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 ex|235 .|802 getArgument|216 ()|221 [|34 NUMBER_CONSTANT|222 ]|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
assertEquals|214 (|40 Math.PI|234 ,|800 ex|235 .|802 getArgument|216 ()|221 [|34 NUMBER_CONSTANT|222 ]|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 MultivariateVectorialFunction|800 function|-1
public|39 void|802 setConvergenceChecker|214 (|801 RealConvergenceChecker|800 checker|215 )|218 {|315 this|235 .|800 checker|204 =|800 checker|227 ;|219 }|-1
catch|214 (|801 FunctionEvaluationException|800 fe|215 )|218 {|802 assertTrue|214 (|800 exceptionExpected|215 )|227 ;|219 }|-1
{|313 if|214 (|800 numerator|236 ==|34 NUMBER_CONSTANT|215 )|218 {|329 return|800 ZERO|227 ;|219 }|329 return|304 new|801 BigFraction|214 (|800 numerator|234 ,|800 denominator|215 )|227 ;|219 }|-1
{|313 if|214 (|800 format|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|315 this|235 .|800 wholeFormat|204 =|800 format|227 ;|219 }|-1
public|802 FractionFormat|216 ()|220 {}|-1
{|329 return|802 subtract|214 (|800 BigInteger|235 .|802 valueOf|214 (|800 l|215 )|215 )|227 ;|219 }|-1
{|329 return|802 subtract|214 (|800 BigInteger|235 .|802 valueOf|214 (|800 i|215 )|215 )|227 ;|219 }|-1
{|329 return|802 multiply|214 (|800 BigInteger|235 .|802 valueOf|214 (|800 l|215 )|215 )|227 ;|219 }|-1
{|329 return|802 multiply|214 (|800 BigInteger|235 .|802 valueOf|214 (|800 i|215 )|215 )|227 ;|219 }|-1
{|329 return|802 add|214 (|800 BigInteger|235 .|802 valueOf|214 (|800 l|215 )|215 )|227 ;|219 }|-1
{|329 return|802 add|214 (|800 BigInteger|235 .|802 valueOf|214 (|800 i|215 )|215 )|227 ;|219 }|-1
final|800 ArrayList|230 <|800 BigFraction|231 >|800 coefficients|-1
assertEquals|214 (|800 ci|234 ,|801 l40|221 [|800 i|222 ]|234 ,|800 Math|235 .|802 abs|214 (|800 ci|215 )|202 *|34 NUMBER_CONSTANT|215 )|227 ;|-1
assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|304 new|801 BigFraction|214 (|800 Double|235 .|802 longBitsToDouble|214 (|34 NUMBER_CONSTANT|215 )|215 )|235 .|802 getNumeratorAsLong|216 ()|215 )|227 ;|-1
@|800 Override|83 protected|801 Locale|802 getLocale|216 ()|218 {|329 return|40 Locale.US|227 ;|219 }|-1
@|800 Override|83 protected|801 Locale|802 getLocale|216 ()|218 {|329 return|40 Locale.FRENCH|227 ;|219 }|-1
@|800 Override|83 protected|801 String|802 getResourceName|216 ()|218 {|329 return|45 STRING_CONSTANT|227 ;|219 }|-1
@|800 Override|83 protected|801 String|802 getResourceName|216 ()|218 {|329 return|45 STRING_CONSTANT|227 ;|219 }|-1
@|800 Override|83 protected|801 Locale|802 getLocale|216 ()|218 {|329 return|40 Locale.US|227 ;|219 }|-1
@|800 Override|83 protected|801 Locale|802 getLocale|216 ()|218 {|329 return|40 Locale.FRENCH|227 ;|219 }|-1
@|800 Override|83 protected|801 Locale|802 getLocale|216 ()|218 {|329 return|40 Locale.FRENCH|227 ;|219 }|-1
@|800 Override|83 protected|801 Locale|802 getLocale|216 ()|218 {|329 return|40 Locale.US|227 ;|219 }|-1
UnivariateRealSolver|800 solver|204 =|40 LazyHolder.FACTORY|235 .|802 newDefaultSolver|216 ()|227 ;|-1
{|802 setup|214 (|800 f|215 )|227 ;|329 return|40 LazyHolder.FACTORY|235 .|802 newDefaultSolver|216 ()|235 .|802 solve|214 (|800 f|234 ,|800 x0|234 ,|800 x1|215 )|227 ;|219 }|-1
{|800 logSum|237 +=|800 Math|235 .|802 log|214 (|800 i|215 )|227 ;|219 }|-1
double|800 n0|204 =|800 n|227 ;|-1
double|800 n0|204 =|800 n|227 ;|-1
{|329 return|800 meanImpl|235 .|802 clone|216 ()|227 ;|219 }|-1
{|329 return|800 geoMeanImpl|235 .|802 clone|216 ()|227 ;|219 }|-1
{|329 return|800 sumLogImpl|235 .|802 clone|216 ()|227 ;|219 }|-1
{|329 return|800 maxImpl|235 .|802 clone|216 ()|227 ;|219 }|-1
{|329 return|800 minImpl|235 .|802 clone|216 ()|227 ;|219 }|-1
{|329 return|800 sumSqImpl|235 .|802 clone|216 ()|227 ;|219 }|-1
{|329 return|800 sumImpl|235 .|802 clone|216 ()|227 ;|219 }|-1
double|800 degreesOfFreedom|204 =|214 (|800 n1|200 +|800 n2|201 -|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|329 return|214 (|800 sumY|201 -|800 slope|202 *|800 sumX|215 )|203 /|214 (|800 n|215 )|227 ;|219 }|-1
Math|235 .|802 sqrt|214 (|802 getMeanSquareError|216 ()|202 *|214 (|214 (|34 NUMBER_CONSTANT|203 /|800 n|215 )|200 +|214 (|800 xbar|202 *|800 xbar|215 )|203 /|800 sumXX|215 )|215 )|-1
{|313 if|214 (|800 n|230 <|34 NUMBER_CONSTANT|215 )|218 {|329 return|40 Double.NaN|227 ;|219 }|329 return|802 getSumSquaredErrors|216 ()|203 /|214 (|800 n|201 -|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|313 if|214 (|800 optima|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|329 return|800 optima|235 .|802 clone|216 ()|227 ;|219 }|-1
{|313 if|214 (|800 optima|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|329 return|800 optima|235 .|802 clone|216 ()|227 ;|219 }|-1
double|800 n|204 =|800 length|227 ;|-1
{|40 dest.variance|204 =|40 source.variance|235 .|802 copy|216 ()|227 ;|219 }|-1
{|313 if|214 (|800 optima|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|329 return|800 optima|235 .|802 clone|216 ()|227 ;|219 }|-1
{|40 dest.incMoment|204 =|40 source.incMoment|227 ;|40 dest.moment|204 =|40 source.moment|235 .|802 copy|216 ()|227 ;|219 }|-1
double|800 sampleSize|204 =|800 length|227 ;|-1
{|40 dest.moment|204 =|40 source.moment|235 .|802 copy|216 ()|227 ;|40 dest.incMoment|204 =|40 source.incMoment|227 ;|219 }|-1
{|329 return|800 map|235 .|802 get|214 (|800 key|215 )|227 ;|219 }|-1
{|329 return|802 sumDifference|214 (|800 sample1|234 ,|800 sample2|215 )|203 /|40 sample1.length|227 ;|219 }|-1
{|40 dest.sumOfLogs|204 =|40 source.sumOfLogs|235 .|802 copy|216 ()|227 ;|219 }|-1
{|329 return|800 Math|235 .|802 exp|214 (|800 sumOfLogs|235 .|802 evaluate|214 (|800 values|234 ,|800 begin|234 ,|800 length|215 )|203 /|800 length|215 )|227 ;|219 }|-1
{|329 return|800 Math|235 .|802 exp|214 (|800 sumOfLogs|235 .|802 getResult|216 ()|203 /|800 sumOfLogs|235 .|802 getN|216 ()|215 )|227 ;|219 }|-1
{|801 result|221 [|800 i|201 -|34 NUMBER_CONSTANT|222 ]|204 =|800 i|202 *|801 coefficients|221 [|800 i|222 ]|227 ;|219 }|-1
double|800 n0|204 =|800 n|227 ;|-1
{|40 dest.moment|204 =|304 new|800 ThirdMoment|214 (|40 source.moment|235 .|802 copy|216 ()|215 )|227 ;|40 dest.incMoment|204 =|40 source.incMoment|227 ;|219 }|-1
{|329 return|800 contents|235 .|802 clone|216 ()|227 ;|219 }|-1
{|40 dest.moment|204 =|40 source.moment|235 .|802 copy|216 ()|227 ;|40 dest.isBiasCorrected|204 =|40 source.isBiasCorrected|227 ;|40 dest.incMoment|204 =|40 source.incMoment|227 ;|219 }|-1
double|800 len|204 =|800 length|227 ;|-1
{|349 super|214 (|800 problem|215 )|227 ;|800 y|204 =|40 problem.y|235 .|802 clone|216 ()|227 ;|219 }|-1
return|800 Math|235 .|802 sqrt|214 (|800 sum|203 /|40 v.length|215 )|227 ;|-1
{|349 super|214 (|800 problem|215 )|227 ;|800 e|204 =|40 problem.e|227 ;|800 y|204 =|40 problem.y|235 .|802 clone|216 ()|227 ;|219 }|-1
{|349 super|214 (|800 problem|215 )|227 ;|800 y|204 =|40 problem.y|235 .|802 clone|216 ()|227 ;|219 }|-1
{|801 dY|221 [|800 i|222 ]|204 =|801 y|221 [|800 i|222 ]|227 ;|219 }|-1
{|801 dX|221 [|800 i|222 ]|204 =|801 x|221 [|800 i|222 ]|227 ;|219 }|-1
catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 preMultiply|214 (|802 asBigDecimal|214 (|800 testVector|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 getTrace|216 ()|235 .|802 doubleValue|216 ()|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 NonSquareMatrixException|800 ex|215 )|220 {}|-1
catch|214 (|801 InvalidMatrixException|800 ex|215 )|220 {}|-1
catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 add|214 (|800 m2|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
{|349 super|214 (|800 problem|215 )|227 ;|800 a|204 =|40 problem.a|227 ;|800 y|204 =|40 problem.y|235 .|802 clone|216 ()|227 ;|219 }|-1
return|800 sum|203 /|40 v.length|227 ;|-1
try|218 {|800 randomData|235 .|802 nextExponential|214 (|201 -|34 NUMBER_CONSTANT|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 randomData|235 .|802 nextSecureInt|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 randomData|235 .|802 nextSecureLong|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 randomData|235 .|802 nextLong|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 randomData|235 .|802 nextInt|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 preMultiply|214 (|802 createSparseMatrix|214 (|800 bigSingular|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 preMultiply|214 (|800 testVector|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 operate|214 (|800 testVector|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 getTrace|216 ()|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 NonSquareMatrixException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 multiply|214 (|802 createSparseMatrix|214 (|800 bigSingular|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 subtract|214 (|802 createSparseMatrix|214 (|800 testData2|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 add|214 (|800 m2|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
SimplexTableau|800 tableau|204 =|304 new|801 SimplexTableau|214 (|800 f|234 ,|800 constraints|234 ,|40 GoalType.MAXIMIZE|234 ,|9 false|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
SimplexTableau|800 tableau|204 =|304 new|801 SimplexTableau|214 (|800 f|234 ,|800 constraints|234 ,|40 GoalType.MAXIMIZE|234 ,|9 false|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 SimplexTableau|800 tableau|204 =|304 new|801 SimplexTableau|214 (|800 f|234 ,|800 constraints|234 ,|800 goalType|234 ,|800 restrictToNonNegative|234 ,|800 epsilon|215 )|227 ;|-1
{|329 return|214 (|800 sumY|201 -|800 slope|202 *|800 sumX|215 )|203 /|800 n|227 ;|219 }|-1
Math|235 .|802 sqrt|214 (|802 getMeanSquareError|216 ()|202 *|214 (|214 (|34 NUMBER_CONSTANT|203 /|214 (|39 double|215 )|800 n|215 )|200 +|214 (|800 xbar|202 *|800 xbar|215 )|203 /|800 sumXX|215 )|215 )|-1
Math|235 .|802 sqrt|214 (|214 (|800 accum|201 -|214 (|800 Math|235 .|802 pow|214 (|800 accum2|234 ,|34 NUMBER_CONSTANT|215 )|203 /|800 length|215 )|215 )|203 /|214 (|800 length|201 -|34 NUMBER_CONSTANT|215 )|215 )|-1
double|800 degreesOfFreedom|204 =|800 n1|200 +|800 n2|201 -|34 NUMBER_CONSTANT|227 ;|-1
{|802 checkSufficientData|214 (|800 matrix|215 )|227 ;|800 nObs|204 =|800 matrix|235 .|802 getRowDimension|216 ()|227 ;|800 correlationMatrix|204 =|802 computeCorrelationMatrix|214 (|800 matrix|215 )|227 ;|219 }|-1
{|802 checkSufficientData|214 (|800 matrix|215 )|227 ;|800 n|204 =|800 matrix|235 .|802 getRowDimension|216 ()|227 ;|800 covarianceMatrix|204 =|802 computeCovarianceMatrix|214 (|800 matrix|234 ,|800 biasCorrected|215 )|227 ;|219 }|-1
catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 preMultiply|214 (|800 testVector|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 operate|214 (|800 testVector|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 getTrace|216 ()|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 NonSquareMatrixException|800 ex|215 )|220 {}|-1
catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 add|214 (|800 m2|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 testGenerator|235 .|802 nextInt|214 (|201 -|34 NUMBER_CONSTANT|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 regression|235 .|802 getSlopeConfidenceInterval|214 (|34 NUMBER_CONSTANT|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
catch|214 (|801 IllegalStateException|800 ex|215 )|220 {}|-1
{|335 try|218 {|800 vs|235 .|802 getNext|216 ()|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalStateException|800 ex|215 )|220 {}|219 }|-1
catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 preMultiply|214 (|800 testVector|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 operate|214 (|800 testVector|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 getTrace|216 ()|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 NonSquareMatrixException|800 ex|215 )|220 {}|-1
catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 add|214 (|800 m2|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
Iterator|230 <|231 >|800 it|204 =|800 f|235 .|802 valuesIterator|216 ()|227 ;|-1
final|801 T|85 []|800 out|204 =|802 buildArray|214 (|800 field|234 ,|800 nCols|215 )|227 ;|-1
final|801 T|85 []|800 out|204 =|802 buildArray|214 (|800 field|234 ,|800 nCols|215 )|227 ;|-1
final|801 T|85 []|800 out|204 =|802 buildArray|214 (|800 field|234 ,|800 nRows|215 )|227 ;|-1
final|801 T|85 []|800 out|204 =|802 buildArray|214 (|800 field|234 ,|800 nRows|215 )|227 ;|-1
final|801 T|85 []|800 out|204 =|802 buildArray|214 (|800 field|234 ,|800 nRows|215 )|227 ;|-1
final|801 T|85 []|800 out|204 =|802 buildArray|214 (|800 field|234 ,|800 nCols|215 )|227 ;|-1
final|801 T|85 []|85 []|800 data|204 =|802 buildArray|214 (|800 field|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|-1
final|801 T|85 []|85 []|800 out|204 =|802 buildArray|214 (|802 getField|216 ()|234 ,|800 nRows|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|-1
final|801 T|85 []|800 out|204 =|802 buildArray|214 (|802 getField|216 ()|234 ,|800 nCols|215 )|227 ;|-1
final|801 T|85 []|800 out|204 =|802 buildArray|214 (|802 getField|216 ()|234 ,|800 nRows|215 )|227 ;|-1
data|204 =|802 buildArray|214 (|802 getField|216 ()|234 ,|40 subMatrix.length|234 ,|800 nCols|215 )|227 ;|-1
final|801 T|85 []|85 []|800 outData|204 =|802 buildArray|214 (|802 getField|216 ()|234 ,|800 nRows|234 ,|800 nCols|215 )|227 ;|-1
final|801 T|85 []|85 []|800 outData|204 =|802 buildArray|214 (|802 getField|216 ()|234 ,|800 rowCount|234 ,|800 columnCount|215 )|227 ;|-1
final|801 T|85 []|85 []|800 outData|204 =|802 buildArray|214 (|802 getField|216 ()|234 ,|800 rowCount|234 ,|800 columnCount|215 )|227 ;|-1
{|329 return|214 (|800 FieldVectorImpl|230 <|800 T|231 >|215 )|802 subtract|214 (|40 v.data|215 )|227 ;|219 }|-1
{|329 return|214 (|800 FieldVectorImpl|230 <|800 T|231 >|215 )|802 add|214 (|40 v.data|215 )|227 ;|219 }|-1
super|214 (|802 extractField|214 (|800 v|215 )|215 )|227 ;|-1
super|214 (|802 extractField|214 (|800 d|215 )|215 )|227 ;|-1
{|349 super|214 (|802 extractField|214 (|800 d|215 )|215 )|227 ;|802 copyIn|214 (|800 d|215 )|227 ;|219 }|-1
nextAction|204 =|800 handler|235 .|802 eventOccurred|214 (|800 t|234 ,|800 y|234 ,|207 !|214 (|800 increasing|212 ^|800 forward|215 )|215 )|227 ;|-1
if|214 (|800 n|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 n|215 )|227 ;|219 }|-1
if|214 (|800 n|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 n|215 )|227 ;|219 }|-1
if|214 (|800 f|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
{|313 if|214 (|800 f|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|219 }|-1
if|214 (|800 n|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 n|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|40 c.length|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
return|800 res|227 ;|-1
if|214 (|800 Double|235 .|802 doubleToLongBits|214 (|800 test|215 )|242 !=|800 Double|235 .|802 doubleToLongBits|214 (|802 getEntry|214 (|800 iter|235 .|802 key|216 ()|215 )|215 )|215 )|218 {|329 return|9 false|227 ;|219 }|-1
double|85 []|800 hatResiduals|204 =|800 I|235 .|802 subtract|214 (|800 hat|215 )|235 .|802 operate|214 (|40 model.Y|215 )|235 .|802 getData|216 ()|227 ;|-1
MatrixUtils|235 .|802 checkSubMatrixIndex|214 (|315 this|234 ,|800 startRow|234 ,|800 endRow|234 ,|800 startColumn|234 ,|800 endColumn|215 )|227 ;|-1
MatrixUtils|235 .|802 checkSubMatrixIndex|214 (|315 this|234 ,|800 startRow|234 ,|800 endRow|234 ,|800 startColumn|234 ,|800 endColumn|215 )|227 ;|-1
MatrixUtils|235 .|802 checkSubMatrixIndex|214 (|315 this|234 ,|800 startRow|234 ,|800 endRow|234 ,|800 startColumn|234 ,|800 endColumn|215 )|227 ;|-1
MatrixUtils|235 .|802 checkSubMatrixIndex|214 (|315 this|234 ,|800 startRow|234 ,|800 endRow|234 ,|800 startColumn|234 ,|800 endColumn|215 )|227 ;|-1
MatrixUtils|235 .|802 checkColumnIndex|214 (|315 this|234 ,|800 column|215 )|227 ;|-1
MatrixUtils|235 .|802 checkColumnIndex|214 (|315 this|234 ,|800 column|215 )|227 ;|-1
MatrixUtils|235 .|802 checkRowIndex|214 (|315 this|234 ,|800 row|215 )|227 ;|-1
MatrixUtils|235 .|802 checkRowIndex|214 (|315 this|234 ,|800 row|215 )|227 ;|-1
MatrixUtils|235 .|802 checkColumnIndex|214 (|315 this|234 ,|800 column|215 )|227 ;|-1
MatrixUtils|235 .|802 checkRowIndex|214 (|315 this|234 ,|800 row|215 )|227 ;|-1
MatrixUtils|235 .|802 checkColumnIndex|214 (|315 this|234 ,|800 column|215 )|227 ;|-1
MatrixUtils|235 .|802 checkColumnIndex|214 (|315 this|234 ,|800 column|215 )|227 ;|-1
MatrixUtils|235 .|802 checkRowIndex|214 (|315 this|234 ,|800 row|215 )|227 ;|-1
MatrixUtils|235 .|802 checkRowIndex|214 (|315 this|234 ,|800 row|215 )|227 ;|-1
MatrixUtils|235 .|802 checkSubMatrixIndex|214 (|315 this|234 ,|800 row|234 ,|800 endRow|234 ,|800 column|234 ,|800 endColumn|215 )|227 ;|-1
MatrixUtils|235 .|802 checkSubMatrixIndex|214 (|315 this|234 ,|800 startRow|234 ,|800 endRow|234 ,|800 startColumn|234 ,|800 endColumn|215 )|227 ;|-1
MatrixUtils|235 .|802 checkMultiplicationCompatible|214 (|315 this|234 ,|800 m|215 )|227 ;|-1
MatrixUtils|235 .|802 checkMultiplicationCompatible|214 (|315 this|234 ,|800 m|215 )|227 ;|-1
MatrixUtils|235 .|802 checkSubtractionCompatible|214 (|315 this|234 ,|800 m|215 )|227 ;|-1
MatrixUtils|235 .|802 checkSubtractionCompatible|214 (|315 this|234 ,|800 m|215 )|227 ;|-1
MatrixUtils|235 .|802 checkAdditionCompatible|214 (|315 this|234 ,|800 m|215 )|227 ;|-1
MatrixUtils|235 .|802 checkAdditionCompatible|214 (|315 this|234 ,|800 m|215 )|227 ;|-1
{|315 this|235 .|800 Y|204 =|304 new|801 RealVectorImpl|214 (|800 y|215 )|227 ;|219 }|-1
{|313 if|214 (|800 values|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|802 incrementAll|214 (|800 values|234 ,|34 NUMBER_CONSTANT|234 ,|40 values.length|215 )|227 ;|219 }|-1
{|313 if|214 (|800 values|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|329 return|802 evaluate|214 (|800 values|234 ,|34 NUMBER_CONSTANT|234 ,|40 values.length|215 )|227 ;|219 }|-1
if|214 (|800 alpha|251 >=|34 NUMBER_CONSTANT|250 |||800 alpha|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 alpha|215 )|227 ;|219 }|-1
{|313 if|214 (|800 degreesOfFreedom|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 degreesOfFreedom|215 )|227 ;|219 }|315 this|235 .|800 denominatorDegreesOfFreedom|204 =|800 degreesOfFreedom|227 ;|219 }|-1
{|313 if|214 (|800 degreesOfFreedom|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 degreesOfFreedom|215 )|227 ;|219 }|315 this|235 .|800 numeratorDegreesOfFreedom|204 =|800 degreesOfFreedom|227 ;|219 }|-1
if|214 (|800 n|230 <|34 NUMBER_CONSTANT|250 |||800 n|242 !=|40 sample2.length|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 n|234 ,|40 sample2.length|215 )|227 ;|219 }|-1
if|214 (|800 windowSize|230 <|34 NUMBER_CONSTANT|215 )|218 {|313 if|214 (|800 windowSize|242 !=|800 INFINITE_WINDOW|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 windowSize|215 )|227 ;|219 }|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 p|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|313 if|214 (|800 mean|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 mean|215 )|227 ;|219 }|315 this|235 .|800 mean|204 =|800 mean|227 ;|219 }|-1
MatrixUtils|235 .|802 checkSubMatrixIndex|214 (|315 this|234 ,|800 startRow|234 ,|800 endRow|234 ,|800 startColumn|234 ,|800 endColumn|215 )|227 ;|-1
MatrixUtils|235 .|802 checkSubMatrixIndex|214 (|315 this|234 ,|800 startRow|234 ,|800 endRow|234 ,|800 startColumn|234 ,|800 endColumn|215 )|227 ;|-1
MatrixUtils|235 .|802 checkSubMatrixIndex|214 (|315 this|234 ,|800 startRow|234 ,|800 endRow|234 ,|800 startColumn|234 ,|800 endColumn|215 )|227 ;|-1
MatrixUtils|235 .|802 checkSubMatrixIndex|214 (|315 this|234 ,|800 startRow|234 ,|800 endRow|234 ,|800 startColumn|234 ,|800 endColumn|215 )|227 ;|-1
MatrixUtils|235 .|802 checkMultiplicationCompatible|214 (|315 this|234 ,|800 m|215 )|227 ;|-1
MatrixUtils|235 .|802 checkSubtractionCompatible|214 (|315 this|234 ,|800 m|215 )|227 ;|-1
MatrixUtils|235 .|802 checkAdditionCompatible|214 (|315 this|234 ,|800 m|215 )|227 ;|-1
if|214 (|800 n|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 n|215 )|227 ;|219 }|-1
{|313 if|214 (|800 beta|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 beta|215 )|227 ;|219 }|315 this|235 .|800 beta|204 =|800 beta|227 ;|219 }|-1
{|313 if|214 (|800 alpha|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 alpha|215 )|227 ;|219 }|315 this|235 .|800 alpha|204 =|800 alpha|227 ;|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 p|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|313 if|214 (|800 size|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 size|215 )|227 ;|219 }|800 sampleSize|204 =|800 size|227 ;|219 }|-1
{|313 if|214 (|800 size|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 size|215 )|227 ;|219 }|800 populationSize|204 =|800 size|227 ;|219 }|-1
{|313 if|214 (|800 num|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 num|215 )|227 ;|219 }|800 numberOfSuccesses|204 =|800 num|227 ;|219 }|-1
{|313 if|214 (|800 beta|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 beta|215 )|227 ;|219 }|315 this|235 .|800 beta|204 =|800 beta|227 ;|219 }|-1
{|313 if|214 (|800 alpha|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 alpha|215 )|227 ;|219 }|315 this|235 .|800 alpha|204 =|800 alpha|227 ;|219 }|-1
MatrixUtils|235 .|802 checkMultiplicationCompatible|214 (|315 this|234 ,|800 m|215 )|227 ;|-1
MatrixUtils|235 .|802 checkMultiplicationCompatible|214 (|315 this|234 ,|800 m|215 )|227 ;|-1
MatrixUtils|235 .|802 checkAdditionCompatible|214 (|315 this|234 ,|800 m|215 )|227 ;|-1
MatrixUtils|235 .|802 checkAdditionCompatible|214 (|315 this|234 ,|800 m|215 )|227 ;|-1
MatrixUtils|235 .|802 checkColumnIndex|214 (|315 this|234 ,|800 col|215 )|227 ;|-1
MatrixUtils|235 .|802 checkColumnIndex|214 (|315 this|234 ,|800 col|215 )|227 ;|-1
MatrixUtils|235 .|802 checkRowIndex|214 (|315 this|234 ,|800 row|215 )|227 ;|-1
MatrixUtils|235 .|802 checkRowIndex|214 (|315 this|234 ,|800 row|215 )|227 ;|-1
MatrixUtils|235 .|802 checkColumnIndex|214 (|315 this|234 ,|800 column|215 )|227 ;|-1
MatrixUtils|235 .|802 checkRowIndex|214 (|315 this|234 ,|800 row|215 )|227 ;|-1
if|214 (|800 r|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 r|215 )|227 ;|219 }|-1
catch|214 (|801 ClassCastException|800 ex|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 v|235 .|802 getClass|216 ()|235 .|802 getName|216 ()|215 )|227 ;|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 v|235 .|802 getClass|216 ()|235 .|802 getName|216 ()|215 )|227 ;|219 }|-1
MatrixUtils|235 .|802 checkSubMatrixIndex|214 (|315 this|234 ,|800 startRow|234 ,|800 endRow|234 ,|800 startColumn|234 ,|800 endColumn|215 )|227 ;|-1
MatrixUtils|235 .|802 checkSubMatrixIndex|214 (|315 this|234 ,|800 startRow|234 ,|800 endRow|234 ,|800 startColumn|234 ,|800 endColumn|215 )|227 ;|-1
MatrixUtils|235 .|802 checkSubMatrixIndex|214 (|315 this|234 ,|800 startRow|234 ,|800 endRow|234 ,|800 startColumn|234 ,|800 endColumn|215 )|227 ;|-1
MatrixUtils|235 .|802 checkSubMatrixIndex|214 (|315 this|234 ,|800 startRow|234 ,|800 endRow|234 ,|800 startColumn|234 ,|800 endColumn|215 )|227 ;|-1
MatrixUtils|235 .|802 checkColumnIndex|214 (|315 this|234 ,|800 column|215 )|227 ;|-1
MatrixUtils|235 .|802 checkColumnIndex|214 (|315 this|234 ,|800 column|215 )|227 ;|-1
MatrixUtils|235 .|802 checkRowIndex|214 (|315 this|234 ,|800 row|215 )|227 ;|-1
MatrixUtils|235 .|802 checkRowIndex|214 (|315 this|234 ,|800 row|215 )|227 ;|-1
MatrixUtils|235 .|802 checkColumnIndex|214 (|315 this|234 ,|800 column|215 )|227 ;|-1
MatrixUtils|235 .|802 checkRowIndex|214 (|315 this|234 ,|800 row|215 )|227 ;|-1
MatrixUtils|235 .|802 checkColumnIndex|214 (|315 this|234 ,|800 column|215 )|227 ;|-1
MatrixUtils|235 .|802 checkColumnIndex|214 (|315 this|234 ,|800 column|215 )|227 ;|-1
MatrixUtils|235 .|802 checkRowIndex|214 (|315 this|234 ,|800 row|215 )|227 ;|-1
MatrixUtils|235 .|802 checkRowIndex|214 (|315 this|234 ,|800 row|215 )|227 ;|-1
MatrixUtils|235 .|802 checkSubMatrixIndex|214 (|315 this|234 ,|800 selectedRows|234 ,|800 selectedColumns|215 )|227 ;|-1
MatrixUtils|235 .|802 checkSubMatrixIndex|214 (|315 this|234 ,|800 startRow|234 ,|800 endRow|234 ,|800 startColumn|234 ,|800 endColumn|215 )|227 ;|-1
MatrixUtils|235 .|802 checkSubMatrixIndex|214 (|315 this|234 ,|800 selectedRows|234 ,|800 selectedColumns|215 )|227 ;|-1
MatrixUtils|235 .|802 checkSubMatrixIndex|214 (|315 this|234 ,|800 startRow|234 ,|800 endRow|234 ,|800 startColumn|234 ,|800 endColumn|215 )|227 ;|-1
MatrixUtils|235 .|802 checkMultiplicationCompatible|214 (|315 this|234 ,|800 m|215 )|227 ;|-1
MatrixUtils|235 .|802 checkSubtractionCompatible|214 (|315 this|234 ,|800 m|215 )|227 ;|-1
MatrixUtils|235 .|802 checkAdditionCompatible|214 (|315 this|234 ,|800 m|215 )|227 ;|-1
if|214 (|800 p|230 <|34 NUMBER_CONSTANT|250 |||800 p|231 >|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 p|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|313 if|214 (|800 successes|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 successes|215 )|227 ;|219 }|800 numberOfSuccesses|204 =|800 successes|227 ;|219 }|-1
{|313 if|214 (|800 values|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|329 return|802 evaluate|214 (|800 values|234 ,|34 NUMBER_CONSTANT|234 ,|40 values.length|215 )|227 ;|219 }|-1
throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 obj|235 .|802 getClass|216 ()|235 .|802 getName|216 ()|215 )|227 ;|-1
{|313 if|214 (|800 degreesOfFreedom|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 degreesOfFreedom|215 )|227 ;|219 }|315 this|235 .|800 degreesOfFreedom|204 =|800 degreesOfFreedom|227 ;|219 }|-1
if|214 (|800 p|230 <|34 NUMBER_CONSTANT|250 |||800 p|231 >|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 p|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 x0|231 >|800 x1|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 x0|234 ,|800 x1|215 )|227 ;|219 }|-1
if|214 (|800 x0|231 >|800 x1|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 x0|234 ,|800 x1|215 )|227 ;|219 }|-1
if|214 (|40 mean.length|242 !=|40 standardDeviation.length|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|40 mean.length|234 ,|40 standardDeviation.length|215 )|227 ;|219 }|-1
if|214 (|800 n|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 n|215 )|227 ;|219 }|-1
if|214 (|800 n|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 n|215 )|227 ;|219 }|-1
if|214 (|800 n|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 n|215 )|227 ;|219 }|-1
if|214 (|800 p|230 <|34 NUMBER_CONSTANT|250 |||800 p|231 >|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 p|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|313 if|214 (|800 trials|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 trials|215 )|227 ;|219 }|800 numberOfTrials|204 =|800 trials|227 ;|219 }|-1
{|313 if|214 (|800 realFormat|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|315 this|235 .|800 realFormat|204 =|800 realFormat|227 ;|219 }|-1
{|313 if|214 (|800 imaginaryFormat|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|315 this|235 .|800 imaginaryFormat|204 =|800 imaginaryFormat|227 ;|219 }|-1
if|214 (|800 imaginaryCharacter|236 ==|500 null|250 |||800 imaginaryCharacter|235 .|802 length|216 ()|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 obj|235 .|802 getClass|216 ()|235 .|802 getName|216 ()|215 )|227 ;|219 }|-1
if|214 (|800 p|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 p|215 )|227 ;|219 }|-1
throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 obj|235 .|802 getClass|216 ()|235 .|802 getName|216 ()|215 )|227 ;|-1
if|214 (|800 p|230 <|34 NUMBER_CONSTANT|250 |||800 p|231 >|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 p|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|313 if|214 (|800 sd|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 sd|215 )|227 ;|219 }|800 standardDeviation|204 =|800 sd|227 ;|219 }|-1
if|214 (|800 normProduct|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
{|313 if|214 (|800 s|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 s|215 )|227 ;|219 }|800 scale|204 =|800 s|227 ;|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 p|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 fraction|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 fraction|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 fraction|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 x0|231 >|800 x1|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 x0|234 ,|800 x1|215 )|227 ;|219 }|-1
if|214 (|800 lower|251 >=|800 upper|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 upper|234 ,|800 lower|215 )|227 ;|219 }|-1
if|214 (|800 mean|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 mean|215 )|227 ;|219 }|-1
if|214 (|800 sigma|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 sigma|215 )|227 ;|219 }|-1
if|214 (|800 mean|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 mean|215 )|227 ;|219 }|-1
if|214 (|800 lower|251 >=|800 upper|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 upper|234 ,|800 lower|215 )|227 ;|219 }|-1
if|214 (|800 lower|251 >=|800 upper|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 upper|234 ,|800 lower|215 )|227 ;|219 }|-1
if|214 (|800 len|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 len|215 )|227 ;|219 }|-1
if|214 (|800 lower|251 >=|800 upper|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 upper|234 ,|800 lower|215 )|227 ;|219 }|-1
if|214 (|800 lower|251 >=|800 upper|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 upper|234 ,|800 lower|215 )|227 ;|219 }|-1
if|214 (|800 len|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 len|215 )|227 ;|219 }|-1
if|214 (|800 p|252 <=|34 NUMBER_CONSTANT|250 |||800 p|231 >|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 p|215 )|227 ;|219 }|-1
if|214 (|214 (|800 p|231 >|34 NUMBER_CONSTANT|215 )|250 |||214 (|800 p|252 <=|34 NUMBER_CONSTANT|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 p|215 )|227 ;|219 }|-1
if|214 (|800 alpha|251 >=|34 NUMBER_CONSTANT|250 |||800 alpha|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 alpha|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|214 (|800 alpha|252 <=|34 NUMBER_CONSTANT|215 )|250 |||214 (|800 alpha|231 >|34 NUMBER_CONSTANT|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 alpha|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|214 (|800 alpha|252 <=|34 NUMBER_CONSTANT|215 )|250 |||214 (|800 alpha|231 >|34 NUMBER_CONSTANT|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 alpha|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|214 (|800 alpha|252 <=|34 NUMBER_CONSTANT|215 )|250 |||214 (|800 alpha|231 >|34 NUMBER_CONSTANT|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 alpha|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|214 (|800 alpha|252 <=|34 NUMBER_CONSTANT|215 )|250 |||214 (|800 alpha|231 >|34 NUMBER_CONSTANT|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 alpha|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
Comparable|230 <|231 >|800 obj1|204 =|500 null|227 ;|-1
OpenMapRealVector|800 v1|204 =|304 new|801 OpenMapRealVector|214 (|800 vec1|215 )|227 ;|-1
return|304 new|801 OpenMapRealVector|214 (|800 out|215 )|227 ;|-1
{|802 assertEquals|214 (|801 expected|221 [|800 i|222 ]|234 ,|801 observed|221 [|800 i|222 ]|234 ,|800 tolerance|215 )|227 ;|219 }|-1
final|39 int|800 dimension|204 =|214 (|800 currentState|236 ==|500 null|215 )|233 ?|201 -|34 NUMBER_CONSTANT|226 :|40 currentState.length|227 ;|-1
final|39 int|800 dimension|204 =|214 (|800 currentState|236 ==|500 null|215 )|233 ?|201 -|34 NUMBER_CONSTANT|226 :|40 currentState.length|227 ;|-1
final|801 StepInterpolator|800 prototype|-1
integrator|204 =|500 null|227 ;|-1
integrator|204 =|500 null|227 ;|-1
{|500 super();|800 yDotK|204 =|500 null|227 ;|800 integrator|204 =|500 null|227 ;|219 }|-1
interpolator|235 .|802 reinitialize|214 (|304 new|801 DummyIntegrator|214 (|800 interpolator|215 )|234 ,|800 y|234 ,|800 yDot|234 ,|9 true|215 )|227 ;|-1
interpolator|235 .|802 reinitialize|214 (|304 new|801 DummyIntegrator|214 (|800 interpolator|215 )|234 ,|800 y|234 ,|800 yDot|234 ,|9 true|215 )|227 ;|-1
interpolator|235 .|802 reinitialize|214 (|304 new|801 DummyIntegrator|214 (|800 interpolator|215 )|234 ,|800 y|234 ,|800 yDot|234 ,|9 true|215 )|227 ;|-1
computeDerivatives|214 (|800 t0|200 +|800 h|234 ,|800 y1|234 ,|800 yDot1|215 )|227 ;|-1
{|315 this|235 .|800 factors|204 =|304 new|801 BlockRealMatrix|214 (|800 factors|215 )|227 ;|315 this|235 .|800 target|204 =|800 target|227 ;|219 }|-1
{|315 this|235 .|800 factors|204 =|304 new|801 BlockRealMatrix|214 (|800 factors|215 )|227 ;|315 this|235 .|800 target|204 =|800 target|227 ;|219 }|-1
assertEquals|214 (|800 MatrixUtils|235 .|802 createColumnRealMatrix|214 (|800 col|215 )|234 ,|304 new|801 BlockRealMatrix|214 (|800 colMatrix|215 )|215 )|227 ;|-1
assertEquals|214 (|800 MatrixUtils|235 .|802 createRowRealMatrix|214 (|800 row|215 )|234 ,|304 new|801 BlockRealMatrix|214 (|800 rowMatrix|215 )|215 )|227 ;|-1
assertEquals|214 (|304 new|801 BlockRealMatrix|214 (|800 testData|215 )|234 ,|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 testData|215 )|215 )|227 ;|-1
RealMatrix|800 mA|204 =|304 new|801 BlockRealMatrix|214 (|800 a|215 )|227 ;|-1
RealMatrix|800 result|204 =|304 new|801 BlockRealMatrix|214 (|800 dimension|234 ,|800 dimension|215 )|227 ;|-1
return|304 new|801 BlockRealMatrix|214 (|800 matrixData|215 )|227 ;|-1
assertClose|214 (|45 STRING_CONSTANT|234 ,|800 m|235 .|802 multiply|214 (|304 new|801 BlockRealMatrix|214 (|800 testDataInv|215 )|215 )|234 ,|800 identity|234 ,|800 entryTolerance|215 )|227 ;|-1
{|801 BlockRealMatrix|800 m|204 =|304 new|801 BlockRealMatrix|214 (|800 testData|215 )|227 ;|802 assertEquals|214 (|800 m|234 ,|800 TestUtils|235 .|802 serializeAndRecover|214 (|800 m|215 )|215 )|227 ;|219 }|-1
RealMatrix|800 m|204 =|304 new|801 BlockRealMatrix|214 (|800 subTestData|215 )|227 ;|-1
RealMatrix|800 m|204 =|304 new|801 BlockRealMatrix|214 (|800 subTestData|215 )|227 ;|-1
RealMatrix|800 m|204 =|304 new|801 BlockRealMatrix|214 (|800 subTestData|215 )|227 ;|-1
RealMatrix|800 m|204 =|304 new|801 BlockRealMatrix|214 (|800 subTestData|215 )|227 ;|-1
RealMatrix|800 m|204 =|304 new|801 BlockRealMatrix|214 (|800 subTestData|215 )|227 ;|-1
RealMatrix|800 m|204 =|304 new|801 BlockRealMatrix|214 (|800 subTestData|215 )|227 ;|-1
RealMatrix|800 m|204 =|304 new|801 BlockRealMatrix|214 (|800 subTestData|215 )|227 ;|-1
RealMatrix|800 m|204 =|304 new|801 BlockRealMatrix|214 (|800 subTestData|215 )|227 ;|-1
assertEquals|214 (|304 new|801 BlockRealMatrix|214 (|800 reference|215 )|234 ,|304 new|801 BlockRealMatrix|214 (|800 sub|215 )|215 )|227 ;|-1
assertEquals|214 (|304 new|801 BlockRealMatrix|214 (|800 reference|215 )|234 ,|304 new|801 BlockRealMatrix|214 (|800 sub|215 )|215 )|227 ;|-1
RealMatrix|800 m|204 =|304 new|801 BlockRealMatrix|214 (|800 subTestData|215 )|227 ;|-1
assertEquals|214 (|304 new|801 BlockRealMatrix|214 (|800 reference|215 )|234 ,|800 sub|215 )|227 ;|-1
assertEquals|214 (|304 new|801 BlockRealMatrix|214 (|800 reference|215 )|234 ,|800 sub|215 )|227 ;|-1
RealMatrix|800 m|204 =|304 new|801 BlockRealMatrix|214 (|800 subTestData|215 )|227 ;|-1
RealMatrix|800 m|204 =|304 new|801 BlockRealMatrix|214 (|800 testData|215 )|227 ;|-1
RealMatrix|800 m|204 =|304 new|801 BlockRealMatrix|214 (|800 testData|215 )|227 ;|-1
RealMatrix|800 m|204 =|304 new|801 BlockRealMatrix|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|315 this|235 .|800 factors|204 =|304 new|801 BlockRealMatrix|214 (|800 factors|215 )|227 ;|315 this|235 .|800 target|204 =|800 target|227 ;|219 }|-1
{|329 return|802 computeCorrelationMatrix|214 (|304 new|801 BlockRealMatrix|214 (|800 data|215 )|215 )|227 ;|219 }|-1
RealMatrix|800 outMatrix|204 =|304 new|801 BlockRealMatrix|214 (|800 nVars|234 ,|800 nVars|215 )|227 ;|-1
{|329 return|802 computeCorrelationMatrix|214 (|304 new|801 BlockRealMatrix|214 (|800 data|215 )|215 )|227 ;|219 }|-1
RealMatrix|800 outMatrix|204 =|304 new|801 BlockRealMatrix|214 (|800 nVars|234 ,|800 nVars|215 )|227 ;|-1
return|304 new|801 BlockRealMatrix|214 (|800 out|215 )|227 ;|-1
return|304 new|801 BlockRealMatrix|214 (|800 out|215 )|227 ;|-1
{|315 this|214 (|304 new|801 BlockRealMatrix|214 (|800 data|215 )|215 )|227 ;|219 }|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 BlockFieldMatrix|230 <|800 Fraction|231 >|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 BlockFieldMatrix|230 <|800 Fraction|231 >|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 BlockFieldMatrix|230 <|800 Fraction|231 >|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 BlockFieldMatrix|230 <|800 Fraction|231 >|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 BlockFieldMatrix|230 <|800 Fraction|231 >|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 BlockFieldMatrix|230 <|800 Fraction|231 >|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 BlockFieldMatrix|230 <|800 Fraction|231 >|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 BlockFieldMatrix|230 <|800 Fraction|231 >|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 BlockFieldMatrix|230 <|800 Fraction|231 >|214 (|800 subTestData|215 )|227 ;|-1
assertEquals|214 (|304 new|801 BlockFieldMatrix|230 <|800 Fraction|231 >|214 (|800 reference|215 )|234 ,|800 sub|215 )|227 ;|-1
assertEquals|214 (|304 new|801 BlockFieldMatrix|230 <|800 Fraction|231 >|214 (|800 reference|215 )|234 ,|800 sub|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 BlockFieldMatrix|230 <|800 Fraction|231 >|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 BlockFieldMatrix|230 <|800 Fraction|231 >|214 (|800 testData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 BlockFieldMatrix|230 <|800 Fraction|231 >|214 (|800 testData|215 )|227 ;|-1
{|329 return|802 computeCovarianceMatrix|214 (|304 new|801 BlockRealMatrix|214 (|800 data|215 )|234 ,|800 biasCorrected|215 )|227 ;|219 }|-1
RealMatrix|800 outMatrix|204 =|304 new|801 BlockRealMatrix|214 (|800 dimension|234 ,|800 dimension|215 )|227 ;|-1
{|315 this|214 (|304 new|801 BlockRealMatrix|214 (|800 data|215 )|234 ,|800 biasCorrected|215 )|227 ;|219 }|-1
FieldMatrix|230 <|800 Fraction|231 >|800 matrix|204 =|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 testData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 matrix|204 =|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 testData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 matrix|204 =|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 testData|215 )|227 ;|-1
{|802 setColumn|214 (|800 column|234 ,|214 (|214 (|800 ArrayRealVector|215 )|800 vector|215 )|235 .|802 getDataRef|216 ()|215 )|227 ;|219 }|-1
return|304 new|801 ArrayRealVector|214 (|800 outData|234 ,|9 false|215 )|227 ;|-1
{|802 setRow|214 (|800 row|234 ,|214 (|214 (|800 ArrayRealVector|215 )|800 vector|215 )|235 .|802 getDataRef|216 ()|215 )|227 ;|219 }|-1
return|304 new|801 ArrayRealVector|214 (|800 outData|234 ,|9 false|215 )|227 ;|-1
{|329 return|304 new|801 ArrayRealVector|214 (|802 getColumn|214 (|800 column|215 )|234 ,|9 false|215 )|227 ;|219 }|-1
{|329 return|304 new|801 ArrayRealVector|214 (|802 getRow|214 (|800 row|215 )|234 ,|9 false|215 )|227 ;|219 }|-1
eigenvectors|204 =|304 new|801 ArrayRealVector|221 [|800 m|222 ]|227 ;|-1
final|801 ArrayRealVector|800 v|204 =|801 eigenvectors|221 [|800 i|222 ]|227 ;|-1
final|801 ArrayRealVector|800 v|204 =|801 eigenvectors|221 [|800 i|222 ]|227 ;|-1
final|801 ArrayRealVector|85 []|800 eigenvectors|-1
{|315 this|235 .|800 X|204 =|304 new|801 Array2DRowRealMatrix|214 (|800 x|215 )|227 ;|219 }|-1
{|315 this|235 .|800 Y|204 =|304 new|801 ArrayRealVector|214 (|800 y|215 )|227 ;|219 }|-1
return|304 new|801 ArrayRealVector|214 (|800 data|234 ,|9 false|215 )|227 ;|-1
{|800 m|235 .|802 setColumnVector|214 (|34 NUMBER_CONSTANT|234 ,|304 new|801 ArrayRealVector|214 (|34 NUMBER_CONSTANT|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
TestUtils|235 .|802 assertEquals|214 (|45 STRING_CONSTANT|234 ,|800 m|235 .|802 preMultiply|214 (|304 new|801 ArrayRealVector|214 (|800 testVector|215 )|235 .|802 getData|216 ()|215 )|234 ,|800 preMultTest|234 ,|800 normTolerance|215 )|227 ;|-1
TestUtils|235 .|802 assertEquals|214 (|45 STRING_CONSTANT|234 ,|800 testVector|234 ,|800 m|235 .|802 operate|214 (|304 new|801 ArrayRealVector|214 (|800 testVector|215 )|215 )|235 .|802 getData|216 ()|234 ,|800 entryTolerance|215 )|227 ;|-1
{|349 super|214 (|45 STRING_CONSTANT|234 ,|304 new|801 ArrayRealVector|214 (|800 argument|215 )|215 )|227 ;|315 this|235 .|800 argument|204 =|800 argument|235 .|802 clone|216 ()|227 ;|219 }|-1
return|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 out|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 subTestData|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|230 <|800 Fraction|231 >|214 (|800 data|234 ,|9 false|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 subTestData|215 )|227 ;|-1
assertEquals|214 (|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 reference|215 )|234 ,|800 sub|215 )|227 ;|-1
assertEquals|214 (|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 reference|215 )|234 ,|800 sub|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 testData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 testData|215 )|227 ;|-1
{|315 this|214 (|304 new|801 ArrayRealVector|214 (|800 coefficients|215 )|234 ,|800 constantTerm|215 )|227 ;|219 }|-1
this|235 .|800 coefficients|204 =|304 new|801 ArrayRealVector|214 (|800 sub|234 ,|9 false|215 )|227 ;|-1
{|315 this|214 (|304 new|801 ArrayRealVector|214 (|800 coefficients|215 )|234 ,|800 relationship|234 ,|800 value|215 )|227 ;|219 }|-1
return|304 new|801 Array2DRowRealMatrix|214 (|800 matrixData|215 )|227 ;|-1
RealMatrix|800 repeatedColumns|204 =|304 new|801 Array2DRowRealMatrix|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|800 solver|235 .|802 solve|214 (|304 new|40 ArrayRealVectorTest.RealVectorTestImpl|214 (|800 b|235 .|802 getColumn|214 (|34 NUMBER_CONSTANT|215 )|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
this|235 .|800 tableau|204 =|304 new|801 Array2DRowRealMatrix|214 (|800 matrix|215 )|227 ;|-1
this|235 .|800 tableau|204 =|304 new|801 Array2DRowRealMatrix|214 (|802 createTableau|214 (|800 goalType|236 ==|40 GoalType.MAXIMIZE|215 )|215 )|227 ;|-1
nordsieck|204 =|304 new|801 Array2DRowRealMatrix|214 (|800 nData|234 ,|9 false|215 )|227 ;|-1
{|802 setColumn|214 (|800 column|234 ,|214 (|214 (|800 ArrayFieldVector|230 <|800 T|231 >|215 )|800 vector|215 )|235 .|802 getDataRef|216 ()|215 )|227 ;|219 }|-1
return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|800 outData|234 ,|9 false|215 )|227 ;|-1
{|802 setRow|214 (|800 row|234 ,|214 (|214 (|800 ArrayFieldVector|230 <|800 T|231 >|215 )|800 vector|215 )|235 .|802 getDataRef|216 ()|215 )|227 ;|219 }|-1
return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|800 outData|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayRealVector|214 (|800 x|215 )|227 ;|-1
{|315 this|235 .|800 X|204 =|304 new|801 Array2DRowRealMatrix|214 (|800 x|215 )|227 ;|800 qr|204 =|304 new|801 QRDecompositionImpl|214 (|800 X|215 )|227 ;|219 }|-1
Array2DRowRealMatrix|800 augI|204 =|304 new|801 Array2DRowRealMatrix|214 (|800 n|234 ,|800 n|215 )|227 ;|-1
return|304 new|801 Array2DRowFieldMatrix|230 <|800 BigFraction|231 >|214 (|800 pData|234 ,|9 false|215 )|227 ;|-1
FieldMatrix|230 <|800 BigFraction|231 >|800 bigMSupdate|204 =|800 bigMStoN|235 .|802 multiply|214 (|304 new|801 Array2DRowFieldMatrix|230 <|800 BigFraction|231 >|214 (|800 shiftedP|234 ,|9 false|215 )|215 )|227 ;|-1
return|40 coefficients.msToN|235 .|802 multiply|214 (|304 new|801 Array2DRowRealMatrix|214 (|800 multistep|234 ,|9 false|215 )|215 )|227 ;|-1
{|800 solver|235 .|802 solve|214 (|304 new|40 ArrayRealVectorTest.RealVectorTestImpl|214 (|800 b|235 .|802 getColumn|214 (|34 NUMBER_CONSTANT|215 )|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
{|800 solver|235 .|802 solve|214 (|304 new|40 ArrayRealVectorTest.RealVectorTestImpl|214 (|800 b|235 .|802 getColumn|214 (|34 NUMBER_CONSTANT|215 )|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
return|304 new|801 Array2DRowRealMatrix|214 (|800 x|234 ,|9 false|215 )|227 ;|-1
{|315 this|235 .|800 Omega|204 =|304 new|801 Array2DRowRealMatrix|214 (|800 omega|215 )|227 ;|315 this|235 .|800 OmegaInverse|204 =|500 null|227 ;|219 }|-1
{|329 return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|802 getColumn|214 (|800 column|215 )|234 ,|9 false|215 )|227 ;|219 }|-1
{|329 return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|802 getRow|214 (|800 row|215 )|234 ,|9 false|215 )|227 ;|219 }|-1
return|304 new|801 ArrayRealVector|214 (|800 data|234 ,|9 false|215 )|227 ;|-1
assertClose|214 (|45 STRING_CONSTANT|234 ,|800 m|235 .|802 preMultiply|214 (|304 new|801 ArrayRealVector|214 (|800 testVector|215 )|235 .|802 getData|216 ()|215 )|234 ,|800 preMultTest|234 ,|800 normTolerance|215 )|227 ;|-1
assertClose|214 (|45 STRING_CONSTANT|234 ,|800 testVector|234 ,|800 m|235 .|802 operate|214 (|304 new|801 ArrayRealVector|214 (|800 testVector|215 )|215 )|235 .|802 getData|216 ()|234 ,|800 entryTolerance|215 )|227 ;|-1
RealVector|800 lhs|204 =|304 new|801 ArrayRealVector|214 (|800 numCoefficients|215 )|227 ;|-1
final|801 RealMatrix|800 matrix|204 =|304 new|801 Array2DRowRealMatrix|214 (|800 data|234 ,|9 false|215 )|227 ;|-1
final|801 RealVector|800 vector|204 =|304 new|801 ArrayRealVector|214 (|800 data|234 ,|9 false|215 )|227 ;|-1
RealMatrix|802 getConvertedMatrix|216 ()|218 {|329 return|304 new|801 Array2DRowRealMatrix|214 (|800 data|234 ,|9 false|215 )|227 ;|219 }|-1
RealMatrix|802 getConvertedMatrix|216 ()|218 {|329 return|304 new|801 Array2DRowRealMatrix|214 (|800 data|234 ,|9 false|215 )|227 ;|219 }|-1
{|329 return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|800 data|234 ,|9 true|215 )|227 ;|219 }|-1
{|329 return|304 new|801 ArrayRealVector|214 (|800 data|234 ,|9 true|215 )|227 ;|219 }|-1
return|304 new|801 Array2DRowFieldMatrix|230 <|800 T|231 >|214 (|800 d|234 ,|9 false|215 )|227 ;|-1
new|801 Array2DRowFieldMatrix|230 <|800 T|231 >|214 (|800 data|215 )|-1
new|801 Array2DRowFieldMatrix|230 <|800 T|231 >|214 (|800 field|234 ,|800 rows|234 ,|800 columns|215 )|-1
{|800 es|235 .|802 solve|214 (|304 new|40 ArrayRealVectorTest.RealVectorTestImpl|214 (|800 b|235 .|802 getColumn|214 (|34 NUMBER_CONSTANT|215 )|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
decompMatrix|204 =|304 new|801 Array2DRowRealMatrix|214 (|800 decomp|215 )|227 ;|-1
RealMatrix|800 triangularMatrix|204 =|304 new|801 Array2DRowRealMatrix|214 (|800 lowerTriangularMatrix|215 )|227 ;|-1
RealMatrix|800 triangularMatrix|204 =|304 new|801 Array2DRowRealMatrix|214 (|800 lowerTriangularMatrix|215 )|227 ;|-1
solver|235 .|802 solve|214 (|304 new|801 Array2DRowRealMatrix|214 (|800 m3|215 )|234 ,|304 new|39 double|85 []|218 {|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|219 }|215 )|227 ;|-1
solver|235 .|802 decompose|214 (|304 new|801 Array2DRowRealMatrix|214 (|800 m7|215 )|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|230 <|800 Fraction|231 >|214 (|800 data|234 ,|9 false|215 )|227 ;|-1
assertClose|214 (|45 STRING_CONSTANT|234 ,|800 m|235 .|802 preMultiply|214 (|304 new|801 ArrayFieldVector|230 <|800 Fraction|231 >|214 (|800 testVector|215 )|235 .|802 getData|216 ()|215 )|234 ,|800 preMultTest|234 ,|800 normTolerance|215 )|227 ;|-1
assertClose|214 (|45 STRING_CONSTANT|234 ,|800 testVector|234 ,|800 m|235 .|802 operate|214 (|304 new|801 ArrayFieldVector|230 <|800 Fraction|231 >|214 (|800 testVector|215 )|215 )|235 .|802 getData|216 ()|234 ,|800 entryTolerance|215 )|227 ;|-1
assertClose|214 (|45 STRING_CONSTANT|234 ,|800 m|235 .|802 multiply|214 (|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 testDataInv|215 )|215 )|234 ,|800 identity|234 ,|800 entryTolerance|215 )|227 ;|-1
return|304 new|801 Array2DRowRealMatrix|214 (|800 bp|234 ,|9 false|215 )|227 ;|-1
{|800 solver|235 .|802 solve|214 (|304 new|40 ArrayRealVectorTest.RealVectorTestImpl|214 (|800 b|235 .|802 getColumn|214 (|34 NUMBER_CONSTANT|215 )|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
{|800 solver|235 .|802 solve|214 (|304 new|40 ArrayRealVectorTest.RealVectorTestImpl|214 (|800 b|235 .|802 getColumn|214 (|34 NUMBER_CONSTANT|215 )|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
return|304 new|801 Array2DRowFieldMatrix|230 <|800 BigFraction|231 >|214 (|800 pData|234 ,|9 false|215 )|227 ;|-1
FieldMatrix|230 <|800 BigFraction|231 >|800 bigMSupdate|204 =|800 bigMStoN|235 .|802 multiply|214 (|304 new|801 Array2DRowFieldMatrix|230 <|800 BigFraction|231 >|214 (|800 shiftedP|234 ,|9 false|215 )|215 )|227 ;|-1
return|40 coefficients.msToN|235 .|802 multiply|214 (|304 new|801 Array2DRowRealMatrix|214 (|800 multistep|234 ,|9 false|215 )|215 )|227 ;|-1
FieldMatrix|230 <|800 T|231 >|800 identity|204 =|304 new|801 Array2DRowFieldMatrix|230 <|800 T|231 >|214 (|800 field|234 ,|800 m|234 ,|800 m|215 )|227 ;|-1
return|304 new|801 Array2DRowFieldMatrix|230 <|800 T|231 >|214 (|800 bp|234 ,|9 false|215 )|227 ;|-1
cachedP|204 =|304 new|801 Array2DRowFieldMatrix|230 <|800 T|231 >|214 (|800 field|234 ,|800 m|234 ,|800 m|215 )|227 ;|-1
cachedU|204 =|304 new|801 Array2DRowFieldMatrix|230 <|800 T|231 >|214 (|800 field|234 ,|800 m|234 ,|800 m|215 )|227 ;|-1
cachedL|204 =|304 new|801 Array2DRowFieldMatrix|230 <|800 T|231 >|214 (|800 field|234 ,|800 m|234 ,|800 m|215 )|227 ;|-1
if|214 (|800 n|242 !=|40 startConfiguration.length|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 n|234 ,|40 startConfiguration.length|215 )|227 ;|219 }|-1
{|800 Arrays|235 .|802 fill|214 (|800 after|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
f|235 .|802 set|214 (|315 this|234 ,|800 NordsieckTransformer|235 .|802 getInstance|214 (|800 nSteps|200 +|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
{|349 super|214 (|45 STRING_CONSTANT|234 ,|800 nSteps|234 ,|800 nSteps|234 ,|800 minStep|234 ,|800 maxStep|234 ,|800 vecAbsoluteTolerance|234 ,|800 vecRelativeTolerance|215 )|227 ;|219 }|-1
{|349 super|214 (|45 STRING_CONSTANT|234 ,|800 nSteps|234 ,|800 nSteps|234 ,|800 minStep|234 ,|800 maxStep|234 ,|800 scalAbsoluteTolerance|234 ,|800 scalRelativeTolerance|215 )|227 ;|219 }|-1
final|801 Array2DRowRealMatrix|800 nordsieck|-1
if|214 (|40 interpolator.nordsieck|242 !=|500 null|215 )|218 {|800 nordsieck|204 =|304 new|801 Array2DRowRealMatrix|214 (|40 interpolator.nordsieck|235 .|802 getDataRef|216 ()|234 ,|9 true|215 )|227 ;|219 }|-1
nordsieck|204 =|802 initializeHighOrderDerivatives|214 (|800 scaled|234 ,|800 multistep|215 )|227 ;|-1
TestProblem1|800 pb2|204 =|800 pb1|235 .|802 copy|216 ()|227 ;|-1
v|328 instanceof|800 SparseFieldVector|230 <|231 >|-1
v|328 instanceof|800 SparseFieldVector|230 <|231 >|-1
v|328 instanceof|800 SparseFieldVector|230 <|231 >|-1
v|328 instanceof|800 SparseFieldVector|230 <|231 >|-1
!|214 (|800 original|328 instanceof|800 RandomKey|230 <|231 >|215 )|-1
if|214 (|207 !|214 (|800 another|328 instanceof|800 RandomKey|230 <|231 >|215 )|215 )|329 return|9 false|227 ;|-1
{|802 addMeasurement|214 (|304 new|801 LocalMeasurement|214 (|315 this|234 ,|800 x|234 ,|800 y|234 ,|800 w|215 )|215 )|227 ;|219 }|-1
{|801 measurements|221 [|800 i|222 ]|204 =|304 new|801 MinpackMeasurement|214 (|315 this|234 ,|800 i|215 )|227 ;|219 }|-1
Comparable|230 <|231 >|800 v|-1
Comparable|230 <|231 >|800 v|-1
Comparable|230 <|231 >|800 v|-1
final|39 double|800 curN|204 =|800 current|235 .|802 getN|216 ()|227 ;|-1
StatisticalSummary|800 observed|-1
StatisticalSummary|800 aggregatedStats|204 =|800 AggregateSummaryStatistics|235 .|802 aggregate|214 (|802 aggregate|215 )|227 ;|-1
optimizer|235 .|802 setConvergenceChecker|214 (|304 new|801 SimpleRealPointChecker|214 (|201 -|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
optimizer|235 .|802 setConvergenceChecker|214 (|304 new|801 SimpleVectorialPointChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
final|801 DescriptiveStatistics|800 dstat|204 =|802 createDescriptiveStatistics|216 ()|227 ;|-1
DescriptiveStatistics|800 stats|204 =|802 createDescriptiveStatistics|216 ()|227 ;|-1
DescriptiveStatistics|800 stats|204 =|802 createDescriptiveStatistics|216 ()|227 ;|-1
MultivariateSummaryStatistics|800 u|204 =|802 createMultivariateSummaryStatistics|214 (|34 NUMBER_CONSTANT|234 ,|9 true|215 )|227 ;|-1
MultivariateSummaryStatistics|800 u|204 =|802 createMultivariateSummaryStatistics|214 (|34 NUMBER_CONSTANT|234 ,|9 true|215 )|227 ;|-1
MultivariateSummaryStatistics|800 u|204 =|802 createMultivariateSummaryStatistics|214 (|34 NUMBER_CONSTANT|234 ,|9 true|215 )|227 ;|-1
MultivariateSummaryStatistics|800 u|204 =|802 createMultivariateSummaryStatistics|214 (|34 NUMBER_CONSTANT|234 ,|9 true|215 )|227 ;|-1
MultivariateSummaryStatistics|800 u|204 =|802 createMultivariateSummaryStatistics|214 (|34 NUMBER_CONSTANT|234 ,|9 true|215 )|227 ;|-1
MultivariateSummaryStatistics|800 u|204 =|802 createMultivariateSummaryStatistics|214 (|34 NUMBER_CONSTANT|234 ,|9 true|215 )|227 ;|-1
{|349 super|214 (|800 m|234 ,|800 startParams|234 ,|800 theoreticalMinCost|234 ,|800 theoreticalMinParams|215 )|227 ;|802 setCostAccuracy|214 (|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
OpenMapRealVector|800 res|204 =|802 copy|216 ()|227 ;|-1
OpenMapRealVector|800 res|204 =|802 copy|216 ()|227 ;|-1
this|235 .|800 constraints|204 =|802 normalizeConstraints|214 (|800 constraints|215 )|227 ;|-1
return|801 FACTORIALS|221 [|800 n|222 ]|227 ;|-1
{|349 super|214 (|45 STRING_CONSTANT|234 ,|800 STATIC_C|234 ,|800 STATIC_A|234 ,|800 STATIC_B|234 ,|304 new|801 ThreeEighthesStepInterpolator|216 ()|234 ,|800 step|215 )|227 ;|219 }|-1
{|349 super|214 (|45 STRING_CONSTANT|234 ,|800 STATIC_C|234 ,|800 STATIC_A|234 ,|800 STATIC_B|234 ,|304 new|801 EulerStepInterpolator|216 ()|234 ,|800 step|215 )|227 ;|219 }|-1
public|83 static|801 DummyStepHandler|802 getInstance|216 ()|218 {|329 return|800 INSTANCE|227 ;|219 }|-1
{|349 super|214 (|45 STRING_CONSTANT|234 ,|800 STATIC_C|234 ,|800 STATIC_A|234 ,|800 STATIC_B|234 ,|304 new|801 MidpointStepInterpolator|216 ()|234 ,|800 step|215 )|227 ;|219 }|-1
{|329 return|800 PERCENTILE|235 .|802 evaluate|214 (|800 values|234 ,|800 begin|234 ,|800 length|234 ,|800 p|215 )|227 ;|219 }|-1
{|329 return|800 PERCENTILE|235 .|802 evaluate|214 (|800 values|234 ,|800 p|215 )|227 ;|219 }|-1
{|329 return|800 MIN|235 .|802 evaluate|214 (|800 values|234 ,|800 begin|234 ,|800 length|215 )|227 ;|219 }|-1
{|329 return|800 MIN|235 .|802 evaluate|214 (|800 values|215 )|227 ;|219 }|-1
{|329 return|800 MAX|235 .|802 evaluate|214 (|800 values|234 ,|800 begin|234 ,|800 length|215 )|227 ;|219 }|-1
{|329 return|800 MAX|235 .|802 evaluate|214 (|800 values|215 )|227 ;|219 }|-1
{|329 return|800 VARIANCE|235 .|802 evaluate|214 (|800 values|234 ,|800 mean|215 )|227 ;|219 }|-1
{|329 return|800 VARIANCE|235 .|802 evaluate|214 (|800 values|234 ,|800 mean|234 ,|800 begin|234 ,|800 length|215 )|227 ;|219 }|-1
{|329 return|800 VARIANCE|235 .|802 evaluate|214 (|800 values|234 ,|800 begin|234 ,|800 length|215 )|227 ;|219 }|-1
{|329 return|800 VARIANCE|235 .|802 evaluate|214 (|800 values|215 )|227 ;|219 }|-1
{|329 return|800 GEOMETRIC_MEAN|235 .|802 evaluate|214 (|800 values|234 ,|800 begin|234 ,|800 length|215 )|227 ;|219 }|-1
{|329 return|800 GEOMETRIC_MEAN|235 .|802 evaluate|214 (|800 values|215 )|227 ;|219 }|-1
{|329 return|800 MEAN|235 .|802 evaluate|214 (|800 values|234 ,|800 begin|234 ,|800 length|215 )|227 ;|219 }|-1
{|329 return|800 MEAN|235 .|802 evaluate|214 (|800 values|215 )|227 ;|219 }|-1
{|329 return|800 SUM_OF_LOGS|235 .|802 evaluate|214 (|800 values|234 ,|800 begin|234 ,|800 length|215 )|227 ;|219 }|-1
{|329 return|800 SUM_OF_LOGS|235 .|802 evaluate|214 (|800 values|215 )|227 ;|219 }|-1
{|329 return|800 PRODUCT|235 .|802 evaluate|214 (|800 values|234 ,|800 begin|234 ,|800 length|215 )|227 ;|219 }|-1
{|329 return|800 PRODUCT|235 .|802 evaluate|214 (|800 values|215 )|227 ;|219 }|-1
{|329 return|800 SUM_OF_SQUARES|235 .|802 evaluate|214 (|800 values|234 ,|800 begin|234 ,|800 length|215 )|227 ;|219 }|-1
{|329 return|800 SUM_OF_SQUARES|235 .|802 evaluate|214 (|800 values|215 )|227 ;|219 }|-1
{|329 return|800 SUM|235 .|802 evaluate|214 (|800 values|234 ,|800 begin|234 ,|800 length|215 )|227 ;|219 }|-1
{|329 return|800 SUM|235 .|802 evaluate|214 (|800 values|215 )|227 ;|219 }|-1
{|349 super|214 (|45 STRING_CONSTANT|234 ,|800 STATIC_C|234 ,|800 STATIC_A|234 ,|800 STATIC_B|234 ,|304 new|801 ClassicalRungeKuttaStepInterpolator|216 ()|234 ,|800 step|215 )|227 ;|219 }|-1
@|800 Override|83 public|801 Object|85 []|85 []|802 getContents|216 ()|218 {|329 return|800 CONTENTS|235 .|802 clone|216 ()|227 ;|219 }|-1
{|349 super|214 (|45 STRING_CONSTANT|234 ,|800 STATIC_C|234 ,|800 STATIC_A|234 ,|800 STATIC_B|234 ,|304 new|801 GillStepInterpolator|216 ()|234 ,|800 step|215 )|227 ;|219 }|-1
try|218 {|800 alg|204 =|800 MessageDigest|235 .|802 getInstance|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 NoSuchAlgorithmException|800 ex|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createInternalError|214 (|800 ex|215 )|227 ;|219 }|-1
{|329 return|800 row|202 *|800 columns|200 +|800 column|227 ;|219 }|-1
@|800 Override|83 public|39 int|802 getRowDimension|216 ()|218 {|329 return|800 rows|227 ;|219 }|-1
@|800 Override|83 public|39 int|802 getColumnDimension|216 ()|218 {|329 return|800 columns|227 ;|219 }|-1
{|329 return|800 row|202 *|800 columns|200 +|800 column|227 ;|219 }|-1
@|800 Override|83 public|39 int|802 getRowDimension|216 ()|218 {|329 return|800 rows|227 ;|219 }|-1
@|800 Override|83 public|39 int|802 getColumnDimension|216 ()|218 {|329 return|800 columns|227 ;|219 }|-1
final|801 SimplexTableau|800 tableau|204 =|304 new|801 SimplexTableau|214 (|800 function|234 ,|800 linearConstraints|234 ,|800 goal|234 ,|800 nonNegative|234 ,|800 epsilon|215 )|227 ;|-1
{|313 if|214 (|800 beta|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 beta|215 )|227 ;|219 }|315 this|235 .|800 scale|204 =|800 beta|227 ;|219 }|-1
{|313 if|214 (|800 alpha|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 alpha|215 )|227 ;|219 }|315 this|235 .|800 shape|204 =|800 alpha|227 ;|219 }|-1
{|83 final|39 double|800 residual|204 =|801 residuals|221 [|800 i|222 ]|227 ;|800 chiSquare|237 +=|800 residual|202 *|800 residual|203 /|801 residualsWeights|221 [|800 i|222 ]|227 ;|219 }|-1
{|83 final|39 double|800 residual|204 =|801 residuals|221 [|800 i|222 ]|227 ;|800 criterion|237 +=|801 residualsWeights|221 [|800 i|222 ]|202 *|800 residual|202 *|800 residual|227 ;|219 }|-1
final|39 double|800 factor|204 =|201 -|800 Math|235 .|802 sqrt|214 (|801 residualsWeights|221 [|800 i|222 ]|215 )|227 ;|-1
catch|214 (|801 NumberFormatException|800 e|215 )|218 {|320 throw|304 new|801 MathException|214 (|800 e|234 ,|45 STRING_CONSTANT|234 ,|800 e|235 .|802 getMessage|216 ()|215 )|227 ;|219 }|-1
UnivariateMatrixFunction|802 derivative|214 (|215 )|227 ;|-1
UnivariateRealFunction|802 derivative|214 (|215 )|227 ;|-1
double|802 getMean|214 (|215 )|227 ;|-1
double|802 getExponent|214 (|215 )|227 ;|-1
int|802 getNumberOfElements|214 (|215 )|227 ;|-1
boolean|802 isNaN|214 (|215 )|227 ;|-1
UnivariateVectorialFunction|802 derivative|214 (|215 )|227 ;|-1
long|802 getN|214 (|215 )|227 ;|-1
int|802 getDimension|214 (|215 )|227 ;|-1
double|802 fitness|214 (|215 )|227 ;|-1
int|802 getDimension|214 (|215 )|227 ;|-1
int|802 getDimension|214 (|215 )|227 ;|-1
int|802 getSampleSize|214 (|215 )|227 ;|-1
int|802 getPopulationSize|214 (|215 )|227 ;|-1
int|802 getNumberOfSuccesses|214 (|215 )|227 ;|-1
double|802 getSum|214 (|215 )|227 ;|-1
long|802 getN|214 (|215 )|227 ;|-1
double|802 getMin|214 (|215 )|227 ;|-1
double|802 getMax|214 (|215 )|227 ;|-1
double|802 getCurrentTime|214 (|215 )|227 ;|-1
double|802 getPreviousTime|214 (|215 )|227 ;|-1
void|802 resetRelativeAccuracy|214 (|215 )|227 ;|-1
double|802 getRelativeAccuracy|214 (|215 )|227 ;|-1
void|802 resetAbsoluteAccuracy|214 (|215 )|227 ;|-1
double|802 getAbsoluteAccuracy|214 (|215 )|227 ;|-1
int|802 getMaximalIterationCount|214 (|215 )|227 ;|-1
void|802 reset|214 (|215 )|227 ;|-1
public|83 static|801 DummyStepHandler|802 getInstance|216 ()|218 {|329 return|40 LazyHolder.INSTANCE|227 ;|219 }|-1
{|315 this|235 .|800 randomData|204 =|800 randomData|227 ;|219 }|-1
final|801 RandomGenerator|800 generator|-1
return|802 anovaPValue|214 (|800 categoryData|215 )|230 <|800 alpha|227 ;|-1
{|329 return|800 internalArray|227 ;|219 }|-1
{|329 return|800 internalArray|227 ;|219 }|-1
synchronized|39 int|802 getInternalLength|216 ()|218 {|329 return|40 internalArray.length|227 ;|219 }|-1
double|800 dx|204 =|800 x2|201 -|800 x1|227 ;|-1
return|800 isForward|233 ?|801 omegaImaginaryForward|221 [|800 k|222 ]|226 :|801 omegaImaginaryInverse|221 [|800 k|222 ]|227 ;|-1
isForward|204 =|800 n|231 >|34 NUMBER_CONSTANT|227 ;|-1
return|800 stdDev|227 ;|-1
{|802 checkSignificanceLevel|214 (|800 alpha|215 )|227 ;|329 return|802 tTest|214 (|800 sampleStats1|234 ,|800 sampleStats2|215 )|230 <|800 alpha|227 ;|219 }|-1
{|802 checkSignificanceLevel|214 (|800 alpha|215 )|227 ;|329 return|802 homoscedasticTTest|214 (|800 sample1|234 ,|800 sample2|215 )|230 <|800 alpha|227 ;|219 }|-1
{|802 checkSignificanceLevel|214 (|800 alpha|215 )|227 ;|329 return|802 tTest|214 (|800 sample1|234 ,|800 sample2|215 )|230 <|800 alpha|227 ;|219 }|-1
{|802 checkSignificanceLevel|214 (|800 alpha|215 )|227 ;|329 return|802 tTest|214 (|800 mu|234 ,|800 sampleStats|215 )|230 <|800 alpha|227 ;|219 }|-1
{|802 checkSignificanceLevel|214 (|800 alpha|215 )|227 ;|329 return|802 tTest|214 (|800 mu|234 ,|800 sample|215 )|230 <|800 alpha|227 ;|219 }|-1
{|802 checkSignificanceLevel|214 (|800 alpha|215 )|227 ;|329 return|802 pairedTTest|214 (|800 sample1|234 ,|800 sample2|215 )|230 <|800 alpha|227 ;|219 }|-1
public|39 boolean|802 isSquare|216 ()|218 {|329 return|802 getColumnDimension|216 ()|236 ==|802 getRowDimension|216 ()|227 ;|219 }|-1
{|800 g0Positive|204 =|800 g0|251 >=|34 NUMBER_CONSTANT|227 ;|800 nextAction|204 =|40 EventHandler.CONTINUE|227 ;|219 }|-1
increasing|204 =|800 gb|251 >=|800 ga|227 ;|-1
{|800 t0|204 =|800 tStart|227 ;|800 g0|204 =|800 handler|235 .|802 g|214 (|800 tStart|234 ,|800 yStart|215 )|227 ;|800 g0Positive|204 =|800 g0|251 >=|34 NUMBER_CONSTANT|227 ;|219 }|-1
final|39 boolean|800 forward|204 =|800 t|231 >|800 t0|227 ;|-1
final|39 boolean|800 forward|204 =|800 t|231 >|800 t0|227 ;|-1
{|800 sum|237 +=|801 values|221 [|800 i|222 ]|202 *|801 weights|221 [|800 i|222 ]|227 ;|219 }|-1
final|39 boolean|800 forward|204 =|800 t|231 >|800 t0|227 ;|-1
{|329 return|800 o1|235 .|802 compareTo|214 (|214 (|800 T|215 )|800 o2|215 )|227 ;|219 }|-1
return|802 chiSquareTestDataSetsComparison|214 (|800 observed1|234 ,|800 observed2|215 )|230 <|800 alpha|227 ;|-1
unequalCounts|204 =|800 countSum1|242 !=|800 countSum2|227 ;|-1
return|802 chiSquareTest|214 (|800 counts|215 )|230 <|800 alpha|227 ;|-1
return|802 chiSquareTest|214 (|800 expected|234 ,|800 observed|215 )|230 <|800 alpha|227 ;|-1
return|800 stdDev|227 ;|-1
i|230 <|802 getRowDimension|216 ()|-1
{|800 correction|237 +=|801 values|221 [|800 i|222 ]|201 -|800 xbar|227 ;|219 }|-1
public|39 boolean|802 isSquare|216 ()|218 {|329 return|802 getColumnDimension|216 ()|236 ==|802 getRowDimension|216 ()|227 ;|219 }|-1
return|349 super|235 .|802 equals|214 (|800 stat|215 )|249 &&|800 aggregateStatistics|235 .|802 equals|214 (|40 stat.aggregateStatistics|215 )|227 ;|-1
final|39 boolean|800 forward|204 =|800 t|231 >|800 t0|227 ;|-1
forward|204 =|800 interpolator|235 .|802 getCurrentTime|216 ()|251 >=|800 lastTime|227 ;|-1
final|39 boolean|800 forward|204 =|800 t|231 >|800 t0|227 ;|-1
Complex|800 N1|204 =|304 new|801 Complex|214 (|800 n|201 -|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 solution|235 .|802 getValue|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 solution|235 .|802 getValue|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 solution|235 .|802 getValue|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
while|214 (|207 !|800 tableau|235 .|802 isOptimal|216 ()|215 )|218 {|802 doIteration|214 (|800 tableau|215 )|227 ;|219 }|-1
while|214 (|207 !|800 tableau|235 .|802 isOptimal|216 ()|215 )|218 {|802 doIteration|214 (|800 tableau|215 )|227 ;|219 }|-1
Integer|800 pivotRow|204 =|802 getPivotRow|214 (|800 tableau|234 ,|800 pivotCol|215 )|227 ;|-1
tableau|235 .|802 dropPhase1Objective|216 ()|227 ;|-1
Assert|235 .|802 assertTrue|214 (|800 fitResidualSum|230 <|800 noisyResidualSum|215 )|227 ;|-1
double|85 []|800 bounds|204 =|214 (|214 (|800 EmpiricalDistributionImpl|215 )|800 empiricalDistribution2|215 )|235 .|802 getGeneratorUpperBounds|216 ()|227 ;|-1
if|214 (|40 xval.length|236 ==|34 NUMBER_CONSTANT|250 |||801 xval|221 [|34 NUMBER_CONSTANT|222 ]|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
{|313 if|214 (|800 microsphereElements|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 microsphereElements|215 )|227 ;|219 }|315 this|235 .|800 microsphereElements|204 =|800 microsphereElements|227 ;|219 }|-1
{|313 if|214 (|800 brightnessExponent|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|45 STRING_CONSTANT|234 ,|800 brightnessExponent|215 )|227 ;|219 }|315 this|235 .|800 brightnessExponent|204 =|800 brightnessExponent|227 ;|219 }|-1
super|214 (|800 rootCause|215 )|227 ;|-1
super|214 (|800 rootCause|215 )|227 ;|-1
catch|214 (|801 IOException|800 e|215 )|218 {|320 throw|304 new|801 MathRuntimeException|214 (|800 e|215 )|227 ;|219 }|-1
Math|235 .|802 sqrt|214 (|40 MathUtils.TWO_PI|202 *|800 x|215 )|-1
double|800 f|204 =|214 (|40 MathUtils.TWO_PI|202 *|800 x|202 *|214 (|800 n|201 -|800 x|215 )|215 )|203 /|800 n|227 ;|-1
double|800 d|204 =|800 x|201 -|800 mu|227 ;|-1
flipAllIfWarranted|214 (|800 deflatedEnd|215 )|-1
flipEveryOtherIfWarranted|214 (|800 n|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 norm|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
if|214 (|40 v.length|242 !=|800 nRows|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 VECTOR_LENGTHS_MISMATCH|234 ,|40 v.length|234 ,|800 nRows|215 )|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 nCols|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 VECTOR_LENGTHS_MISMATCH|234 ,|40 v.length|234 ,|800 nCols|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|800 NO_ENTRY_MESSAGE|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|800 NO_ENTRY_MESSAGE|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|800 NO_ENTRY_MESSAGE|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|800 NO_ENTRY_MESSAGE|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
if|214 (|800 fraction|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 NULL_FRACTION|215 )|227 ;|219 }|-1
if|214 (|800 fraction|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 NULL_FRACTION|215 )|227 ;|219 }|-1
if|214 (|800 fraction|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 NULL_FRACTION|215 )|227 ;|219 }|-1
{|313 if|214 (|800 numerator|236 ==|40 Integer.MIN_VALUE|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|800 OVERFLOW_MESSAGE|234 ,|800 numerator|234 ,|800 denominator|215 )|227 ;|219 }|329 return|304 new|801 Fraction|214 (|201 -|800 numerator|234 ,|800 denominator|215 )|227 ;|219 }|-1
{|313 if|214 (|40 BigInteger.ZERO|235 .|802 equals|214 (|40 fraction.numerator|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|800 FORBIDDEN_ZERO_DENOMINATOR|215 )|227 ;|219 }|329 return|802 multiply|214 (|800 fraction|235 .|802 reciprocal|216 ()|215 )|227 ;|219 }|-1
if|214 (|40 BigInteger.ZERO|235 .|802 equals|214 (|800 bg|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|800 FORBIDDEN_ZERO_DENOMINATOR|215 )|227 ;|219 }|-1
if|214 (|40 BigInteger.ZERO|235 .|802 equals|214 (|800 den|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|800 FORBIDDEN_ZERO_DENOMINATOR|215 )|227 ;|219 }|-1
int|800 negativeVarColumn|204 =|800 columnLabels|235 .|802 indexOf|214 (|800 NEGATIVE_VAR_COLUMN_LABEL|215 )|227 ;|-1
if|214 (|207 !|800 restrictToNonNegative|215 )|218 {|800 columnLabels|235 .|802 add|214 (|800 NEGATIVE_VAR_COLUMN_LABEL|215 )|227 ;|219 }|-1
{|313 if|214 (|800 degreesOfFreedom|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 NON_POSITIVE_DEGREES_OF_FREEDOM_MESSAGE|234 ,|800 degreesOfFreedom|215 )|227 ;|219 }|315 this|235 .|800 denominatorDegreesOfFreedom|204 =|800 degreesOfFreedom|227 ;|219 }|-1
{|313 if|214 (|800 degreesOfFreedom|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 NON_POSITIVE_DEGREES_OF_FREEDOM_MESSAGE|234 ,|800 degreesOfFreedom|215 )|227 ;|219 }|315 this|235 .|800 numeratorDegreesOfFreedom|204 =|800 degreesOfFreedom|227 ;|219 }|-1
{|349 super|214 (|800 FAILED_EVALUATION_MESSAGE|234 ,|304 new|801 ArrayRealVector|214 (|800 argument|215 )|215 )|227 ;|315 this|235 .|800 argument|204 =|800 argument|235 .|802 clone|216 ()|227 ;|219 }|-1
{|349 super|214 (|800 FAILED_EVALUATION_MESSAGE|234 ,|800 argument|215 )|227 ;|315 this|235 .|800 argument|204 =|304 new|39 double|85 []|218 {|800 argument|219 }|227 ;|219 }|-1
if|214 (|800 n|242 !=|40 startConfiguration.length|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 DIMENSION_MISMATCH_MESSAGE|234 ,|800 n|234 ,|40 startConfiguration.length|215 )|227 ;|219 }|-1
if|214 (|801 steps|221 [|800 j|222 ]|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 EQUAL_VERTICES_MESSAGE|234 ,|800 j|234 ,|800 j|200 +|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 n|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 EMPTY_ARRAY_MESSAGE|215 )|227 ;|219 }|-1
if|214 (|800 n|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 EMPTY_ARRAY_MESSAGE|215 )|227 ;|219 }|-1
if|214 (|40 c.length|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 EMPTY_ARRAY_MESSAGE|215 )|227 ;|219 }|-1
if|214 (|800 n|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 NON_POSITIVE_DEGREE_MESSAGE|234 ,|800 n|215 )|227 ;|219 }|-1
if|214 (|800 n|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 NON_POSITIVE_DEGREE_MESSAGE|234 ,|800 n|215 )|227 ;|219 }|-1
if|214 (|207 !|214 (|800 f|328 instanceof|800 PolynomialFunction|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 NON_POLYNOMIAL_FUNCTION_MESSAGE|215 )|227 ;|219 }|-1
if|214 (|800 f|328 instanceof|800 PolynomialFunction|215 )|218 {|800 p|204 =|214 (|800 PolynomialFunction|215 )|800 f|227 ;|219 }|322 else|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 NON_POLYNOMIAL_FUNCTION_MESSAGE|215 )|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 nRows|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 VECTOR_LENGTHS_MISMATCH|234 ,|40 v.length|234 ,|800 nRows|215 )|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 nCols|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 VECTOR_LENGTHS_MISMATCH|234 ,|40 v.length|234 ,|800 nCols|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|800 NO_ENTRY_MESSAGE|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|800 NO_ENTRY_MESSAGE|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|800 NO_ENTRY_MESSAGE|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|800 NO_ENTRY_MESSAGE|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
if|214 (|800 b|235 .|802 getDimension|216 ()|242 !=|800 m|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 VECTOR_LENGTH_MISMATCH_MESSAGE|234 ,|800 b|235 .|802 getDimension|216 ()|234 ,|800 m|215 )|227 ;|219 }|-1
if|214 (|40 b.length|242 !=|800 m|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 VECTOR_LENGTH_MISMATCH_MESSAGE|234 ,|40 b.length|234 ,|800 m|215 )|227 ;|219 }|-1
if|214 (|800 p|230 <|34 NUMBER_CONSTANT|250 |||800 p|231 >|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 OUT_OF_RANGE_POINT|234 ,|800 p|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 x0|231 >|800 x1|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 WRONG_ORDER_ENDPOINTS_MESSAGE|234 ,|800 x0|234 ,|800 x1|215 )|227 ;|219 }|-1
if|214 (|800 x0|231 >|800 x1|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 WRONG_ORDER_ENDPOINTS_MESSAGE|234 ,|800 x0|234 ,|800 x1|215 )|227 ;|219 }|-1
{|313 if|214 (|800 f|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 NULL_FUNCTION_MESSAGE|215 )|227 ;|219 }|219 }|-1
if|214 (|800 function|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 NULL_FUNCTION_MESSAGE|215 )|227 ;|219 }|-1
if|214 (|40 d.length|230 <|800 pos|200 +|800 size|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 NON_FITTING_POSITION_AND_SIZE_MESSAGE|234 ,|800 pos|234 ,|800 size|234 ,|40 d.length|215 )|227 ;|219 }|-1
if|214 (|40 d.length|230 <|800 pos|200 +|800 size|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 NON_FITTING_POSITION_AND_SIZE_MESSAGE|234 ,|800 pos|234 ,|800 size|234 ,|40 d.length|215 )|227 ;|219 }|-1
{|313 if|214 (|800 omegaCount|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|800 MISSING_ROOTS_OF_UNITY_MESSAGE|215 )|227 ;|219 }|329 return|800 isForward|227 ;|219 }|-1
{|313 if|214 (|207 !|802 isPowerOf2|214 (|40 o.length|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 NOT_POWER_OF_TWO_MESSAGE|234 ,|40 o.length|215 )|227 ;|219 }|219 }|-1
{|313 if|214 (|207 !|802 isPowerOf2|214 (|40 d.length|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 NOT_POWER_OF_TWO_MESSAGE|234 ,|40 d.length|215 )|227 ;|219 }|219 }|-1
int|800 value|204 =|800 decoded|235 .|802 get|214 (|800 i|215 )|227 ;|-1
return|802 mapDivide|214 (|800 norm|215 )|227 ;|-1
public|801 ArrayRealVector|214 (|801 ArrayRealVector|800 v|215 )|218 {|315 this|214 (|800 v|234 ,|9 true|215 )|227 ;|219 }|-1
if|214 (|802 isDefaultValue|214 (|800 norm|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
!|802 isDefaultValue|214 (|800 value|215 )|-1
{|315 this|214 (|800 values|234 ,|800 DEFAULT_ZERO_TOLERANCE|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
public|802 OpenMapRealVector|214 (|39 int|800 dimension|215 )|218 {|315 this|214 (|800 dimension|234 ,|800 DEFAULT_ZERO_TOLERANCE|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|315 this|214 (|34 NUMBER_CONSTANT|234 ,|800 DEFAULT_ZERO_TOLERANCE|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
public|39 void|802 setEntry|214 (|39 int|800 index|234 ,|39 double|800 value|215 )|301 throws|800 MatrixIndexException|218 {|801 data|221 [|800 index|222 ]|204 =|800 value|227 ;|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.ULP|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.TANH|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.TAN|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.SQRT|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.SINH|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.SIN|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.SIGNUM|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.RINT|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.ASIN|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.LOG10|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.LOG|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.FLOOR|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.EXPM1|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.EXP|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.COSH|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.COS|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.CEIL|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.CBRT|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.ATAN|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.ASIN|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.ACOS|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.ABS|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.LOG1P|215 )|227 ;|219 }|331 catch|214 (|801 FunctionEvaluationException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
Iterator|230 <|800 Entry|231 >|800 it|204 =|802 iterator|216 ()|227 ;|-1
epsilon|204 =|800 DEFAULT_ZERO_TOLERANCE|227 ;|-1
{|315 this|214 (|800 values|234 ,|800 DEFAULT_ZERO_TOLERANCE|215 )|227 ;|219 }|-1
this|235 .|800 epsilon|204 =|800 epsilon|227 ;|-1
public|802 OpenMapRealVector|214 (|39 int|800 dimension|215 )|218 {|315 this|214 (|800 dimension|234 ,|800 DEFAULT_ZERO_TOLERANCE|215 )|227 ;|219 }|-1
{|315 this|214 (|34 NUMBER_CONSTANT|234 ,|800 DEFAULT_ZERO_TOLERANCE|215 )|227 ;|219 }|-1
{|329 return|304 new|801 BigReal|214 (|800 d|235 .|802 divide|214 (|40 a.d|234 ,|800 scale|234 ,|800 roundingMode|215 )|215 )|227 ;|219 }|-1
return|304 new|801 ArrayRealVector|214 (|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayRealVector|214 (|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayRealVector|214 (|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayRealVector|214 (|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayRealVector|214 (|800 out|234 ,|9 false|215 )|227 ;|-1
if|214 (|800 lcm|236 ==|40 Integer.MIN_VALUE|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|45 STRING_CONSTANT|234 ,|800 a|234 ,|800 b|215 )|227 ;|219 }|-1
{|329 return|304 new|801 Solver|214 (|800 singularValues|234 ,|802 getUT|216 ()|234 ,|802 getV|216 ()|234 ,|802 getRank|216 ()|236 ==|800 Math|235 .|802 max|214 (|800 m|234 ,|800 n|215 )|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 getNorm|216 ()|218 {|320 throw|802 unsupported|216 ()|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 getL1Norm|216 ()|218 {|320 throw|802 unsupported|216 ()|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 getLInfNorm|216 ()|218 {|320 throw|802 unsupported|216 ()|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 getNorm|216 ()|218 {|320 throw|802 unsupported|216 ()|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 getL1Norm|216 ()|218 {|320 throw|802 unsupported|216 ()|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 getLInfNorm|216 ()|218 {|320 throw|802 unsupported|216 ()|227 ;|219 }|-1
{|40 dest.n|204 =|40 source.n|227 ;|40 dest.m1|204 =|40 source.m1|227 ;|40 dest.dev|204 =|40 source.dev|227 ;|40 dest.nDev|204 =|40 source.nDev|227 ;|219 }|-1
{|304 new|801 LoessInterpolator|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|304 new|801 LoessInterpolator|214 (|201 -|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|800 NON_BRACKETING_MESSAGE|234 ,|800 min|234 ,|800 max|234 ,|800 yMin|234 ,|800 yMax|215 )|227 ;|219 }|-1
assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 solution|235 .|802 subtract|214 (|800 xRef|215 )|235 .|802 getNorm|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|800 interpolator|204 =|304 new|801 DummyStepInterpolator|214 (|800 yTmp|234 ,|801 yDotK|221 [|800 stages|201 -|34 NUMBER_CONSTANT|222 ]|234 ,|800 forward|215 )|227 ;|219 }|-1
{|349 super|214 (|800 interpolator|215 )|227 ;|800 currentDerivative|204 =|40 interpolator.currentDerivative|235 .|802 clone|216 ()|227 ;|219 }|-1
{|500 super();|800 currentDerivative|204 =|500 null|227 ;|219 }|-1
public|802 BadStepInterpolator|214 (|39 double|85 []|800 y|234 ,|39 boolean|800 forward|215 )|218 {|349 super|214 (|800 y|234 ,|304 new|39 double|221 [|40 y.length|222 ]|234 ,|800 forward|215 )|227 ;|219 }|-1
DummyStepInterpolator|800 interpolator|204 =|304 new|801 DummyStepInterpolator|214 (|800 y|234 ,|304 new|39 double|221 [|40 y.length|222 ]|234 ,|9 true|215 )|227 ;|-1
{|800 interpolator|204 =|304 new|801 DummyStepInterpolator|214 (|800 yTmp|234 ,|801 yDotK|221 [|800 stages|201 -|34 NUMBER_CONSTANT|222 ]|234 ,|800 forward|215 )|227 ;|219 }|-1
{|800 interpolator|204 =|304 new|801 DummyStepInterpolator|214 (|800 y|234 ,|800 yDot1|234 ,|800 forward|215 )|227 ;|219 }|-1
{|800 handler|235 .|802 handleStep|214 (|304 new|801 StepInterpolatorWrapper|214 (|800 interpolator|234 ,|800 n|234 ,|800 k|215 )|234 ,|800 isLast|215 )|227 ;|219 }|-1
final|801 ODEWithJacobians|800 ode|-1
{|315 this|214 (|800 mean|234 ,|800 sd|234 ,|800 DEFAULT_INVERSE_ABSOLUTE_ACCURACY|215 )|227 ;|219 }|-1
@|800 Override|83 protected|39 void|802 setUp|214 (|215 )|301 throws|800 Exception|218 {|349 super|235 .|802 setUp|216 ()|227 ;|802 setTolerance|214 (|800 defaultTolerance|215 )|227 ;|219 }|-1
{|349 super|214 (|800 f|234 ,|800 DEFAULT_MAXIMUM_ITERATIONS|234 ,|800 DEFAULT_ABSOLUTE_ACCURACY|215 )|227 ;|219 }|-1
{|313 if|214 (|800 p|230 <|34 NUMBER_CONSTANT|215 )|218 {|329 return|800 mean|227 ;|219 }|322 else|218 {|329 return|40 Double.MAX_VALUE|227 ;|219 }|219 }|-1
{|800 ret|204 =|201 -|800 mean|202 *|800 Math|235 .|802 log|214 (|34 NUMBER_CONSTANT|201 -|800 p|215 )|227 ;|219 }|-1
{|800 ret|204 =|34 NUMBER_CONSTANT|201 -|800 Math|235 .|802 exp|214 (|201 -|800 x|203 /|800 mean|215 )|227 ;|219 }|-1
public|802 ExponentialDistributionImpl|214 (|39 double|800 mean|215 )|218 {|500 super();|802 setMeanInternal|214 (|800 mean|215 )|227 ;|219 }|-1
{|329 return|802 getUpperDomain|214 (|800 sampleSize|234 ,|800 numberOfSuccesses|215 )|227 ;|219 }|-1
{|329 return|802 getLowerDomain|214 (|800 populationSize|234 ,|800 numberOfSuccesses|234 ,|800 sampleSize|215 )|227 ;|219 }|-1
{|800 ret|204 =|800 Beta|235 .|802 regularizedBeta|214 (|800 probabilityOfSuccess|234 ,|800 numberOfSuccesses|234 ,|800 x|200 +|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|500 super();|802 setNumberOfSuccessesInternal|214 (|800 r|215 )|227 ;|802 setProbabilityOfSuccessInternal|214 (|800 p|215 )|227 ;|219 }|-1
if|214 (|800 p|230 <|34 NUMBER_CONSTANT|215 )|218 {|800 ret|204 =|800 alpha|202 *|800 beta|227 ;|219 }|322 else|218 {|800 ret|204 =|40 Double.MAX_VALUE|227 ;|219 }|-1
{|800 ret|204 =|800 Gamma|235 .|802 regularizedGammaP|214 (|800 alpha|234 ,|800 x|203 /|800 beta|215 )|227 ;|219 }|-1
{|500 super();|802 setAlphaInternal|214 (|800 alpha|215 )|227 ;|802 setBetaInternal|214 (|800 beta|215 )|227 ;|219 }|-1
{|800 ret|204 =|34 NUMBER_CONSTANT|201 -|800 Math|235 .|802 exp|214 (|201 -|800 Math|235 .|802 pow|214 (|800 x|203 /|800 scale|234 ,|800 shape|215 )|215 )|227 ;|219 }|-1
{|500 super();|802 setShapeInternal|214 (|800 alpha|215 )|227 ;|802 setScaleInternal|214 (|800 beta|215 )|227 ;|219 }|-1
public|802 TDistributionImpl|214 (|39 double|800 degreesOfFreedom|215 )|218 {|500 super();|802 setDegreesOfFreedomInternal|214 (|800 degreesOfFreedom|215 )|227 ;|219 }|-1
{|329 return|40 Double.MIN_VALUE|202 *|800 gamma|235 .|802 getBeta|216 ()|227 ;|219 }|-1
{|329 return|800 gamma|235 .|802 cumulativeProbability|214 (|800 x|215 )|227 ;|219 }|-1
if|214 (|800 x|252 <=|34 NUMBER_CONSTANT|215 )|218 {|329 return|34 NUMBER_CONSTANT|227 ;|219 }|322 else|313 if|214 (|800 x|251 >=|800 numberOfElements|215 )|218 {|329 return|34 NUMBER_CONSTANT|227 ;|219 }|-1
if|214 (|800 x|252 <=|34 NUMBER_CONSTANT|250 |||800 x|231 >|800 numberOfElements|215 )|218 {|329 return|34 NUMBER_CONSTANT|227 ;|219 }|-1
{|802 setNumberOfElementsInternal|214 (|800 numberOfElements|215 )|227 ;|802 setExponentInternal|214 (|800 exponent|215 )|227 ;|219 }|-1
double|800 d|204 =|800 denominatorDegreesOfFreedom|227 ;|-1
{|500 super();|802 setNumeratorDegreesOfFreedomInternal|214 (|800 numeratorDegreesOfFreedom|215 )|227 ;|802 setDenominatorDegreesOfFreedomInternal|214 (|800 denominatorDegreesOfFreedom|215 )|227 ;|219 }|-1
x|230 <|34 NUMBER_CONSTANT|250 |||800 x|231 >|800 numberOfTrials|-1
{|329 return|800 numberOfTrials|227 ;|219 }|-1
{|500 super();|802 setNumberOfTrialsInternal|214 (|800 trials|215 )|227 ;|802 setProbabilityOfSuccessInternal|214 (|800 p|215 )|227 ;|219 }|-1
if|214 (|800 p|230 <|34 NUMBER_CONSTANT|215 )|218 {|800 ret|204 =|800 mean|227 ;|219 }|322 else|218 {|800 ret|204 =|40 Double.MAX_VALUE|227 ;|219 }|-1
if|214 (|800 p|230 <|34 NUMBER_CONSTANT|215 )|218 {|800 ret|204 =|201 -|40 Double.MAX_VALUE|227 ;|219 }|322 else|218 {|800 ret|204 =|800 mean|227 ;|219 }|-1
if|214 (|800 p|230 <|34 NUMBER_CONSTANT|215 )|218 {|800 ret|204 =|800 median|227 ;|219 }|322 else|218 {|800 ret|204 =|40 Double.MAX_VALUE|227 ;|219 }|-1
if|214 (|800 p|230 <|34 NUMBER_CONSTANT|215 )|218 {|800 ret|204 =|201 -|40 Double.MAX_VALUE|227 ;|219 }|322 else|218 {|800 ret|204 =|800 median|227 ;|219 }|-1
{|500 super();|802 setMedianInternal|214 (|800 median|215 )|227 ;|802 setScaleInternal|214 (|800 s|215 )|227 ;|219 }|-1
public|802 LaguerreSolver|216 ()|218 {|349 super|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|800 p|204 =|500 null|227 ;|219 }|-1
protected|39 void|802 setDistribution|214 (|801 AbstractContinuousDistribution|800 distribution|215 )|218 {|315 this|235 .|800 distribution|204 =|800 distribution|227 ;|219 }|-1
public|802 TDistributionImpl|214 (|39 double|800 degreesOfFreedom|215 )|218 {|315 this|214 (|800 degreesOfFreedom|234 ,|800 DEFAULT_INVERSE_ABSOLUTE_ACCURACY|215 )|227 ;|219 }|-1
{|315 this|214 (|800 numeratorDegreesOfFreedom|234 ,|800 denominatorDegreesOfFreedom|234 ,|800 DEFAULT_INVERSE_ABSOLUTE_ACCURACY|215 )|227 ;|219 }|-1
{|315 this|214 (|800 alpha|234 ,|800 beta|234 ,|800 DEFAULT_INVERSE_ABSOLUTE_ACCURACY|215 )|227 ;|219 }|-1
{|315 this|214 (|800 alpha|234 ,|800 beta|234 ,|800 DEFAULT_INVERSE_ABSOLUTE_ACCURACY|215 )|227 ;|219 }|-1
public|802 ExponentialDistributionImpl|214 (|39 double|800 mean|215 )|218 {|315 this|214 (|800 mean|234 ,|800 DEFAULT_INVERSE_ABSOLUTE_ACCURACY|215 )|227 ;|219 }|-1
{|315 this|214 (|800 median|234 ,|800 s|234 ,|800 DEFAULT_INVERSE_ABSOLUTE_ACCURACY|215 )|227 ;|219 }|-1
final|39 double|85 []|800 row|204 =|801 AINV|221 [|800 i|222 ]|227 ;|-1
{|800 p|204 =|800 interpolator|235 .|802 interpolate|214 (|800 xval|234 ,|800 wyval|234 ,|800 wzval|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
int|800 length|204 =|800 TestUtils|235 .|802 eliminateZeroMassPoints|214 (|800 densityPoints|234 ,|800 densityValues|215 )|227 ;|-1
int|800 length|204 =|800 TestUtils|235 .|802 eliminateZeroMassPoints|214 (|800 densityPoints|234 ,|800 densityValues|215 )|227 ;|-1
int|800 length|204 =|800 TestUtils|235 .|802 eliminateZeroMassPoints|214 (|800 densityPoints|234 ,|800 densityValues|215 )|227 ;|-1
int|800 length|204 =|800 TestUtils|235 .|802 eliminateZeroMassPoints|214 (|800 densityPoints|234 ,|800 densityValues|215 )|227 ;|-1
if|214 (|800 ak2|230 <|34 NUMBER_CONSTANT|215 )|218 {|800 rank|204 =|800 k|227 ;|500 return;|219 }|-1
if|214 (|800 ak2|236 ==|34 NUMBER_CONSTANT|215 )|218 {|800 rank|204 =|800 k|227 ;|500 return;|219 }|-1
if|214 (|800 ak2|252 <=|800 qrRankingThreshold|215 )|218 {|800 rank|204 =|800 k|227 ;|500 return;|219 }|-1
assertFalse|214 (|800 MathUtils|235 .|802 equals|214 (|40 Double.NaN|234 ,|40 Double.NaN|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
if|214 (|214 (|800 alpha|252 <=|34 NUMBER_CONSTANT|215 )|250 |||214 (|800 alpha|231 >|34 NUMBER_CONSTANT|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL|234 ,|800 alpha|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|40 residuals.length|242 !=|40 observations.length|215 )|218 {|320 throw|304 new|801 FunctionEvaluationException|214 (|800 point|234 ,|40 LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE|234 ,|40 residuals.length|234 ,|40 observations.length|215 )|227 ;|219 }|-1
if|214 (|40 observations.length|242 !=|800 scale|235 .|802 getColumnDimension|216 ()|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE|234 ,|40 observations.length|234 ,|800 scale|235 .|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
if|214 (|40 observations.length|242 !=|40 weights.length|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE|234 ,|40 observations.length|234 ,|40 weights.length|215 )|227 ;|219 }|-1
if|214 (|800 dimension|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.TOO_LARGE_CUTOFF_SINGULAR_VALUE|234 ,|800 minSingularValue|234 ,|801 singularValues|221 [|34 NUMBER_CONSTANT|222 ]|215 )|227 ;|219 }|-1
catch|214 (|801 DuplicateSampleAbscissaException|800 e|215 )|218 {|320 throw|304 new|801 FunctionEvaluationException|214 (|800 e|234 ,|800 z|234 ,|800 e|235 .|802 getLocalizablePattern|216 ()|234 ,|800 e|235 .|802 getArguments|216 ()|215 )|227 ;|219 }|-1
if|214 (|40 xval.length|236 ==|34 NUMBER_CONSTANT|250 |||40 yval.length|236 ==|34 NUMBER_CONSTANT|250 |||40 fval.length|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NO_DATA|215 )|227 ;|219 }|-1
{|349 super|214 (|40 LocalizedFormats.FRACTION_CONVERSION_OVERFLOW|234 ,|800 value|234 ,|800 p|234 ,|800 q|215 )|227 ;|219 }|-1
{|349 super|214 (|40 LocalizedFormats.FAILED_FRACTION_CONVERSION|234 ,|800 value|234 ,|800 maxIterations|215 )|227 ;|219 }|-1
{|313 if|214 (|800 format|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NULL_WHOLE_FORMAT|215 )|227 ;|219 }|315 this|235 .|800 wholeFormat|204 =|800 format|227 ;|219 }|-1
final|801 Localizable|800 specifier|-1
if|214 (|800 sampleStats|235 .|802 getN|216 ()|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createEOFException|214 (|40 LocalizedFormats.URL_CONTAINS_NO_DATA|234 ,|800 url|215 )|227 ;|219 }|-1
if|214 (|800 r|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NEGATIVE_COMPLEX_MODULE|234 ,|800 r|215 )|227 ;|219 }|-1
if|214 (|40 b.length|242 !=|800 nRows|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 b.length|234 ,|800 nRows|215 )|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 nRows|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 v.length|234 ,|800 nRows|215 )|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|802 getColumnDimension|216 ()|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 v.length|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|40 LocalizedFormats.NO_SUCH_MATRIX_ENTRY|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
if|214 (|40 xval.length|236 ==|34 NUMBER_CONSTANT|250 |||40 yval.length|236 ==|34 NUMBER_CONSTANT|250 |||40 zval.length|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NO_DATA|215 )|227 ;|219 }|-1
if|214 (|801 optima|221 [|34 NUMBER_CONSTANT|222 ]|236 ==|500 null|215 )|218 {|320 throw|304 new|801 OptimizationException|214 (|40 LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT|234 ,|800 starts|215 )|227 ;|219 }|-1
{|313 if|214 (|800 optima|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|40 LocalizedFormats.NO_OPTIMUM_COMPUTED_YET|215 )|227 ;|219 }|329 return|800 optima|235 .|802 clone|216 ()|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 rows|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 v.length|234 ,|800 rows|215 )|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 columns|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 v.length|234 ,|800 columns|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|40 LocalizedFormats.NO_SUCH_MATRIX_ENTRY|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|40 LocalizedFormats.NO_SUCH_MATRIX_ENTRY|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|40 LocalizedFormats.NO_SUCH_MATRIX_ENTRY|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|40 LocalizedFormats.NO_SUCH_MATRIX_ENTRY|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
if|214 (|40 array.length|242 !=|800 nRows|215 )|218 {|320 throw|304 new|801 InvalidMatrixException|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH_2x2|234 ,|40 array.length|234 ,|34 NUMBER_CONSTANT|234 ,|800 nRows|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|40 array.length|242 !=|800 nCols|215 )|218 {|320 throw|304 new|801 InvalidMatrixException|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH_2x2|234 ,|34 NUMBER_CONSTANT|234 ,|40 array.length|234 ,|34 NUMBER_CONSTANT|234 ,|800 nCols|215 )|227 ;|219 }|-1
if|214 (|800 length|242 !=|800 columns|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.DIFFERENT_ROWS_LENGTHS|234 ,|800 columns|234 ,|800 length|215 )|227 ;|219 }|-1
{|313 if|214 (|800 values|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NULL_INPUT_ARRAY|215 )|227 ;|219 }|329 return|802 evaluate|214 (|800 values|234 ,|34 NUMBER_CONSTANT|234 ,|40 values.length|215 )|227 ;|219 }|-1
if|214 (|40 xval.length|236 ==|34 NUMBER_CONSTANT|250 |||40 yval.length|236 ==|34 NUMBER_CONSTANT|250 |||40 fval.length|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NO_DATA|215 )|227 ;|219 }|-1
{|315 this|214 (|304 new|801 DummyLocalizable|214 (|800 pattern|215 )|234 ,|800 arguments|215 )|227 ;|219 }|-1
Localizable|800 specifier|-1
if|214 (|40 v.length|242 !=|800 nRows|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 v.length|234 ,|800 nRows|215 )|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 nCols|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 v.length|234 ,|800 nCols|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|40 LocalizedFormats.NO_SUCH_MATRIX_ENTRY|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|40 LocalizedFormats.NO_SUCH_MATRIX_ENTRY|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|40 LocalizedFormats.NO_SUCH_MATRIX_ENTRY|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|40 LocalizedFormats.NO_SUCH_MATRIX_ENTRY|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
{|313 if|214 (|800 newDegreesOfFreedom|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_DEGREES_OF_FREEDOM|234 ,|800 newDegreesOfFreedom|215 )|227 ;|219 }|315 this|235 .|800 degreesOfFreedom|204 =|800 newDegreesOfFreedom|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 nRows|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 v.length|234 ,|800 nRows|215 )|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 nCols|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 v.length|234 ,|800 nCols|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|40 LocalizedFormats.NO_SUCH_MATRIX_ENTRY|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
if|214 (|800 sampleSize|252 <=|34 NUMBER_CONSTANT|215 )|218 {|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_SAMPLE_SIZE|234 ,|800 sampleSize|215 )|227 ;|219 }|-1
{|320 throw|304 new|801 MathRuntimeException|214 (|304 new|801 UnsupportedOperationException|216 ()|234 ,|40 LocalizedFormats.NO_DENSITY_FOR_THIS_DISTRIBUTION|215 )|227 ;|219 }|-1
if|214 (|800 p|230 <|34 NUMBER_CONSTANT|250 |||800 p|231 >|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.OUT_OF_RANGE_SIMPLE|234 ,|800 p|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|313 if|214 (|800 successes|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NEGATIVE_NUMBER_OF_SUCCESSES|234 ,|800 successes|215 )|227 ;|219 }|800 numberOfSuccesses|204 =|800 successes|227 ;|219 }|-1
if|214 (|800 b|235 .|802 getDimension|216 ()|242 !=|800 m|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|800 b|235 .|802 getDimension|216 ()|234 ,|800 m|215 )|227 ;|219 }|-1
if|214 (|40 b.length|242 !=|800 m|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 b.length|234 ,|800 m|215 )|227 ;|219 }|-1
{|313 if|214 (|800 values|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NULL_INPUT_ARRAY|215 )|227 ;|219 }|329 return|802 evaluate|214 (|800 values|234 ,|34 NUMBER_CONSTANT|234 ,|40 values.length|215 )|227 ;|219 }|-1
{|313 if|214 (|800 beta|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_SCALE|234 ,|800 beta|215 )|227 ;|219 }|315 this|235 .|800 scale|204 =|800 beta|227 ;|219 }|-1
{|313 if|214 (|800 alpha|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_SHAPE|234 ,|800 alpha|215 )|227 ;|219 }|315 this|235 .|800 shape|204 =|800 alpha|227 ;|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.OUT_OF_RANGE_SIMPLE|234 ,|800 p|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
public|801 Double|802 getZ|216 ()|218 {|320 throw|304 new|801 MathRuntimeException|214 (|40 LocalizedFormats.SIMPLE_MESSAGE|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 n|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_UPPER_BOUND|234 ,|800 n|215 )|227 ;|219 }|-1
if|214 (|40 observations.length|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 OptimizationException|214 (|40 LocalizedFormats.INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE|234 ,|40 observations.length|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 e|235 .|802 compareTo|214 (|40 BigInteger.ZERO|215 )|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.POWER_NEGATIVE_PARAMETERS|234 ,|800 k|234 ,|800 e|215 )|227 ;|219 }|-1
if|214 (|800 e|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.POWER_NEGATIVE_PARAMETERS|234 ,|800 k|234 ,|800 e|215 )|227 ;|219 }|-1
{|313 if|214 (|800 e|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.POWER_NEGATIVE_PARAMETERS|234 ,|800 k|234 ,|800 e|215 )|227 ;|219 }|329 return|800 k|235 .|802 pow|214 (|800 e|215 )|227 ;|219 }|-1
if|214 (|800 e|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.POWER_NEGATIVE_PARAMETERS|234 ,|800 k|234 ,|800 e|215 )|227 ;|219 }|-1
if|214 (|800 e|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.POWER_NEGATIVE_PARAMETERS|234 ,|800 k|234 ,|800 e|215 )|227 ;|219 }|-1
if|214 (|800 e|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.POWER_NEGATIVE_PARAMETERS|234 ,|800 k|234 ,|800 e|215 )|227 ;|219 }|-1
if|214 (|800 e|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.POWER_NEGATIVE_PARAMETERS|234 ,|800 k|234 ,|800 e|215 )|227 ;|219 }|-1
if|214 (|800 lcm|236 ==|40 Long.MIN_VALUE|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|40 LocalizedFormats.LCM_OVERFLOW_64_BITS|234 ,|800 a|234 ,|800 b|215 )|227 ;|219 }|-1
if|214 (|800 lcm|236 ==|40 Integer.MIN_VALUE|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|40 LocalizedFormats.LCM_OVERFLOW_32_BITS|234 ,|800 a|234 ,|800 b|215 )|227 ;|219 }|-1
if|214 (|800 n|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER|234 ,|800 n|215 )|227 ;|219 }|-1
if|214 (|800 n|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER|234 ,|800 n|215 )|227 ;|219 }|-1
if|214 (|800 n|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER|234 ,|800 n|215 )|227 ;|219 }|-1
if|214 (|800 n|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NON_POSITIVE_POLYNOMIAL_DEGREE|234 ,|800 n|215 )|227 ;|219 }|-1
if|214 (|800 n|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NON_POSITIVE_POLYNOMIAL_DEGREE|234 ,|800 n|215 )|227 ;|219 }|-1
if|214 (|207 !|214 (|800 f|328 instanceof|800 PolynomialFunction|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.FUNCTION_NOT_POLYNOMIAL|215 )|227 ;|219 }|-1
if|214 (|800 f|328 instanceof|800 PolynomialFunction|215 )|218 {|800 p|204 =|214 (|800 PolynomialFunction|215 )|800 f|227 ;|219 }|322 else|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.FUNCTION_NOT_POLYNOMIAL|215 )|227 ;|219 }|-1
if|214 (|800 nRows|230 <|34 NUMBER_CONSTANT|250 |||800 nCols|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.INSUFFICIENT_ROWS_AND_COLUMNS|234 ,|800 nRows|234 ,|800 nCols|215 )|227 ;|219 }|-1
if|214 (|800 covarianceMatrix|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NULL_COVARIANCE_MATRIX|215 )|227 ;|219 }|-1
if|214 (|800 offset|231 >|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 EventException|214 (|40 LocalizedFormats.EVALUATION_FAILED|234 ,|800 t|215 )|227 ;|219 }|-1
{|320 throw|304 new|801 DerivativeException|214 (|40 LocalizedFormats.SIMPLE_MESSAGE|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|214 (|800 c1|203 /|800 c2|230 <|34 NUMBER_CONSTANT|215 )|250 |||214 (|800 c2|203 /|800 c3|230 <|34 NUMBER_CONSTANT|215 )|215 )|218 {|320 throw|304 new|801 OptimizationException|214 (|40 LocalizedFormats.UNABLE_TO_FIRST_GUESS_HARMONIC_COEFFICIENTS|215 )|227 ;|219 }|-1
{|349 super|214 (|40 LocalizedFormats.EVALUATION_FAILED|234 ,|304 new|801 ArrayRealVector|214 (|800 argument|215 )|215 )|227 ;|315 this|235 .|800 argument|204 =|800 argument|235 .|802 clone|216 ()|227 ;|219 }|-1
{|349 super|214 (|40 LocalizedFormats.EVALUATION_FAILED|234 ,|800 argument|215 )|227 ;|315 this|235 .|800 argument|204 =|304 new|39 double|85 []|218 {|800 argument|219 }|227 ;|219 }|-1
{|315 this|214 (|800 cause|234 ,|304 new|801 DummyLocalizable|214 (|800 pattern|215 )|234 ,|800 arguments|215 )|227 ;|219 }|-1
{|315 this|214 (|304 new|801 DummyLocalizable|214 (|800 pattern|215 )|234 ,|800 arguments|215 )|227 ;|219 }|-1
{|313 if|214 (|800 incMoment|215 )|218 {|800 moment|235 .|802 increment|214 (|800 d|215 )|227 ;|219 }|322 else|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|40 LocalizedFormats.CANNOT_INCREMENT_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS|215 )|227 ;|219 }|219 }|-1
if|214 (|40 target.length|242 !=|40 weights.length|215 )|218 {|320 throw|304 new|801 OptimizationException|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE|234 ,|40 target.length|234 ,|40 weights.length|215 )|227 ;|219 }|-1
if|214 (|800 rows|252 <=|800 cols|215 )|218 {|320 throw|304 new|801 OptimizationException|214 (|40 LocalizedFormats.NO_DEGREES_OF_FREEDOM|234 ,|800 rows|234 ,|800 cols|215 )|227 ;|219 }|-1
catch|214 (|801 InvalidMatrixException|800 ime|215 )|218 {|320 throw|304 new|801 OptimizationException|214 (|40 LocalizedFormats.UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM|215 )|227 ;|219 }|-1
if|214 (|40 objective.length|242 !=|800 rows|215 )|218 {|320 throw|304 new|801 FunctionEvaluationException|214 (|800 point|234 ,|40 LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE|234 ,|40 objective.length|234 ,|800 rows|215 )|227 ;|219 }|-1
if|214 (|40 jacobian.length|242 !=|800 rows|215 )|218 {|320 throw|304 new|801 FunctionEvaluationException|214 (|800 point|234 ,|40 LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE|234 ,|40 jacobian.length|234 ,|800 rows|215 )|227 ;|219 }|-1
{|313 if|214 (|40 data.length|242 !=|800 n|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 data.length|234 ,|800 n|215 )|227 ;|219 }|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT|215 )|227 ;|219 }|-1
if|214 (|40 d.length|230 <|800 pos|200 +|800 size|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.POSITION_SIZE_MISMATCH_INPUT_ARRAY|234 ,|800 pos|234 ,|800 size|234 ,|40 d.length|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT|215 )|227 ;|219 }|-1
{|349 super|214 (|40 LocalizedFormats.DUPLICATED_ABSCISSA|234 ,|800 abscissa|234 ,|800 i1|234 ,|800 i2|215 )|227 ;|219 }|-1
if|214 (|801 optima|221 [|34 NUMBER_CONSTANT|222 ]|236 ==|500 null|215 )|218 {|320 throw|304 new|801 OptimizationException|214 (|40 LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT|234 ,|800 starts|215 )|227 ;|219 }|-1
{|313 if|214 (|800 optima|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|40 LocalizedFormats.NO_OPTIMUM_COMPUTED_YET|215 )|227 ;|219 }|329 return|800 optima|235 .|802 clone|216 ()|227 ;|219 }|-1
if|214 (|800 nRows|230 <|34 NUMBER_CONSTANT|250 |||800 nCols|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.INSUFFICIENT_ROWS_AND_COLUMNS|234 ,|800 nRows|234 ,|800 nCols|215 )|227 ;|219 }|-1
{|39 double|800 d|204 =|802 getDimension|216 ()|227 ;|313 if|214 (|800 d|242 !=|800 n|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|800 d|234 ,|800 n|215 )|227 ;|219 }|219 }|-1
{|313 if|214 (|207 !|800 resultComputed|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|40 LocalizedFormats.NO_RESULT_AVAILABLE|215 )|227 ;|219 }|219 }|-1
{|315 this|214 (|304 new|801 DummyLocalizable|214 (|800 pattern|215 )|234 ,|800 arguments|215 )|227 ;|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NO_DATA|215 )|227 ;|219 }|-1
{|313 if|214 (|214 (|800 minimalIterationCount|252 <=|34 NUMBER_CONSTANT|215 )|250 |||214 (|800 maximalIterationCount|252 <=|800 minimalIterationCount|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.INVALID_ITERATIONS_LIMITS|234 ,|800 minimalIterationCount|234 ,|800 maximalIterationCount|215 )|227 ;|219 }|219 }|-1
{|313 if|214 (|800 resultComputed|215 )|218 {|329 return|800 result|227 ;|219 }|322 else|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|40 LocalizedFormats.NO_RESULT_AVAILABLE|215 )|227 ;|219 }|219 }|-1
if|214 (|800 f|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NULL_FUNCTION|215 )|227 ;|219 }|-1
{|320 throw|304 new|801 IntegratorException|214 (|40 LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION|234 ,|800 minStep|234 ,|800 Math|235 .|802 abs|214 (|800 h|215 )|215 )|227 ;|219 }|-1
if|214 (|800 n|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY|215 )|227 ;|219 }|-1
if|214 (|800 n|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY|215 )|227 ;|219 }|-1
if|214 (|40 c.length|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY|215 )|227 ;|219 }|-1
if|214 (|207 !|800 FastFourierTransformer|235 .|802 isPowerOf2|214 (|800 n|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POWER_OF_TWO|234 ,|800 n|215 )|227 ;|219 }|-1
if|214 (|207 !|800 FastFourierTransformer|235 .|802 isPowerOf2|214 (|800 n|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POWER_OF_TWO|234 ,|800 n|215 )|227 ;|219 }|-1
{|313 if|214 (|40 data.length|242 !=|800 n|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 data.length|234 ,|800 n|215 )|227 ;|219 }|219 }|-1
if|214 (|800 norm|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|40 LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR|215 )|227 ;|219 }|-1
if|214 (|800 norm|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|40 LocalizedFormats.ZERO_NORM|215 )|227 ;|219 }|-1
if|214 (|40 d.length|230 <|800 pos|200 +|800 size|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.POSITION_SIZE_MISMATCH_INPUT_ARRAY|234 ,|800 pos|234 ,|800 size|234 ,|40 d.length|215 )|227 ;|219 }|-1
if|214 (|40 d.length|230 <|800 pos|200 +|800 size|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.POSITION_SIZE_MISMATCH_INPUT_ARRAY|234 ,|800 pos|234 ,|800 size|234 ,|40 d.length|215 )|227 ;|219 }|-1
if|214 (|40 d.length|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT|215 )|227 ;|219 }|-1
{|349 super|235 .|802 verifyIterationCount|216 ()|227 ;|313 if|214 (|800 maximalIterationCount|231 >|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.INVALID_ITERATIONS_LIMITS|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.SAME_SIGN_AT_ENDPOINTS|234 ,|800 min|234 ,|800 max|234 ,|800 yMin|234 ,|800 yMax|215 )|227 ;|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.OUT_OF_RANGE_SIMPLE|234 ,|800 p|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|313 if|214 (|800 newMean|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_MEAN|234 ,|800 newMean|215 )|227 ;|219 }|315 this|235 .|800 mean|204 =|800 newMean|227 ;|219 }|-1
if|214 (|802 isDefaultValue|214 (|800 norm|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|40 LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR|215 )|227 ;|219 }|-1
{|313 if|214 (|800 p|252 <=|34 NUMBER_CONSTANT|250 |||800 p|231 >|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE|234 ,|800 p|215 )|227 ;|219 }|800 quantile|204 =|800 p|227 ;|219 }|-1
if|214 (|214 (|800 p|231 >|34 NUMBER_CONSTANT|215 )|250 |||214 (|800 p|252 <=|34 NUMBER_CONSTANT|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE|234 ,|800 p|215 )|227 ;|219 }|-1
{|313 if|214 (|802 getDimension|216 ()|242 !=|800 n|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|802 getDimension|216 ()|234 ,|800 n|215 )|227 ;|219 }|219 }|-1
if|214 (|800 omegaCount|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|40 LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET|215 )|227 ;|219 }|-1
if|214 (|800 omegaCount|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|40 LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET|215 )|227 ;|219 }|-1
if|214 (|800 n|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.CANNOT_COMPUTE_0TH_ROOT_OF_UNITY|215 )|227 ;|219 }|-1
{|313 if|214 (|800 omegaCount|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|40 LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET|215 )|227 ;|219 }|329 return|800 isForward|227 ;|219 }|-1
{|313 if|214 (|207 !|802 isPowerOf2|214 (|40 o.length|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING|234 ,|40 o.length|215 )|227 ;|219 }|219 }|-1
{|313 if|214 (|207 !|802 isPowerOf2|214 (|40 d.length|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING|234 ,|40 d.length|215 )|227 ;|219 }|219 }|-1
if|214 (|800 n|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_NUMBER_OF_SAMPLES|234 ,|800 n|215 )|227 ;|219 }|-1
{|349 super|235 .|802 verifyIterationCount|216 ()|227 ;|313 if|214 (|800 maximalIterationCount|231 >|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.INVALID_ITERATIONS_LIMITS|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|219 }|-1
{|313 if|214 (|800 s|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_EXPONENT|234 ,|800 s|215 )|227 ;|219 }|315 this|235 .|800 exponent|204 =|800 s|227 ;|219 }|-1
{|313 if|214 (|800 n|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.INSUFFICIENT_DIMENSION|234 ,|800 n|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|315 this|235 .|800 numberOfElements|204 =|800 n|227 ;|219 }|-1
if|214 (|800 i|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.INDEX_NOT_POSITIVE|234 ,|800 i|215 )|227 ;|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.INITIAL_CAPACITY_NOT_POSITIVE|234 ,|800 initialCapacity|215 )|227 ;|219 }|-1
if|214 (|800 expansionMode|242 !=|800 MULTIPLICATIVE_MODE|249 &&|800 expansionMode|242 !=|800 ADDITIVE_MODE|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.UNSUPPORTED_EXPANSION_MODE|234 ,|800 expansionMode|234 ,|800 MULTIPLICATIVE_MODE|234 ,|45 STRING_CONSTANT|234 ,|800 ADDITIVE_MODE|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 index|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArrayIndexOutOfBoundsException|214 (|40 LocalizedFormats.CANNOT_SET_AT_NEGATIVE_INDEX|234 ,|800 index|215 )|227 ;|219 }|-1
if|214 (|800 expansion|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.EXPANSION_FACTOR_SMALLER_THAN_ONE|234 ,|800 expansion|215 )|227 ;|219 }|-1
if|214 (|800 numElements|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArrayIndexOutOfBoundsException|214 (|40 LocalizedFormats.CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY|215 )|227 ;|219 }|-1
{|313 if|214 (|800 format|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NULL_NUMERATOR_FORMAT|215 )|227 ;|219 }|315 this|235 .|800 numeratorFormat|204 =|800 format|227 ;|219 }|-1
{|313 if|214 (|800 format|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NULL_DENOMINATOR_FORMAT|215 )|227 ;|219 }|315 this|235 .|800 denominatorFormat|204 =|800 format|227 ;|219 }|-1
if|214 (|800 nSteps|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.INTEGRATION_METHOD_NEEDS_AT_LEAST_ONE_PREVIOUS_POINT|234 ,|800 name|215 )|227 ;|219 }|-1
if|214 (|800 normProduct|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|40 LocalizedFormats.ZERO_NORM|215 )|227 ;|219 }|-1
if|214 (|800 threshold|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|40 LocalizedFormats.ZERO_NORM|215 )|227 ;|219 }|-1
if|214 (|800 s|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|40 LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR|215 )|227 ;|219 }|-1
if|214 (|800 Double|235 .|802 isInfinite|214 (|800 norm2|215 )|250 |||800 Double|235 .|802 isNaN|214 (|800 norm2|215 )|215 )|218 {|320 throw|304 new|801 OptimizationException|214 (|40 LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN|234 ,|800 rows|234 ,|800 cols|215 )|227 ;|219 }|-1
public|802 CardanEulerSingularityException|214 (|39 boolean|800 isCardan|215 )|218 {|349 super|214 (|800 isCardan|233 ?|40 LocalizedFormats.CARDAN_ANGLES_SINGULARITY|226 :|40 LocalizedFormats.EULER_ANGLES_SINGULARITY|215 )|227 ;|219 }|-1
if|214 (|800 arrayDimension|242 !=|800 expected|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE|234 ,|800 arrayDimension|234 ,|800 expected|215 )|227 ;|219 }|-1
if|214 (|800 n|242 !=|40 startConfiguration.length|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE|234 ,|800 n|234 ,|40 startConfiguration.length|215 )|227 ;|219 }|-1
if|214 (|801 steps|221 [|800 j|222 ]|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.EQUAL_VERTICES_IN_SIMPLEX|234 ,|800 j|234 ,|800 j|200 +|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|313 if|214 (|800 microsphereElements|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NON_POSITIVE_MICROSPHERE_ELEMENTS|234 ,|800 microsphereElements|215 )|227 ;|219 }|315 this|235 .|800 microsphereElements|204 =|800 elements|227 ;|219 }|-1
{|313 if|214 (|800 brightnessExponent|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NEGATIVE_BRIGHTNESS_EXPONENT|234 ,|800 brightnessExponent|215 )|227 ;|219 }|315 this|235 .|800 brightnessExponent|204 =|800 brightnessExponent|227 ;|219 }|-1
if|214 (|800 alpha|251 >=|34 NUMBER_CONSTANT|250 |||800 alpha|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL|234 ,|800 alpha|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
throw|304 new|801 OptimizationException|214 (|40 LocalizedFormats.UNABLE_TO_BRACKET_OPTIMUM_IN_LINE_SEARCH|215 )|227 ;|-1
if|214 (|800 nRows|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.AT_LEAST_ONE_ROW|215 )|227 ;|219 }|-1
if|214 (|800 nCols|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.AT_LEAST_ONE_COLUMN|215 )|227 ;|219 }|-1
if|214 (|800 lower|251 >=|800 upper|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND|234 ,|800 upper|234 ,|800 lower|215 )|227 ;|219 }|-1
if|214 (|800 mean|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_MEAN|234 ,|800 mean|215 )|227 ;|219 }|-1
if|214 (|800 sigma|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION|234 ,|800 sigma|215 )|227 ;|219 }|-1
if|214 (|800 mean|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_POISSON_MEAN|234 ,|800 mean|215 )|227 ;|219 }|-1
if|214 (|800 lower|251 >=|800 upper|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND|234 ,|800 upper|234 ,|800 lower|215 )|227 ;|219 }|-1
if|214 (|800 lower|251 >=|800 upper|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND|234 ,|800 upper|234 ,|800 lower|215 )|227 ;|219 }|-1
if|214 (|800 len|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_LENGTH|234 ,|800 len|215 )|227 ;|219 }|-1
if|214 (|800 lower|251 >=|800 upper|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND|234 ,|800 upper|234 ,|800 lower|215 )|227 ;|219 }|-1
if|214 (|800 lower|251 >=|800 upper|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND|234 ,|800 upper|234 ,|800 lower|215 )|227 ;|219 }|-1
if|214 (|800 len|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_LENGTH|234 ,|800 len|215 )|227 ;|219 }|-1
if|214 (|800 b|235 .|802 getDimension|216 ()|242 !=|800 m|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|800 b|235 .|802 getDimension|216 ()|234 ,|800 m|215 )|227 ;|219 }|-1
if|214 (|40 b.length|242 !=|800 m|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 b.length|234 ,|800 m|215 )|227 ;|219 }|-1
if|214 (|800 Double|235 .|802 isInfinite|214 (|800 norm2|215 )|250 |||800 Double|235 .|802 isNaN|214 (|800 norm2|215 )|215 )|218 {|320 throw|304 new|801 EstimationException|214 (|40 LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN|234 ,|800 rows|234 ,|800 cols|215 )|227 ;|219 }|-1
{|313 if|214 (|800 sd|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION|234 ,|800 sd|215 )|227 ;|219 }|800 standardDeviation|204 =|800 sd|227 ;|219 }|-1
if|214 (|214 (|800 str|204 =|800 filePointer|235 .|802 readLine|216 ()|215 )|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createEOFException|214 (|40 LocalizedFormats.URL_CONTAINS_NO_DATA|234 ,|800 valuesFileURL|215 )|227 ;|219 }|-1
if|214 (|214 (|800 empiricalDistribution|236 ==|500 null|215 )|250 |||214 (|800 empiricalDistribution|235 .|802 getBinStats|216 ()|235 .|802 size|216 ()|236 ==|34 NUMBER_CONSTANT|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|40 LocalizedFormats.DIGEST_NOT_INITIALIZED|215 )|227 ;|219 }|-1
{|313 if|214 (|800 newBeta|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_BETA|234 ,|800 newBeta|215 )|227 ;|219 }|315 this|235 .|800 beta|204 =|800 newBeta|227 ;|219 }|-1
{|313 if|214 (|800 newAlpha|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_ALPHA|234 ,|800 newAlpha|215 )|227 ;|219 }|315 this|235 .|800 alpha|204 =|800 newAlpha|227 ;|219 }|-1
{|313 if|214 (|800 degreesOfFreedom|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_DEGREES_OF_FREEDOM|234 ,|800 degreesOfFreedom|215 )|227 ;|219 }|315 this|235 .|800 denominatorDegreesOfFreedom|204 =|800 degreesOfFreedom|227 ;|219 }|-1
{|313 if|214 (|800 degreesOfFreedom|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_DEGREES_OF_FREEDOM|234 ,|800 degreesOfFreedom|215 )|227 ;|219 }|315 this|235 .|800 numeratorDegreesOfFreedom|204 =|800 degreesOfFreedom|227 ;|219 }|-1
{|313 if|214 (|802 getN|216 ()|231 >|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|40 LocalizedFormats.VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC|234 ,|802 getN|216 ()|215 )|227 ;|219 }|219 }|-1
catch|214 (|801 InvalidMatrixException|800 e|215 )|218 {|320 throw|304 new|801 EstimationException|214 (|40 LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM|215 )|227 ;|219 }|-1
if|214 (|800 v|235 .|802 getDimension|216 ()|242 !=|800 nRows|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|800 v|235 .|802 getDimension|216 ()|234 ,|800 nRows|215 )|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 nRows|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 v.length|234 ,|800 nRows|215 )|227 ;|219 }|-1
if|214 (|800 v|235 .|802 getDimension|216 ()|242 !=|800 nCols|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|800 v|235 .|802 getDimension|216 ()|234 ,|800 nCols|215 )|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 nCols|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 v.length|234 ,|800 nCols|215 )|227 ;|219 }|-1
if|214 (|40 array.length|242 !=|800 nRows|215 )|218 {|320 throw|304 new|801 InvalidMatrixException|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH_2x2|234 ,|40 array.length|234 ,|34 NUMBER_CONSTANT|234 ,|800 nRows|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|40 array.length|242 !=|800 nCols|215 )|218 {|320 throw|304 new|801 InvalidMatrixException|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH_2x2|234 ,|34 NUMBER_CONSTANT|234 ,|40 array.length|234 ,|34 NUMBER_CONSTANT|234 ,|800 nCols|215 )|227 ;|219 }|-1
if|214 (|800 vector|235 .|802 getDimension|216 ()|242 !=|800 nRows|215 )|218 {|320 throw|304 new|801 InvalidMatrixException|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH_2x2|234 ,|800 vector|235 .|802 getDimension|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|800 nRows|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 vector|235 .|802 getDimension|216 ()|242 !=|800 nCols|215 )|218 {|320 throw|304 new|801 InvalidMatrixException|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH_2x2|234 ,|34 NUMBER_CONSTANT|234 ,|800 vector|235 .|802 getDimension|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|800 nCols|215 )|227 ;|219 }|-1
{|349 super|235 .|802 verifyIterationCount|216 ()|227 ;|313 if|214 (|800 maximalIterationCount|231 >|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.INVALID_ITERATIONS_LIMITS|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|219 }|-1
if|214 (|207 !|800 FastFourierTransformer|235 .|802 isPowerOf2|214 (|800 n|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POWER_OF_TWO_PLUS_ONE|234 ,|40 f.length|215 )|227 ;|219 }|-1
{|313 if|214 (|800 size|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_SAMPLE_SIZE|234 ,|800 size|215 )|227 ;|219 }|800 sampleSize|204 =|800 size|227 ;|219 }|-1
{|313 if|214 (|800 size|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_POPULATION_SIZE|234 ,|800 size|215 )|227 ;|219 }|800 populationSize|204 =|800 size|227 ;|219 }|-1
{|313 if|214 (|800 num|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NEGATIVE_NUMBER_OF_SUCCESSES|234 ,|800 num|215 )|227 ;|219 }|800 numberOfSuccesses|204 =|800 num|227 ;|219 }|-1
final|801 Localizable|800 pattern|-1
if|214 (|40 xval.length|242 !=|40 yval.length|215 )|218 {|320 throw|304 new|801 MathException|214 (|40 LocalizedFormats.MISMATCHED_LOESS_ABSCISSA_ORDINATE_ARRAYS|234 ,|40 xval.length|234 ,|40 yval.length|215 )|227 ;|219 }|-1
{|313 if|214 (|800 s|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_SCALE|234 ,|800 s|215 )|227 ;|219 }|800 scale|204 =|800 s|227 ;|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.OUT_OF_RANGE_SIMPLE|234 ,|800 p|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|801 optima|221 [|34 NUMBER_CONSTANT|222 ]|236 ==|500 null|215 )|218 {|320 throw|304 new|801 OptimizationException|214 (|40 LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT|234 ,|800 starts|215 )|227 ;|219 }|-1
{|313 if|214 (|800 optima|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|40 LocalizedFormats.NO_OPTIMUM_COMPUTED_YET|215 )|227 ;|219 }|329 return|800 optima|235 .|802 clone|216 ()|227 ;|219 }|-1
Localizable|800 pattern|-1
Localizable|800 pattern|-1
if|214 (|800 x0|231 >|800 x1|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT|234 ,|800 x0|234 ,|800 x1|215 )|227 ;|219 }|-1
throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR|234 ,|800 obj|235 .|802 getClass|216 ()|235 .|802 getName|216 ()|215 )|227 ;|-1
catch|214 (|801 ClassCastException|800 cce|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.FUNCTION_NOT_DIFFERENTIABLE|215 )|227 ;|219 }|-1
if|214 (|40 b.length|242 !=|800 m|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 b.length|234 ,|800 m|215 )|227 ;|219 }|-1
if|214 (|800 v|235 .|802 getDimension|216 ()|242 !=|800 nRows|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|800 v|235 .|802 getDimension|216 ()|234 ,|800 nRows|215 )|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 nRows|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 v.length|234 ,|800 nRows|215 )|227 ;|219 }|-1
if|214 (|800 v|235 .|802 getDimension|216 ()|242 !=|800 nCols|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|800 v|235 .|802 getDimension|216 ()|234 ,|800 nCols|215 )|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 nCols|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 v.length|234 ,|800 nCols|215 )|227 ;|219 }|-1
if|214 (|40 array.length|242 !=|800 nRows|215 )|218 {|320 throw|304 new|801 InvalidMatrixException|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH_2x2|234 ,|40 array.length|234 ,|34 NUMBER_CONSTANT|234 ,|800 nRows|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|40 array.length|242 !=|800 nCols|215 )|218 {|320 throw|304 new|801 InvalidMatrixException|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH_2x2|234 ,|34 NUMBER_CONSTANT|234 ,|40 array.length|234 ,|34 NUMBER_CONSTANT|234 ,|800 nCols|215 )|227 ;|219 }|-1
if|214 (|800 vector|235 .|802 getDimension|216 ()|242 !=|800 nRows|215 )|218 {|320 throw|304 new|801 InvalidMatrixException|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH_2x2|234 ,|800 vector|235 .|802 getDimension|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|800 nRows|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 vector|235 .|802 getDimension|216 ()|242 !=|800 nCols|215 )|218 {|320 throw|304 new|801 InvalidMatrixException|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH_2x2|234 ,|34 NUMBER_CONSTANT|234 ,|800 vector|235 .|802 getDimension|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|800 nCols|215 )|227 ;|219 }|-1
{|313 if|214 (|40 d.length|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.AT_LEAST_ONE_ROW|215 )|227 ;|219 }|329 return|801 d|221 [|34 NUMBER_CONSTANT|222 ]|235 .|802 getField|216 ()|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 nRows|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 v.length|234 ,|800 nRows|215 )|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 nCols|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 v.length|234 ,|800 nCols|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|40 LocalizedFormats.NO_SUCH_MATRIX_ENTRY|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
if|214 (|800 b|235 .|802 getDimension|216 ()|242 !=|800 m|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|800 b|235 .|802 getDimension|216 ()|234 ,|800 m|215 )|227 ;|219 }|-1
if|214 (|40 b.length|242 !=|800 m|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 b.length|234 ,|800 m|215 )|227 ;|219 }|-1
{|320 throw|304 new|801 InvalidMatrixException|214 (|40 LocalizedFormats.ASSYMETRIC_EIGEN_NOT_SUPPORTED|215 )|227 ;|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NO_DATA|215 )|227 ;|219 }|-1
if|214 (|800 p|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_POISSON_MEAN|234 ,|800 p|215 )|227 ;|219 }|-1
throw|304 new|801 NotARotationMatrixException|214 (|40 LocalizedFormats.UNABLE_TO_ORTHOGONOLIZE_MATRIX|234 ,|800 i|201 -|34 NUMBER_CONSTANT|215 )|227 ;|-1
if|214 (|800 normProduct|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR|215 )|227 ;|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR|215 )|227 ;|219 }|-1
if|214 (|800 norm|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|40 LocalizedFormats.ZERO_NORM_FOR_ROTATION_AXIS|215 )|227 ;|219 }|-1
{|313 if|214 (|40 BigInteger.ZERO|235 .|802 equals|214 (|40 fraction.numerator|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|40 LocalizedFormats.ZERO_DENOMINATOR|215 )|227 ;|219 }|329 return|802 multiply|214 (|800 fraction|235 .|802 reciprocal|216 ()|215 )|227 ;|219 }|-1
if|214 (|40 BigInteger.ZERO|235 .|802 equals|214 (|800 bg|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|40 LocalizedFormats.ZERO_DENOMINATOR|215 )|227 ;|219 }|-1
{|313 if|214 (|214 (|800 alpha|252 <=|34 NUMBER_CONSTANT|215 )|250 |||214 (|800 alpha|231 >|34 NUMBER_CONSTANT|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL|234 ,|800 alpha|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|219 }|-1
if|214 (|800 y0|202 *|800 y1|251 >=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.SAME_SIGN_AT_ENDPOINTS|234 ,|800 min|234 ,|800 max|234 ,|800 y0|234 ,|800 y1|215 )|227 ;|219 }|-1
{|313 if|214 (|800 values|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NULL_INPUT_ARRAY|215 )|227 ;|219 }|802 incrementAll|214 (|800 values|234 ,|34 NUMBER_CONSTANT|234 ,|40 values.length|215 )|227 ;|219 }|-1
{|313 if|214 (|800 values|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NULL_INPUT_ARRAY|215 )|227 ;|219 }|329 return|802 evaluate|214 (|800 values|234 ,|34 NUMBER_CONSTANT|234 ,|40 values.length|215 )|227 ;|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.CANNOT_FORMAT_OBJECT_TO_FRACTION|215 )|227 ;|219 }|-1
{|313 if|214 (|800 format|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NULL_WHOLE_FORMAT|215 )|227 ;|219 }|315 this|235 .|800 wholeFormat|204 =|800 format|227 ;|219 }|-1
{|349 super|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE|234 ,|800 dimension1|234 ,|800 dimension2|215 )|227 ;|315 this|235 .|800 dimension1|204 =|800 dimension1|227 ;|315 this|235 .|800 dimension2|204 =|800 dimension2|227 ;|219 }|-1
{|313 if|214 (|800 f|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NULL_FUNCTION|215 )|227 ;|219 }|219 }|-1
if|214 (|800 p|230 <|34 NUMBER_CONSTANT|250 |||800 p|231 >|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.OUT_OF_RANGE_SIMPLE|234 ,|800 p|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|313 if|214 (|800 trials|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NEGATIVE_NUMBER_OF_TRIALS|234 ,|800 trials|215 )|227 ;|219 }|800 numberOfTrials|204 =|800 trials|227 ;|219 }|-1
{|313 if|214 (|207 !|802 isSequence|214 (|800 lower|234 ,|800 initial|234 ,|800 upper|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.INVALID_INTERVAL_INITIAL_VALUE_PARAMETERS|234 ,|800 lower|234 ,|800 initial|234 ,|800 upper|215 )|227 ;|219 }|219 }|-1
{|313 if|214 (|207 !|800 resultComputed|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|40 LocalizedFormats.NO_RESULT_AVAILABLE|215 )|227 ;|219 }|219 }|-1
if|214 (|800 f|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NULL_FUNCTION|215 )|227 ;|219 }|-1
if|214 (|801 f|221 [|34 NUMBER_CONSTANT|222 ]|242 !=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.FIRST_ELEMENT_NOT_ZERO|234 ,|801 f|221 [|34 NUMBER_CONSTANT|222 ]|215 )|227 ;|219 }|-1
{|313 if|214 (|800 realFormat|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NULL_REAL_FORMAT|215 )|227 ;|219 }|315 this|235 .|800 realFormat|204 =|800 realFormat|227 ;|219 }|-1
{|313 if|214 (|800 imaginaryFormat|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NULL_IMAGINARY_FORMAT|215 )|227 ;|219 }|315 this|235 .|800 imaginaryFormat|204 =|800 imaginaryFormat|227 ;|219 }|-1
if|214 (|800 imaginaryCharacter|236 ==|500 null|250 |||800 imaginaryCharacter|235 .|802 length|216 ()|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.EMPTY_STRING_FOR_IMAGINARY_CHARACTER|215 )|227 ;|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX|234 ,|800 obj|235 .|802 getClass|216 ()|235 .|802 getName|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 ClassCastException|800 ex|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.INSTANCES_NOT_COMPARABLE_TO_EXISTING_VALUES|234 ,|800 v|235 .|802 getClass|216 ()|235 .|802 getName|216 ()|215 )|227 ;|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.CLASS_DOESNT_IMPLEMENT_COMPARABLE|234 ,|800 v|235 .|802 getClass|216 ()|235 .|802 getName|216 ()|215 )|227 ;|219 }|-1
if|214 (|800 n|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N|234 ,|800 n|215 )|227 ;|219 }|-1
if|214 (|800 fraction|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NULL_FRACTION|215 )|227 ;|219 }|-1
{|313 if|214 (|800 numerator|236 ==|40 Integer.MIN_VALUE|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|40 LocalizedFormats.OVERFLOW_IN_FRACTION|234 ,|800 numerator|234 ,|800 denominator|215 )|227 ;|219 }|329 return|304 new|801 Fraction|214 (|201 -|800 numerator|234 ,|800 denominator|215 )|227 ;|219 }|-1
{|349 super|214 (|40 LocalizedFormats.NON_SQUARE_MATRIX|234 ,|800 rows|234 ,|800 columns|215 )|227 ;|219 }|-1
final|801 Localizable|800 specifier|-1
if|214 (|800 m|252 <=|800 p|215 )|218 {|320 throw|304 new|801 EstimationException|214 (|40 LocalizedFormats.NO_DEGREES_OF_FREEDOM|234 ,|800 m|234 ,|800 p|215 )|227 ;|219 }|-1
catch|214 (|801 InvalidMatrixException|800 ime|215 )|218 {|320 throw|304 new|801 EstimationException|214 (|40 LocalizedFormats.UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM|215 )|227 ;|219 }|-1
if|214 (|247 ++|800 costEvaluations|231 >|800 maxCostEval|215 )|218 {|320 throw|304 new|801 EstimationException|214 (|40 LocalizedFormats.MAX_EVALUATIONS_EXCEEDED|234 ,|800 maxCostEval|215 )|227 ;|219 }|-1
{|313 if|214 (|801 in|221 [|800 i|222 ]|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX|234 ,|800 i|234 ,|801 in|221 [|800 i|222 ]|215 )|227 ;|219 }|219 }|-1
{|313 if|214 (|801 in|221 [|800 i|222 ]|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_ELEMENT_AT_INDEX|234 ,|800 i|234 ,|801 in|221 [|800 i|222 ]|215 )|227 ;|219 }|219 }|-1
if|214 (|214 (|800 alpha|252 <=|34 NUMBER_CONSTANT|215 )|250 |||214 (|800 alpha|231 >|34 NUMBER_CONSTANT|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL|234 ,|800 alpha|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|214 (|800 alpha|252 <=|34 NUMBER_CONSTANT|215 )|250 |||214 (|800 alpha|231 >|34 NUMBER_CONSTANT|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL|234 ,|800 alpha|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|214 (|800 alpha|252 <=|34 NUMBER_CONSTANT|215 )|250 |||214 (|800 alpha|231 >|34 NUMBER_CONSTANT|215 )|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL|234 ,|800 alpha|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NO_DATA|215 )|227 ;|219 }|-1
throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_REAL_VECTOR|234 ,|800 obj|235 .|802 getClass|216 ()|235 .|802 getName|216 ()|215 )|227 ;|-1
if|214 (|800 Double|235 .|802 isNaN|214 (|801 optima|221 [|34 NUMBER_CONSTANT|222 ]|215 )|215 )|218 {|320 throw|304 new|801 OptimizationException|214 (|40 LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT|234 ,|800 starts|215 )|227 ;|219 }|-1
{|313 if|214 (|800 optimaValues|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|40 LocalizedFormats.NO_OPTIMUM_COMPUTED_YET|215 )|227 ;|219 }|329 return|800 optimaValues|235 .|802 clone|216 ()|227 ;|219 }|-1
{|313 if|214 (|800 optima|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalStateException|214 (|40 LocalizedFormats.NO_OPTIMUM_COMPUTED_YET|215 )|227 ;|219 }|329 return|800 optima|235 .|802 clone|216 ()|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 rows|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 v.length|234 ,|800 rows|215 )|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 columns|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 v.length|234 ,|800 columns|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|40 LocalizedFormats.NO_SUCH_MATRIX_ENTRY|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|40 LocalizedFormats.NO_SUCH_MATRIX_ENTRY|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|40 LocalizedFormats.NO_SUCH_MATRIX_ENTRY|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 ArrayIndexOutOfBoundsException|800 e|215 )|218 {|320 throw|304 new|801 MatrixIndexException|214 (|40 LocalizedFormats.NO_SUCH_MATRIX_ENTRY|234 ,|800 row|234 ,|800 column|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|219 }|-1
if|214 (|40 array.length|242 !=|800 nRows|215 )|218 {|320 throw|304 new|801 InvalidMatrixException|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH_2x2|234 ,|40 array.length|234 ,|34 NUMBER_CONSTANT|234 ,|800 nRows|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|40 array.length|242 !=|800 nCols|215 )|218 {|320 throw|304 new|801 InvalidMatrixException|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH_2x2|234 ,|34 NUMBER_CONSTANT|234 ,|40 array.length|234 ,|34 NUMBER_CONSTANT|234 ,|800 nCols|215 )|227 ;|219 }|-1
if|214 (|800 length|242 !=|800 columns|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.DIFFERENT_ROWS_LENGTHS|234 ,|800 columns|234 ,|800 length|215 )|227 ;|219 }|-1
catch|214 (|801 InvalidMatrixException|800 e|215 )|218 {|320 throw|304 new|801 OptimizationException|214 (|40 LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM|215 )|227 ;|219 }|-1
if|214 (|800 b|235 .|802 getDimension|216 ()|242 !=|800 m|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|800 b|235 .|802 getDimension|216 ()|234 ,|800 m|215 )|227 ;|219 }|-1
if|214 (|40 b.length|242 !=|800 m|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.VECTOR_LENGTH_MISMATCH|234 ,|40 b.length|234 ,|800 m|215 )|227 ;|219 }|-1
if|214 (|40 xval.length|236 ==|34 NUMBER_CONSTANT|250 |||801 xval|221 [|34 NUMBER_CONSTANT|222 ]|236 ==|500 null|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NO_DATA|215 )|227 ;|219 }|-1
if|214 (|800 sampleSize|252 <=|34 NUMBER_CONSTANT|215 )|218 {|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_SAMPLE_SIZE|234 ,|800 sampleSize|215 )|227 ;|219 }|-1
if|214 (|800 p|230 <|34 NUMBER_CONSTANT|250 |||800 p|231 >|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.OUT_OF_RANGE_SIMPLE|234 ,|800 p|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 x0|231 >|800 x1|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT|234 ,|800 x0|234 ,|800 x1|215 )|227 ;|219 }|-1
if|214 (|800 x0|231 >|800 x1|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT|234 ,|800 x0|234 ,|800 x1|215 )|227 ;|219 }|-1
catch|214 (|801 IllegalAccessException|800 e2|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.PERCENTILE_IMPLEMENTATION_CANNOT_ACCESS_METHOD|234 ,|800 SET_QUANTILE_METHOD_NAME|234 ,|800 percentileImpl|235 .|802 getClass|216 ()|235 .|802 getName|216 ()|215 )|227 ;|219 }|-1
if|214 (|800 windowSize|230 <|34 NUMBER_CONSTANT|215 )|218 {|313 if|214 (|800 windowSize|242 !=|800 INFINITE_WINDOW|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_WINDOW_SIZE|234 ,|800 windowSize|215 )|227 ;|219 }|219 }|-1
if|214 (|800 n|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_UPPER_BOUND|234 ,|800 n|215 )|227 ;|219 }|-1
if|214 (|40 mean.length|242 !=|40 standardDeviation.length|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE|234 ,|40 mean.length|234 ,|40 standardDeviation.length|215 )|227 ;|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|40 LocalizedFormats.IDENTICAL_ABSCISSAS_DIVISION_BY_ZERO|234 ,|800 i|234 ,|800 k|234 ,|801 x|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.RANDOMKEY_MUTATION_WRONG_CLASS|234 ,|800 original|235 .|802 getClass|216 ()|235 .|802 getSimpleName|216 ()|215 )|227 ;|219 }|-1
throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED|234 ,|800 n|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
if|214 (|800 sum|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|40 LocalizedFormats.ARRAY_SUMS_TO_ZERO|215 )|227 ;|219 }|-1
{|313 if|214 (|800 lower|251 >=|800 upper|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.ENDPOINTS_NOT_AN_INTERVAL|234 ,|800 lower|234 ,|800 upper|215 )|227 ;|219 }|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.OUT_OF_RANGE_ROOT_OF_UNITY_INDEX|234 ,|800 k|234 ,|34 NUMBER_CONSTANT|234 ,|800 omegaCount|201 -|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.OUT_OF_RANGE_ROOT_OF_UNITY_INDEX|234 ,|800 k|234 ,|34 NUMBER_CONSTANT|234 ,|800 omegaCount|201 -|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|313 if|214 (|800 lower|251 >=|800 upper|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.ENDPOINTS_NOT_AN_INTERVAL|234 ,|800 lower|234 ,|800 upper|215 )|227 ;|219 }|219 }|-1
if|214 (|800 parsePosition|235 .|802 getIndex|216 ()|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createParseException|214 (|800 parsePosition|235 .|802 getErrorIndex|216 ()|234 ,|40 LocalizedFormats.UNPARSEABLE_FRACTION_NUMBER|234 ,|800 source|215 )|227 ;|219 }|-1
if|214 (|800 parsePosition|235 .|802 getIndex|216 ()|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createParseException|214 (|800 parsePosition|235 .|802 getErrorIndex|216 ()|234 ,|40 LocalizedFormats.UNPARSEABLE_FRACTION_NUMBER|234 ,|800 source|215 )|227 ;|219 }|-1
if|214 (|800 parsePosition|235 .|802 getIndex|216 ()|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createParseException|214 (|800 parsePosition|235 .|802 getErrorIndex|216 ()|234 ,|40 LocalizedFormats.UNPARSEABLE_COMPLEX_NUMBER|234 ,|800 source|215 )|227 ;|219 }|-1
{|313 if|214 (|800 lower|251 >=|800 upper|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.ENDPOINTS_NOT_AN_INTERVAL|234 ,|800 lower|234 ,|800 upper|215 )|227 ;|219 }|219 }|-1
if|214 (|800 parsePosition|235 .|802 getIndex|216 ()|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createParseException|214 (|800 parsePosition|235 .|802 getErrorIndex|216 ()|234 ,|40 LocalizedFormats.UNPARSEABLE_REAL_VECTOR|234 ,|800 source|215 )|227 ;|219 }|-1
catch|214 (|801 NoSuchMethodException|800 e1|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIllegalArgumentException|214 (|40 LocalizedFormats.PERCENTILE_IMPLEMENTATION_UNSUPPORTED_METHOD|234 ,|800 percentileImpl|235 .|802 getClass|216 ()|235 .|802 getName|216 ()|234 ,|800 SET_QUANTILE_METHOD_NAME|215 )|227 ;|219 }|-1
if|214 (|800 parsePosition|235 .|802 getIndex|216 ()|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createParseException|214 (|800 parsePosition|235 .|802 getErrorIndex|216 ()|234 ,|40 LocalizedFormats.UNPARSEABLE_3D_VECTOR|234 ,|800 source|215 )|227 ;|219 }|-1
public|802 NotStrictlyPositiveException|214 (|801 Number|800 value|215 )|218 {|349 super|214 (|800 value|234 ,|34 NUMBER_CONSTANT|234 ,|9 false|215 )|227 ;|219 }|-1
public|802 NotPositiveException|214 (|801 Number|800 value|215 )|218 {|349 super|214 (|800 value|234 ,|34 NUMBER_CONSTANT|234 ,|9 true|215 )|227 ;|219 }|-1
if|214 (|40 xval.length|236 ==|34 NUMBER_CONSTANT|250 |||40 yval.length|236 ==|34 NUMBER_CONSTANT|250 |||40 fval.length|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 NoDataException|216 ()|227 ;|219 }|-1
if|214 (|40 x.length|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 NumberIsTooSmallException|214 (|40 LocalizedFormats.NUMBER_OF_POINTS|234 ,|40 x.length|234 ,|34 NUMBER_CONSTANT|234 ,|9 true|215 )|227 ;|219 }|-1
if|214 (|40 x.length|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 NumberIsTooSmallException|214 (|40 LocalizedFormats.NUMBER_OF_POINTS|234 ,|40 x.length|234 ,|34 NUMBER_CONSTANT|234 ,|9 true|215 )|227 ;|219 }|-1
if|214 (|40 mean.length|242 !=|40 standardDeviation.length|215 )|218 {|320 throw|304 new|801 DimensionMismatchException|214 (|40 mean.length|234 ,|40 standardDeviation.length|215 )|227 ;|219 }|-1
if|214 (|800 n|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 NotStrictlyPositiveException|214 (|800 n|215 )|227 ;|219 }|-1
{|329 return|214 (|800 value|236 ==|500 null|233 ?|500 null|226 :|800 value|235 .|802 clone|216 ()|215 )|227 ;|219 }|-1
{|329 return|214 (|800 point|236 ==|500 null|233 ?|500 null|226 :|800 point|235 .|802 clone|216 ()|215 )|227 ;|219 }|-1
{|329 return|214 (|800 point|236 ==|500 null|233 ?|500 null|226 :|800 point|235 .|802 clone|216 ()|215 )|227 ;|219 }|-1
final|39 double|85 []|800 scale|204 =|304 new|39 double|221 [|800 mainSetDimension|222 ]|227 ;|-1
catch|214 (|801 NoDataException|800 ise|215 )|220 {}|-1
{|349 super|214 (|800 specific|234 ,|40 LocalizedFormats.NO_DATA|234 ,|214 (|801 Object|85 []|215 )|500 null|215 )|227 ;|219 }|-1
a|221 [|800 i|222 ]|221 [|800 j|222 ]|221 [|800 k|222 ]|204 =|801 aV|221 [|800 i|200 +|800 N|202 *|214 (|800 j|200 +|800 N|202 *|800 k|215 )|222 ]|-1
{|329 return|214 (|800 value|236 ==|500 null|215 )|233 ?|500 null|226 :|800 value|235 .|802 clone|216 ()|227 ;|219 }|-1
{|329 return|214 (|800 point|236 ==|500 null|215 )|233 ?|500 null|226 :|800 point|235 .|802 clone|216 ()|227 ;|219 }|-1
super|214 (|800 specific|234 ,|800 boundIsAllowed|233 ?|40 LocalizedFormats.NUMBER_TOO_SMALL|226 :|40 LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED|234 ,|800 wrong|234 ,|800 min|215 )|227 ;|-1
(|800 startConfiguration|236 ==|500 null|215 )|250 |||214 (|40 startConfiguration.length|242 !=|40 startPoint.length|215 )|-1
{|329 return|214 (|800 point|236 ==|500 null|215 )|233 ?|500 null|226 :|800 point|235 .|802 clone|216 ()|227 ;|219 }|-1
public|801 GoalType|802 getGoalType|216 ()|218 {|329 return|800 optimizationGoal|227 ;|219 }|-1
{|320 throw|304 new|801 MatrixIndexException|214 (|40 LocalizedFormats.COLUMN_INDEX_OUT_OF_RANGE|234 ,|800 column|234 ,|34 NUMBER_CONSTANT|234 ,|802 getColumnDimension|216 ()|201 -|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|320 throw|304 new|801 MatrixIndexException|214 (|40 LocalizedFormats.ROW_INDEX_OUT_OF_RANGE|234 ,|800 row|234 ,|34 NUMBER_CONSTANT|234 ,|802 getRowDimension|216 ()|201 -|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|320 throw|304 new|801 MatrixIndexException|214 (|40 LocalizedFormats.INDEX_OUT_OF_RANGE|234 ,|800 index|234 ,|34 NUMBER_CONSTANT|234 ,|802 getDimension|216 ()|201 -|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|320 throw|304 new|801 MatrixIndexException|214 (|40 LocalizedFormats.INDEX_OUT_OF_RANGE|234 ,|800 index|234 ,|34 NUMBER_CONSTANT|234 ,|802 getDimension|216 ()|201 -|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|320 throw|304 new|801 MatrixIndexException|214 (|40 LocalizedFormats.INDEX_OUT_OF_RANGE|234 ,|800 index|234 ,|34 NUMBER_CONSTANT|234 ,|802 getDimension|216 ()|201 -|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
public|39 void|802 remove|216 ()|218 {|320 throw|800 MathRuntimeException|235 .|802 createUnsupportedOperationException|214 (|40 LocalizedFormats.UNSUPPORTED_OPERATION|215 )|227 ;|219 }|-1
{|349 super|214 (|800 METHOD_NAME|234 ,|800 nSteps|234 ,|800 nSteps|200 +|34 NUMBER_CONSTANT|234 ,|800 minStep|234 ,|800 maxStep|234 ,|800 vecAbsoluteTolerance|234 ,|800 vecRelativeTolerance|215 )|227 ;|219 }|-1
{|349 super|214 (|800 METHOD_NAME|234 ,|800 nSteps|234 ,|800 nSteps|200 +|34 NUMBER_CONSTANT|234 ,|800 minStep|234 ,|800 maxStep|234 ,|800 scalAbsoluteTolerance|234 ,|800 scalRelativeTolerance|215 )|227 ;|219 }|-1
{|349 super|214 (|800 METHOD_NAME|234 ,|800 nSteps|234 ,|800 nSteps|234 ,|800 minStep|234 ,|800 maxStep|234 ,|800 vecAbsoluteTolerance|234 ,|800 vecRelativeTolerance|215 )|227 ;|219 }|-1
{|349 super|214 (|800 METHOD_NAME|234 ,|800 nSteps|234 ,|800 nSteps|234 ,|800 minStep|234 ,|800 maxStep|234 ,|800 scalAbsoluteTolerance|234 ,|800 scalRelativeTolerance|215 )|227 ;|219 }|-1
if|214 (|800 populationLimit|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 NotPositiveException|214 (|40 LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE|234 ,|800 populationLimit|215 )|227 ;|219 }|-1
{|800 ret|204 =|802 addAndCheck|214 (|800 a|234 ,|201 -|800 b|234 ,|40 LocalizedFormats.OVERFLOW_IN_ADDITION|215 )|227 ;|219 }|-1
if|214 (|800 s|230 <|40 Integer.MIN_VALUE|250 |||800 s|231 >|40 Integer.MAX_VALUE|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|40 LocalizedFormats.OVERFLOW_IN_SUBTRACTION|234 ,|800 x|234 ,|800 y|215 )|227 ;|219 }|-1
{|329 return|802 addAndCheck|214 (|800 a|234 ,|800 b|234 ,|40 LocalizedFormats.OVERFLOW_IN_ADDITION|215 )|227 ;|219 }|-1
if|214 (|800 s|230 <|40 Integer.MIN_VALUE|250 |||800 s|231 >|40 Integer.MAX_VALUE|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createArithmeticException|214 (|40 LocalizedFormats.OVERFLOW_IN_ADDITION|234 ,|800 x|234 ,|800 y|215 )|227 ;|219 }|-1
catch|214 (|801 ArithmeticException|800 ex|215 )|218 {|802 assertTrue|214 (|800 ex|235 .|802 getMessage|216 ()|235 .|802 length|216 ()|231 >|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|802 checkOrder|214 (|800 val|234 ,|40 OrderDirection.INCREASING|234 ,|9 true|215 )|227 ;|219 }|-1
{|315 this|214 (|800 wrong|234 ,|800 previous|234 ,|800 index|234 ,|40 MathUtils.OrderDirection.INCREASING|234 ,|9 true|215 )|227 ;|219 }|-1
if|214 (|800 t|236 ==|34 NUMBER_CONSTANT|249 &&|800 i|251 >=|800 j|215 )|500 continue;|-1
arguments|204 =|800 ArgUtils|235 .|802 flatten|214 (|800 args|215 )|227 ;|-1
public|39 void|802 remove|216 ()|218 {|320 throw|304 new|801 MathUnsupportedOperationException|216 ()|227 ;|219 }|-1
if|214 (|800 idxStep|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 ZeroException|216 ()|227 ;|219 }|-1
if|214 (|800 idxStep|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 ZeroException|216 ()|227 ;|219 }|-1
if|214 (|800 observations|236 ==|500 null|215 )|218 {|320 throw|304 new|801 NullArgumentException|214 (|40 LocalizedFormats.INPUT_ARRAY|215 )|227 ;|219 }|-1
if|214 (|800 f|236 ==|500 null|215 )|218 {|320 throw|304 new|801 NullArgumentException|214 (|40 LocalizedFormats.FUNCTION|215 )|227 ;|219 }|-1
{|313 if|214 (|800 values|236 ==|500 null|215 )|218 {|320 throw|304 new|801 NullArgumentException|214 (|40 LocalizedFormats.INPUT_ARRAY|215 )|227 ;|219 }|329 return|802 evaluate|214 (|800 values|234 ,|34 NUMBER_CONSTANT|234 ,|40 values.length|215 )|227 ;|219 }|-1
if|214 (|800 d|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 ZeroException|216 ()|227 ;|219 }|-1
if|214 (|800 d|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 ZeroException|216 ()|227 ;|219 }|-1
if|214 (|800 fraction|236 ==|500 null|215 )|218 {|320 throw|304 new|801 NullArgumentException|214 (|40 LocalizedFormats.FRACTION|215 )|227 ;|219 }|-1
if|214 (|800 fraction|236 ==|500 null|215 )|218 {|320 throw|304 new|801 NullArgumentException|214 (|40 LocalizedFormats.FRACTION|215 )|227 ;|219 }|-1
if|214 (|800 fraction|236 ==|500 null|215 )|218 {|320 throw|304 new|801 NullArgumentException|214 (|40 LocalizedFormats.FRACTION|215 )|227 ;|219 }|-1
if|214 (|800 f|236 ==|500 null|215 )|218 {|320 throw|304 new|801 NullArgumentException|214 (|40 LocalizedFormats.FUNCTION|215 )|227 ;|219 }|-1
@|802 Test|214 (|800 expected|204 =|800 ZeroException|235 .|341 class|215 )|-1
{|320 throw|304 new|801 DimensionMismatchException|214 (|40 xArray.length|234 ,|40 yArray.length|215 )|227 ;|219 }|-1
if|214 (|800 covarianceMatrix|236 ==|500 null|215 )|218 {|320 throw|304 new|801 NullArgumentException|214 (|40 LocalizedFormats.COVARIANCE_MATRIX|215 )|227 ;|219 }|-1
{|313 if|214 (|800 f|236 ==|500 null|215 )|218 {|320 throw|304 new|801 NullArgumentException|214 (|40 LocalizedFormats.FUNCTION|215 )|227 ;|219 }|219 }|-1
if|214 (|800 function|236 ==|500 null|215 )|218 {|320 throw|304 new|801 NullArgumentException|214 (|40 LocalizedFormats.FUNCTION|215 )|227 ;|219 }|-1
{|313 if|214 (|800 values|236 ==|500 null|215 )|218 {|320 throw|304 new|801 NullArgumentException|214 (|40 LocalizedFormats.INPUT_ARRAY|215 )|227 ;|219 }|329 return|802 evaluate|214 (|800 values|234 ,|34 NUMBER_CONSTANT|234 ,|40 values.length|215 )|227 ;|219 }|-1
{|313 if|214 (|800 values|236 ==|500 null|215 )|218 {|320 throw|304 new|801 NullArgumentException|214 (|40 LocalizedFormats.INPUT_ARRAY|215 )|227 ;|219 }|802 incrementAll|214 (|800 values|234 ,|34 NUMBER_CONSTANT|234 ,|40 values.length|215 )|227 ;|219 }|-1
{|313 if|214 (|800 values|236 ==|500 null|215 )|218 {|320 throw|304 new|801 NullArgumentException|214 (|40 LocalizedFormats.INPUT_ARRAY|215 )|227 ;|219 }|329 return|802 evaluate|214 (|800 values|234 ,|34 NUMBER_CONSTANT|234 ,|40 values.length|215 )|227 ;|219 }|-1
final|39 double|85 []|800 grad|204 =|801 weightedResidualJacobian|221 [|800 i|222 ]|227 ;|-1
{|315 this|214 (|800 cause|234 ,|800 argument|234 ,|304 new|801 DummyLocalizable|214 (|800 pattern|215 )|234 ,|800 arguments|215 )|227 ;|219 }|-1
{|315 this|214 (|800 cause|234 ,|800 argument|234 ,|304 new|801 DummyLocalizable|214 (|800 pattern|215 )|234 ,|800 arguments|215 )|227 ;|219 }|-1
{|315 this|214 (|800 argument|234 ,|304 new|801 DummyLocalizable|214 (|800 pattern|215 )|234 ,|800 arguments|215 )|227 ;|219 }|-1
{|315 this|214 (|800 argument|234 ,|304 new|801 DummyLocalizable|214 (|800 pattern|215 )|234 ,|800 arguments|215 )|227 ;|219 }|-1
step|239 *=|800 FastMath|235 .|802 max|214 (|34 NUMBER_CONSTANT|234 ,|800 yA|203 /|800 yB|215 )|-1
return|800 FastMath|235 .|802 sqrt|214 (|800 sum|203 /|40 v.length|215 )|227 ;|-1
{|329 return|800 FastMath|235 .|802 sqrt|214 (|802 getChiSquare|216 ()|203 /|800 rows|215 )|227 ;|219 }|-1
double|800 wi|204 =|800 FastMath|235 .|802 sqrt|214 (|801 residualsWeights|221 [|800 i|222 ]|215 )|227 ;|-1
{|315 this|235 .|800 h|204 =|800 FastMath|235 .|802 abs|214 (|800 h|215 )|227 ;|315 this|235 .|800 handler|204 =|800 handler|227 ;|802 reset|216 ()|227 ;|219 }|-1
double|800 invR3|204 =|34 NUMBER_CONSTANT|203 /|214 (|800 r2|202 *|800 FastMath|235 .|802 sqrt|214 (|800 r2|215 )|215 )|227 ;|-1
double|800 expected|204 =|800 FastMath|235 .|802 random|216 ()|227 ;|-1
double|800 expected|204 =|800 FastMath|235 .|802 random|216 ()|227 ;|-1
return|800 FastMath|235 .|802 sqrt|214 (|800 sum2|215 )|227 ;|-1
final|39 int|800 pEnd|204 =|800 FastMath|235 .|802 min|214 (|800 pStart|200 +|800 BLOCK_SIZE|234 ,|800 rows|215 )|227 ;|-1
final|39 int|800 pEnd|204 =|800 FastMath|235 .|802 min|214 (|800 pStart|200 +|800 BLOCK_SIZE|234 ,|800 rows|215 )|227 ;|-1
double|800 step|204 =|800 FastMath|235 .|802 abs|214 (|800 pb|235 .|802 getFinalTime|216 ()|201 -|800 pb|235 .|802 getInitialTime|216 ()|215 )|202 *|34 NUMBER_CONSTANT|227 ;|-1
double|800 t|204 =|800 FastMath|235 .|802 abs|214 (|800 rValues|235 .|802 getEntry|214 (|800 i|234 ,|800 j|215 )|215 )|203 /|800 stdErrors|235 .|802 getEntry|214 (|800 i|234 ,|800 j|215 )|227 ;|-1
assertEquals|214 (|800 n|200 +|45 STRING_CONSTANT|200 +|800 degree|200 +|45 STRING_CONSTANT|200 +|800 i|234 ,|800 reference|234 ,|800 result|234 ,|34 NUMBER_CONSTANT|202 *|214 (|34 NUMBER_CONSTANT|200 +|800 FastMath|235 .|802 abs|214 (|800 reference|215 )|215 )|215 )|227 ;|-1
NUMBER_CONSTANT|202 *|214 (|34 NUMBER_CONSTANT|200 +|800 Erf|235 .|802 erf|214 (|214 (|800 x|201 -|800 mean|215 )|203 /|214 (|800 standardDeviation|202 *|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|215 )|215 )|215 )|215 )|-1
return|800 FastMath|235 .|802 sqrt|214 (|800 dx|202 *|800 dx|200 +|800 dy|202 *|800 dy|215 )|227 ;|-1
assertTrue|214 (|800 FastMath|235 .|802 sqrt|214 (|40 m.length|215 )|202 *|800 estimator|235 .|802 getRMS|214 (|800 problem|215 )|231 >|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|802 assertTrue|214 (|800 FastMath|235 .|802 abs|214 (|801 result|221 [|800 i|222 ]|201 -|801 y|221 [|800 i|222 ]|215 )|230 <|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|802 assertTrue|214 (|800 FastMath|235 .|802 abs|214 (|801 result|221 [|800 i|222 ]|201 -|801 y|221 [|800 i|222 ]|215 )|230 <|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
assertTrue|214 (|800 FastMath|235 .|802 sqrt|214 (|40 problem.target.length|215 )|202 *|800 optimizer|235 .|802 getRMS|216 ()|231 >|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|800 sumLog|237 +=|800 FastMath|235 .|802 log|214 (|801 values|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|800 value|237 +=|800 FastMath|235 .|802 log|214 (|800 d|215 )|227 ;|800 n|247 ++|227 ;|219 }|-1
{|800 ret|204 =|201 -|800 mean|202 *|800 FastMath|235 .|802 log|214 (|34 NUMBER_CONSTANT|201 -|800 p|215 )|227 ;|219 }|-1
{|800 ret|204 =|34 NUMBER_CONSTANT|201 -|800 FastMath|235 .|802 exp|214 (|201 -|800 x|203 /|800 mean|215 )|227 ;|219 }|-1
{|313 if|214 (|800 x|230 <|34 NUMBER_CONSTANT|215 )|218 {|329 return|34 NUMBER_CONSTANT|227 ;|219 }|329 return|800 FastMath|235 .|802 exp|214 (|201 -|800 x|203 /|800 mean|215 )|203 /|800 mean|227 ;|219 }|-1
{|800 sum|237 +=|800 FastMath|235 .|802 abs|214 (|801 p1|221 [|800 i|222 ]|201 -|801 p2|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|329 return|214 (|800 FastMath|235 .|802 exp|214 (|800 x|215 )|201 -|800 FastMath|235 .|802 exp|214 (|201 -|800 x|215 )|215 )|203 /|34 NUMBER_CONSTANT|227 ;|219 }|-1
float|800 factor|204 =|214 (|39 float|215 )|800 FastMath|235 .|802 pow|214 (|34 NUMBER_CONSTANT|234 ,|800 scale|215 )|202 *|800 sign|227 ;|-1
{|329 return|800 FastMath|235 .|802 log|214 (|800 x|215 )|203 /|800 FastMath|235 .|802 log|214 (|800 base|215 )|227 ;|219 }|-1
return|800 FastMath|235 .|802 abs|214 (|800 u|215 )|200 +|800 FastMath|235 .|802 abs|214 (|800 v|215 )|227 ;|-1
return|800 FastMath|235 .|802 abs|214 (|800 u|215 )|200 +|800 FastMath|235 .|802 abs|214 (|800 v|215 )|227 ;|-1
final|39 boolean|800 isEqual|204 =|800 FastMath|235 .|802 abs|214 (|800 xInt|201 -|800 yInt|215 )|252 <=|800 maxUlps|227 ;|-1
{|329 return|802 equalsIncludingNaN|214 (|800 x|234 ,|800 y|215 )|250 |||214 (|800 FastMath|235 .|802 abs|214 (|800 y|201 -|800 x|215 )|252 <=|800 eps|215 )|227 ;|219 }|-1
{|329 return|802 equals|214 (|800 x|234 ,|800 y|234 ,|34 NUMBER_CONSTANT|215 )|250 |||800 FastMath|235 .|802 abs|214 (|800 y|201 -|800 x|215 )|252 <=|800 eps|227 ;|219 }|-1
{|329 return|214 (|800 FastMath|235 .|802 exp|214 (|800 x|215 )|200 +|800 FastMath|235 .|802 exp|214 (|201 -|800 x|215 )|215 )|203 /|34 NUMBER_CONSTANT|227 ;|219 }|-1
return|800 FastMath|235 .|802 floor|214 (|800 result|200 +|34 NUMBER_CONSTANT|215 )|227 ;|-1
double|800 sigma|204 =|34 NUMBER_CONSTANT|200 +|800 FastMath|235 .|802 random|216 ()|227 ;|-1
double|800 mu|204 =|800 FastMath|235 .|802 random|216 ()|227 ;|-1
double|800 x|204 =|34 NUMBER_CONSTANT|203 /|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
double|800 x|204 =|34 NUMBER_CONSTANT|203 /|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
double|800 x|204 =|34 NUMBER_CONSTANT|203 /|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
double|800 x|204 =|34 NUMBER_CONSTANT|203 /|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
double|800 scaling_coefficient|204 =|34 NUMBER_CONSTANT|203 /|800 FastMath|235 .|802 sqrt|214 (|40 f.length|215 )|227 ;|-1
double|800 scaling_coefficient|204 =|34 NUMBER_CONSTANT|203 /|800 FastMath|235 .|802 sqrt|214 (|800 n|215 )|227 ;|-1
{|39 double|800 scaling_coefficient|204 =|34 NUMBER_CONSTANT|203 /|800 FastMath|235 .|802 sqrt|214 (|40 f.length|215 )|227 ;|329 return|802 scaleArray|214 (|802 fft|214 (|800 f|234 ,|9 true|215 )|234 ,|800 scaling_coefficient|215 )|227 ;|219 }|-1
double|800 scaling_coefficient|204 =|34 NUMBER_CONSTANT|203 /|800 FastMath|235 .|802 sqrt|214 (|40 f.length|215 )|227 ;|-1
double|800 scaling_coefficient|204 =|34 NUMBER_CONSTANT|203 /|800 FastMath|235 .|802 sqrt|214 (|800 n|215 )|227 ;|-1
{|39 double|800 scaling_coefficient|204 =|34 NUMBER_CONSTANT|203 /|800 FastMath|235 .|802 sqrt|214 (|40 f.length|215 )|227 ;|329 return|802 scaleArray|214 (|802 fft|214 (|800 f|234 ,|9 false|215 )|234 ,|800 scaling_coefficient|215 )|227 ;|219 }|-1
{|329 return|800 FastMath|235 .|802 atan2|214 (|802 getImaginary|216 ()|234 ,|802 getReal|216 ()|215 )|227 ;|219 }|-1
FastMath|235 .|802 abs|214 (|800 c|215 )|230 <|800 FastMath|235 .|802 abs|214 (|800 d|215 )|-1
FastMath|235 .|802 abs|214 (|800 dt|215 )|252 <=|800 FastMath|235 .|802 ulp|214 (|800 stepStart|215 )|-1
double|800 scalAbsoluteTolerance|204 =|800 FastMath|235 .|802 pow|214 (|34 NUMBER_CONSTANT|234 ,|800 i|215 )|227 ;|-1
assertEquals|214 (|40 FastMath.PI|234 ,|800 x|234 ,|800 accuracy|215 )|227 ;|-1
{|39 double|800 x|204 =|800 UnivariateRealSolverUtils|235 .|802 solve|214 (|800 sin|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|802 assertEquals|214 (|40 FastMath.PI|234 ,|800 x|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
Assert|235 .|802 assertEquals|214 (|45 STRING_CONSTANT|234 ,|800 expected|234 ,|800 result|234 ,|800 FastMath|235 .|802 ulp|214 (|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|45 STRING_CONSTANT|234 ,|800 expected|234 ,|800 result|234 ,|800 FastMath|235 .|802 ulp|214 (|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
{|801 singularValues|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 sqrt|214 (|800 FastMath|235 .|802 abs|214 (|801 singularValues|221 [|800 i|222 ]|215 )|215 )|227 ;|219 }|-1
{|801 result|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 sqrt|214 (|800 sigma|202 *|801 betaVariance|221 [|800 i|222 ]|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
double|800 fpos|204 =|800 FastMath|235 .|802 floor|214 (|800 pos|215 )|227 ;|-1
final|39 double|800 dist|204 =|800 FastMath|235 .|802 abs|214 (|800 z|201 -|801 x|221 [|800 i|222 ]|215 )|227 ;|-1
setMaxGrowth|214 (|800 FastMath|235 .|802 pow|214 (|34 NUMBER_CONSTANT|234 ,|201 -|800 exp|215 )|215 )|227 ;|-1
setMaxGrowth|214 (|800 FastMath|235 .|802 pow|214 (|34 NUMBER_CONSTANT|234 ,|201 -|800 exp|215 )|215 )|227 ;|-1
FastFourierTransformer|235 .|802 scaleArray|214 (|800 x|234 ,|800 FastMath|235 .|802 sqrt|214 (|40 x.length|203 /|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
double|800 step|204 =|800 FastMath|235 .|802 abs|214 (|800 pb|235 .|802 getFinalTime|216 ()|201 -|800 pb|235 .|802 getInitialTime|216 ()|215 )|202 *|34 NUMBER_CONSTANT|227 ;|-1
double|800 tolerance|204 =|800 FastMath|235 .|802 max|214 (|800 relativeAccuracy|202 *|800 z|235 .|802 abs|216 ()|234 ,|800 absoluteAccuracy|215 )|227 ;|-1
double|800 sqrt|204 =|800 FastMath|235 .|800 sqrt|214 (|801 c|221 [|800 ir|222 ]|221 [|800 ir|222 ]|215 )|227 ;|-1
int|800 k|204 =|800 FastMath|235 .|802 max|214 (|800 N|234 ,|40 seed.length|215 )|-1
{|801 values|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 pow|214 (|801 values|221 [|800 i|222 ]|234 ,|800 d|215 )|227 ;|219 }|-1
double|800 t|204 =|800 FastMath|235 .|802 abs|214 (|800 t|214 (|800 m|234 ,|800 mu|234 ,|800 v|234 ,|800 n|215 )|215 )|227 ;|-1
{|329 return|214 (|800 m|201 -|800 mu|215 )|203 /|800 FastMath|235 .|802 sqrt|214 (|800 v|203 /|800 n|215 )|227 ;|219 }|-1
{|800 stepStart|204 =|40 Double.NaN|227 ;|800 stepSize|204 =|800 FastMath|235 .|802 sqrt|214 (|800 minStep|202 *|800 maxStep|215 )|227 ;|219 }|-1
{|802 assertEquals|214 (|800 msg|234 ,|800 expected|234 ,|800 actual|234 ,|800 FastMath|235 .|802 abs|214 (|800 tolerance|202 *|800 actual|215 )|215 )|227 ;|219 }|-1
Gamma|235 .|802 digamma|214 (|800 FastMath|235 .|802 pow|214 (|34 NUMBER_CONSTANT|234 ,|201 -|800 n|215 )|215 )|-1
double|800 step|204 =|800 FastMath|235 .|802 abs|214 (|800 pb|235 .|802 getFinalTime|216 ()|201 -|800 pb|235 .|802 getInitialTime|216 ()|215 )|202 *|34 NUMBER_CONSTANT|227 ;|-1
double|800 range|204 =|800 FastMath|235 .|802 abs|214 (|800 pb|235 .|802 getFinalTime|216 ()|201 -|800 pb|235 .|802 getInitialTime|216 ()|215 )|227 ;|-1
double|800 range|204 =|800 FastMath|235 .|802 abs|214 (|800 pb|235 .|802 getFinalTime|216 ()|201 -|800 pb|235 .|802 getInitialTime|216 ()|215 )|227 ;|-1
double|800 scalAbsoluteTolerance|204 =|800 FastMath|235 .|802 pow|214 (|34 NUMBER_CONSTANT|234 ,|800 i|215 )|227 ;|-1
double|800 absAi|204 =|800 FastMath|235 .|802 abs|214 (|801 coefficients|221 [|800 i|222 ]|215 )|227 ;|-1
{|800 ret|204 =|800 median|200 +|800 scale|202 *|800 FastMath|235 .|802 tan|214 (|40 FastMath.PI|202 *|214 (|800 p|201 -|34 NUMBER_CONSTANT|215 )|215 )|227 ;|219 }|-1
return|214 (|34 NUMBER_CONSTANT|203 /|40 FastMath.PI|215 )|202 *|214 (|800 scale|203 /|214 (|800 dev|202 *|800 dev|200 +|800 scale|202 *|800 scale|215 )|215 )|227 ;|-1
Double|800 pi|204 =|800 Double|235 .|802 valueOf|214 (|40 FastMath.PI|215 )|227 ;|-1
final|39 int|800 pEnd|204 =|800 FastMath|235 .|802 min|214 (|800 pStart|200 +|800 BLOCK_SIZE|234 ,|800 rows|215 )|227 ;|-1
final|39 int|800 pEnd|204 =|800 FastMath|235 .|802 min|214 (|800 pStart|200 +|800 BLOCK_SIZE|234 ,|800 rows|215 )|227 ;|-1
{|801 stdDev|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 sqrt|214 (|800 matrix|235 .|802 getEntry|214 (|800 i|234 ,|800 i|215 )|215 )|227 ;|219 }|-1
(|39 int|215 )|214 (|800 FastMath|235 .|802 abs|214 (|34 NUMBER_CONSTANT|202 *|800 x|200 +|34 NUMBER_CONSTANT|202 *|800 y|215 )|215 )|211 %|34 NUMBER_CONSTANT|236 ==|34 NUMBER_CONSTANT|-1
(|39 int|215 )|214 (|800 FastMath|235 .|802 abs|214 (|34 NUMBER_CONSTANT|202 *|800 x|200 +|34 NUMBER_CONSTANT|202 *|800 y|215 )|215 )|211 %|34 NUMBER_CONSTANT|236 ==|34 NUMBER_CONSTANT|-1
assertTrue|214 (|800 FastMath|235 .|802 abs|214 (|800 walk|215 )|230 <|34 NUMBER_CONSTANT|215 )|227 ;|-1
assertTrue|214 (|800 FastMath|235 .|802 abs|214 (|800 walk|215 )|230 <|34 NUMBER_CONSTANT|215 )|227 ;|-1
assertTrue|214 (|800 FastMath|235 .|802 abs|214 (|800 walk|215 )|230 <|34 NUMBER_CONSTANT|215 )|227 ;|-1
assertEquals|214 (|34 NUMBER_CONSTANT|203 /|214 (|34 NUMBER_CONSTANT|202 *|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|215 )|215 )|234 ,|800 sample|235 .|802 getStandardDeviation|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
assertEquals|214 (|34 NUMBER_CONSTANT|203 /|214 (|34 NUMBER_CONSTANT|202 *|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|215 )|215 )|234 ,|800 sample|235 .|802 getStandardDeviation|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
if|214 (|800 value|242 !=|800 i|215 )|218 {|800 res|237 +=|800 FastMath|235 .|802 abs|214 (|800 value|201 -|800 i|215 )|227 ;|219 }|-1
{|800 value|237 +=|34 NUMBER_CONSTANT|203 /|800 FastMath|235 .|802 pow|214 (|800 k|234 ,|800 m|215 )|227 ;|219 }|-1
return|214 (|34 NUMBER_CONSTANT|203 /|800 FastMath|235 .|802 pow|214 (|800 x|234 ,|800 exponent|215 )|215 )|203 /|802 generalizedHarmonic|214 (|800 numberOfElements|234 ,|800 exponent|215 )|227 ;|-1
widthSufficient|204 =|800 FastMath|235 .|802 min|214 (|800 lowerBinMass|234 ,|800 upperBinMass|215 )|202 *|800 sampleSize|251 >=|800 minExpectedCount|227 ;|-1
return|800 FastMath|235 .|802 sqrt|214 (|800 criterion|203 /|40 wm.length|215 )|227 ;|-1
double|800 factor|204 =|201 -|800 FastMath|235 .|802 sqrt|214 (|800 wm|235 .|802 getWeight|216 ()|215 )|227 ;|-1
{|802 assertTrue|214 (|800 FastMath|235 .|802 abs|214 (|800 value|201 -|800 expected|215 )|230 <|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
public|39 double|802 end|216 ()|218 {|329 return|800 FastMath|235 .|802 sqrt|214 (|800 sum|215 )|227 ;|219 }|-1
{|329 return|800 FastMath|235 .|802 atan2|214 (|800 x|234 ,|800 y|215 )|227 ;|219 }|-1
{|329 return|800 FastMath|235 .|802 pow|214 (|800 x|234 ,|800 y|215 )|227 ;|219 }|-1
accum3|240 /=|800 variance|202 *|800 FastMath|235 .|802 sqrt|214 (|800 variance|215 )|227 ;|-1
(|800 n0|202 *|40 moment.m3|215 )|203 /|214 (|214 (|800 n0|201 -|34 NUMBER_CONSTANT|215 )|202 *|214 (|800 n0|201 -|34 NUMBER_CONSTANT|215 )|202 *|800 FastMath|235 .|802 sqrt|214 (|800 variance|215 )|202 *|800 variance|215 )|-1
assertEquals|214 (|800 FastMath|235 .|802 exp|214 (|34 NUMBER_CONSTANT|215 )|234 ,|800 u|235 .|802 getGeometricMean|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|329 return|800 FastMath|235 .|802 asin|214 (|800 z|203 /|802 getNorm|216 ()|215 )|227 ;|219 }|-1
{|329 return|800 FastMath|235 .|802 atan2|214 (|800 y|234 ,|800 x|215 )|227 ;|219 }|-1
double|800 x|204 =|800 FastMath|235 .|802 random|216 ()|227 ;|-1
assertTrue|214 (|800 FastMath|235 .|802 abs|214 (|801 generated|221 [|34 NUMBER_CONSTANT|222 ]|201 -|34 NUMBER_CONSTANT|215 )|231 >|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|329 return|304 new|801 HarmonicFunction|214 (|800 a|202 *|800 omega|234 ,|800 omega|234 ,|800 phi|200 +|40 FastMath.PI|203 /|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|329 return|800 a|202 *|800 FastMath|235 .|802 cos|214 (|800 omega|202 *|800 x|200 +|800 phi|215 )|227 ;|219 }|-1
Complex|800 sqrtz|204 =|800 ComplexUtils|235 .|802 polar2Complex|214 (|800 FastMath|235 .|802 sqrt|214 (|800 r|215 )|234 ,|800 theta|203 /|34 NUMBER_CONSTANT|215 )|227 ;|-1
TestUtils|235 .|802 assertEquals|214 (|304 new|801 Complex|214 (|800 FastMath|235 .|802 acos|214 (|34 NUMBER_CONSTANT|215 )|234 ,|34 NUMBER_CONSTANT|215 )|234 ,|40 Complex.ZERO|235 .|802 acos|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|802 assertTrue|214 (|800 FastMath|235 .|802 abs|214 (|800 value|201 -|800 reference|215 )|230 <|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
long|800 index|204 =|800 FastMath|235 .|802 round|214 (|214 (|800 FastMath|235 .|802 random|216 ()|215 )|202 *|40 testArray.length|215 )|227 ;|-1
{|800 length|204 =|800 list|235 .|802 size|216 ()|201 -|800 FastMath|235 .|802 max|214 (|34 NUMBER_CONSTANT|234 ,|800 list|235 .|802 size|216 ()|201 -|800 windowSize|215 )|227 ;|219 }|-1
double|800 c|204 =|800 t2|200 +|34 NUMBER_CONSTANT|202 *|214 (|800 FastMath|235 .|802 exp|214 (|201 -|34 NUMBER_CONSTANT|202 *|800 t2|215 )|201 -|34 NUMBER_CONSTANT|215 )|227 ;|-1
double|800 t|204 =|34 NUMBER_CONSTANT|202 *|40 FastMath.PI|227 ;|-1
double|800 t|204 =|34 NUMBER_CONSTANT|202 *|40 FastMath.PI|227 ;|-1
assertEquals|214 (|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|215 )|234 ,|800 e1|235 .|802 distanceFrom|214 (|800 e2|215 )|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
error|204 =|800 FastMath|235 .|802 sqrt|214 (|800 error|203 /|40 scale.length|215 )|202 *|801 errfac|221 [|800 currentDegree|201 -|34 NUMBER_CONSTANT|222 ]|227 ;|-1
FastMath|235 .|802 log|214 (|800 x|215 )|201 -|34 NUMBER_CONSTANT|203 /|800 x|-1
double|800 expected|204 =|800 FastMath|235 .|802 random|216 ()|227 ;|-1
double|800 expected|204 =|800 FastMath|235 .|802 random|216 ()|227 ;|-1
final|39 double|800 power|204 =|800 FastMath|235 .|802 pow|214 (|800 normalizedAbscissa|234 ,|800 order|215 )|227 ;|-1
assertEquals|214 (|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|215 )|234 ,|800 Vector3D|235 .|802 distance|214 (|800 v1|234 ,|800 v2|215 )|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
assertEquals|214 (|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|215 )|234 ,|304 new|801 Vector3D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|235 .|802 getNorm|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|329 return|800 FastMath|235 .|802 exp|214 (|800 sumOfLogs|235 .|802 getResult|216 ()|203 /|800 sumOfLogs|235 .|802 getN|216 ()|215 )|227 ;|219 }|-1
{|800 Assert|235 .|802 assertEquals|214 (|800 FastMath|235 .|802 pow|214 (|34 NUMBER_CONSTANT|234 ,|800 x|215 )|234 ,|800 f|235 .|802 value|214 (|800 x|215 )|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
this|235 .|800 convergence|204 =|800 FastMath|235 .|802 abs|214 (|800 convergence|215 )|227 ;|-1
final|39 int|800 capacity|204 =|214 (|39 int|215 )|800 FastMath|235 .|802 ceil|214 (|800 expectedSize|203 /|800 LOAD_FACTOR|215 )|227 ;|-1
double|800 fl|204 =|800 FastMath|235 .|802 floor|214 (|800 x|215 )|227 ;|-1
{|329 return|802 cumulativeProbability|214 (|214 (|39 int|215 )|800 FastMath|235 .|802 floor|214 (|800 x|215 )|215 )|227 ;|219 }|-1
{|802 assertTrue|214 (|800 FastMath|235 .|802 abs|214 (|800 value|201 -|800 reference|215 )|230 <|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|39 double|800 absError|204 =|800 FastMath|235 .|802 abs|214 (|800 expected|215 )|202 *|800 relativeError|227 ;|800 Assert|235 .|802 assertEquals|214 (|800 msg|234 ,|800 expected|234 ,|800 actual|234 ,|800 absError|215 )|227 ;|219 }|-1
return|201 -|800 mean|202 *|800 FastMath|235 .|802 log|214 (|800 unif|215 )|227 ;|-1
double|800 sigma|204 =|800 FastMath|235 .|802 sqrt|214 (|800 mean|215 )|227 ;|-1
if|214 (|800 FastMath|235 .|802 abs|214 (|800 x1|201 -|800 x0|215 )|252 <=|800 absoluteAccuracy|215 )|218 {|802 setResult|214 (|800 x1|234 ,|800 i|215 )|227 ;|329 return|800 x1|227 ;|219 }|-1
double|800 delta|204 =|800 FastMath|235 .|802 abs|214 (|802 getEntry|214 (|800 i|215 )|201 -|801 v|221 [|800 i|222 ]|215 )|227 ;|-1
{|39 double|800 delta|204 =|800 FastMath|235 .|802 abs|214 (|802 getEntry|214 (|800 i|215 )|201 -|801 v|221 [|800 i|222 ]|215 )|227 ;|800 max|237 +=|800 delta|227 ;|219 }|-1
return|800 FastMath|235 .|802 sqrt|214 (|800 res|215 )|227 ;|-1
return|800 FastMath|235 .|802 sqrt|214 (|800 res|215 )|227 ;|-1
{|329 return|800 FastMath|235 .|802 abs|214 (|800 value|215 )|230 <|800 epsilon|227 ;|219 }|-1
double|800 step|204 =|800 FastMath|235 .|802 abs|214 (|800 pb|235 .|802 getFinalTime|216 ()|201 -|800 pb|235 .|802 getInitialTime|216 ()|215 )|202 *|34 NUMBER_CONSTANT|227 ;|-1
{|802 assertTrue|214 (|800 FastMath|235 .|802 abs|214 (|800 value|201 -|800 expected|215 )|230 <|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
new|801 Fraction|214 (|40 FastMath.PI|234 ,|34 NUMBER_CONSTANT|215 )|-1
{|304 new|801 Fraction|214 (|214 (|34 NUMBER_CONSTANT|200 +|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|215 )|215 )|203 /|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
max|204 =|800 FastMath|235 .|800 max|214 (|800 max|234 ,|800 FastMath|235 .|802 abs|214 (|800 delta|215 )|215 )|227 ;|-1
max|204 =|800 FastMath|235 .|800 max|214 (|800 max|234 ,|800 FastMath|235 .|802 abs|214 (|800 delta|215 )|215 )|227 ;|-1
{|83 final|39 double|800 delta|204 =|801 data|221 [|800 i|222 ]|201 -|801 v|221 [|800 i|222 ]|227 ;|800 sum|237 +=|800 FastMath|235 .|802 abs|214 (|800 delta|215 )|227 ;|219 }|-1
sum|237 +=|800 FastMath|235 .|802 abs|214 (|800 delta|215 )|227 ;|-1
return|800 FastMath|235 .|802 sqrt|214 (|800 sum|215 )|227 ;|-1
return|800 FastMath|235 .|802 sqrt|214 (|800 sum|215 )|227 ;|-1
for|214 (|39 double|800 a|226 :|800 data|215 )|218 {|800 max|204 =|800 FastMath|235 .|800 max|214 (|800 max|234 ,|800 FastMath|235 .|802 abs|214 (|800 a|215 )|215 )|227 ;|219 }|-1
for|214 (|39 double|800 a|226 :|800 data|215 )|218 {|800 sum|237 +=|800 FastMath|235 .|802 abs|214 (|800 a|215 )|227 ;|219 }|-1
return|800 FastMath|235 .|802 sqrt|214 (|800 sum|215 )|227 ;|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 ulp|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 signum|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 rint|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 floor|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 ceil|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 cbrt|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 sqrt|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 abs|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 atan|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 asin|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 acos|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 tan|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 sin|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 cos|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 tanh|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 sinh|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 cosh|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 log1p|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 log10|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 log|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 expm1|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 exp|214 (|801 data|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 pow|214 (|801 data|221 [|800 i|222 ]|234 ,|800 d|215 )|227 ;|219 }|-1
i|230 <|800 FastMath|235 .|802 min|214 (|800 rows|234 ,|800 columns|215 )|-1
final|39 double|800 inv|204 =|34 NUMBER_CONSTANT|203 /|800 FastMath|235 .|802 sqrt|214 (|800 norm2|215 )|227 ;|-1
{|313 if|214 (|800 FastMath|235 .|802 abs|214 (|800 value|201 -|801 searchArray|221 [|800 i|222 ]|215 )|230 <|800 tolerance|215 )|218 {|800 found|204 =|9 true|227 ;|219 }|800 i|247 ++|227 ;|219 }|-1
FastMath|235 .|802 abs|214 (|800 dt|215 )|252 <=|800 FastMath|235 .|802 ulp|214 (|800 stepStart|215 )|-1
this|235 .|800 step|204 =|800 FastMath|235 .|802 abs|214 (|800 step|215 )|227 ;|-1
final|39 int|800 p|204 =|800 FastMath|235 .|802 min|214 (|800 m|234 ,|800 n|215 )|227 ;|-1
double|800 range|204 =|800 FastMath|235 .|802 abs|214 (|800 pb|235 .|802 getFinalTime|216 ()|201 -|800 pb|235 .|802 getInitialTime|216 ()|215 )|227 ;|-1
double|800 range|204 =|800 FastMath|235 .|802 abs|214 (|800 pb|235 .|802 getFinalTime|216 ()|201 -|800 pb|235 .|802 getInitialTime|216 ()|215 )|227 ;|-1
double|800 scalAbsoluteTolerance|204 =|800 FastMath|235 .|802 pow|214 (|34 NUMBER_CONSTANT|234 ,|800 i|215 )|227 ;|-1
{|329 return|214 (|39 int|215 )|800 FastMath|235 .|802 min|214 (|800 randomData|235 .|802 nextPoisson|214 (|800 mean|215 )|234 ,|40 Integer.MAX_VALUE|215 )|227 ;|219 }|-1
normal|235 .|802 setStandardDeviation|214 (|800 FastMath|235 .|802 sqrt|214 (|800 p|215 )|215 )|227 ;|-1
if|214 (|800 unequalCounts|215 )|218 {|800 weight|204 =|800 FastMath|235 .|802 sqrt|214 (|214 (|39 double|215 )|800 countSum1|203 /|214 (|39 double|215 )|800 countSum2|215 )|227 ;|219 }|-1
if|214 (|800 FastMath|235 .|802 abs|214 (|800 sumExpected|201 -|800 sumObserved|215 )|231 >|34 NUMBER_CONSTANT|215 )|218 {|800 ratio|204 =|800 sumObserved|203 /|800 sumExpected|227 ;|800 rescale|204 =|9 true|227 ;|219 }|-1
final|39 double|800 s17|204 =|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
double|800 scalAbsoluteTolerance|204 =|800 FastMath|235 .|802 pow|214 (|34 NUMBER_CONSTANT|234 ,|800 i|215 )|227 ;|-1
{|800 norm|204 =|800 FastMath|235 .|802 max|214 (|800 norm|234 ,|800 FastMath|235 .|802 abs|214 (|800 e|235 .|802 getValue|216 ()|215 )|215 )|227 ;|219 }|-1
{|800 norm|237 +=|800 FastMath|235 .|802 abs|214 (|800 e|235 .|802 getValue|216 ()|215 )|227 ;|219 }|-1
return|800 FastMath|235 .|802 sqrt|214 (|800 sum|215 )|227 ;|-1
return|800 FastMath|235 .|802 sqrt|214 (|800 d|215 )|227 ;|-1
return|800 FastMath|235 .|802 sqrt|214 (|800 dx|202 *|800 dx|200 +|800 dy|202 *|800 dy|215 )|227 ;|-1
assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 FastMath|235 .|802 sqrt|214 (|800 circle|235 .|802 getM|216 ()|215 )|202 *|800 rms|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
return|800 a|202 *|800 FastMath|235 .|802 cos|214 (|800 omega|202 *|800 x|200 +|800 phi|215 )|227 ;|-1
final|39 double|800 f|204 =|34 NUMBER_CONSTANT|203 /|800 FastMath|235 .|802 sqrt|214 (|800 normSq|215 )|227 ;|-1
{|313 if|214 (|802 getN|216 ()|231 >|34 NUMBER_CONSTANT|215 )|218 {|800 stdDev|204 =|800 FastMath|235 .|802 sqrt|214 (|802 getVariance|216 ()|215 )|227 ;|219 }|322 else|218 {|800 stdDev|204 =|34 NUMBER_CONSTANT|227 ;|219 }|219 }|-1
double|800 scalAbsoluteTolerance|204 =|800 FastMath|235 .|802 pow|214 (|34 NUMBER_CONSTANT|234 ,|800 i|215 )|227 ;|-1
assertTrue|214 (|800 FastMath|235 .|802 abs|214 (|800 h|215 )|230 <|800 minStep|215 )|227 ;|-1
double|800 maxStep|204 =|800 FastMath|235 .|802 abs|214 (|800 pb|235 .|802 getFinalTime|216 ()|201 -|800 pb|235 .|802 getInitialTime|216 ()|215 )|227 ;|-1
{|313 if|214 (|802 getN|216 ()|231 >|34 NUMBER_CONSTANT|215 )|218 {|800 stdDev|204 =|800 FastMath|235 .|802 sqrt|214 (|802 getVariance|216 ()|215 )|227 ;|219 }|322 else|218 {|800 stdDev|204 =|34 NUMBER_CONSTANT|227 ;|219 }|219 }|-1
double|85 []|800 y0|204 =|218 {|800 FastMath|235 .|802 sin|214 (|800 a|215 )|234 ,|800 FastMath|235 .|802 cos|214 (|800 a|215 )|219 }|227 ;|-1
new|39 double|85 []|218 {|201 -|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|215 )|234 ,|201 -|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|219 }|-1
{|304 new|801 BigReal|214 (|34 NUMBER_CONSTANT|215 )|234 ,|40 BigReal.ONE|234 ,|40 BigReal.ZERO|234 ,|304 new|801 BigReal|214 (|34 NUMBER_CONSTANT|215 )|234 ,|304 new|801 BigReal|214 (|40 FastMath.PI|215 )|234 ,|304 new|801 BigReal|214 (|201 -|34 NUMBER_CONSTANT|215 )|219 }|-1
if|214 (|800 deltaNorm|231 >|34 NUMBER_CONSTANT|202 *|800 FastMath|235 .|802 max|214 (|34 NUMBER_CONSTANT|234 ,|800 initialNorm|215 )|215 )|218 {|329 return|9 false|227 ;|219 }|-1
assertEquals|214 (|40 FastMath.PI|234 ,|800 MathUtils|235 .|802 scalb|214 (|40 FastMath.PI|234 ,|34 NUMBER_CONSTANT|215 )|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
MathUtils|235 .|802 hash|214 (|304 new|39 double|85 []|218 {|800 FastMath|235 .|802 nextAfter|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|219 }|215 )|-1
assertEquals|214 (|800 i|200 +|45 STRING_CONSTANT|234 ,|800 FastMath|235 .|802 log|214 (|802 factorial|214 (|800 i|215 )|215 )|234 ,|800 MathUtils|235 .|802 factorialLog|214 (|800 i|215 )|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
new|39 double|85 []|218 {|800 FastMath|235 .|802 nextAfter|214 (|800 FastMath|235 .|802 nextAfter|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|234 ,|34 NUMBER_CONSTANT|215 )|219 }|-1
MathUtils|235 .|802 equals|214 (|304 new|39 double|85 []|218 {|34 NUMBER_CONSTANT|219 }|234 ,|304 new|39 double|85 []|218 {|800 FastMath|235 .|802 nextAfter|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|219 }|215 )|-1
ret|204 =|800 FastMath|235 .|802 exp|214 (|800 p1|200 +|800 p2|201 -|800 p3|215 )|227 ;|-1
{|329 return|800 FastMath|235 .|802 min|214 (|800 k|234 ,|800 m|215 )|227 ;|219 }|-1
{|329 return|800 FastMath|235 .|802 max|214 (|34 NUMBER_CONSTANT|234 ,|800 m|201 -|214 (|800 n|201 -|800 k|215 )|215 )|227 ;|219 }|-1
{|329 return|34 NUMBER_CONSTANT|202 *|214 (|34 NUMBER_CONSTANT|201 -|800 distribution|235 .|802 cumulativeProbability|214 (|800 FastMath|235 .|802 abs|214 (|802 getSlope|216 ()|215 )|203 /|802 getSlopeStdErr|216 ()|215 )|215 )|227 ;|219 }|-1
{|329 return|800 FastMath|235 .|802 sqrt|214 (|802 getMeanSquareError|216 ()|203 /|800 sumXX|215 )|227 ;|219 }|-1
double|800 result|204 =|800 FastMath|235 .|802 sqrt|214 (|802 getRSquare|216 ()|215 )|227 ;|-1
if|214 (|800 FastMath|235 .|802 abs|214 (|800 sumXX|215 )|230 <|34 NUMBER_CONSTANT|202 *|40 Double.MIN_VALUE|215 )|218 {|329 return|40 Double.NaN|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 value|214 (|39 double|800 d|215 )|218 {|329 return|800 FastMath|235 .|802 ulp|214 (|800 d|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 value|214 (|39 double|800 d|215 )|218 {|329 return|800 FastMath|235 .|802 signum|214 (|800 d|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 value|214 (|39 double|800 d|215 )|218 {|329 return|800 FastMath|235 .|802 rint|214 (|800 d|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 value|214 (|39 double|800 d|215 )|218 {|329 return|800 FastMath|235 .|802 cosh|214 (|800 d|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 value|214 (|39 double|800 d|215 )|218 {|329 return|800 FastMath|235 .|802 acos|214 (|800 d|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 value|214 (|39 double|800 d|215 )|218 {|329 return|800 FastMath|235 .|802 cos|214 (|800 d|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 value|214 (|39 double|800 d|215 )|218 {|329 return|800 FastMath|235 .|802 log10|214 (|800 d|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 value|214 (|39 double|800 d|215 )|218 {|329 return|800 FastMath|235 .|802 log|214 (|800 d|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 value|214 (|39 double|800 d|215 )|218 {|329 return|800 FastMath|235 .|802 floor|214 (|800 d|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 value|214 (|39 double|800 d|215 )|218 {|329 return|800 FastMath|235 .|802 ceil|214 (|800 d|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 value|214 (|39 double|800 d|215 )|218 {|329 return|800 FastMath|235 .|802 cbrt|214 (|800 d|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 value|214 (|39 double|800 d|215 )|218 {|329 return|800 FastMath|235 .|802 tanh|214 (|800 d|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 value|214 (|39 double|800 d|215 )|218 {|329 return|800 FastMath|235 .|802 tan|214 (|800 d|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 value|214 (|39 double|800 d|215 )|218 {|329 return|800 FastMath|235 .|802 atan|214 (|800 d|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 value|214 (|39 double|800 d|215 )|218 {|329 return|800 FastMath|235 .|802 asin|214 (|800 d|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 value|214 (|39 double|800 d|215 )|218 {|329 return|800 FastMath|235 .|802 expm1|214 (|800 d|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 value|214 (|39 double|800 d|215 )|218 {|329 return|800 FastMath|235 .|802 exp|214 (|800 d|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 value|214 (|39 double|800 d|215 )|218 {|329 return|800 FastMath|235 .|802 sinh|214 (|800 d|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 value|214 (|39 double|800 d|215 )|218 {|329 return|800 FastMath|235 .|802 sqrt|214 (|800 d|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 value|214 (|39 double|800 d|215 )|218 {|329 return|800 FastMath|235 .|802 sin|214 (|800 d|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 value|214 (|39 double|800 d|215 )|218 {|329 return|800 FastMath|235 .|802 abs|214 (|800 d|215 )|227 ;|219 }|-1
new|801 BigFraction|214 (|40 FastMath.PI|234 ,|34 NUMBER_CONSTANT|215 )|-1
{|304 new|801 BigFraction|214 (|214 (|34 NUMBER_CONSTANT|200 +|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|215 )|215 )|203 /|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
double|800 step|204 =|800 FastMath|235 .|802 abs|214 (|800 pb|235 .|802 getFinalTime|216 ()|201 -|800 pb|235 .|802 getInitialTime|216 ()|215 )|202 *|34 NUMBER_CONSTANT|227 ;|-1
FastFourierTransformer|235 .|802 scaleArray|214 (|800 x|234 ,|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|202 *|214 (|40 x.length|201 -|34 NUMBER_CONSTANT|215 )|215 )|215 )|227 ;|-1
double|800 c|204 =|800 FastMath|235 .|802 exp|214 (|800 t0|201 -|800 t|215 )|227 ;|-1
assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 FastMath|235 .|802 sqrt|214 (|800 circle|235 .|802 getN|216 ()|215 )|202 *|800 optimizer|235 .|802 getRMS|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|800 product|239 *=|800 FastMath|235 .|802 pow|214 (|801 values|221 [|800 i|222 ]|234 ,|801 weights|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
FastFourierTransformer|235 .|802 scaleArray|214 (|800 x2|234 ,|34 NUMBER_CONSTANT|203 /|800 FastMath|235 .|802 sqrt|214 (|40 x2.length|215 )|215 )|227 ;|-1
assertNotSame|214 (|800 v|234 ,|304 new|801 ArrayRealVector|214 (|304 new|39 double|85 []|218 {|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|200 +|800 FastMath|235 .|802 ulp|214 (|34 NUMBER_CONSTANT|215 )|219 }|215 )|215 )|227 ;|-1
double|800 scaling_coefficient|204 =|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|203 /|214 (|800 n|201 -|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
double|800 scaling_coefficient|204 =|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|203 /|214 (|40 f.length|201 -|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
if|214 (|800 FastMath|235 .|802 abs|214 (|800 fn1|201 -|800 fn|215 )|252 <=|800 threshold|215 )|329 return|800 o|227 ;|-1
assertNotSame|214 (|800 v|234 ,|304 new|801 OpenMapRealVector|214 (|304 new|39 double|85 []|218 {|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|200 +|800 FastMath|235 .|802 ulp|214 (|34 NUMBER_CONSTANT|215 )|219 }|215 )|215 )|227 ;|-1
FastMath|235 .|802 sin|214 (|800 i|202 *|40 FastMath.PI|203 /|800 n|215 )|202 *|214 (|801 f|221 [|800 i|222 ]|200 +|801 f|221 [|800 n|201 -|800 i|222 ]|215 )|-1
double|800 scaling_coefficient|204 =|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|203 /|800 n|215 )|227 ;|-1
{|39 double|800 scaling_coefficient|204 =|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|203 /|40 f.length|215 )|227 ;|329 return|800 FastFourierTransformer|235 .|802 scaleArray|214 (|802 fst|214 (|800 f|215 )|234 ,|800 scaling_coefficient|215 )|227 ;|219 }|-1
double|800 tmp2|204 =|800 FastMath|235 .|802 exp|214 (|800 tmp1|215 )|227 ;|-1
double|800 tmp2|204 =|800 FastMath|235 .|802 sqrt|214 (|800 tmpSquare|215 )|227 ;|-1
double|800 absTolerance|204 =|800 FastMath|235 .|802 pow|214 (|34 NUMBER_CONSTANT|234 ,|800 i|215 )|227 ;|-1
FastMath|235 .|802 abs|214 (|800 max|201 -|800 min|215 )|252 <=|800 absoluteAccuracy|-1
assertEquals|214 (|800 ci|234 ,|801 l40|221 [|800 i|222 ]|234 ,|800 FastMath|235 .|802 abs|214 (|800 ci|215 )|202 *|34 NUMBER_CONSTANT|215 )|227 ;|-1
FastMath|235 .|802 abs|214 (|800 Tk|235 .|802 value|214 (|800 x|215 )|215 )|230 <|214 (|34 NUMBER_CONSTANT|200 +|34 NUMBER_CONSTANT|215 )|-1
double|800 tmp2|204 =|800 FastMath|235 .|802 exp|214 (|800 tmp1|215 )|227 ;|-1
double|800 tmp2|204 =|800 FastMath|235 .|802 sqrt|214 (|800 tmpSquare|215 )|227 ;|-1
assertEquals|214 (|800 mi|234 ,|800 vi|234 ,|800 paramsAccuracy|202 *|214 (|34 NUMBER_CONSTANT|200 +|800 FastMath|235 .|802 abs|214 (|800 mi|215 )|215 )|215 )|227 ;|-1
assertEquals|214 (|800 theoreticalMinCost|234 ,|800 FastMath|235 .|802 sqrt|214 (|800 m|215 )|202 *|800 rms|234 ,|800 threshold|215 )|227 ;|-1
{|802 assertTrue|214 (|800 FastMath|235 .|802 abs|214 (|801 result|221 [|800 i|222 ]|201 -|801 y|221 [|800 i|222 ]|215 )|230 <|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
final|39 int|800 capacity|204 =|214 (|39 int|215 )|800 FastMath|235 .|802 ceil|214 (|800 expectedSize|203 /|800 LOAD_FACTOR|215 )|227 ;|-1
{|329 return|800 FastMath|235 .|802 sqrt|214 (|800 variance|235 .|802 evaluate|214 (|800 values|234 ,|800 mean|215 )|215 )|227 ;|219 }|-1
{|329 return|800 FastMath|235 .|802 sqrt|214 (|800 variance|235 .|802 evaluate|214 (|800 values|234 ,|800 mean|234 ,|800 begin|234 ,|800 length|215 )|215 )|227 ;|219 }|-1
{|329 return|800 FastMath|235 .|802 sqrt|214 (|800 variance|235 .|802 evaluate|214 (|800 values|234 ,|800 begin|234 ,|800 length|215 )|215 )|227 ;|219 }|-1
{|329 return|800 FastMath|235 .|802 sqrt|214 (|800 variance|235 .|802 evaluate|214 (|800 values|215 )|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 getResult|216 ()|218 {|329 return|800 FastMath|235 .|802 sqrt|214 (|800 variance|235 .|802 getResult|216 ()|215 )|227 ;|219 }|-1
minor|230 <|800 FastMath|235 .|802 min|214 (|800 m|234 ,|800 n|215 )|-1
j|230 <|800 FastMath|235 .|802 min|214 (|800 i|200 +|34 NUMBER_CONSTANT|234 ,|800 n|215 )|-1
int|800 row|204 =|800 FastMath|235 .|802 min|214 (|800 m|234 ,|800 n|215 )|201 -|34 NUMBER_CONSTANT|-1
optimizer|235 .|802 setMaxEvaluations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxEvaluations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxEvaluations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxEvaluations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxEvaluations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxEvaluations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxEvaluations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxEvaluations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxEvaluations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxEvaluations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxEvaluations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxEvaluations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
catch|214 (|801 ConvergenceException|800 e|215 )|218 {|802 assertTrue|214 (|214 (|207 !|800 solvable|215 )|249 &&|214 (|800 degree|231 >|34 NUMBER_CONSTANT|215 )|215 )|227 ;|219 }|-1
ConvergenceChecker|230 <|800 RealPointValuePair|231 >|800 convergenceChecker|-1
public|801 GoalType|802 getGoalType|216 ()|218 {|329 return|800 goal|227 ;|219 }|-1
optimizer|235 .|802 setMaxEvaluations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxEvaluations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
optimizer|235 .|802 setMaxEvaluations|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
catch|214 (|801 ConvergenceException|800 ee|215 )|220 {}|-1
assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 sum|235 .|802 getResult|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
@|800 Override|83 public|39 void|802 clear|216 ()|218 {|800 value|204 =|34 NUMBER_CONSTANT|227 ;|800 n|204 =|34 NUMBER_CONSTANT|227 ;|219 }|-1
public|802 SumOfSquares|216 ()|218 {|800 n|204 =|34 NUMBER_CONSTANT|227 ;|800 value|204 =|34 NUMBER_CONSTANT|227 ;|219 }|-1
assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 sumSq|235 .|802 getResult|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
@|800 Override|83 public|39 void|802 clear|216 ()|218 {|800 value|204 =|34 NUMBER_CONSTANT|227 ;|800 n|204 =|34 NUMBER_CONSTANT|227 ;|219 }|-1
public|802 Sum|216 ()|218 {|800 n|204 =|34 NUMBER_CONSTANT|227 ;|800 value|204 =|34 NUMBER_CONSTANT|227 ;|219 }|-1
checkClearValue|214 (|800 statistic|215 )|227 ;|-1
checkClearValue|214 (|800 statistic|215 )|227 ;|-1
@|800 Override|83 public|39 void|802 clear|216 ()|218 {|800 value|204 =|34 NUMBER_CONSTANT|227 ;|800 n|204 =|34 NUMBER_CONSTANT|227 ;|219 }|-1
public|802 Product|216 ()|218 {|800 n|204 =|34 NUMBER_CONSTANT|227 ;|800 value|204 =|34 NUMBER_CONSTANT|227 ;|219 }|-1
assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 product|235 .|802 getResult|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|329 return|34 NUMBER_CONSTANT|200 +|214 (|800 sign|230 <|230 <|34 NUMBER_CONSTANT|215 )|200 +|214 (|800 nans|230 <|230 <|34 NUMBER_CONSTANT|215 )|200 +|800 exp|200 +|800 Arrays|235 .|802 hashCode|214 (|800 mant|215 )|227 ;|219 }|-1
@|800 Override|83 protected|39 int|802 getNumberOfRegressors|216 ()|218 {|329 return|801 x|221 [|34 NUMBER_CONSTANT|222 ]|235 .|800 length|200 +|34 NUMBER_CONSTANT|227 ;|219 }|-1
@|800 Override|83 protected|39 int|802 getNumberOfRegressors|216 ()|218 {|329 return|801 x|221 [|34 NUMBER_CONSTANT|222 ]|235 .|800 length|200 +|34 NUMBER_CONSTANT|227 ;|219 }|-1
final|39 boolean|800 isMinim|204 =|802 getGoalType|216 ()|236 ==|40 GoalType.MINIMIZE|227 ;|-1
public|802 Well44497b|214 (|39 long|800 seed|215 )|218 {|349 super|214 (|800 K|234 ,|800 M1|234 ,|800 M2|234 ,|800 M3|234 ,|800 seed|215 )|227 ;|219 }|-1
{|349 super|214 (|800 K|234 ,|800 M1|234 ,|800 M2|234 ,|800 M3|234 ,|800 seed|215 )|227 ;|219 }|-1
public|802 Well44497b|214 (|39 int|800 seed|215 )|218 {|349 super|214 (|800 K|234 ,|800 M1|234 ,|800 M2|234 ,|800 M3|234 ,|800 seed|215 )|227 ;|219 }|-1
public|802 Well44497b|216 ()|218 {|349 super|214 (|800 K|234 ,|800 M1|234 ,|800 M2|234 ,|800 M3|215 )|227 ;|219 }|-1
public|802 Well19937c|214 (|39 long|800 seed|215 )|218 {|349 super|214 (|800 K|234 ,|800 M1|234 ,|800 M2|234 ,|800 M3|234 ,|800 seed|215 )|227 ;|219 }|-1
{|349 super|214 (|800 K|234 ,|800 M1|234 ,|800 M2|234 ,|800 M3|234 ,|800 seed|215 )|227 ;|219 }|-1
public|802 Well19937c|214 (|39 int|800 seed|215 )|218 {|349 super|214 (|800 K|234 ,|800 M1|234 ,|800 M2|234 ,|800 M3|234 ,|800 seed|215 )|227 ;|219 }|-1
public|802 Well19937c|216 ()|218 {|349 super|214 (|800 K|234 ,|800 M1|234 ,|800 M2|234 ,|800 M3|215 )|227 ;|219 }|-1
v|221 [|800 indexRm2|222 ]|243 &=|34 NUMBER_CONSTANT|227 ;|-1
v|221 [|800 indexRm2|222 ]|243 &=|34 NUMBER_CONSTANT|227 ;|-1
v|221 [|800 indexRm2|222 ]|243 &=|34 NUMBER_CONSTANT|227 ;|-1
v|221 [|800 indexRm2|222 ]|243 &=|34 NUMBER_CONSTANT|227 ;|-1
if|214 (|40 v.length|242 !=|800 rows|215 )|218 {|320 throw|304 new|801 DimensionMismatchException|214 (|40 v.length|234 ,|800 rows|215 )|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 columns|215 )|218 {|320 throw|304 new|801 DimensionMismatchException|214 (|40 v.length|234 ,|800 columns|215 )|227 ;|219 }|-1
if|214 (|800 length|242 !=|800 columns|215 )|218 {|320 throw|304 new|801 DimensionMismatchException|214 (|800 columns|234 ,|800 length|215 )|227 ;|219 }|-1
{|349 super|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE|234 ,|40 LocalizedFormats.DIMENSIONS_MISMATCH|234 ,|800 wrong|234 ,|800 expected|215 )|227 ;|800 dimension|204 =|800 expected|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 rows|215 )|218 {|320 throw|304 new|801 DimensionMismatchException|214 (|40 v.length|234 ,|800 rows|215 )|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 columns|215 )|218 {|320 throw|304 new|801 DimensionMismatchException|214 (|40 v.length|234 ,|800 columns|215 )|227 ;|219 }|-1
if|214 (|800 length|242 !=|800 columns|215 )|218 {|320 throw|304 new|801 DimensionMismatchException|214 (|800 columns|234 ,|800 length|215 )|227 ;|219 }|-1
if|214 (|800 v|235 .|802 getDimension|216 ()|242 !=|800 nRows|215 )|218 {|320 throw|304 new|801 DimensionMismatchException|214 (|800 v|235 .|802 getDimension|216 ()|234 ,|800 nRows|215 )|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 nRows|215 )|218 {|320 throw|304 new|801 DimensionMismatchException|214 (|40 v.length|234 ,|800 nRows|215 )|227 ;|219 }|-1
if|214 (|800 v|235 .|802 getDimension|216 ()|242 !=|800 nCols|215 )|218 {|320 throw|304 new|801 DimensionMismatchException|214 (|800 v|235 .|802 getDimension|216 ()|234 ,|800 nCols|215 )|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 nCols|215 )|218 {|320 throw|304 new|801 DimensionMismatchException|214 (|40 v.length|234 ,|800 nCols|215 )|227 ;|219 }|-1
dist|204 =|304 new|801 PoissonDistributionImpl|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|315 this|214 (|800 p|234 ,|800 DEFAULT_EPSILON|234 ,|800 DEFAULT_MAX_ITERATIONS|215 )|227 ;|219 }|-1
distribution|204 =|304 new|801 ChiSquaredDistributionImpl|214 (|800 df|215 )|227 ;|-1
{|800 distribution|204 =|304 new|801 ChiSquaredDistributionImpl|214 (|40 expected.length|201 -|34 NUMBER_CONSTANT|215 )|227 ;|329 return|34 NUMBER_CONSTANT|201 -|800 distribution|235 .|802 cumulativeProbability|214 (|802 chiSquare|214 (|800 expected|234 ,|800 observed|215 )|215 )|227 ;|219 }|-1
double|802 density|214 (|39 double|800 x|215 )|227 ;|-1
(|800 FastMath|235 .|802 max|214 (|800 FastMath|235 .|802 abs|214 (|800 mij|215 )|234 ,|800 FastMath|235 .|802 abs|214 (|800 mji|215 )|215 )|202 *|800 eps|215 )|-1
protected|802 AbstractContinuousDistribution|216 ()|220 {}|-1
FDistributionImpl|800 fd|204 =|304 new|801 FDistributionImpl|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
if|214 (|800 alpha|251 >=|34 NUMBER_CONSTANT|250 |||800 alpha|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 OutOfRangeException|214 (|40 LocalizedFormats.SIGNIFICANCE_LEVEL|234 ,|800 alpha|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 n|231 >|34 NUMBER_CONSTANT|215 )|218 {|800 distribution|204 =|304 new|801 TDistributionImpl|214 (|800 n|201 -|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 n|231 >|34 NUMBER_CONSTANT|215 )|218 {|800 distribution|204 =|304 new|801 TDistributionImpl|214 (|800 n|201 -|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|802 SuppressWarnings|214 (|45 STRING_CONSTANT|215 )|83 private|802 RandomAdaptor|216 ()|218 {|800 randomGenerator|204 =|500 null|227 ;|219 }|-1
return|800 a|235 .|802 dotrap|214 (|40 DfpField.FLAG_INVALID|234 ,|45 STRING_CONSTANT|234 ,|800 a|234 ,|800 a|235 .|802 newInstance|214 (|214 (|39 byte|215 )|34 NUMBER_CONSTANT|234 ,|40 Dfp.QNAN|215 )|215 )|227 ;|-1
if|214 (|800 ia|231 >|34 NUMBER_CONSTANT|215 )|218 {|329 return|800 a|235 .|802 newInstance|214 (|214 (|39 byte|215 )|34 NUMBER_CONSTANT|234 ,|40 Dfp.INFINITE|215 )|227 ;|219 }|-1
protected|802 AbstractIntegerDistribution|216 ()|220 {}|-1
public|39 int|85 []|802 getSizes|216 ()|218 {|329 return|802 copyOf|214 (|800 size|234 ,|800 dimension|215 )|227 ;|219 }|-1
this|235 .|800 size|204 =|802 copyOf|214 (|800 size|234 ,|800 dimension|215 )|227 ;|-1
public|39 int|85 []|802 getCounts|216 ()|218 {|329 return|802 copyOf|214 (|800 counter|234 ,|800 dimension|215 )|227 ;|219 }|-1
final|39 double|85 []|800 d|204 =|802 copyOf|214 (|801 direc|221 [|800 i|222 ]|234 ,|800 n|215 )|227 ;|-1
AbstractMultipleLinearRegression|800 regression|204 =|802 createRegression|216 ()|227 ;|-1
{|335 try|218 {|304 new|801 ExponentialDistributionImpl|214 (|34 NUMBER_CONSTANT|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 NotStrictlyPositiveException|800 e|215 )|220 {}|219 }|-1
{|800 realVectorFormat|235 .|802 parseObject|214 (|45 STRING_CONSTANT|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
try|218 {|800 MatrixUtils|235 .|802 createRealIdentityMatrix|214 (|34 NUMBER_CONSTANT|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 MatrixUtils|235 .|802 createRealIdentityMatrix|214 (|34 NUMBER_CONSTANT|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 MatrixUtils|235 .|802 createRealIdentityMatrix|214 (|34 NUMBER_CONSTANT|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 ex|215 )|220 {}|-1
{|800 UnivariateRealSolverUtils|235 .|802 solve|214 (|800 sin|234 ,|201 -|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
zb|237 +=|800 za|201 -|800 temp2|227 ;|-1
if|214 (|800 v|235 .|802 getDimension|216 ()|242 !=|800 nRows|215 )|218 {|320 throw|304 new|801 DimensionMismatchException|214 (|800 v|235 .|802 getDimension|216 ()|234 ,|800 nRows|215 )|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 nRows|215 )|218 {|320 throw|304 new|801 DimensionMismatchException|214 (|40 v.length|234 ,|800 nRows|215 )|227 ;|219 }|-1
if|214 (|800 v|235 .|802 getDimension|216 ()|242 !=|800 nCols|215 )|218 {|320 throw|304 new|801 DimensionMismatchException|214 (|800 v|235 .|802 getDimension|216 ()|234 ,|800 nCols|215 )|227 ;|219 }|-1
if|214 (|40 v.length|242 !=|800 nCols|215 )|218 {|320 throw|304 new|801 DimensionMismatchException|214 (|40 v.length|234 ,|800 nCols|215 )|227 ;|219 }|-1
{|802 setQuantile|214 (|800 p|215 )|227 ;|800 cachedPivots|204 =|500 null|227 ;|219 }|-1
if|214 (|802 isDefaultValue|214 (|800 norm|215 )|215 )|218 {|320 throw|304 new|801 MathArithmeticException|214 (|40 LocalizedFormats.ZERO_NORM|215 )|227 ;|219 }|-1
{|315 this|214 (|800 n|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
public|802 MultiDirectionalSimplex|214 (|83 final|39 int|800 n|215 )|218 {|315 this|214 (|800 n|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
catch|214 (|801 DimensionMismatchException|800 ee|215 )|218 {|802 assertTrue|214 (|800 shouldFail|215 )|227 ;|219 }|-1
try|218 {|800 es|235 .|802 getInverse|216 ()|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 SingularMatrixException|800 ime|215 )|220 {}|-1
catch|214 (|801 DimensionMismatchException|800 oe|215 )|220 {}|-1
{|315 this|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE|234 ,|800 wrong|234 ,|800 expected|215 )|227 ;|219 }|-1
catch|214 (|801 SingularMatrixException|800 e|215 )|218 {|320 throw|304 new|801 ConvergenceException|214 (|40 LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM|215 )|227 ;|219 }|-1
@|802 Test|214 (|800 expected|204 =|800 NonPositiveDefiniteMatrixException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 NonPositiveDefiniteMatrixException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 NonSymmetricMatrixException|235 .|341 class|215 )|-1
catch|214 (|801 NonSquareMatrixException|800 ime|215 )|220 {}|-1
catch|214 (|801 NonSquareMatrixException|800 ime|215 )|220 {}|-1
catch|214 (|801 NonPositiveDefiniteMatrixException|800 e|215 )|218 {|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
public|802 LaguerreSolver|216 ()|218 {|349 super|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|329 return|800 MessageFactory|235 .|802 buildMessage|214 (|800 locale|234 ,|800 specific|234 ,|800 general|234 ,|800 arguments|215 )|227 ;|219 }|-1
assertEquals|214 (|800 pattern|234 ,|800 ex|235 .|802 getGeneralPattern|216 ()|215 )|227 ;|-1
assertEquals|214 (|800 pattern|234 ,|800 ex|235 .|802 getGeneralPattern|216 ()|215 )|227 ;|-1
assertEquals|214 (|800 pattern|234 ,|800 ex|235 .|802 getGeneralPattern|216 ()|215 )|227 ;|-1
assertEquals|214 (|800 pattern|234 ,|800 ex|235 .|802 getGeneralPattern|216 ()|215 )|227 ;|-1
assertEquals|214 (|800 pattern|234 ,|800 ex|235 .|802 getGeneralPattern|216 ()|215 )|227 ;|-1
assertEquals|214 (|800 pattern|234 ,|800 ex|235 .|802 getGeneralPattern|216 ()|215 )|227 ;|-1
catch|214 (|801 MathUserException|800 de|215 )|218 {|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
catch|214 (|801 MathUserException|800 de|215 )|218 {|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
catch|214 (|801 MathUserException|800 de|215 )|218 {|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
catch|214 (|801 MathUserException|800 fe|215 )|218 {|802 assertTrue|214 (|800 exceptionExpected|215 )|227 ;|219 }|-1
try|218 {|802 finalizeStep|216 ()|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIOException|214 (|800 e|215 )|227 ;|219 }|-1
try|218 {|802 finalizeStep|216 ()|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|800 MathRuntimeException|235 .|802 createIOException|214 (|800 e|215 )|227 ;|219 }|-1
catch|214 (|801 MathUserException|800 de|215 )|218 {|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
catch|214 (|801 MathUserException|800 de|215 )|218 {|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
catch|214 (|801 MathUserException|800 de|215 )|218 {|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
catch|214 (|801 MathUserException|800 de|215 )|218 {|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
catch|214 (|801 MathUserException|800 de|215 )|218 {|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
catch|214 (|801 MathUserException|800 de|215 )|218 {|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.ULP|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.TANH|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.TAN|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.SQRT|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.SINH|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.SIN|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.SIGNUM|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.RINT|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
try|218 {|329 return|802 mapToSelf|214 (|40 BinaryFunction.POW|235 .|802 fix2ndArgument|214 (|800 d|215 )|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|-1
try|218 {|329 return|802 mapToSelf|214 (|40 BinaryFunction.MULTIPLY|235 .|802 fix1stArgument|214 (|800 d|215 )|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.LOG1P|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.LOG10|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.LOG|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.INVERT|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.FLOOR|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.EXPM1|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.EXP|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
try|218 {|329 return|802 mapToSelf|214 (|40 BinaryFunction.DIVIDE|235 .|802 fix2ndArgument|214 (|800 d|215 )|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.COSH|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.COS|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.CEIL|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.CBRT|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.ATAN|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.ASIN|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.ACOS|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
{|335 try|218 {|329 return|802 mapToSelf|214 (|40 ComposableFunction.ABS|215 )|227 ;|219 }|331 catch|214 (|801 MathUserException|800 e|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|800 e|215 )|227 ;|219 }|219 }|-1
catch|214 (|801 MathUserException|800 de|215 )|218 {|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
catch|214 (|801 MathUserException|800 de|215 )|218 {|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
catch|214 (|801 MathUserException|800 de|215 )|218 {|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
catch|214 (|801 MathUserException|800 de|215 )|218 {|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
{|329 return|800 f|235 .|802 value|214 (|800 x|234 ,|800 y|215 )|227 ;|219 }|-1
CircleVectorial|800 circle|204 =|304 new|801 CircleVectorial|216 ()|227 ;|-1
CircleVectorial|800 circle|204 =|304 new|801 CircleVectorial|216 ()|227 ;|-1
CircleVectorial|800 circle|204 =|304 new|801 CircleVectorial|216 ()|227 ;|-1
NumberIsTooLargeException|800 ex|-1
assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 handler|235 .|802 getMaximalValueError|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
public|801 RealVector|802 mapPowToSelf|214 (|39 double|800 d|215 )|218 {|329 return|802 mapToSelf|214 (|304 new|801 Power|214 (|800 d|215 )|215 )|227 ;|219 }|-1
{|313 if|214 (|800 d|242 !=|34 NUMBER_CONSTANT|215 )|218 {|329 return|802 mapToSelf|214 (|800 FunctionUtils|235 .|802 fix2ndArgument|214 (|304 new|801 Add|216 ()|234 ,|800 d|215 )|215 )|227 ;|219 }|329 return|315 this|227 ;|219 }|-1
{|313 if|214 (|247 ++|800 iterations|231 >|800 maxIterations|215 )|218 {|320 throw|304 new|801 OptimizationException|214 (|304 new|801 MaxCountExceededException|214 (|800 maxIterations|215 )|215 )|227 ;|219 }|219 }|-1
throw|304 new|801 MaxCountExceededException|214 (|800 maximalIterationCount|215 )|227 ;|-1
{|320 throw|304 new|801 MaxCountExceededException|214 (|800 maxIterations|215 )|227 ;|219 }|-1
if|214 (|800 n|251 >=|800 maxIterations|215 )|218 {|320 throw|304 new|801 MaxCountExceededException|214 (|40 LocalizedFormats.NON_CONVERGENT_CONTINUED_FRACTION|234 ,|800 maxIterations|234 ,|800 x|215 )|227 ;|219 }|-1
if|214 (|800 dimension|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 NumberIsTooLargeException|214 (|40 LocalizedFormats.TOO_LARGE_CUTOFF_SINGULAR_VALUE|234 ,|800 minSingularValue|234 ,|801 singularValues|221 [|34 NUMBER_CONSTANT|222 ]|234 ,|9 true|215 )|227 ;|219 }|-1
{|329 return|802 solve|214 (|800 DEFAULT_MAX_EVALUATIONS|234 ,|800 f|234 ,|800 startValue|215 )|227 ;|219 }|-1
StringBuilder|800 buffer|-1
StringBuilder|800 outBuffer|204 =|304 new|801 StringBuilder|216 ()|227 ;|-1
StringBuilder|800 msgBuffer|204 =|304 new|801 StringBuilder|216 ()|227 ;|-1
StringBuilder|800 out|204 =|304 new|801 StringBuilder|214 (|800 msg|215 )|227 ;|-1
StringBuilder|800 messageBuffer|204 =|304 new|801 StringBuilder|216 ()|227 ;|-1
StringBuilder|800 s|204 =|304 new|801 StringBuilder|216 ()|227 ;|-1
final|801 StringBuilder|800 buff|204 =|304 new|801 StringBuilder|214 (|45 STRING_CONSTANT|215 )|227 ;|-1
StringBuilder|800 msgBuffer|204 =|304 new|801 StringBuilder|216 ()|227 ;|-1
StringBuilder|800 sb|204 =|304 new|801 StringBuilder|216 ()|227 ;|-1
StringBuilder|800 outBuffer|204 =|304 new|801 StringBuilder|216 ()|227 ;|-1
StringBuilder|800 outBuffer|204 =|304 new|801 StringBuilder|216 ()|227 ;|-1
StringBuilder|800 outBuffer|204 =|304 new|801 StringBuilder|216 ()|227 ;|-1
StringBuilder|800 outBuffer|204 =|304 new|801 StringBuilder|216 ()|227 ;|-1
StringBuilder|800 outBuffer|204 =|304 new|801 StringBuilder|216 ()|227 ;|-1
Assert|235 .|802 assertEquals|214 (|40 FastMath.PI|234 ,|800 solver|235 .|802 solve|214 (|34 NUMBER_CONSTANT|234 ,|800 f|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|234 ,|800 solver|235 .|802 getAbsoluteAccuracy|216 ()|215 )|227 ;|-1
result|204 =|800 solver|235 .|802 solve|214 (|34 NUMBER_CONSTANT|234 ,|800 f|234 ,|800 min|234 ,|800 max|215 )|227 ;|-1
{|315 this|214 (|304 new|801 SimpleVectorialValueChecker|216 ()|215 )|227 ;|219 }|-1
{|315 this|214 (|304 new|801 SimpleScalarValueChecker|216 ()|215 )|227 ;|219 }|-1
@|802 Test|214 (|800 expected|204 =|800 MathIllegalArgumentException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 MathIllegalArgumentException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 MathIllegalArgumentException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 MathIllegalArgumentException|235 .|341 class|215 )|-1
catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 operate|214 (|800 testVector|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
if|214 (|800 p|252 <=|34 NUMBER_CONSTANT|250 |||800 p|231 >|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 OutOfRangeException|214 (|40 LocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE|234 ,|800 p|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|214 (|800 p|231 >|34 NUMBER_CONSTANT|215 )|250 |||214 (|800 p|252 <=|34 NUMBER_CONSTANT|215 )|215 )|218 {|320 throw|304 new|801 OutOfRangeException|214 (|40 LocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE|234 ,|800 p|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 x1|230 <|800 x0|215 )|218 {|320 throw|304 new|801 NumberIsTooSmallException|214 (|40 LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT|234 ,|800 x1|234 ,|800 x0|234 ,|9 true|215 )|227 ;|219 }|-1
if|214 (|800 x1|230 <|800 x0|215 )|218 {|320 throw|304 new|801 NumberIsTooSmallException|214 (|40 LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT|234 ,|800 x1|234 ,|800 x0|234 ,|9 true|215 )|227 ;|219 }|-1
catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
catch|214 (|801 NullArgumentException|800 ex|215 )|220 {}|-1
catch|214 (|801 NullArgumentException|800 ex|215 )|220 {}|-1
catch|214 (|801 NullArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 preMultiply|214 (|304 new|801 BlockRealMatrix|214 (|800 bigSingular|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 operate|214 (|800 testVector|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 multiply|214 (|304 new|801 BlockRealMatrix|214 (|800 bigSingular|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 subtract|214 (|304 new|801 BlockRealMatrix|214 (|800 testData2|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
{|313 if|214 (|800 a|230 <|34 NUMBER_CONSTANT|215 )|218 {|800 ret|204 =|800 a|201 -|800 b|227 ;|219 }|322 else|218 {|320 throw|304 new|801 MathArithmeticException|214 (|800 msg|215 )|227 ;|219 }|219 }|-1
try|218 {|800 optimizer|235 .|802 getOptima|216 ()|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalStateException|800 ise|215 )|220 {}|-1
{|313 if|214 (|800 numerator|236 ==|40 Integer.MIN_VALUE|215 )|218 {|320 throw|304 new|801 MathArithmeticException|214 (|40 LocalizedFormats.OVERFLOW_IN_FRACTION|234 ,|800 numerator|234 ,|800 denominator|215 )|227 ;|219 }|329 return|304 new|801 Fraction|214 (|201 -|800 numerator|234 ,|800 denominator|215 )|227 ;|219 }|-1
catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 operate|214 (|800 testVector|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 preMultiply|214 (|802 createSparseMatrix|214 (|800 bigSingular|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 operate|214 (|800 testVector|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 multiply|214 (|802 createSparseMatrix|214 (|800 bigSingular|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 subtract|214 (|802 createSparseMatrix|214 (|800 testData2|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
{|335 try|218 {|800 UnivariateRealSolverUtils|235 .|802 solve|214 (|800 sin|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|219 }|-1
{|335 try|218 {|800 UnivariateRealSolverUtils|235 .|802 solve|214 (|500 null|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|800 Assert|235 .|802 fail|216 ()|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|219 }|-1
try|218 {|800 m|235 .|802 preMultiply|214 (|802 createSparseMatrix|214 (|800 bigSingular|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 operate|214 (|800 testVector|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 multiply|214 (|802 createSparseMatrix|214 (|800 bigSingular|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 subtract|214 (|802 createSparseMatrix|214 (|800 testData2|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
if|214 (|800 begin|200 +|800 length|231 >|40 values.length|215 )|218 {|320 throw|304 new|801 NumberIsTooLargeException|214 (|40 LocalizedFormats.SUBARRAY_ENDS_AFTER_ARRAY_END|234 ,|800 begin|200 +|800 length|234 ,|40 values.length|234 ,|9 true|215 )|227 ;|219 }|-1
try|218 {|800 m|235 .|802 preMultiply|214 (|304 new|801 Array2DRowRealMatrix|214 (|800 bigSingular|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 operate|214 (|800 testVector|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 multiply|214 (|304 new|801 Array2DRowRealMatrix|214 (|800 bigSingular|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 m|235 .|802 subtract|214 (|304 new|801 Array2DRowRealMatrix|214 (|800 testData2|215 )|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 StatUtils|235 .|802 min|214 (|800 x|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 StatUtils|235 .|802 max|214 (|800 x|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 StatUtils|235 .|802 variance|214 (|800 x|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 StatUtils|235 .|802 mean|214 (|800 x|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
{|801 NumberFormat|800 f|204 =|800 CompositeFormat|235 .|802 getDefaultNumberFormat|214 (|800 locale|215 )|227 ;|329 return|304 new|801 ComplexFormat|214 (|800 f|215 )|227 ;|219 }|-1
public|802 ComplexFormat|214 (|801 String|800 imaginaryCharacter|215 )|218 {|315 this|214 (|800 imaginaryCharacter|234 ,|800 CompositeFormat|235 .|802 getDefaultNumberFormat|216 ()|215 )|227 ;|219 }|-1
{|329 return|304 new|801 Vector3DFormat|214 (|800 CompositeFormat|235 .|802 getDefaultNumberFormat|214 (|800 locale|215 )|215 )|227 ;|219 }|-1
{|315 this|214 (|800 prefix|234 ,|800 suffix|234 ,|800 separator|234 ,|800 CompositeFormat|235 .|802 getDefaultNumberFormat|216 ()|215 )|227 ;|219 }|-1
if|214 (|207 !|800 found|215 )|218 {|800 Assert|235 .|802 fail|214 (|800 msg|200 +|45 STRING_CONSTANT|200 +|214 (|304 new|800 ComplexFormat|216 ()|215 )|235 .|802 format|214 (|800 z|215 )|215 )|227 ;|219 }|-1
CompositeFormat|235 .|802 formatDouble|214 (|800 vector|235 .|802 getEntry|214 (|800 i|215 )|234 ,|800 format|234 ,|800 toAppendTo|234 ,|800 pos|215 )|227 ;|-1
{|329 return|304 new|801 RealVectorFormat|214 (|800 CompositeFormat|235 .|802 getDefaultNumberFormat|214 (|800 locale|215 )|215 )|227 ;|219 }|-1
{|315 this|214 (|800 prefix|234 ,|800 suffix|234 ,|800 separator|234 ,|800 CompositeFormat|235 .|802 getDefaultNumberFormat|216 ()|215 )|227 ;|219 }|-1
Class|230 <|231 >|800 type|-1
{|315 this|214 (|800 imaginaryCharacter|234 ,|800 format|234 ,|800 format|215 )|227 ;|219 }|-1
if|214 (|800 normProduct|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 MathArithmeticException|214 (|40 LocalizedFormats.ZERO_NORM|215 )|227 ;|219 }|-1
if|214 (|800 threshold|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 MathArithmeticException|214 (|40 LocalizedFormats.ZERO_NORM|215 )|227 ;|219 }|-1
if|214 (|800 s|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 MathArithmeticException|214 (|40 LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR|215 )|227 ;|219 }|-1
throw|304 new|801 MathInternalError|216 ()|227 ;|-1
throw|304 new|801 MathInternalError|216 ()|227 ;|-1
try|218 {|800 alg|204 =|800 MessageDigest|235 .|802 getInstance|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 NoSuchAlgorithmException|800 ex|215 )|218 {|320 throw|304 new|801 MathInternalError|214 (|800 ex|215 )|227 ;|219 }|-1
denseOutput|204 =|802 requiresDenseOutput|216 ()|250 |||214 (|207 !|800 eventsStates|235 .|802 isEmpty|216 ()|215 )|227 ;|-1
{|349 super|235 .|802 addStepHandler|214 (|800 handler|215 )|227 ;|800 denseOutput|204 =|802 requiresDenseOutput|216 ()|250 |||214 (|207 !|800 eventsStates|235 .|802 isEmpty|216 ()|215 )|227 ;|802 initializeArrays|216 ()|227 ;|219 }|-1
denseOutput|204 =|802 requiresDenseOutput|216 ()|250 |||214 (|207 !|800 eventsStates|235 .|802 isEmpty|216 ()|215 )|227 ;|-1
denseOutput|204 =|802 requiresDenseOutput|216 ()|250 |||214 (|207 !|800 eventsStates|235 .|802 isEmpty|216 ()|215 )|227 ;|-1
stepStart|204 =|802 acceptStep|214 (|800 interpolator|234 ,|800 y|234 ,|800 yDot|234 ,|800 t|215 )|227 ;|-1
stepStart|204 =|802 acceptStep|214 (|800 interpolator|234 ,|800 y|234 ,|800 yDot|234 ,|800 t|215 )|227 ;|-1
final|39 double|800 temp|204 =|800 sinEpsA|202 *|800 HEX_40000000|227 ;|-1
final|39 double|800 tmp|204 =|801 hiPrec|221 [|34 NUMBER_CONSTANT|222 ]|202 *|800 HEX_40000000|227 ;|-1
if|214 (|800 x|251 >=|800 TWO_POWER_52|250 |||800 x|252 <=|201 -|800 TWO_POWER_52|215 )|218 {|329 return|800 x|227 ;|219 }|-1
if|214 (|800 y|251 >=|800 TWO_POWER_52|250 |||800 y|252 <=|201 -|800 TWO_POWER_52|215 )|218 {|329 return|802 pow|214 (|201 -|800 x|234 ,|800 y|215 )|227 ;|219 }|-1
final|39 double|800 epsilon|204 =|800 xa|201 -|801 EIGHTHS|221 [|800 idx|222 ]|227 ;|-1
final|39 double|800 epsilon|204 =|800 xa|201 -|801 EIGHTHS|221 [|800 idx|222 ]|227 ;|-1
final|39 boolean|800 fatal|204 =|9 true|227 ;|-1
final|39 boolean|800 fatal|204 =|9 false|227 ;|-1
if|214 (|800 invx|236 ==|34 NUMBER_CONSTANT|215 )|218 {|313 if|214 (|800 x|231 >|34 NUMBER_CONSTANT|215 )|218 {|329 return|800 y|227 ;|219 }|322 else|218 {|329 return|802 copySign|214 (|40 Math.PI|234 ,|800 y|215 )|227 ;|219 }|219 }|-1
if|214 (|800 xa|236 ==|34 NUMBER_CONSTANT|215 )|218 {|329 return|800 leftPlane|233 ?|802 copySign|214 (|40 Math.PI|234 ,|800 xa|215 )|226 :|800 xa|227 ;|219 }|-1
@|800 Ignore|-1
{|329 return|214 (|39 int|215 )|802 floor|214 (|800 x|200 +|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
final|39 double|85 []|800 d|204 =|800 MathUtils|235 .|802 copyOf|214 (|801 direc|221 [|800 i|222 ]|215 )|227 ;|-1
public|39 int|85 []|802 getSizes|216 ()|218 {|329 return|800 MathUtils|235 .|802 copyOf|214 (|800 size|215 )|227 ;|219 }|-1
this|235 .|800 size|204 =|800 MathUtils|235 .|802 copyOf|214 (|800 size|215 )|227 ;|-1
public|39 int|85 []|802 getCounts|216 ()|218 {|329 return|800 MathUtils|235 .|802 copyOf|214 (|800 counter|215 )|227 ;|219 }|-1
{|329 return|800 ONE_WAY_ANANOVA|235 .|802 anovaTest|214 (|800 categoryData|234 ,|800 alpha|215 )|227 ;|219 }|-1
{|329 return|800 ONE_WAY_ANANOVA|235 .|802 anovaPValue|214 (|800 categoryData|215 )|227 ;|219 }|-1
{|329 return|800 ONE_WAY_ANANOVA|235 .|802 anovaFValue|214 (|800 categoryData|215 )|227 ;|219 }|-1
{|329 return|800 UNKNOWN_DISTRIBUTION_CHI_SQUARE_TEST|235 .|802 chiSquareTestDataSetsComparison|214 (|800 observed1|234 ,|800 observed2|234 ,|800 alpha|215 )|227 ;|219 }|-1
{|329 return|800 UNKNOWN_DISTRIBUTION_CHI_SQUARE_TEST|235 .|802 chiSquareTestDataSetsComparison|214 (|800 observed1|234 ,|800 observed2|215 )|227 ;|219 }|-1
{|329 return|800 UNKNOWN_DISTRIBUTION_CHI_SQUARE_TEST|235 .|802 chiSquareDataSetsComparison|214 (|800 observed1|234 ,|800 observed2|215 )|227 ;|219 }|-1
{|329 return|800 CHI_SQUARE_TEST|235 .|800 chiSquareTest|214 (|800 counts|215 )|227 ;|219 }|-1
{|329 return|800 CHI_SQUARE_TEST|235 .|800 chiSquareTest|214 (|800 counts|234 ,|800 alpha|215 )|227 ;|219 }|-1
{|329 return|800 CHI_SQUARE_TEST|235 .|800 chiSquareTest|214 (|800 expected|234 ,|800 observed|215 )|227 ;|219 }|-1
{|329 return|800 CHI_SQUARE_TEST|235 .|800 chiSquareTest|214 (|800 expected|234 ,|800 observed|234 ,|800 alpha|215 )|227 ;|219 }|-1
{|329 return|800 CHI_SQUARE_TEST|235 .|802 chiSquare|214 (|800 counts|215 )|227 ;|219 }|-1
{|329 return|800 CHI_SQUARE_TEST|235 .|802 chiSquare|214 (|800 expected|234 ,|800 observed|215 )|227 ;|219 }|-1
{|329 return|800 T_TEST|235 .|800 tTest|214 (|800 sampleStats1|234 ,|800 sampleStats2|215 )|227 ;|219 }|-1
{|329 return|800 T_TEST|235 .|800 tTest|214 (|800 sampleStats1|234 ,|800 sampleStats2|234 ,|800 alpha|215 )|227 ;|219 }|-1
{|329 return|800 T_TEST|235 .|800 tTest|214 (|800 sample1|234 ,|800 sample2|215 )|227 ;|219 }|-1
{|329 return|800 T_TEST|235 .|800 tTest|214 (|800 sample1|234 ,|800 sample2|234 ,|800 alpha|215 )|227 ;|219 }|-1
{|329 return|800 T_TEST|235 .|800 tTest|214 (|800 mu|234 ,|800 sampleStats|215 )|227 ;|219 }|-1
{|329 return|800 T_TEST|235 .|800 tTest|214 (|800 mu|234 ,|800 sampleStats|234 ,|800 alpha|215 )|227 ;|219 }|-1
{|329 return|800 T_TEST|235 .|800 tTest|214 (|800 mu|234 ,|800 sample|215 )|227 ;|219 }|-1
{|329 return|800 T_TEST|235 .|800 tTest|214 (|800 mu|234 ,|800 sample|234 ,|800 alpha|215 )|227 ;|219 }|-1
{|329 return|800 T_TEST|235 .|802 t|214 (|800 sampleStats1|234 ,|800 sampleStats2|215 )|227 ;|219 }|-1
{|329 return|800 T_TEST|235 .|802 t|214 (|800 sample1|234 ,|800 sample2|215 )|227 ;|219 }|-1
{|329 return|800 T_TEST|235 .|802 t|214 (|800 mu|234 ,|800 sampleStats|215 )|227 ;|219 }|-1
{|329 return|800 T_TEST|235 .|802 t|214 (|800 mu|234 ,|800 observed|215 )|227 ;|219 }|-1
{|329 return|800 T_TEST|235 .|802 pairedTTest|214 (|800 sample1|234 ,|800 sample2|215 )|227 ;|219 }|-1
{|329 return|800 T_TEST|235 .|802 pairedTTest|214 (|800 sample1|234 ,|800 sample2|234 ,|800 alpha|215 )|227 ;|219 }|-1
{|329 return|800 T_TEST|235 .|802 pairedT|214 (|800 sample1|234 ,|800 sample2|215 )|227 ;|219 }|-1
{|329 return|800 T_TEST|235 .|802 homoscedasticTTest|214 (|800 sampleStats1|234 ,|800 sampleStats2|215 )|227 ;|219 }|-1
{|329 return|800 T_TEST|235 .|802 homoscedasticTTest|214 (|800 sample1|234 ,|800 sample2|215 )|227 ;|219 }|-1
{|329 return|800 T_TEST|235 .|802 homoscedasticTTest|214 (|800 sample1|234 ,|800 sample2|234 ,|800 alpha|215 )|227 ;|219 }|-1
{|329 return|800 T_TEST|235 .|802 homoscedasticT|214 (|800 sampleStats1|234 ,|800 sampleStats2|215 )|227 ;|219 }|-1
{|329 return|800 T_TEST|235 .|802 homoscedasticT|214 (|800 sample1|234 ,|800 sample2|215 )|227 ;|219 }|-1
private|802 TestUtils|216 ()|218 {|500 super();|219 }|-1
return|800 y|227 ;|-1
RealMatrix|800 arzneg|204 =|802 selectColumns|214 (|800 arz|234 ,|800 MathUtils|235 .|802 copyOf|214 (|800 arReverseIndex|234 ,|800 mu|215 )|215 )|227 ;|-1
double|800 numer|204 =|800 bits|213 &|34 NUMBER_CONSTANT|227 ;|-1
setStateInitialized|214 (|9 false|215 )|227 ;|-1
setStateInitialized|214 (|9 false|215 )|227 ;|-1
setStateInitialized|214 (|9 false|215 )|227 ;|-1
setStateInitialized|214 (|9 false|215 )|227 ;|-1
setStateInitialized|214 (|9 false|215 )|227 ;|-1
ParametricUnivariateRealFunction|800 sif|204 =|304 new|801 SimpleInverseFunction|216 ()|227 ;|-1
ParametricUnivariateRealFunction|800 sif|204 =|304 new|801 SimpleInverseFunction|216 ()|227 ;|-1
final|801 ParametricUnivariateRealFunction|800 f|-1
final|801 ParametricUnivariateRealFunction|800 f|-1
final|801 ParametricUnivariateRealFunction|800 f|-1
final|39 double|800 g|204 =|800 Gaussian|235 .|802 value|214 (|800 diff|234 ,|800 norm|234 ,|800 i2s2|215 )|227 ;|-1
{|349 super|214 (|800 optimizer|215 )|227 ;|227 ;|219 }|-1
final|39 boolean|800 fatal|204 =|9 true|227 ;|-1
{|315 this|214 (|800 specific|234 ,|40 LocalizedFormats.ILLEGAL_STATE|234 ,|800 args|215 )|227 ;|219 }|-1
{|349 super|214 (|500 null|234 ,|800 specific|234 ,|800 general|234 ,|800 args|215 )|227 ;|219 }|-1
{|349 super|214 (|500 null|234 ,|500 null|234 ,|40 LocalizedFormats.CANNOT_PARSE|234 ,|800 wrong|234 ,|800 Integer|235 .|802 valueOf|214 (|800 position|215 )|215 )|227 ;|219 }|-1
{|800 Assert|235 .|802 assertEquals|214 (|800 reference|234 ,|800 p|235 .|802 toString|216 ()|215 )|227 ;|219 }|-1
{|800 Assert|235 .|802 assertEquals|214 (|800 reference|234 ,|800 p|235 .|802 toString|216 ()|215 )|227 ;|219 }|-1
Assert|235 .|802 assertEquals|214 (|800 reference|234 ,|800 p|235 .|802 multiply|214 (|800 q|215 )|235 .|802 toString|216 ()|215 )|227 ;|-1
oneOverN|204 =|34 NUMBER_CONSTANT|203 /|800 n|227 ;|-1
return|800 _isMinimize|233 ?|800 penalty|226 :|201 -|800 penalty|227 ;|-1
if|214 (|800 _boundaries|236 ==|500 null|215 )|329 return|9 true|227 ;|-1
return|800 isMinimize|233 ?|800 penalty|226 :|201 -|800 penalty|227 ;|-1
if|214 (|800 boundaries|236 ==|500 null|215 )|329 return|9 true|227 ;|-1
final|801 FitnessFunction|800 fitfun|204 =|304 new|801 FitnessFunction|216 ()|227 ;|-1
if|214 (|800 result|236 ==|201 -|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 MathArithmeticException|216 ()|227 ;|219 }|-1
catch|214 (|801 IOException|800 ioe|215 )|220 {}|-1
super|214 (|800 specific|234 ,|800 lo|234 ,|800 hi|234 ,|800 fLo|234 ,|800 fHi|234 ,|800 args|215 )|227 ;|-1
{|315 this|214 (|40 LocalizedFormats.SAME_SIGN_AT_ENDPOINTS|234 ,|800 lo|234 ,|800 hi|234 ,|800 fLo|234 ,|800 fHi|215 )|227 ;|219 }|-1
{|349 super|214 (|800 specific|234 ,|500 null|215 )|227 ;|219 }|-1
super|214 (|800 specific|234 ,|800 wrong|234 ,|800 max|215 )|227 ;|-1
{|315 this|214 (|800 boundIsAllowed|233 ?|40 LocalizedFormats.NUMBER_TOO_LARGE|226 :|40 LocalizedFormats.NUMBER_TOO_LARGE_BOUND_EXCLUDED|234 ,|800 wrong|234 ,|800 max|234 ,|800 boundIsAllowed|215 )|227 ;|219 }|-1
{|349 super|214 (|800 specific|234 ,|800 wrong|234 ,|800 lo|234 ,|800 hi|215 )|227 ;|315 this|235 .|800 lo|204 =|800 lo|227 ;|315 this|235 .|800 hi|204 =|800 hi|227 ;|219 }|-1
{|315 this|214 (|40 LocalizedFormats.OUT_OF_RANGE_SIMPLE|234 ,|800 wrong|234 ,|800 lo|234 ,|800 hi|215 )|227 ;|219 }|-1
super|214 (|800 specific|234 ,|800 wrong|234 ,|800 expected|215 )|227 ;|-1
{|315 this|214 (|40 LocalizedFormats.DIMENSIONS_MISMATCH|234 ,|800 wrong|234 ,|800 expected|215 )|227 ;|219 }|-1
{|349 super|214 (|800 cause|215 )|227 ;|802 addMessage|214 (|40 LocalizedFormats.USER_EXCEPTION|234 ,|500 null|215 )|227 ;|219 }|-1
{|349 super|214 (|800 specific|234 ,|800 wrong|234 ,|800 expected|215 )|227 ;|800 dimension|204 =|800 expected|227 ;|219 }|-1
public|802 ZeroException|214 (|801 Localizable|800 specific|215 )|218 {|349 super|214 (|800 specific|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
super|214 (|800 specific|234 ,|800 wrong|234 ,|800 min|215 )|227 ;|-1
{|315 this|214 (|800 boundIsAllowed|233 ?|40 LocalizedFormats.NUMBER_TOO_SMALL|226 :|40 LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED|234 ,|800 wrong|234 ,|800 min|234 ,|800 boundIsAllowed|215 )|227 ;|219 }|-1
{|349 super|214 (|800 specific|234 ,|800 wrong|234 ,|800 args|215 )|227 ;|219 }|-1
{|315 this|214 (|40 LocalizedFormats.NOT_FINITE_NUMBER|234 ,|800 wrong|234 ,|800 args|215 )|227 ;|219 }|-1
{|349 super|214 (|800 specific|234 ,|800 max|234 ,|800 args|215 )|227 ;|315 this|235 .|800 max|204 =|800 max|227 ;|219 }|-1
public|802 MaxCountExceededException|214 (|801 Number|800 max|215 )|218 {|315 this|214 (|40 LocalizedFormats.MAX_COUNT_EXCEEDED|234 ,|800 max|215 )|227 ;|219 }|-1
public|802 MathInternalError|214 (|83 final|801 Throwable|800 cause|215 )|218 {|349 super|214 (|800 cause|234 ,|40 LocalizedFormats.INTERNAL_ERROR|234 ,|800 REPORT_URL|215 )|227 ;|219 }|-1
{|802 addMessage|214 (|40 LocalizedFormats.CANNOT_PARSE|234 ,|800 wrong|234 ,|800 Integer|235 .|802 valueOf|214 (|800 position|215 )|215 )|227 ;|219 }|-1
{|247 ++|800 count|227 ;|800 Assert|235 .|802 assertEquals|214 (|800 i|200 +|800 j|203 /|34 NUMBER_CONSTANT|234 ,|800 value|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|247 ++|800 count|227 ;|800 Assert|235 .|802 assertEquals|214 (|800 i|200 +|800 j|203 /|34 NUMBER_CONSTANT|234 ,|800 value|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 norm|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|800 Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 l|235 .|802 getEntry|214 (|800 i|234 ,|800 j|215 )|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 norm|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|800 Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 m|235 .|802 getEntry|214 (|800 i|234 ,|800 j|215 )|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 norm|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 norm|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
@|800 Override|83 protected|39 void|802 doFinalize|214 (|215 )|301 throws|800 MathUserException|218 {|320 throw|304 new|800 MathUserException|216 ()|227 ;|219 }|-1
@|800 Override|83 protected|39 void|802 doFinalize|214 (|215 )|301 throws|800 MathUserException|218 {|320 throw|304 new|800 MathUserException|214 (|40 LocalizedFormats.SIMPLE_MESSAGE|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
catch|214 (|801 IOException|800 ioe|215 )|218 {|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 ioe|235 .|802 getMessage|216 ()|235 .|802 length|216 ()|215 )|227 ;|219 }|-1
{|349 super|214 (|800 cause|215 )|227 ;|802 addMessage|214 (|40 LocalizedFormats.USER_EXCEPTION|215 )|227 ;|219 }|-1
private|802 Erf|216 ()|220 {}|-1
private|802 Beta|216 ()|220 {}|-1
private|802 Gamma|216 ()|220 {}|-1
Assert|235 .|802 assertEquals|214 (|45 STRING_CONSTANT|234 ,|800 s|235 .|802 getN|216 ()|234 ,|800 u|235 .|802 getN|216 ()|215 )|227 ;|-1
@|800 Before|-1
{|800 Assert|235 .|802 assertEquals|214 (|800 a1|234 ,|800 MathUtils|235 .|802 normalizeAngle|214 (|800 a2|234 ,|800 a1|215 )|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 After|83 public|39 void|802 tearDown|216 ()|218 {|800 refValues|204 =|500 null|227 ;|800 matrix|204 =|500 null|227 ;|219 }|-1
@|800 Before|-1
{|800 Assert|235 .|802 assertTrue|214 (|802 isIncludedColumn|214 (|800 eigenVector|234 ,|800 ed|235 .|802 getV|216 ()|234 ,|800 tolerance|215 )|215 )|227 ;|219 }|-1
@|800 Before|-1
@|800 Before|83 public|39 void|802 setUp|216 ()|218 {|800 f|204 =|304 new|801 Frequency|216 ()|227 ;|219 }|-1
@|800 After|83 public|39 void|802 tearDown|216 ()|218 {|800 pb|204 =|500 null|227 ;|800 integ|204 =|500 null|227 ;|219 }|-1
@|800 Before|-1
Assert|235 .|802 assertTrue|214 (|800 bestFinal|235 .|802 compareTo|214 (|800 bestInitial|215 )|231 >|34 NUMBER_CONSTANT|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 norm|234 ,|800 normTolerance|215 )|227 ;|-1
@|800 Override|83 protected|39 void|802 checkClearValue|214 (|801 StorelessUnivariateStatistic|800 statistic|215 )|218 {|800 Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 statistic|235 .|802 getResult|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
protected|39 void|802 checkClearValue|214 (|801 StorelessUnivariateStatistic|800 statistic|215 )|218 {|800 Assert|235 .|802 assertTrue|214 (|800 Double|235 .|802 isNaN|214 (|800 statistic|235 .|802 getResult|216 ()|215 )|215 )|227 ;|219 }|-1
{|39 double|800 variance|204 =|800 regression|235 .|802 estimateRegressandVariance|216 ()|227 ;|800 Assert|235 .|802 assertTrue|214 (|800 variance|231 >|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|39 double|85 []|85 []|800 variance|204 =|800 regression|235 .|802 estimateRegressionParametersVariance|216 ()|227 ;|800 Assert|235 .|802 assertEquals|214 (|802 getNumberOfRegressors|216 ()|234 ,|40 variance.length|215 )|227 ;|219 }|-1
{|39 double|85 []|800 e|204 =|800 regression|235 .|802 estimateResiduals|216 ()|227 ;|800 Assert|235 .|802 assertEquals|214 (|802 getSampleSize|216 ()|234 ,|40 e.length|215 )|227 ;|219 }|-1
{|39 double|85 []|800 beta|204 =|800 regression|235 .|802 estimateRegressionParameters|216 ()|227 ;|800 Assert|235 .|802 assertEquals|214 (|802 getNumberOfRegressors|216 ()|234 ,|40 beta.length|215 )|227 ;|219 }|-1
{|800 FractionField|800 field|204 =|800 FractionField|235 .|802 getInstance|216 ()|227 ;|800 Assert|235 .|802 assertTrue|214 (|800 field|236 ==|800 TestUtils|235 .|802 serializeAndRecover|214 (|800 field|215 )|215 )|227 ;|219 }|-1
@|800 Test|83 public|39 void|802 testOne|216 ()|218 {|800 Assert|235 .|802 assertEquals|214 (|40 Fraction.ONE|234 ,|800 FractionField|235 .|802 getInstance|216 ()|235 .|802 getOne|216 ()|215 )|227 ;|219 }|-1
@|800 Test|83 public|39 void|802 testZero|216 ()|218 {|800 Assert|235 .|802 assertEquals|214 (|40 Fraction.ZERO|234 ,|800 FractionField|235 .|802 getInstance|216 ()|235 .|802 getZero|216 ()|215 )|227 ;|219 }|-1
Assert|235 .|802 assertTrue|214 (|800 fitnessCalls|252 <=|800 neededCalls|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 numDifferent|215 )|227 ;|-1
{|335 try|218 {|304 new|801 DummyBinaryChromosome|214 (|800 repr|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 e|215 )|220 {}|219 }|-1
Assert|235 .|802 assertEquals|214 (|800 c3|234 ,|800 population|235 .|802 getFittestChromosome|216 ()|215 )|227 ;|-1
{|800 Assert|235 .|802 assertEquals|214 (|800 expected|234 ,|800 actual|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|800 Assert|235 .|802 assertEquals|214 (|500 null|234 ,|800 expected|234 ,|800 actual|234 ,|800 delta|215 )|227 ;|219 }|-1
{|800 BigRealField|800 field|204 =|800 BigRealField|235 .|802 getInstance|216 ()|227 ;|800 Assert|235 .|802 assertTrue|214 (|800 field|236 ==|800 TestUtils|235 .|802 serializeAndRecover|214 (|800 field|215 )|215 )|227 ;|219 }|-1
@|800 Test|83 public|39 void|802 testOne|216 ()|218 {|800 Assert|235 .|802 assertEquals|214 (|40 BigReal.ONE|234 ,|800 BigRealField|235 .|802 getInstance|216 ()|235 .|802 getOne|216 ()|215 )|227 ;|219 }|-1
@|800 Test|83 public|39 void|802 testZero|216 ()|218 {|800 Assert|235 .|802 assertEquals|214 (|40 BigReal.ZERO|234 ,|800 BigRealField|235 .|802 getInstance|216 ()|235 .|802 getZero|216 ()|215 )|227 ;|219 }|-1
Assert|235 .|802 assertTrue|214 (|800 uniquePointIsCenter|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|800 p|234 ,|800 TestUtils|235 .|802 serializeAndRecover|214 (|800 p|215 )|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|45 STRING_CONSTANT|234 ,|800 s|235 .|802 getN|216 ()|234 ,|800 u|235 .|802 getN|216 ()|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|800 expected|235 .|802 getN|216 ()|234 ,|800 observed|235 .|802 getN|216 ()|215 )|227 ;|-1
try|218 {|304 new|801 Fraction|214 (|800 a|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 ConvergenceException|800 ce|215 )|220 {}|-1
{|800 Assert|235 .|802 assertEquals|214 (|801 y|221 [|800 i|222 ]|234 ,|801 iResult|221 [|800 i|222 ]|215 )|227 ;|219 }|-1
Assert|235 .|802 assertTrue|214 (|800 FastMath|235 .|802 abs|214 (|800 h|215 )|230 <|800 minStep|215 )|227 ;|-1
catch|214 (|801 FractionConversionException|800 fce|215 )|218 {|800 Assert|235 .|802 fail|214 (|800 fce|235 .|802 getMessage|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 FractionConversionException|800 fce|215 )|218 {|800 Assert|235 .|802 fail|214 (|800 fce|235 .|802 getMessage|216 ()|215 )|227 ;|219 }|-1
{|801 DummyRandomKey|800 drk|204 =|304 new|801 DummyRandomKey|214 (|800 RandomKey|235 .|802 randomPermutation|214 (|34 NUMBER_CONSTANT|215 )|215 )|227 ;|800 Assert|235 .|802 assertNotNull|214 (|800 drk|215 )|227 ;|219 }|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 nextGeneration|235 .|802 getPopulationSize|216 ()|215 )|227 ;|-1
@|800 Override|83 protected|39 void|802 checkClearValue|214 (|801 StorelessUnivariateStatistic|800 statistic|215 )|218 {|800 Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 statistic|235 .|802 getResult|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
Assert|235 .|802 assertEquals|214 (|45 STRING_CONSTANT|200 +|800 p|234 ,|800 expected|234 ,|800 actual|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|45 STRING_CONSTANT|200 +|800 x|234 ,|800 expected|234 ,|800 actual|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
@|800 Override|83 protected|39 void|802 checkClearValue|214 (|801 StorelessUnivariateStatistic|800 statistic|215 )|218 {|800 Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 statistic|235 .|802 getResult|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 After|83 public|39 void|802 tearDown|216 ()|218 {|800 pb|204 =|500 null|227 ;|800 integ|204 =|500 null|227 ;|219 }|-1
@|800 Before|-1
{|800 BigFractionField|800 field|204 =|800 BigFractionField|235 .|802 getInstance|216 ()|227 ;|800 Assert|235 .|802 assertTrue|214 (|800 field|236 ==|800 TestUtils|235 .|802 serializeAndRecover|214 (|800 field|215 )|215 )|227 ;|219 }|-1
@|800 Test|83 public|39 void|802 testOne|216 ()|218 {|800 Assert|235 .|802 assertEquals|214 (|40 BigFraction.ONE|234 ,|800 BigFractionField|235 .|802 getInstance|216 ()|235 .|802 getOne|216 ()|215 )|227 ;|219 }|-1
@|800 Test|83 public|39 void|802 testZero|216 ()|218 {|800 Assert|235 .|802 assertEquals|214 (|40 BigFraction.ZERO|234 ,|800 BigFractionField|235 .|802 getInstance|216 ()|235 .|802 getZero|216 ()|215 )|227 ;|219 }|-1
Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|-1
@|800 Override|83 protected|39 void|802 checkClearValue|214 (|801 StorelessUnivariateStatistic|800 statistic|215 )|218 {|800 Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 statistic|235 .|802 getResult|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
Assert|235 .|802 assertEquals|214 (|800 approYDot|234 ,|801 yDot|221 [|800 i|222 ]|234 ,|800 threshold|215 )|227 ;|-1
{|800 ComplexField|800 field|204 =|800 ComplexField|235 .|802 getInstance|216 ()|227 ;|800 Assert|235 .|802 assertTrue|214 (|800 field|236 ==|800 TestUtils|235 .|802 serializeAndRecover|214 (|800 field|215 )|215 )|227 ;|219 }|-1
@|800 Test|83 public|39 void|802 testOne|216 ()|218 {|800 Assert|235 .|802 assertEquals|214 (|40 Complex.ONE|234 ,|800 ComplexField|235 .|802 getInstance|216 ()|235 .|802 getOne|216 ()|215 )|227 ;|219 }|-1
@|800 Test|83 public|39 void|802 testZero|216 ()|218 {|800 Assert|235 .|802 assertEquals|214 (|40 Complex.ZERO|234 ,|800 ComplexField|235 .|802 getInstance|216 ()|235 .|802 getZero|216 ()|215 )|227 ;|219 }|-1
if|214 (|800 isLast|215 )|218 {|800 Assert|235 .|802 assertTrue|214 (|800 maxError|231 >|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Before|83 public|39 void|802 setUp|216 ()|218 {|800 tooShortStats|204 =|304 new|801 SummaryStatistics|216 ()|227 ;|800 tooShortStats|235 .|802 addValue|214 (|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
Assert|235 .|802 assertTrue|214 (|800 maxError|230 <|34 NUMBER_CONSTANT|215 )|227 ;|-1
if|214 (|800 isLast|215 )|218 {|800 Assert|235 .|802 assertTrue|214 (|800 maxError|231 >|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 isLast|215 )|218 {|800 Assert|235 .|802 assertTrue|214 (|800 maxError|231 >|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 changes|215 )|227 ;|-1
{|313 if|214 (|800 column|231 >|800 row|215 )|218 {|800 Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 value|234 ,|800 entryTolerance|215 )|227 ;|219 }|219 }|-1
{|313 if|214 (|800 column|230 <|800 row|215 )|218 {|800 Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 value|234 ,|800 entryTolerance|215 )|227 ;|219 }|219 }|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 norm|234 ,|800 normTolerance|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 norm|234 ,|800 normTolerance|215 )|227 ;|-1
Assert|235 .|802 assertTrue|214 (|800 FastMath|235 .|802 abs|214 (|800 walk|215 )|230 <|34 NUMBER_CONSTANT|215 )|227 ;|-1
Assert|235 .|802 assertTrue|214 (|800 FastMath|235 .|802 abs|214 (|800 walk|215 )|230 <|34 NUMBER_CONSTANT|215 )|227 ;|-1
Assert|235 .|802 assertTrue|214 (|800 FastMath|235 .|802 abs|214 (|800 walk|215 )|230 <|34 NUMBER_CONSTANT|215 )|227 ;|-1
public|802 NoDataException|214 (|801 Localizable|800 specific|215 )|218 {|349 super|214 (|800 specific|215 )|227 ;|219 }|-1
double|235 .|235 .|235 .|800 param|-1
double|235 .|235 .|235 .|800 param|-1
final|39 double|235 .|235 .|235 .|800 parameters|-1
double|235 .|235 .|235 .|800 parameters|-1
double|235 .|235 .|235 .|800 param|-1
double|235 .|235 .|235 .|800 param|-1
double|235 .|235 .|235 .|800 param|-1
double|235 .|235 .|235 .|800 param|-1
double|235 .|235 .|235 .|800 param|-1
double|235 .|235 .|235 .|800 param|-1
double|235 .|235 .|235 .|800 doubles|-1
double|235 .|235 .|235 .|800 parameters|-1
double|235 .|235 .|235 .|800 param|-1
double|235 .|235 .|235 .|800 param|-1
UnivariateRealIntegratorImpl|800 integrator|204 =|304 new|801 LegendreGaussIntegrator|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
public|39 void|802 setMinimalIterationCount|214 (|83 final|39 int|800 count|215 )|218 {|800 minimalIterationCount|204 =|800 count|227 ;|219 }|-1
public|800 Set|230 <|800 String|231 >|802 getContextKeys|216 ()|218 {|320 throw|304 new|801 UnsupportedOperationException|214 (|800 DEPRECATION_MESSAGE|215 )|227 ;|219 }|-1
public|801 Object|802 getContext|214 (|801 String|800 key|215 )|218 {|320 throw|304 new|801 UnsupportedOperationException|214 (|800 DEPRECATION_MESSAGE|215 )|227 ;|219 }|-1
{|320 throw|304 new|801 UnsupportedOperationException|214 (|800 DEPRECATION_MESSAGE|215 )|227 ;|219 }|-1
{|320 throw|304 new|801 UnsupportedOperationException|214 (|800 DEPRECATION_MESSAGE|215 )|227 ;|219 }|-1
final|39 double|85 []|800 z|204 =|802 concatenateSamples|214 (|800 x|234 ,|800 y|215 )|227 ;|-1
double|802 getRelativeAccuracy|214 (|215 )|227 ;|-1
double|802 getAbsoluteAccuracy|214 (|215 )|227 ;|-1
int|802 getMaximalIterationCount|214 (|215 )|227 ;|-1
public|800 Set|230 <|800 String|231 >|802 getContextKeys|216 ()|218 {|320 throw|304 new|801 UnsupportedOperationException|214 (|800 DEPRECATION_MESSAGE|215 )|227 ;|219 }|-1
public|801 Object|802 getContext|214 (|801 String|800 key|215 )|218 {|320 throw|304 new|801 UnsupportedOperationException|214 (|800 DEPRECATION_MESSAGE|215 )|227 ;|219 }|-1
{|320 throw|304 new|801 UnsupportedOperationException|214 (|800 DEPRECATION_MESSAGE|215 )|227 ;|219 }|-1
{|320 throw|304 new|801 UnsupportedOperationException|214 (|800 DEPRECATION_MESSAGE|215 )|227 ;|219 }|-1
Assert|235 .|802 assertEquals|214 (|800 PearsonsCorrelation|235 .|802 correlation|214 (|800 x|234 ,|800 y|215 )|234 ,|800 corrInstance|235 .|802 getCorrelationMatrix|216 ()|235 .|802 getEntry|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|234 ,|40 Double.MIN_VALUE|215 )|227 ;|-1
{|800 PearsonsCorrelation|235 .|802 correlation|214 (|800 one|234 ,|800 two|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
Assert|235 .|802 assertTrue|214 (|800 Double|235 .|802 isNaN|214 (|800 PearsonsCorrelation|235 .|802 correlation|214 (|800 noVariance|234 ,|800 values|215 )|215 )|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|304 new|800 PearsonsCorrelation|216 ()|235 .|802 correlation|214 (|800 x|234 ,|800 y|215 )|234 ,|800 corrInstance|235 .|802 getCorrelationMatrix|216 ()|235 .|802 getEntry|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|234 ,|40 Double.MIN_VALUE|215 )|227 ;|-1
{|304 new|800 PearsonsCorrelation|216 ()|235 .|802 correlation|214 (|800 one|234 ,|800 two|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
Assert|235 .|802 assertTrue|214 (|800 Double|235 .|802 isNaN|214 (|304 new|800 PearsonsCorrelation|216 ()|235 .|802 correlation|214 (|800 noVariance|234 ,|800 values|215 )|215 )|215 )|227 ;|-1
normps|204 =|800 ps|235 .|802 getFrobeniusNorm|216 ()|227 ;|-1
normps|204 =|800 ps|235 .|802 getFrobeniusNorm|216 ()|227 ;|-1
{|349 super|214 (|40 LocalizedFormats.MAX_COUNT_EXCEEDED|234 ,|800 max|215 )|227 ;|315 this|235 .|800 max|204 =|800 max|227 ;|219 }|-1
final|801 SimplexTableau|800 tableau|204 =|304 new|801 SimplexTableau|214 (|800 function|234 ,|800 linearConstraints|234 ,|800 goal|234 ,|800 nonNegative|234 ,|800 epsilon|234 ,|800 maxUlps|215 )|227 ;|-1
if|214 (|800 MathUtils|235 .|802 compareTo|214 (|800 entry|234 ,|800 minValue|234 ,|800 maxUlps|215 )|230 <|34 NUMBER_CONSTANT|215 )|218 {|800 minValue|204 =|800 entry|227 ;|800 minPos|204 =|800 i|227 ;|219 }|-1
if|214 (|800 MathUtils|235 .|802 compareTo|214 (|800 entry|234 ,|34 NUMBER_CONSTANT|234 ,|800 maxUlps|215 )|231 >|34 NUMBER_CONSTANT|215 )|218 {|800 columnsToDrop|235 .|802 add|214 (|800 i|215 )|227 ;|219 }|-1
{|800 context|235 .|802 addMessage|214 (|800 pattern|234 ,|800 args|215 )|227 ;|219 }|-1
{|802 getContext|216 ()|235 .|802 addMessage|214 (|40 LocalizedFormats.CANNOT_PARSE|234 ,|800 wrong|234 ,|800 Integer|235 .|802 valueOf|214 (|800 position|215 )|215 )|227 ;|219 }|-1
{|315 this|214 (|40 LocalizedFormats.MAX_COUNT_EXCEEDED|234 ,|800 max|215 )|227 ;|219 }|-1
{|349 super|214 (|800 cause|215 )|227 ;|800 context|235 .|802 addMessage|214 (|800 pattern|234 ,|800 arguments|215 )|227 ;|219 }|-1
{|800 context|235 .|802 addMessage|214 (|800 pattern|234 ,|800 arguments|215 )|227 ;|219 }|-1
{|349 super|214 (|800 cause|215 )|227 ;|800 context|235 .|802 addMessage|214 (|40 LocalizedFormats.USER_EXCEPTION|215 )|227 ;|219 }|-1
{|800 context|235 .|802 addMessage|214 (|800 pattern|234 ,|800 args|215 )|227 ;|219 }|-1
{|349 super|214 (|800 cause|215 )|227 ;|800 context|235 .|802 addMessage|214 (|800 pattern|234 ,|800 args|215 )|227 ;|219 }|-1
{|800 context|235 .|802 addMessage|214 (|800 pattern|234 ,|800 args|215 )|227 ;|219 }|-1
{|802 getContext|216 ()|235 .|802 addMessage|214 (|800 pattern|234 ,|800 args|215 )|227 ;|219 }|-1
{|800 context|235 .|802 addMessage|214 (|800 pattern|234 ,|800 args|215 )|227 ;|219 }|-1
{|349 super|214 (|800 max|215 )|227 ;|802 getContext|216 ()|235 .|802 addMessage|214 (|40 LocalizedFormats.EVALUATIONS|215 )|227 ;|219 }|-1
this|235 .|800 field|204 =|800 field|227 ;|-1
return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayRealVector|214 (|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 Array2DRowFieldMatrix|230 <|800 T|231 >|214 (|802 getField|216 ()|234 ,|800 outData|234 ,|9 false|215 )|227 ;|-1
{|315 this|214 (|802 extractField|214 (|800 d|215 )|234 ,|800 d|215 )|227 ;|219 }|-1
FieldMatrix|230 <|800 Fraction|231 >|800 matrix|204 =|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 FractionField|235 .|802 getInstance|216 ()|234 ,|800 testData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 matrix|204 =|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 FractionField|235 .|802 getInstance|216 ()|234 ,|800 testData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 matrix|204 =|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 FractionField|235 .|802 getInstance|216 ()|234 ,|800 testData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 matrix|204 =|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 FractionField|235 .|802 getInstance|216 ()|234 ,|800 testData|215 )|227 ;|-1
return|304 new|801 Array2DRowFieldMatrix|230 <|800 T|231 >|214 (|802 getField|216 ()|234 ,|800 outData|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 Array2DRowFieldMatrix|230 <|800 T|231 >|214 (|802 getField|216 ()|234 ,|800 outData|234 ,|9 false|215 )|227 ;|-1
assertClose|214 (|45 STRING_CONSTANT|234 ,|800 m|235 .|802 multiply|214 (|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 FractionField|235 .|802 getInstance|216 ()|234 ,|800 testDataInv|215 )|215 )|234 ,|800 identity|234 ,|800 entryTolerance|215 )|227 ;|-1
return|304 new|801 Array2DRowFieldMatrix|230 <|800 BigFraction|231 >|214 (|800 BigFractionField|235 .|802 getInstance|216 ()|234 ,|800 Hdata|215 )|227 ;|-1
return|304 new|801 Array2DRowFieldMatrix|230 <|800 T|231 >|214 (|800 field|234 ,|800 bp|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|800 field|234 ,|800 bp|234 ,|9 false|215 )|227 ;|-1
{|329 return|802 projection|214 (|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|802 getField|216 ()|234 ,|800 v|234 ,|9 false|215 )|215 )|227 ;|219 }|-1
return|304 new|801 Array2DRowFieldMatrix|230 <|800 T|231 >|214 (|800 field|234 ,|800 d|234 ,|9 false|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|304 new|801 Array2DRowFieldMatrix|230 <|800 Fraction|231 >|214 (|800 FractionField|235 .|802 getInstance|216 ()|234 ,|800 fractionColMatrix|215 )|234 ,|800 MatrixUtils|235 .|802 createFieldMatrix|214 (|800 fractionColMatrix|215 )|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|802 getField|216 ()|234 ,|800 outData|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|230 <|800 T|231 >|214 (|802 getField|216 ()|234 ,|800 outData|234 ,|9 false|215 )|227 ;|-1
final|801 String|800 source|-1
{|349 super|214 (|800 prefix|234 ,|800 suffix|234 ,|800 separator|234 ,|800 CompositeFormat|235 .|802 getDefaultNumberFormat|216 ()|215 )|227 ;|219 }|-1
public|802 Vector3DFormat|214 (|83 final|801 NumberFormat|800 format|215 )|218 {|349 super|214 (|800 DEFAULT_PREFIX|234 ,|800 DEFAULT_SUFFIX|234 ,|800 DEFAULT_SEPARATOR|234 ,|800 format|215 )|227 ;|219 }|-1
public|802 Vector3DFormat|216 ()|218 {|349 super|214 (|800 DEFAULT_PREFIX|234 ,|800 DEFAULT_SUFFIX|234 ,|800 DEFAULT_SEPARATOR|234 ,|800 CompositeFormat|235 .|802 getDefaultNumberFormat|216 ()|215 )|227 ;|219 }|-1
final|800 BSPTreeVisitor|230 <|800 S|231 >|800 visitor|-1
void|802 visitLeafNode|214 (|800 BSPTree|230 <|800 S|231 >|800 node|215 )|227 ;|-1
BSPTree|230 <|800 S|231 >|800 node|-1
BSPTree|230 <|800 S|231 >|800 node|-1
Hyperplane|230 <|800 S|231 >|800 other|-1
Vector|230 <|800 S|231 >|800 point|-1
final|800 Hyperplane|230 <|800 Euclidean1D|231 >|800 other|-1
final|801 Vector2D|800 p|-1
final|800 Hyperplane|230 <|800 Euclidean2D|231 >|800 other|-1
final|801 Vector2D|800 p|-1
final|801 Vector2D|800 tmp|204 =|801 loop|221 [|800 min|222 ]|227 ;|-1
final|801 Vector2D|85 []|800 bLoop|-1
Vector3D|800 point|204 =|800 p|235 .|802 intersection|214 (|800 l|215 )|227 ;|-1
public|801 Order|802 visitOrder|214 (|83 final|800 BSPTree|230 <|800 Euclidean3D|231 >|800 node|215 )|218 {|329 return|40 Order.MINUS_SUB_PLUS|227 ;|219 }|-1
public|802 BoundaryProjector|216 ()|218 {|800 projected|204 =|304 new|801 PolygonsSet|214 (|304 new|801 BSPTree|230 <|800 Euclidean2D|231 >|214 (|40 Boolean.FALSE|215 )|215 )|227 ;|219 }|-1
final|800 BSPTree|230 <|800 Euclidean1D|231 >|800 tree|-1
Vector3D|85 []|800 points|-1
final|800 BSPTree|230 <|800 Euclidean2D|231 >|800 tree|-1
public|801 Order|802 visitOrder|214 (|83 final|800 BSPTree|230 <|800 Euclidean2D|231 >|800 node|215 )|218 {|329 return|40 Order.MINUS_SUB_PLUS|227 ;|219 }|-1
final|800 Hyperplane|230 <|800 Euclidean3D|231 >|800 other|-1
final|800 Vector|230 <|800 Euclidean3D|231 >|800 point|-1
final|801 Vector3D|800 p|-1
origin|204 =|304 new|801 Vector3D|214 (|201 -|800 originOffset|234 ,|800 w|215 )|227 ;|-1
public|801 Order|802 visitOrder|214 (|83 final|800 BSPTree|230 <|800 Euclidean3D|231 >|800 node|215 )|218 {|329 return|40 Order.MINUS_SUB_PLUS|227 ;|219 }|-1
final|800 BSPTree|230 <|800 Euclidean3D|231 >|800 tree|-1
public|83 abstract|800 SplitSubHyperplane|230 <|800 S|231 >|802 split|214 (|800 Hyperplane|230 <|800 S|231 >|800 hyper|215 )|227 ;|-1
public|83 abstract|801 Side|802 side|214 (|800 Hyperplane|230 <|800 S|231 >|800 hyper|215 )|227 ;|-1
{|313 if|214 (|801 in|221 [|800 i|222 ]|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 MathIllegalArgumentException|214 (|40 LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX|234 ,|800 i|234 ,|801 in|221 [|800 i|222 ]|215 )|227 ;|219 }|219 }|-1
{|313 if|214 (|800 val|230 <|34 NUMBER_CONSTANT|250 |||800 val|231 >|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 InvalidRepresentationException|214 (|40 LocalizedFormats.OUT_OF_RANGE_SIMPLE|234 ,|800 val|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|219 }|-1
for|214 (|39 int|800 i|226 :|800 chromosomeRepresentation|215 )|218 {|313 if|214 (|800 i|230 <|34 NUMBER_CONSTANT|250 |||800 i|231 >|34 NUMBER_CONSTANT|215 )|320 throw|304 new|801 InvalidRepresentationException|214 (|40 LocalizedFormats.INVALID_BINARY_DIGIT|234 ,|800 i|215 )|227 ;|219 }|-1
clusters|204 =|800 transformer|235 .|802 cluster|214 (|800 Arrays|235 .|802 asList|214 (|800 points|215 )|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|-1
public|801 RealVector|802 getInitialStateEstimate|216 ()|218 {|329 return|800 initialStateEstimateVector|227 ;|219 }|-1
if|214 (|800 t|236 ==|34 NUMBER_CONSTANT|249 &&|800 i|251 >=|800 j|215 )|218 {|500 continue;|219 }|-1
{|313 if|214 (|800 maxGenerations|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|315 this|235 .|800 maxGenerations|204 =|800 maxGenerations|227 ;|219 }|-1
if|214 (|207 !|800 forward|215 )|218 {|800 h|204 =|201 -|800 h|227 ;|219 }|-1
if|214 (|800 remA|231 >|34 NUMBER_CONSTANT|215 )|218 {|500 break;|219 }|-1
if|214 (|800 remA|231 >|34 NUMBER_CONSTANT|215 )|218 {|500 break;|219 }|-1
if|214 (|800 remA|231 >|34 NUMBER_CONSTANT|215 )|218 {|500 break;|219 }|-1
if|214 (|800 x|202 *|800 x|236 ==|34 NUMBER_CONSTANT|215 )|218 {|329 return|40 Double.NaN|227 ;|219 }|-1
{|303 for|214 (|801 Chromosome|800 anotherChr|226 :|800 population|215 )|218 {|313 if|214 (|315 this|235 .|802 isSame|214 (|800 anotherChr|215 )|215 )|218 {|329 return|800 anotherChr|227 ;|219 }|219 }|329 return|500 null|227 ;|219 }|-1
if|214 (|800 y|235 .|802 equals|214 (|800 py|215 )|215 )|218 {|500 break;|219 }|-1
if|214 (|800 x|230 <|34 NUMBER_CONSTANT|215 )|218 {|329 return|34 NUMBER_CONSTANT|227 ;|219 }|-1
if|214 (|800 boundaries|236 ==|500 null|215 )|218 {|329 return|800 x|227 ;|219 }|-1
if|214 (|800 boundaries|236 ==|500 null|215 )|218 {|329 return|800 x|227 ;|219 }|-1
if|214 (|800 negccov|231 >|800 negcovMax|215 )|218 {|800 negccov|204 =|800 negcovMax|227 ;|219 }|-1
{|800 numElements|238 -=|800 i|227 ;|313 if|214 (|800 front|215 )|218 {|800 startIndex|237 +=|800 i|227 ;|219 }|219 }|-1
{|349 super|214 (|800 relativeAccuracy|234 ,|800 absoluteAccuracy|215 )|227 ;|219 }|-1
public|802 SecantSolver|214 (|83 final|39 double|800 absoluteAccuracy|215 )|218 {|349 super|214 (|800 absoluteAccuracy|215 )|227 ;|219 }|-1
{|315 this|235 .|800 allowed|204 =|800 allowedSolutions|227 ;|329 return|349 super|235 .|802 solve|214 (|800 maxEval|234 ,|800 f|234 ,|800 min|234 ,|800 max|234 ,|800 startValue|215 )|227 ;|219 }|-1
{|349 super|214 (|800 relativeAccuracy|234 ,|800 absoluteAccuracy|215 )|227 ;|315 this|235 .|800 allowed|204 =|40 AllowedSolutions.ANY_SIDE|227 ;|315 this|235 .|800 method|204 =|800 method|227 ;|219 }|-1
{|349 super|214 (|800 absoluteAccuracy|215 )|227 ;|315 this|235 .|800 allowed|204 =|40 AllowedSolutions.ANY_SIDE|227 ;|315 this|235 .|800 method|204 =|800 method|227 ;|219 }|-1
{|801 se|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 sqrt|214 (|800 var|215 )|227 ;|500 continue;|219 }|-1
if|214 (|207 !|800 Double|235 .|802 isNaN|214 (|800 var|215 )|249 &&|800 var|231 >|40 Double.MIN_VALUE|215 )|218 {|329 return|800 FastMath|235 .|802 sqrt|214 (|800 var|215 )|227 ;|219 }|-1
if|214 (|800 isNaN|215 )|218 {|329 return|800 NaN|227 ;|219 }|-1
if|214 (|800 isNaN|215 )|218 {|329 return|800 NaN|227 ;|219 }|-1
if|214 (|800 isNaN|215 )|218 {|329 return|800 NaN|227 ;|219 }|-1
if|214 (|800 isNaN|215 )|218 {|329 return|800 NaN|227 ;|219 }|-1
if|214 (|800 isNaN|215 )|218 {|329 return|800 NaN|227 ;|219 }|-1
{|313 if|214 (|800 isNaN|215 )|218 {|329 return|800 NaN|227 ;|219 }|329 return|802 createComplex|214 (|800 FastMath|235 .|802 log|214 (|802 abs|216 ()|215 )|234 ,|800 FastMath|235 .|802 atan2|214 (|800 imaginary|234 ,|800 real|215 )|215 )|227 ;|219 }|-1
if|214 (|800 isNaN|215 )|218 {|329 return|800 NaN|227 ;|219 }|-1
if|214 (|800 isNaN|215 )|218 {|329 return|800 NaN|227 ;|219 }|-1
if|214 (|800 isNaN|215 )|218 {|329 return|800 NaN|227 ;|219 }|-1
if|214 (|800 isNaN|215 )|218 {|329 return|800 NaN|227 ;|219 }|-1
if|214 (|800 isNaN|215 )|218 {|329 return|800 NaN|227 ;|219 }|-1
if|214 (|800 isNaN|215 )|218 {|329 return|800 NaN|227 ;|219 }|-1
if|214 (|800 isNaN|250 |||40 rhs.isNaN|215 )|218 {|329 return|800 NaN|227 ;|219 }|-1
{|313 if|214 (|800 isNaN|215 )|218 {|329 return|800 NaN|227 ;|219 }|329 return|802 createComplex|214 (|201 -|800 real|234 ,|201 -|800 imaginary|215 )|227 ;|219 }|-1
if|214 (|800 isNaN|250 |||800 Double|235 .|800 isNaN|214 (|800 rhs|215 )|215 )|218 {|329 return|800 NaN|227 ;|219 }|-1
if|214 (|800 isNaN|250 |||40 rhs.isNaN|215 )|218 {|329 return|800 NaN|227 ;|219 }|-1
if|214 (|800 isNaN|215 )|218 {|329 return|34 NUMBER_CONSTANT|227 ;|219 }|-1
if|214 (|800 isNaN|250 |||40 rhs.isNaN|215 )|218 {|329 return|800 NaN|227 ;|219 }|-1
{|313 if|214 (|800 isNaN|215 )|218 {|329 return|800 NaN|227 ;|219 }|329 return|802 createComplex|214 (|800 real|234 ,|201 -|800 imaginary|215 )|227 ;|219 }|-1
if|214 (|800 isNaN|215 )|218 {|329 return|40 Double.NaN|227 ;|219 }|-1
{|313 if|214 (|800 rng|235 .|802 nextBoolean|216 ()|215 )|218 {|320 throw|304 new|801 MathIllegalStateException|216 ()|227 ;|219 }|219 }|-1
Assert|235 .|802 assertTrue|214 (|800 Double|235 .|802 isNaN|214 (|800 w|235 .|802 getReal|216 ()|215 )|215 )|227 ;|-1
{|802 include|214 (|800 MathUtils|235 .|802 copyOf|214 (|800 x|234 ,|40 x.length|215 )|234 ,|34 NUMBER_CONSTANT|234 ,|800 y|215 )|227 ;|219 }|-1
if|214 (|800 index|230 <|34 NUMBER_CONSTANT|250 |||800 index|251 >=|315 this|235 .|800 parameters|235 .|800 length|215 )|218 {|320 throw|304 new|801 IndexOutOfBoundsException|214 (|800 indexOutOfBound|215 )|227 ;|219 }|-1
if|214 (|800 index|230 <|34 NUMBER_CONSTANT|250 |||800 index|251 >=|315 this|235 .|800 parameters|235 .|800 length|215 )|218 {|320 throw|304 new|801 IndexOutOfBoundsException|214 (|800 indexOutOfBound|215 )|227 ;|219 }|-1
{|329 return|802 outerProduct|214 (|214 (|214 (|800 ArrayRealVector|215 )|800 v|215 )|235 .|800 data|215 )|227 ;|219 }|-1
{|329 return|802 getLInfDistance|214 (|214 (|214 (|800 ArrayRealVector|215 )|800 v|215 )|235 .|800 data|215 )|227 ;|219 }|-1
{|329 return|802 getL1Distance|214 (|214 (|214 (|800 ArrayRealVector|215 )|800 v|215 )|235 .|800 data|215 )|227 ;|219 }|-1
{|329 return|802 getDistance|214 (|214 (|214 (|800 ArrayRealVector|215 )|800 v|215 )|235 .|800 data|215 )|227 ;|219 }|-1
{|329 return|802 dotProduct|214 (|214 (|214 (|800 ArrayRealVector|215 )|800 v|215 )|235 .|800 data|215 )|227 ;|219 }|-1
{|329 return|802 ebeDivide|214 (|214 (|214 (|800 ArrayRealVector|215 )|800 v|215 )|235 .|800 data|215 )|227 ;|219 }|-1
{|329 return|802 ebeMultiply|214 (|214 (|214 (|800 ArrayRealVector|215 )|800 v|215 )|235 .|800 data|215 )|227 ;|219 }|-1
{|329 return|802 subtract|214 (|214 (|214 (|800 ArrayRealVector|215 )|800 v|215 )|235 .|800 data|215 )|227 ;|219 }|-1
{|329 return|802 add|214 (|214 (|214 (|800 ArrayRealVector|215 )|800 v|215 )|235 .|800 data|215 )|227 ;|219 }|-1
{|349 super|214 (|800 relativeAccuracy|234 ,|800 absoluteAccuracy|234 ,|800 functionValueAccuracy|234 ,|40 Method.REGULA_FALSI|215 )|227 ;|219 }|-1
Assert|235 .|802 assertSame|214 (|40 Complex.NaN|234 ,|800 z|215 )|227 ;|-1
{|329 return|800 node|235 .|802 getElement|216 ()|235 .|802 intValue|216 ()|227 ;|219 }|-1
if|214 (|800 numberOfVariables|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 ModelSpecificationException|214 (|40 LocalizedFormats.NO_REGRESSORS|215 )|227 ;|219 }|-1
{|802 addEventHandler|214 (|800 handler|234 ,|800 maxCheckInterval|234 ,|800 convergence|234 ,|800 maxIterationCount|234 ,|304 new|801 BracketingNthOrderBrentSolver|214 (|800 convergence|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|219 }|-1
double|800 solution|204 =|802 getSolution|214 (|800 solver|234 ,|34 NUMBER_CONSTANT|234 ,|800 f|234 ,|800 left|234 ,|800 right|234 ,|40 AllowedSolution.ABOVE_SIDE|215 )|227 ;|-1
double|800 solution|204 =|802 getSolution|214 (|800 solver|234 ,|34 NUMBER_CONSTANT|234 ,|800 f|234 ,|800 left|234 ,|800 right|234 ,|40 AllowedSolution.BELOW_SIDE|215 )|227 ;|-1
double|800 solution|204 =|802 getSolution|214 (|800 solver|234 ,|34 NUMBER_CONSTANT|234 ,|800 f|234 ,|800 left|234 ,|800 right|234 ,|40 AllowedSolution.RIGHT_SIDE|215 )|227 ;|-1
double|800 solution|204 =|802 getSolution|214 (|800 solver|234 ,|34 NUMBER_CONSTANT|234 ,|800 f|234 ,|800 left|234 ,|800 right|234 ,|40 AllowedSolution.LEFT_SIDE|215 )|227 ;|-1
this|235 .|800 allowed|204 =|40 AllowedSolution.ANY_SIDE|227 ;|-1
this|235 .|800 allowed|204 =|40 AllowedSolution.ANY_SIDE|227 ;|-1
this|235 .|800 allowed|204 =|40 AllowedSolution.ANY_SIDE|227 ;|-1
{|329 return|802 solve|214 (|800 maxEval|234 ,|800 f|234 ,|800 min|234 ,|800 max|234 ,|800 startValue|234 ,|40 AllowedSolution.ANY_SIDE|215 )|227 ;|219 }|-1
{|349 super|214 (|800 relativeAccuracy|234 ,|800 absoluteAccuracy|234 ,|800 functionValueAccuracy|215 )|227 ;|315 this|235 .|800 allowed|204 =|40 AllowedSolution.ANY_SIDE|227 ;|315 this|235 .|800 method|204 =|800 method|227 ;|219 }|-1
{|349 super|214 (|800 relativeAccuracy|234 ,|800 absoluteAccuracy|215 )|227 ;|315 this|235 .|800 allowed|204 =|40 AllowedSolution.ANY_SIDE|227 ;|315 this|235 .|800 method|204 =|800 method|227 ;|219 }|-1
{|349 super|214 (|800 absoluteAccuracy|215 )|227 ;|315 this|235 .|800 allowed|204 =|40 AllowedSolution.ANY_SIDE|227 ;|315 this|235 .|800 method|204 =|800 method|227 ;|219 }|-1
double|800 x|204 =|800 randomData|235 .|802 nextUniform|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
double|800 dot|204 =|800 v1|235 .|802 dotProduct|214 (|800 v2|215 )|227 ;|-1
{|329 return|304 new|801 Solver|214 (|800 singularValues|234 ,|802 getUT|216 ()|234 ,|802 getV|216 ()|234 ,|802 getRank|216 ()|236 ==|800 m|215 )|227 ;|219 }|-1
tol|204 =|800 FastMath|235 .|802 max|214 (|800 m|202 *|801 singularValues|221 [|34 NUMBER_CONSTANT|222 ]|202 *|800 EPS|234 ,|800 FastMath|235 .|802 sqrt|214 (|40 MathUtils.SAFE_MIN|215 )|215 )|227 ;|-1
{|349 super|235 .|802 setEntry|214 (|800 row|201 -|800 INDEX_OFFSET|234 ,|800 col|201 -|800 INDEX_OFFSET|234 ,|800 value|215 )|227 ;|219 }|-1
{|349 super|235 .|802 setEntry|214 (|800 index|201 -|800 INDEX_OFFSET|234 ,|800 value|215 )|227 ;|219 }|-1
fsave|204 =|800 fval|235 .|802 getEntry|214 (|800 INDEX_OFFSET|215 )|227 ;|-1
crossP|235 .|802 dotProduct|214 (|800 otherPlane|235 .|802 getNormal|216 ()|215 )|230 <|34 NUMBER_CONSTANT|-1
crossP|235 .|802 dotProduct|214 (|800 otherPlane|235 .|802 getNormal|216 ()|215 )|230 <|34 NUMBER_CONSTANT|-1
double|800 scaled|204 =|800 area|202 *|800 facetB|235 .|802 dotProduct|214 (|800 plane|235 .|802 getNormal|216 ()|215 )|227 ;|-1
final|800 Vector3D|800 n|204 =|304 new|800 Vector3D|214 (|34 NUMBER_CONSTANT|234 ,|800 d|234 ,|201 -|800 d|235 .|802 dotProduct|214 (|800 direction|215 )|234 ,|800 direction|215 )|227 ;|-1
{|329 return|800 point|235 .|802 dotProduct|214 (|800 w|215 )|200 +|800 originOffset|227 ;|219 }|-1
{|802 setNormal|214 (|800 normal|215 )|227 ;|800 originOffset|204 =|201 -|800 p|235 .|802 dotProduct|214 (|800 w|215 )|227 ;|802 setFrame|216 ()|227 ;|219 }|-1
public|801 Line|802 revert|216 ()|218 {|329 return|304 new|801 Line|214 (|800 zero|234 ,|800 zero|235 .|802 subtract|214 (|800 direction|215 )|215 )|227 ;|219 }|-1
if|214 (|800 nRows|230 <|34 NUMBER_CONSTANT|250 |||800 nCols|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 MathIllegalArgumentException|214 (|40 LocalizedFormats.INSUFFICIENT_ROWS_AND_COLUMNS|234 ,|800 nRows|234 ,|800 nCols|215 )|227 ;|219 }|-1
{|329 return|800 t|227 ;|219 }|-1
if|214 (|214 (|800 delta|252 <=|800 rLimit|215 )|250 |||214 (|800 delta|252 <=|800 absoluteAccuracy|215 )|215 )|218 {|329 return|800 s|227 ;|219 }|-1
if|214 (|214 (|800 delta|252 <=|800 rLimit|215 )|250 |||214 (|800 delta|252 <=|800 absoluteAccuracy|215 )|215 )|218 {|329 return|800 t|227 ;|219 }|-1
RealVector|800 v|204 =|800 RealVector|235 .|802 unmodifiableRealVector|214 (|800 u|235 .|802 copy|216 ()|215 )|227 ;|-1
RealVector|800 v|204 =|800 RealVector|235 .|802 unmodifiableRealVector|214 (|800 u|235 .|802 copy|216 ()|215 )|227 ;|-1
RealVector|800 v|204 =|800 RealVector|235 .|802 unmodifiableRealVector|214 (|800 u|215 )|227 ;|-1
RealVector|800 v|204 =|800 RealVector|235 .|802 unmodifiableRealVector|214 (|800 u|215 )|227 ;|-1
RealVector|800 v|204 =|800 RealVector|235 .|802 unmodifiableRealVector|214 (|800 u|215 )|227 ;|-1
RealVector|800 v|204 =|800 RealVector|235 .|802 unmodifiableRealVector|214 (|800 u|215 )|227 ;|-1
final|801 ArrayRealVector|800 x|204 =|304 new|801 ArrayRealVector|214 (|800 dim|215 )|227 ;|-1
final|801 ArrayRealVector|800 x|204 =|304 new|801 ArrayRealVector|214 (|800 dim|215 )|227 ;|-1
final|39 double|85 []|800 actual|204 =|800 x|235 .|802 toArray|216 ()|227 ;|-1
final|39 double|85 []|800 actual|204 =|800 z|235 .|802 toArray|216 ()|227 ;|-1
double|85 []|800 d2|204 =|800 w|235 .|802 toArray|216 ()|227 ;|-1
{|329 return|800 coefficients|235 .|802 dotProduct|214 (|304 new|801 ArrayRealVector|214 (|800 point|234 ,|9 false|215 )|215 )|200 +|800 constantTerm|227 ;|219 }|-1
dist|204 =|304 new|801 EmpiricalDistributionImpl|214 (|34 NUMBER_CONSTANT|234 ,|214 (|800 RandomGenerator|215 )|500 null|215 )|227 ;|-1
public|802 EmpiricalDistributionImpl|214 (|39 int|800 binCount|215 )|218 {|315 this|214 (|800 binCount|234 ,|304 new|801 RandomDataImpl|216 ()|215 )|227 ;|219 }|-1
empiricalDistribution|204 =|304 new|801 EmpiricalDistributionImpl|214 (|800 binCount|234 ,|800 randomData|215 )|227 ;|-1
return|34 NUMBER_CONSTANT|202 *|214 (|34 NUMBER_CONSTANT|200 +|800 Erf|235 .|802 erf|214 (|800 dev|203 /|214 (|800 standardDeviation|202 *|800 SQRT2|215 )|215 )|215 )|227 ;|-1
{|315 this|214 (|304 new|801 SimpleScalarValueChecker|214 (|800 rel|234 ,|800 abs|215 )|215 )|227 ;|219 }|-1
@|802 Test|214 (|800 expected|204 =|800 ConvergenceException|235 .|341 class|215 )|-1
{|800 solver|235 .|802 solve|214 (|800 b|235 .|802 getColumnVector|214 (|34 NUMBER_CONSTANT|215 )|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
{|800 solver|235 .|802 solve|214 (|800 b|235 .|802 getColumnVector|214 (|34 NUMBER_CONSTANT|215 )|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
{|800 es|235 .|802 solve|214 (|800 b|235 .|802 getColumnVector|214 (|34 NUMBER_CONSTANT|215 )|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
{|800 solver|235 .|802 solve|214 (|800 b|235 .|802 getColumnVector|214 (|34 NUMBER_CONSTANT|215 )|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
Assert|235 .|802 assertEquals|214 (|800 z|234 ,|40 Complex.INF|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|800 z|234 ,|40 Complex.NaN|215 )|227 ;|-1
final|801 ExceptionContext|800 cOut|204 =|304 new|801 ExceptionContext|214 (|304 new|801 Exception|214 (|45 STRING_CONSTANT|215 )|215 )|227 ;|-1
final|801 ExceptionContext|800 cOut|204 =|304 new|801 ExceptionContext|214 (|304 new|801 Exception|214 (|45 STRING_CONSTANT|215 )|215 )|227 ;|-1
final|801 ExceptionContext|800 c|204 =|304 new|801 ExceptionContext|214 (|304 new|801 Exception|214 (|45 STRING_CONSTANT|215 )|215 )|227 ;|-1
final|801 ExceptionContext|800 c|204 =|304 new|801 ExceptionContext|214 (|304 new|801 Exception|214 (|45 STRING_CONSTANT|215 )|215 )|227 ;|-1
final|801 ExceptionContext|800 c|204 =|304 new|801 ExceptionContext|214 (|304 new|801 Exception|214 (|45 STRING_CONSTANT|215 )|215 )|227 ;|-1
@|802 Test|214 (|800 expected|204 =|800 MaxCountExceededException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 MaxCountExceededException|235 .|341 class|215 )|-1
Exception|800 e|-1
Exception|800 e|-1
int|800 i|204 =|800 FACT_LEN|201 -|34 NUMBER_CONSTANT|-1
final|39 double|85 []|800 x|204 =|800 b|235 .|802 toArray|216 ()|227 ;|-1
assertClose|214 (|45 STRING_CONSTANT|234 ,|800 m|235 .|802 preMultiply|214 (|304 new|801 ArrayRealVector|214 (|800 testVector|215 )|235 .|802 toArray|216 ()|215 )|234 ,|800 preMultTest|234 ,|800 normTolerance|215 )|227 ;|-1
assertClose|214 (|45 STRING_CONSTANT|234 ,|800 testVector|234 ,|800 m|235 .|802 operate|214 (|304 new|801 ArrayRealVector|214 (|800 testVector|215 )|215 )|235 .|802 toArray|216 ()|234 ,|800 entryTolerance|215 )|227 ;|-1
double|85 []|800 hatResiduals|204 =|800 I|235 .|802 subtract|214 (|800 hat|215 )|235 .|802 operate|214 (|40 model.Y|215 )|235 .|802 toArray|216 ()|227 ;|-1
final|39 double|800 objectiveValue|204 =|802 computeObjectiveValue|214 (|800 currentBest|235 .|802 toArray|216 ()|215 )|227 ;|-1
f|204 =|802 computeObjectiveValue|214 (|800 currentBest|235 .|802 toArray|216 ()|215 )|227 ;|-1
final|39 double|85 []|800 actual|204 =|800 x|235 .|802 toArray|216 ()|227 ;|-1
final|39 double|85 []|800 actual|204 =|800 x|235 .|802 toArray|216 ()|227 ;|-1
final|39 double|85 []|800 actual|204 =|800 x|235 .|802 combine|214 (|800 a|234 ,|800 b|234 ,|800 y|215 )|235 .|802 toArray|216 ()|227 ;|-1
final|39 double|85 []|800 actual|204 =|800 x|235 .|802 combine|214 (|800 a|234 ,|800 b|234 ,|800 y|215 )|235 .|802 toArray|216 ()|227 ;|-1
Assert|235 .|802 assertNotSame|214 (|45 STRING_CONSTANT|234 ,|40 v1.data|234 ,|800 v_copy|235 .|802 toArray|216 ()|215 )|227 ;|-1
{|39 double|800 sum|204 =|34 NUMBER_CONSTANT|227 ;|303 for|214 (|39 double|800 coefficient|226 :|800 coefficients|235 .|802 toArray|216 ()|215 )|218 {|800 sum|238 -=|800 coefficient|227 ;|219 }|329 return|800 sum|227 ;|219 }|-1
assertClose|214 (|800 m|235 .|802 preMultiply|214 (|304 new|801 ArrayRealVector|214 (|800 testVector|215 )|235 .|802 toArray|216 ()|215 )|234 ,|800 preMultTest|234 ,|800 normTolerance|215 )|227 ;|-1
assertClose|214 (|800 testVector|234 ,|800 m|235 .|802 operate|214 (|304 new|801 ArrayRealVector|214 (|800 testVector|215 )|215 )|235 .|802 toArray|216 ()|234 ,|800 entryTolerance|215 )|227 ;|-1
TestUtils|235 .|802 assertEquals|214 (|45 STRING_CONSTANT|234 ,|800 m|235 .|802 preMultiply|214 (|304 new|801 ArrayRealVector|214 (|800 testVector|215 )|235 .|802 toArray|216 ()|215 )|234 ,|800 preMultTest|234 ,|800 normTolerance|215 )|227 ;|-1
TestUtils|235 .|802 assertEquals|214 (|45 STRING_CONSTANT|234 ,|800 testVector|234 ,|800 m|235 .|802 operate|214 (|304 new|801 ArrayRealVector|214 (|800 testVector|215 )|215 )|235 .|802 toArray|216 ()|234 ,|800 entryTolerance|215 )|227 ;|-1
public|39 double|85 []|802 getStateEstimation|216 ()|218 {|329 return|800 stateEstimation|235 .|802 toArray|216 ()|227 ;|219 }|-1
double|85 []|800 y|204 =|800 u|235 .|802 add|214 (|800 x|235 .|802 operate|214 (|800 b|215 )|215 )|235 .|802 toArray|216 ()|227 ;|-1
TestUtils|235 .|802 assertEquals|214 (|304 new|39 double|85 []|218 {|201 -|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|219 }|234 ,|800 b|235 .|802 toArray|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
TestUtils|235 .|802 assertEquals|214 (|304 new|39 double|85 []|218 {|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|201 -|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|219 }|234 ,|800 b|235 .|802 toArray|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
return|800 e|235 .|802 toArray|216 ()|227 ;|-1
{|801 RealVector|800 b|204 =|802 calculateBeta|216 ()|227 ;|329 return|800 b|235 .|802 toArray|216 ()|227 ;|219 }|-1
if|214 (|800 x|328 instanceof|800 ArrayRealVector|215 )|218 {|329 return|214 (|214 (|800 ArrayRealVector|215 )|800 x|215 )|235 .|802 getDataRef|216 ()|227 ;|219 }|322 else|218 {|329 return|800 x|235 .|802 toArray|216 ()|227 ;|219 }|-1
if|214 (|801 ltI|221 [|800 i|222 ]|230 <|800 absolutePositivityThreshold|215 )|218 {|320 throw|304 new|801 NonPositiveDefiniteMatrixException|214 (|801 ltI|221 [|800 i|222 ]|234 ,|800 i|234 ,|800 absolutePositivityThreshold|215 )|227 ;|219 }|-1
{|329 return|800 hasIntercept|233 ?|802 getIntercept|214 (|802 getSlope|216 ()|215 )|226 :|34 NUMBER_CONSTANT|227 ;|219 }|-1
int|800 i|204 =|40 FACT.length|201 -|34 NUMBER_CONSTANT|-1
int|800 i|204 =|40 FACT.length|201 -|34 NUMBER_CONSTANT|-1
int|800 i|204 =|40 FACT.length|201 -|34 NUMBER_CONSTANT|-1
CholeskyDecompositionImpl|800 llt|204 =|304 new|801 CholeskyDecompositionImpl|214 (|800 matrix|215 )|227 ;|-1
CholeskyDecompositionImpl|800 llt|204 =|304 new|801 CholeskyDecompositionImpl|214 (|800 matrix|215 )|227 ;|-1
DecompositionSolver|800 solver|204 =|304 new|801 CholeskyDecomposition|214 (|800 s|215 )|235 .|802 getSolver|216 ()|227 ;|-1
DecompositionSolver|800 solver|204 =|304 new|801 CholeskyDecomposition|214 (|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 testData|215 )|215 )|235 .|802 getSolver|216 ()|227 ;|-1
DecompositionSolver|800 solver|204 =|304 new|801 CholeskyDecomposition|214 (|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 testData|215 )|215 )|235 .|802 getSolver|216 ()|227 ;|-1
final|801 RealMatrix|800 matrix|204 =|800 EigenDecompositionTest|235 .|802 createTestMatrix|214 (|304 new|801 Random|214 (|34 NUMBER_CONSTANT|215 )|234 ,|800 refValues|215 )|227 ;|-1
EigenDecompositionImpl|800 eig|204 =|304 new|801 EigenDecompositionImpl|214 (|800 C|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
EigenDecomposition|800 eig|204 =|304 new|801 EigenDecomposition|214 (|800 C|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
DecompositionSolver|800 es|204 =|304 new|801 EigenDecomposition|214 (|800 m|234 ,|40 MathUtils.SAFE_MIN|215 )|235 .|802 getSolver|216 ()|227 ;|-1
DecompositionSolver|800 es|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|234 ,|40 MathUtils.SAFE_MIN|215 )|235 .|802 getSolver|216 ()|227 ;|-1
DecompositionSolver|800 es|204 =|304 new|801 EigenDecomposition|214 (|800 m|234 ,|40 MathUtils.SAFE_MIN|215 )|235 .|802 getSolver|216 ()|227 ;|-1
DecompositionSolver|800 es|204 =|304 new|801 EigenDecomposition|214 (|800 m|234 ,|40 MathUtils.SAFE_MIN|215 )|235 .|802 getSolver|216 ()|227 ;|-1
EigenDecomposition|800 ed|-1
EigenDecomposition|800 ed|-1
RealMatrix|800 v|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|234 ,|40 MathUtils.SAFE_MIN|215 )|235 .|802 getV|216 ()|227 ;|-1
final|39 int|800 max|204 =|40 val.length|227 ;|-1
final|39 int|800 max|204 =|40 val.length|227 ;|-1
final|39 int|800 max|204 =|40 val.length|227 ;|-1
throw|304 new|801 MathInternalError|216 ()|227 ;|-1
throw|304 new|801 MathInternalError|216 ()|227 ;|-1
throw|304 new|801 MathInternalError|216 ()|227 ;|-1
throw|304 new|801 MathInternalError|216 ()|227 ;|-1
final|39 double|800 slope|-1
final|39 double|800 slope|-1
final|39 double|800 alpha|-1
FieldDecompositionSolver|230 <|800 BigFraction|231 >|800 pSolver|204 =|304 new|801 FieldLUDecomposition|230 <|800 BigFraction|231 >|214 (|800 bigP|215 )|235 .|802 getSolver|216 ()|227 ;|-1
{|329 return|304 new|801 FieldLUDecomposition|230 <|800 Fraction|231 >|214 (|800 m|215 )|235 .|802 getDeterminant|216 ()|235 .|802 doubleValue|216 ()|227 ;|219 }|-1
solver|204 =|304 new|801 FieldLUDecomposition|230 <|800 Fraction|231 >|214 (|802 createFractionMatrix|214 (|800 testData|215 )|215 )|235 .|802 getSolver|216 ()|227 ;|-1
solver|204 =|304 new|801 FieldLUDecomposition|214 (|802 createFractionMatrix|214 (|800 singular|215 )|215 )|235 .|802 getSolver|216 ()|227 ;|-1
solver|204 =|304 new|801 FieldLUDecomposition|230 <|800 Fraction|231 >|214 (|802 createFractionMatrix|214 (|800 testData|215 )|215 )|235 .|802 getSolver|216 ()|227 ;|-1
@|802 Test|214 (|800 expected|204 =|800 NonMonotonicSequenceException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 NonMonotonicSequenceException|235 .|341 class|215 )|-1
catch|214 (|801 NonMonotonicSequenceException|800 iae|215 )|220 {}|-1
@|802 Test|214 (|800 expected|204 =|800 NonMonotonicSequenceException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 NonMonotonicSequenceException|235 .|341 class|215 )|-1
catch|214 (|801 NonMonotonicSequenceException|800 iae|215 )|220 {}|-1
final|801 DecompositionSolver|800 solver|204 =|304 new|801 LUDecomposition|214 (|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 jTj|215 )|234 ,|800 threshold|215 )|235 .|802 getSolver|216 ()|227 ;|-1
DecompositionSolver|800 solver|204 =|304 new|801 LUDecomposition|214 (|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 testData|215 )|215 )|235 .|802 getSolver|216 ()|227 ;|-1
DecompositionSolver|800 solver|204 =|304 new|801 LUDecomposition|214 (|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 singular|215 )|215 )|235 .|802 getSolver|216 ()|227 ;|-1
DecompositionSolver|800 solver|204 =|304 new|801 LUDecomposition|214 (|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 testData|215 )|215 )|235 .|802 getSolver|216 ()|227 ;|-1
DecompositionSolver|800 solver|204 =|800 useLU|233 ?|304 new|801 LUDecomposition|214 (|800 mA|215 )|235 .|802 getSolver|216 ()|226 :|304 new|801 QRDecompositionImpl|214 (|800 mA|215 )|235 .|802 getSolver|216 ()|227 ;|-1
return|304 new|801 LUDecomposition|214 (|800 XTOIX|215 )|235 .|802 getSolver|216 ()|235 .|802 getInverse|216 ()|227 ;|-1
RealMatrix|800 inverse|204 =|304 new|801 LUDecomposition|214 (|800 XTOIX|215 )|235 .|802 getSolver|216 ()|235 .|802 getInverse|216 ()|227 ;|-1
RealMatrix|800 Rinv|204 =|304 new|801 LUDecomposition|214 (|800 Raug|215 )|235 .|802 getSolver|216 ()|235 .|802 getInverse|216 ()|227 ;|-1
DecompositionSolver|800 solver|204 =|800 useLU|233 ?|304 new|801 LUDecomposition|214 (|800 mA|215 )|235 .|802 getSolver|216 ()|226 :|304 new|801 QRDecomposition|214 (|800 mA|215 )|235 .|802 getSolver|216 ()|227 ;|-1
{|349 super|235 .|802 newXSampleData|214 (|800 x|215 )|227 ;|800 qr|204 =|304 new|801 QRDecomposition|214 (|800 X|215 )|227 ;|219 }|-1
{|349 super|235 .|802 newSampleData|214 (|800 data|234 ,|800 nobs|234 ,|800 nvars|215 )|227 ;|800 qr|204 =|304 new|801 QRDecomposition|214 (|800 X|215 )|227 ;|219 }|-1
RealMatrix|800 x|204 =|304 new|801 QRDecomposition|214 (|800 a|215 )|235 .|802 getSolver|216 ()|235 .|802 solve|214 (|800 b|215 )|227 ;|-1
RealMatrix|800 x|204 =|304 new|801 QRDecomposition|214 (|800 a|215 )|235 .|802 getSolver|216 ()|235 .|802 solve|214 (|800 b|215 )|227 ;|-1
DecompositionSolver|800 solver|204 =|304 new|801 QRDecomposition|214 (|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 testData3x3Singular|215 )|215 )|235 .|802 getSolver|216 ()|227 ;|-1
DecompositionSolver|800 solver|204 =|304 new|801 QRDecomposition|214 (|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 testData3x3NonSingular|215 )|215 )|235 .|802 getSolver|216 ()|227 ;|-1
final|801 RectangularCholeskyDecomposition|800 decomposition|204 =|304 new|801 RectangularCholeskyDecomposition|214 (|800 covariance|234 ,|800 small|215 )|227 ;|-1
final|801 RectangularCholeskyDecomposition|800 decomposition|204 =|304 new|801 RectangularCholeskyDecomposition|214 (|800 covariance|234 ,|800 small|215 )|227 ;|-1
SingularValueDecomposition|800 svd|204 =|304 new|801 SingularValueDecomposition|214 (|800 rm|215 )|227 ;|-1
DecompositionSolver|800 solver|204 =|304 new|801 SingularValueDecomposition|214 (|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 testSquare|215 )|215 )|235 .|802 getSolver|216 ()|227 ;|-1
DecompositionSolver|800 solver|204 =|304 new|801 SingularValueDecomposition|214 (|800 m|215 )|235 .|802 getSolver|216 ()|227 ;|-1
DecompositionSolver|800 solver|204 =|304 new|801 SingularValueDecomposition|214 (|800 MatrixUtils|235 .|802 createRealMatrix|214 (|800 testSquare|215 )|215 )|235 .|802 getSolver|216 ()|227 ;|-1
{|800 g0Positive|204 =|800 g0|251 >=|34 NUMBER_CONSTANT|227 ;|800 nextAction|204 =|40 EventHandler.Action.CONTINUE|227 ;|219 }|-1
nextAction|204 =|40 EventHandler.Action.CONTINUE|227 ;|-1
ExpandableFirstOrderDifferentialEquations|800 equations|-1
final|801 ExpandableFirstOrderDifferentialEquations|800 equations|-1
final|801 ExpandableFirstOrderDifferentialEquations|800 equations|-1
{|800 out|235 .|802 writeDouble|214 (|801 polynomials|221 [|800 k|222 ]|221 [|800 l|222 ]|215 )|227 ;|219 }|-1
final|39 double|800 e|204 =|801 polynomials|221 [|800 currentDegree|222 ]|221 [|800 i|222 ]|203 /|801 scale|221 [|800 i|222 ]|227 ;|-1
Array|235 .|802 newInstance|214 (|800 field|235 .|802 getRuntimeClass|216 ()|234 ,|304 new|39 int|85 []|218 {|800 m|234 ,|800 nColB|219 }|215 )|-1
bp|204 =|214 (|801 T|85 []|215 )|800 Array|235 .|802 newInstance|214 (|800 field|235 .|802 getRuntimeClass|216 ()|234 ,|800 m|215 )|-1
bp|204 =|214 (|801 T|85 []|215 )|800 Array|235 .|802 newInstance|214 (|800 field|235 .|802 getRuntimeClass|216 ()|234 ,|800 m|215 )|-1
{|329 return|214 (|801 T|85 []|215 )|800 Array|235 .|802 newInstance|214 (|800 field|235 .|802 getRuntimeClass|216 ()|234 ,|800 length|215 )|227 ;|219 }|-1
array|204 =|214 (|801 T|85 []|215 )|800 Array|235 .|802 newInstance|214 (|800 field|235 .|802 getRuntimeClass|216 ()|234 ,|800 length|215 )|-1
{|329 return|214 (|801 T|85 []|215 )|800 Array|235 .|802 newInstance|214 (|800 field|235 .|802 getRuntimeClass|216 ()|234 ,|800 length|215 )|227 ;|219 }|-1
{|329 return|214 (|801 T|85 []|215 )|800 Array|235 .|802 newInstance|214 (|800 field|235 .|802 getRuntimeClass|216 ()|234 ,|800 length|215 )|227 ;|219 }|-1
(|801 T|85 []|85 []|215 )|800 Array|235 .|802 newInstance|214 (|800 field|235 .|802 getRuntimeClass|216 ()|234 ,|304 new|39 int|85 []|218 {|800 dimension|234 ,|800 dimension|219 }|215 )|-1
{|329 return|214 (|801 T|85 []|215 )|800 Array|235 .|802 newInstance|214 (|800 field|235 .|802 getRuntimeClass|216 ()|234 ,|800 length|215 )|227 ;|219 }|-1
solver|235 .|802 solve|214 (|800 a|234 ,|800 b|215 )|227 ;|-1
final|801 RealVector|800 x|204 =|800 solver|235 .|802 solve|214 (|800 a|234 ,|800 m|234 ,|800 b|215 )|227 ;|-1
final|801 RealVector|800 x|204 =|800 solver|235 .|802 solve|214 (|800 a|234 ,|800 m|234 ,|800 b|215 )|227 ;|-1
solver|235 .|802 solve|214 (|800 a|234 ,|800 m|234 ,|800 b|215 )|227 ;|-1
solver|235 .|802 solve|214 (|800 a|234 ,|800 m|234 ,|800 b|215 )|227 ;|-1
solver|235 .|802 solve|214 (|800 a|234 ,|800 m|234 ,|800 b|215 )|227 ;|-1
final|801 RealVector|800 x|204 =|800 solver|235 .|802 solve|214 (|800 a|234 ,|800 b|215 )|227 ;|-1
final|801 RealVector|800 x|204 =|800 solver|235 .|802 solve|214 (|800 a|234 ,|800 b|234 ,|800 x0|215 )|227 ;|-1
final|801 RealVector|800 x|204 =|800 solver|235 .|802 solveInPlace|214 (|800 a|234 ,|800 b|234 ,|800 x0|215 )|227 ;|-1
final|801 RealVector|800 x|204 =|800 solver|235 .|802 solve|214 (|800 a|234 ,|800 b|215 )|227 ;|-1
solver|235 .|802 solve|214 (|800 a|234 ,|800 b|234 ,|800 x|215 )|227 ;|-1
solver|235 .|802 solve|214 (|800 a|234 ,|800 b|234 ,|800 x|215 )|227 ;|-1
solver|235 .|802 solve|214 (|800 a|234 ,|800 b|234 ,|800 x|215 )|227 ;|-1
solver|235 .|802 solve|214 (|800 a|234 ,|800 b|234 ,|800 x|215 )|227 ;|-1
if|214 (|800 nSteps|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 MathIllegalArgumentException|214 (|40 LocalizedFormats.INTEGRATION_METHOD_NEEDS_AT_LEAST_TWO_PREVIOUS_POINTS|234 ,|800 name|215 )|227 ;|219 }|-1
throw|304 new|801 MathIllegalArgumentException|214 (|40 LocalizedFormats.N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED|234 ,|800 n|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
catch|214 (|801 MathIllegalArgumentException|800 e|215 )|220 {}|-1
catch|214 (|801 MathParseException|800 ex|215 )|218 {|800 Assert|235 .|802 fail|214 (|800 ex|235 .|802 getMessage|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 MathParseException|800 ex|215 )|218 {|800 Assert|235 .|802 fail|214 (|800 ex|235 .|802 getMessage|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 MathParseException|800 ex|215 )|218 {|800 Assert|235 .|802 fail|214 (|800 ex|235 .|802 getMessage|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 MathParseException|800 ex|215 )|218 {|800 Assert|235 .|802 fail|214 (|800 ex|235 .|802 getMessage|216 ()|215 )|227 ;|219 }|-1
try|218 {|800 f1|235 .|802 divide|214 (|800 f2|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 ZeroException|800 ex|215 )|220 {}|-1
{|313 if|214 (|802 getN|216 ()|231 >|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 MathIllegalStateException|214 (|40 LocalizedFormats.VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC|234 ,|802 getN|216 ()|215 )|227 ;|219 }|219 }|-1
if|214 (|800 i|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 MathIllegalArgumentException|214 (|40 LocalizedFormats.INDEX_NOT_POSITIVE|234 ,|800 i|215 )|227 ;|219 }|-1
{|320 throw|304 new|801 MathIllegalArgumentException|214 (|40 LocalizedFormats.INITIAL_CAPACITY_NOT_POSITIVE|234 ,|800 initialCapacity|215 )|227 ;|219 }|-1
if|214 (|800 expansionMode|242 !=|800 MULTIPLICATIVE_MODE|249 &&|800 expansionMode|242 !=|800 ADDITIVE_MODE|215 )|218 {|320 throw|304 new|801 MathIllegalArgumentException|214 (|40 LocalizedFormats.UNSUPPORTED_EXPANSION_MODE|234 ,|800 expansionMode|234 ,|800 MULTIPLICATIVE_MODE|234 ,|45 STRING_CONSTANT|234 ,|800 ADDITIVE_MODE|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
if|214 (|800 index|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 ArrayIndexOutOfBoundsException|214 (|800 index|215 )|227 ;|219 }|-1
catch|214 (|801 ClassCastException|800 ex|215 )|218 {|320 throw|304 new|801 MathIllegalArgumentException|214 (|40 LocalizedFormats.INSTANCES_NOT_COMPARABLE_TO_EXISTING_VALUES|234 ,|800 v|235 .|802 getClass|216 ()|235 .|802 getName|216 ()|215 )|227 ;|219 }|-1
MathIllegalStateException|800 cause|204 =|304 new|801 MathIllegalStateException|214 (|40 LocalizedFormats.SIMPLE_MESSAGE|234 ,|800 inMsg|215 )|227 ;|-1
{|800 evaluations|235 .|802 incrementCount|216 ()|227 ;|800 expandable|235 .|802 computeDerivatives|214 (|800 t|234 ,|800 y|234 ,|800 yDot|215 )|227 ;|219 }|-1
{|315 this|235 .|800 expandable|204 =|800 equations|227 ;|219 }|-1
allocateInterpolatedArrays|214 (|40 y.length|215 )|227 ;|-1
allocateInterpolatedArrays|214 (|201 -|34 NUMBER_CONSTANT|215 )|227 ;|-1
catch|214 (|801 Exception|800 ex|215 )|218 {|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|200 +|800 mean|200 +|45 STRING_CONSTANT|200 +|800 p|200 +|45 STRING_CONSTANT|200 +|800 ex|235 .|802 getMessage|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 Exception|800 ex|215 )|218 {|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|200 +|800 mean|200 +|45 STRING_CONSTANT|200 +|800 x|200 +|45 STRING_CONSTANT|200 +|800 ex|235 .|802 getMessage|216 ()|215 )|227 ;|219 }|-1
@|802 Test|214 (|800 expected|204 =|800 NonPositiveDefiniteOperatorException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 NonSquareOperatorException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 NonPositiveDefiniteOperatorException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 NonSquareOperatorException|235 .|341 class|215 )|-1
if|214 (|214 (|800 str|204 =|800 filePointer|235 .|802 readLine|216 ()|215 )|236 ==|500 null|215 )|218 {|320 throw|304 new|801 MathIllegalStateException|214 (|40 LocalizedFormats.URL_CONTAINS_NO_DATA|234 ,|800 valuesFileURL|215 )|227 ;|219 }|-1
if|214 (|214 (|800 empiricalDistribution|236 ==|500 null|215 )|250 |||214 (|800 empiricalDistribution|235 .|802 getBinStats|216 ()|235 .|802 size|216 ()|236 ==|34 NUMBER_CONSTANT|215 )|215 )|218 {|320 throw|304 new|801 MathIllegalStateException|214 (|40 LocalizedFormats.DIGEST_NOT_INITIALIZED|215 )|227 ;|219 }|-1
if|214 (|800 sampleStats|235 .|802 getN|216 ()|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 ZeroException|214 (|40 LocalizedFormats.URL_CONTAINS_NO_DATA|234 ,|800 url|215 )|227 ;|219 }|-1
catch|214 (|801 IOException|800 e|215 )|218 {|320 throw|304 new|801 MathIllegalStateException|214 (|800 e|234 ,|40 LocalizedFormats.SIMPLE_MESSAGE|234 ,|800 e|235 .|802 getLocalizedMessage|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 ZeroException|800 ze|215 )|220 {}|-1
catch|214 (|801 MathIllegalStateException|800 mise|215 )|220 {}|-1
final|800 List|230 <|800 BigFraction|231 >|800 coefficients|-1
final|800 List|230 <|800 BigFraction|231 >|800 coefficients|-1
double|800 y|204 =|800 x|202 *|800 F_1_3|201 -|800 F_1_2|227 ;|-1
if|214 (|800 FastMath|235 .|802 abs|214 (|800 m|215 )|252 <=|800 tol|250 |||800 Precision|235 .|802 equals|214 (|800 fb|234 ,|34 NUMBER_CONSTANT|215 )|215 )|218 {|329 return|800 b|227 ;|219 }|-1
Assert|235 .|802 assertTrue|214 (|800 Precision|235 .|802 equals|214 (|800 binomial|234 ,|800 jacobi|235 .|802 value|214 (|34 NUMBER_CONSTANT|215 )|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
if|214 (|800 mode|236 ==|40 StepNormalizerMode.MULTIPLES|249 &&|800 Precision|235 .|802 equals|214 (|800 nextTime|234 ,|800 lastTime|234 ,|34 NUMBER_CONSTANT|215 )|215 )|218 {|800 nextTime|237 +=|800 h|227 ;|219 }|-1
{|800 Assert|235 .|802 assertTrue|214 (|800 Precision|235 .|802 equals|214 (|801 out|221 [|800 i|222 ]|234 ,|801 expectedSample|221 [|800 i|222 ]|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|219 }|-1
Assert|235 .|802 assertTrue|214 (|800 Precision|235 .|802 equals|214 (|34 NUMBER_CONSTANT|234 ,|800 MathUtils|235 .|802 distanceInf|214 (|800 p1|234 ,|800 p2|215 )|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
Assert|235 .|802 assertTrue|214 (|800 Precision|235 .|802 equals|214 (|34 NUMBER_CONSTANT|234 ,|800 MathUtils|235 .|802 distance|214 (|800 p1|234 ,|800 p2|215 )|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
Assert|235 .|802 assertTrue|214 (|800 Precision|235 .|802 equals|214 (|34 NUMBER_CONSTANT|234 ,|800 MathUtils|235 .|802 distance|214 (|800 p1|234 ,|800 p2|215 )|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
Assert|235 .|802 assertTrue|214 (|800 Precision|235 .|802 equals|214 (|34 NUMBER_CONSTANT|234 ,|800 MathUtils|235 .|802 distance1|214 (|800 p1|234 ,|800 p2|215 )|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
if|214 (|800 Precision|235 .|802 compareTo|214 (|800 entry|234 ,|800 minValue|234 ,|800 maxUlps|215 )|230 <|34 NUMBER_CONSTANT|215 )|218 {|800 minValue|204 =|800 entry|227 ;|800 minPos|204 =|800 i|227 ;|219 }|-1
isLastStep|204 =|800 isLastStep|250 |||800 Precision|235 .|802 equals|214 (|800 currentT|234 ,|800 tEnd|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
!|800 Precision|235 .|802 equalsIncludingNaN|214 (|801 expected|221 [|800 i|222 ]|234 ,|801 observed|221 [|800 i|222 ]|234 ,|800 tolerance|215 )|-1
for|214 (|39 double|800 value|226 :|800 values|215 )|218 {|313 if|214 (|800 Precision|235 .|802 equals|214 (|800 value|234 ,|800 x|234 ,|800 epsilon|215 )|215 )|218 {|500 return;|219 }|219 }|-1
Precision|235 .|802 equalsIncludingNaN|214 (|800 stat|235 .|802 getN|216 ()|234 ,|802 getN|216 ()|215 )|-1
if|214 (|800 Precision|235 .|802 compareTo|214 (|800 entry|234 ,|34 NUMBER_CONSTANT|234 ,|800 epsilon|215 )|230 <|34 NUMBER_CONSTANT|215 )|218 {|329 return|9 false|227 ;|219 }|-1
if|214 (|800 Precision|235 .|802 compareTo|214 (|800 entry|234 ,|34 NUMBER_CONSTANT|234 ,|800 maxUlps|215 )|231 >|34 NUMBER_CONSTANT|215 )|218 {|800 columnsToDrop|235 .|802 add|214 (|800 i|215 )|227 ;|219 }|-1
{|313 if|214 (|315 this|235 .|800 parameters|236 ==|500 null|215 )|218 {|329 return|500 null|227 ;|219 }|329 return|800 MathArrays|235 .|802 copyOf|214 (|800 parameters|215 )|227 ;|219 }|-1
MathArrays|235 .|802 checkOrder|214 (|800 knots|215 )|227 ;|-1
public|39 int|85 []|802 getOrderOfRegressors|216 ()|218 {|329 return|800 MathArrays|235 .|802 copyOf|214 (|800 vorder|215 )|227 ;|219 }|-1
{|802 include|214 (|800 MathArrays|235 .|802 copyOf|214 (|800 x|234 ,|40 x.length|215 )|234 ,|34 NUMBER_CONSTANT|234 ,|800 y|215 )|227 ;|219 }|-1
MathArrays|235 .|802 checkOrder|214 (|800 x|215 )|227 ;|-1
{|315 this|214 (|800 wrong|234 ,|800 previous|234 ,|800 index|234 ,|40 MathArrays.OrderDirection.INCREASING|234 ,|9 true|215 )|227 ;|219 }|-1
MathArrays|235 .|802 checkOrder|214 (|800 xval|215 )|227 ;|-1
final|39 double|85 []|800 d|204 =|800 MathArrays|235 .|802 copyOf|214 (|801 direc|221 [|800 i|222 ]|215 )|227 ;|-1
MathArrays|235 .|802 checkOrder|214 (|800 x|215 )|227 ;|-1
{|329 return|800 MathArrays|235 .|802 distance|214 (|800 point|234 ,|800 p|235 .|802 getPoint|216 ()|215 )|227 ;|219 }|-1
RealMatrix|800 arzneg|204 =|802 selectColumns|214 (|800 arz|234 ,|800 MathArrays|235 .|802 copyOf|214 (|800 arReverseIndex|234 ,|800 mu|215 )|215 )|227 ;|-1
return|800 MathArrays|235 .|802 checkOrder|214 (|800 x|234 ,|40 MathArrays.OrderDirection.INCREASING|234 ,|9 true|234 ,|800 abort|215 )|227 ;|-1
MathArrays|235 .|802 sortInPlace|214 (|800 xNew|234 ,|800 yNew|215 )|227 ;|-1
MathArrays|235 .|802 sortInPlace|214 (|315 this|235 .|800 x|234 ,|315 this|235 .|800 y|215 )|227 ;|-1
public|39 int|85 []|802 getSizes|216 ()|218 {|329 return|800 MathArrays|235 .|802 copyOf|214 (|800 size|215 )|227 ;|219 }|-1
this|235 .|800 size|204 =|800 MathArrays|235 .|802 copyOf|214 (|800 size|215 )|227 ;|-1
public|39 int|85 []|802 getCounts|216 ()|218 {|329 return|800 MathArrays|235 .|802 copyOf|214 (|800 counter|215 )|227 ;|219 }|-1
Assert|235 .|802 assertEquals|214 (|802 expectedValue|216 ()|234 ,|800 variance|235 .|802 evaluate|214 (|800 testArray|234 ,|800 MathArrays|235 .|802 normalizeArray|214 (|800 identicalWeightsArray|234 ,|40 testArray.length|215 )|234 ,|34 NUMBER_CONSTANT|234 ,|40 testArray.length|215 )|234 ,|802 getTolerance|216 ()|215 )|227 ;|-1
int|800 gcd|204 =|800 ArithmeticsUtils|235 .|800 gcd|214 (|800 numerator|234 ,|800 denominator|215 )|227 ;|-1
final|39 int|800 d|204 =|800 ArithmeticsUtils|235 .|802 gcd|214 (|800 num|234 ,|800 den|215 )|227 ;|-1
long|800 lcm|204 =|800 FastMath|235 .|802 abs|214 (|802 mulAndCheck|214 (|800 a|203 /|800 ArithmeticsUtils|235 .|802 gcd|214 (|800 a|234 ,|800 b|215 )|234 ,|800 b|215 )|215 )|227 ;|-1
int|800 lcm|204 =|800 FastMath|235 .|802 abs|214 (|802 mulAndCheck|214 (|800 a|203 /|800 ArithmeticsUtils|235 .|802 gcd|214 (|800 a|234 ,|800 b|215 )|234 ,|800 b|215 )|215 )|227 ;|-1
{|801 coeff|221 [|800 i|222 ]|221 [|800 j|222 ]|204 =|214 (|39 int|215 )|800 ArithmeticsUtils|235 .|802 binomialCoefficient|214 (|800 i|234 ,|800 j|215 )|227 ;|219 }|-1
double|800 binomial|204 =|800 ArithmeticsUtils|235 .|802 binomialCoefficient|214 (|800 v|200 +|800 i|234 ,|800 i|215 )|227 ;|-1
double|800 binomial|204 =|800 ArithmeticUtils|235 .|802 binomialCoefficient|214 (|800 v|200 +|800 i|234 ,|800 i|215 )|227 ;|-1
int|800 gcd|204 =|800 ArithmeticUtils|235 .|800 gcd|214 (|800 numerator|234 ,|800 denominator|215 )|227 ;|-1
final|39 int|800 d|204 =|800 ArithmeticUtils|235 .|802 gcd|214 (|800 num|234 ,|800 den|215 )|227 ;|-1
{|801 coeff|221 [|800 i|222 ]|221 [|800 j|222 ]|204 =|214 (|39 int|215 )|800 ArithmeticUtils|235 .|802 binomialCoefficient|214 (|800 i|234 ,|800 j|215 )|227 ;|219 }|-1
FastMath|235 .|802 signum|214 (|800 y0|215 )|200 +|800 FastMath|235 .|802 signum|214 (|800 ym|215 )|236 ==|34 NUMBER_CONSTANT|-1
{|329 return|800 FastMath|235 .|802 abs|214 (|800 x|215 )|230 <|800 SHORTCUT|233 ?|34 NUMBER_CONSTANT|226 :|800 FastMath|235 .|802 sin|214 (|800 x|215 )|203 /|800 x|227 ;|219 }|-1
if|214 (|800 n|230 <|40 Precision.EPSILON|215 )|218 {|329 return|800 zero|227 ;|219 }|-1
if|214 (|800 n|230 <|40 Precision.SAFE_MIN|215 )|218 {|329 return|802 distance|214 (|40 line.zero|215 )|227 ;|219 }|-1
tol|204 =|800 FastMath|235 .|802 max|214 (|800 m|202 *|801 singularValues|221 [|34 NUMBER_CONSTANT|222 ]|202 *|800 EPS|234 ,|800 FastMath|235 .|802 sqrt|214 (|40 Precision.SAFE_MIN|215 )|215 )|227 ;|-1
if|214 (|800 d|231 >|201 -|40 Precision.SAFE_MIN|249 &&|800 d|230 <|40 Precision.SAFE_MIN|215 )|218 {|329 return|800 d|227 ;|219 }|-1
DecompositionSolver|800 es|204 =|304 new|801 EigenDecomposition|214 (|800 m|234 ,|40 Precision.SAFE_MIN|215 )|235 .|802 getSolver|216 ()|227 ;|-1
DecompositionSolver|800 es|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|234 ,|40 Precision.SAFE_MIN|215 )|235 .|802 getSolver|216 ()|227 ;|-1
DecompositionSolver|800 es|204 =|304 new|801 EigenDecomposition|214 (|800 m|234 ,|40 Precision.SAFE_MIN|215 )|235 .|802 getSolver|216 ()|227 ;|-1
DecompositionSolver|800 es|204 =|304 new|801 EigenDecomposition|214 (|800 m|234 ,|40 Precision.SAFE_MIN|215 )|235 .|802 getSolver|216 ()|227 ;|-1
final|39 double|800 eps|204 =|34 NUMBER_CONSTANT|202 *|800 rows|202 *|800 columns|202 *|40 Precision.EPSILON|227 ;|-1
if|214 (|800 FastMath|235 .|802 abs|214 (|800 diag|215 )|230 <|40 Precision.SAFE_MIN|215 )|218 {|320 throw|304 new|801 MathArithmeticException|214 (|40 LocalizedFormats.ZERO_DENOMINATOR|215 )|227 ;|219 }|-1
if|214 (|800 FastMath|235 .|802 abs|214 (|800 diag|215 )|230 <|40 Precision.SAFE_MIN|215 )|218 {|320 throw|304 new|801 MathArithmeticException|214 (|40 LocalizedFormats.ZERO_DENOMINATOR|215 )|227 ;|219 }|-1
LevenbergMarquardtOptimizer|800 optimizer|204 =|304 new|801 LevenbergMarquardtOptimizer|214 (|800 initialStepBoundFactor|234 ,|800 costRelativeTolerance|234 ,|800 parRelativeTolerance|234 ,|800 orthoTolerance|234 ,|40 Precision.SAFE_MIN|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 indefinite|234 ,|40 Precision.SAFE_MIN|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 distinct|234 ,|40 Precision.SAFE_MIN|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 repeated|234 ,|40 Precision.SAFE_MIN|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 m|234 ,|40 Precision.SAFE_MIN|215 )|227 ;|-1
RealMatrix|800 v|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|234 ,|40 Precision.SAFE_MIN|215 )|235 .|802 getV|216 ()|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|234 ,|40 Precision.SAFE_MIN|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|234 ,|40 Precision.SAFE_MIN|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|802 createTestMatrix|214 (|800 r|234 ,|800 bigValues|215 )|234 ,|40 Precision.SAFE_MIN|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|234 ,|40 Precision.SAFE_MIN|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|234 ,|40 Precision.SAFE_MIN|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 t|235 .|802 getMainDiagonalRef|216 ()|234 ,|800 t|235 .|802 getSecondaryDiagonalRef|216 ()|234 ,|40 Precision.SAFE_MIN|215 )|227 ;|-1
decomposition|204 =|304 new|801 EigenDecomposition|214 (|800 mainTridiagonal|234 ,|800 secondaryTridiagonal|234 ,|40 Precision.SAFE_MIN|215 )|227 ;|-1
decomposition|204 =|304 new|801 EigenDecomposition|214 (|800 mainTridiagonal|234 ,|800 secondaryTridiagonal|234 ,|40 Precision.SAFE_MIN|215 )|227 ;|-1
decomposition|204 =|304 new|801 EigenDecomposition|214 (|800 mainTridiagonal|234 ,|800 secondaryTridiagonal|234 ,|40 Precision.SAFE_MIN|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|234 ,|40 Precision.SAFE_MIN|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|234 ,|40 Precision.SAFE_MIN|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|234 ,|40 Precision.SAFE_MIN|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|234 ,|40 Precision.SAFE_MIN|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|234 ,|40 Precision.SAFE_MIN|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|234 ,|40 Precision.SAFE_MIN|215 )|227 ;|-1
if|214 (|800 FastMath|235 .|802 abs|214 (|800 tmp|215 )|231 >|40 Precision.EPSILON|215 )|218 {|800 w|204 =|214 (|800 di|202 *|800 w|215 )|203 /|800 dpi|227 ;|219 }|-1
{|315 this|214 (|800 numberOfVariables|234 ,|800 includeConstant|234 ,|40 Precision.EPSILON|215 )|227 ;|219 }|-1
FastMath|235 .|802 abs|214 (|800 sumXX|215 )|231 >|40 Precision.SAFE_MIN|-1
@|802 Test|214 (|800 expected|204 =|800 NumberIsTooLargeException|235 .|341 class|215 )|-1
{|315 this|214 (|800 numberOfInterpolationPoints|234 ,|800 DEFAULT_INITIAL_RADIUS|234 ,|800 DEFAULT_STOPPING_RADIUS|215 )|227 ;|219 }|-1
this|235 .|800 stopfitness|204 =|800 stopFitness|227 ;|-1
this|235 .|800 stopFitness|204 =|800 stopFitness|227 ;|-1
@|800 Override|83 public|39 boolean|802 isInfinite|216 ()|218 {|320 throw|802 unsupported|216 ()|227 ;|219 }|-1
@|800 Override|83 public|39 boolean|802 isNaN|216 ()|218 {|320 throw|802 unsupported|216 ()|227 ;|219 }|-1
@|800 Override|83 public|39 boolean|802 isInfinite|216 ()|218 {|320 throw|802 unsupported|216 ()|227 ;|219 }|-1
@|800 Override|83 public|39 boolean|802 isNaN|216 ()|218 {|320 throw|802 unsupported|216 ()|227 ;|219 }|-1
@|800 Override|83 public|39 boolean|802 isInfinite|216 ()|218 {|320 throw|802 unsupported|216 ()|227 ;|219 }|-1
@|800 Override|83 public|39 boolean|802 isNaN|216 ()|218 {|320 throw|802 unsupported|216 ()|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 unitize|216 ()|218 {|320 throw|802 unsupported|216 ()|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 getLInfNorm|216 ()|218 {|320 throw|802 unsupported|216 ()|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 getL1Norm|216 ()|218 {|320 throw|802 unsupported|216 ()|227 ;|219 }|-1
@|800 Override|83 public|39 double|802 getNorm|216 ()|218 {|320 throw|802 unsupported|216 ()|227 ;|219 }|-1
double|85 []|800 bounds|204 =|800 empiricalDistribution2|235 .|802 getGeneratorUpperBounds|216 ()|227 ;|-1
FieldDecompositionSolver|230 <|800 Fraction|231 >|800 solver|227 ;|-1
double|800 floatn|204 =|40 v.length|227 ;|-1
final|39 double|85 []|800 eventY|204 =|800 interpolator|235 .|802 getInterpolatedState|216 ()|235 .|802 clone|216 ()|227 ;|-1
final|39 double|85 []|800 yTmp|204 =|800 y0|235 .|802 clone|216 ()|227 ;|-1
double|85 []|800 quartiles|204 =|800 TestUtils|235 .|802 getDistributionQuartiles|214 (|304 new|801 BetaDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
BetaDistribution|800 betaDistribution|204 =|304 new|801 BetaDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
BetaDistribution|800 d|204 =|304 new|801 BetaDistribution|214 (|800 alpha|234 ,|800 beta|215 )|227 ;|-1
BetaDistribution|800 d|204 =|304 new|801 BetaDistribution|214 (|800 alpha|234 ,|800 beta|215 )|227 ;|-1
setDistribution|214 (|304 new|801 BinomialDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
setDistribution|214 (|304 new|801 BinomialDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
double|85 []|800 quartiles|204 =|800 TestUtils|235 .|802 getDistributionQuartiles|214 (|304 new|801 CauchyDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
ChiSquaredDistribution|800 d|204 =|304 new|801 ChiSquaredDistribution|214 (|800 df|215 )|227 ;|-1
setDistribution|214 (|304 new|801 ChiSquaredDistribution|214 (|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
@|800 Override|83 public|801 ChiSquaredDistribution|802 makeDistribution|216 ()|218 {|329 return|304 new|801 ChiSquaredDistribution|214 (|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
double|85 []|800 quartiles|204 =|800 TestUtils|235 .|802 getDistributionQuartiles|214 (|304 new|801 ChiSquaredDistribution|214 (|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
FDistribution|800 fd|204 =|304 new|801 FDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
double|85 []|800 quartiles|204 =|800 TestUtils|235 .|802 getDistributionQuartiles|214 (|304 new|801 FDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
GammaDistribution|800 distribution|204 =|304 new|801 GammaDistribution|214 (|800 a|234 ,|800 b|215 )|227 ;|-1
GammaDistribution|800 distribution|204 =|304 new|801 GammaDistribution|214 (|800 a|234 ,|800 b|215 )|227 ;|-1
@|800 Override|83 public|801 ExponentialDistribution|802 makeDistribution|216 ()|218 {|329 return|304 new|801 ExponentialDistribution|214 (|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
FDistribution|800 fdist|204 =|304 new|801 FDistribution|214 (|40 a.dfbg|234 ,|40 a.dfwg|215 )|227 ;|-1
{|800 gamma|204 =|304 new|801 GammaDistribution|214 (|800 degreesOfFreedom|203 /|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|800 solverAbsoluteAccuracy|204 =|800 inverseCumAccuracy|227 ;|219 }|-1
HypergeometricDistribution|800 dist|204 =|304 new|801 HypergeometricDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
setDistribution|214 (|304 new|801 HypergeometricDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
setDistribution|214 (|304 new|801 HypergeometricDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
setDistribution|214 (|304 new|801 HypergeometricDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
NormalDistribution|800 normal|204 =|304 new|801 NormalDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
NormalDistribution|800 distribution|204 =|304 new|801 NormalDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
NormalDistribution|800 d|204 =|304 new|801 NormalDistribution|214 (|800 mean|234 ,|800 sd|215 )|227 ;|-1
setDistribution|214 (|304 new|801 PascalDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
setDistribution|214 (|304 new|801 PascalDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
normal|204 =|304 new|801 NormalDistribution|214 (|800 p|234 ,|800 FastMath|235 .|802 sqrt|214 (|800 p|215 )|215 )|227 ;|-1
TDistribution|800 tDistribution|204 =|304 new|801 TDistribution|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
FastMath|235 .|802 sqrt|214 (|802 getMeanSquareError|216 ()|202 *|214 (|214 (|34 NUMBER_CONSTANT|203 /|800 n|215 )|200 +|214 (|800 xbar|202 *|800 xbar|215 )|203 /|800 sumXX|215 )|215 )|-1
TDistribution|800 distribution|204 =|304 new|801 TDistribution|214 (|800 degreesOfFreedom|215 )|227 ;|-1
TDistribution|800 distribution|204 =|304 new|801 TDistribution|214 (|800 degreesOfFreedom|215 )|227 ;|-1
TDistribution|800 td|204 =|304 new|801 TDistribution|214 (|800 df|215 )|227 ;|-1
setDistribution|214 (|304 new|801 TDistribution|214 (|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
{|801 TDistribution|800 td|204 =|304 new|801 TDistribution|214 (|34 NUMBER_CONSTANT|215 )|227 ;|800 td|235 .|802 cumulativeProbability|214 (|34 NUMBER_CONSTANT|215 )|227 ;|800 td|235 .|802 cumulativeProbability|214 (|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|801 TDistribution|802 makeDistribution|216 ()|218 {|329 return|304 new|801 TDistribution|214 (|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
double|85 []|800 quartiles|204 =|800 TestUtils|235 .|802 getDistributionQuartiles|214 (|304 new|801 WeibullDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
double|85 []|800 quartiles|204 =|800 TestUtils|235 .|802 getDistributionQuartiles|214 (|304 new|801 TDistribution|214 (|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
PoissonDistribution|800 poissonDistribution|204 =|304 new|801 PoissonDistribution|214 (|800 mean|215 )|227 ;|-1
PoissonDistribution|800 dist|204 =|304 new|801 PoissonDistribution|214 (|800 mean|215 )|227 ;|-1
PoissonDistribution|800 dist|204 =|304 new|801 PoissonDistribution|214 (|800 mean|215 )|227 ;|-1
{|801 PoissonDistribution|800 dist|204 =|304 new|801 PoissonDistribution|214 (|34 NUMBER_CONSTANT|215 )|227 ;|800 Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 dist|235 .|802 getMean|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|802 Test|214 (|800 expected|204 =|800 NotStrictlyPositiveException|235 .|341 class|215 )|83 public|39 void|802 testNegativeMean|216 ()|218 {|304 new|801 PoissonDistribution|214 (|201 -|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
PoissonDistribution|800 dist|204 =|304 new|801 PoissonDistribution|214 (|800 DEFAULT_TEST_POISSON_PARAMETER|215 )|227 ;|-1
@|800 Override|83 public|801 IntegerDistribution|802 makeDistribution|216 ()|218 {|329 return|304 new|801 PoissonDistribution|214 (|800 DEFAULT_TEST_POISSON_PARAMETER|215 )|227 ;|219 }|-1
dist|204 =|304 new|801 ZipfDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
if|214 (|800 windowSize|230 <|34 NUMBER_CONSTANT|215 )|218 {|313 if|214 (|800 windowSize|242 !=|800 INFINITE_WINDOW|215 )|218 {|320 throw|304 new|801 MathIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POSITIVE_WINDOW_SIZE|234 ,|800 windowSize|215 )|227 ;|219 }|219 }|-1
if|214 (|800 sign|251 >=|34 NUMBER_CONSTANT|249 &&|800 magnitude|236 ==|40 Long.MIN_VALUE|215 )|218 {|320 throw|304 new|801 MathArithmeticException|214 (|40 LocalizedFormats.OVERFLOW|215 )|227 ;|219 }|322 else|218 {|329 return|201 -|800 magnitude|227 ;|219 }|-1
if|214 (|800 sign|251 >=|34 NUMBER_CONSTANT|249 &&|800 magnitude|236 ==|40 Integer.MIN_VALUE|215 )|218 {|320 throw|304 new|801 MathArithmeticException|214 (|40 LocalizedFormats.OVERFLOW|215 )|227 ;|219 }|322 else|218 {|329 return|201 -|800 magnitude|227 ;|219 }|-1
if|214 (|800 c|235 .|802 isAssignableFrom|214 (|800 UnivariateFunction|235 .|341 class|215 )|215 )|218 {|329 return|304 new|801 Sin|216 ()|227 ;|219 }|322 else|218 {|320 throw|304 new|801 IllegalArgumentException|214 (|45 STRING_CONSTANT|200 +|800 c|215 )|227 ;|219 }|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Expm1Function|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 QuinticFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 f|204 =|800 i|235 .|802 interpolate|214 (|800 x|234 ,|800 y|215 )|227 ;|-1
UnivariateFunction|800 f|204 =|800 i|235 .|802 interpolate|214 (|800 x|234 ,|800 y|215 )|227 ;|-1
UnivariateFunction|800 f|204 =|800 i|235 .|802 interpolate|214 (|800 x|234 ,|800 y|215 )|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 XMinus5Function|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 QuinticFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 function|-1
UnivariateFunction|800 function|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Expm1Function|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 QuinticFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
final|801 DifferentiableUnivariateFunction|800 f|-1
ParametricUnivariateFunction|800 sif|204 =|304 new|801 SimpleInverseFunction|216 ()|227 ;|-1
ParametricUnivariateFunction|800 sif|204 =|304 new|801 SimpleInverseFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 func|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 QuinticFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
final|801 UnivariateFunction|800 dfdx|204 =|800 f|235 .|802 derivative|216 ()|227 ;|-1
final|801 UnivariateFunction|800 dfdx|204 =|800 f|235 .|802 derivative|216 ()|227 ;|-1
final|801 UnivariateFunction|800 dfdx|204 =|800 f|235 .|802 derivative|216 ()|227 ;|-1
final|801 UnivariateFunction|800 f|204 =|304 new|801 Gaussian|216 ()|227 ;|-1
final|801 UnivariateFunction|800 f|204 =|304 new|801 Gaussian|216 ()|227 ;|-1
@|800 Override|83 public|801 RealVector|802 mapToSelf|214 (|801 UnivariateFunction|800 function|215 )|218 {|320 throw|802 unsupported|216 ()|227 ;|219 }|-1
@|800 Override|83 public|801 RealVector|802 map|214 (|801 UnivariateFunction|800 function|215 )|218 {|320 throw|802 unsupported|216 ()|227 ;|219 }|-1
DifferentiableUnivariateFunction|800 f|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 f|204 =|800 i|235 .|802 interpolate|214 (|800 x|234 ,|800 y|215 )|227 ;|-1
UnivariateFunction|800 f|204 =|800 i|235 .|802 interpolate|214 (|800 x|234 ,|800 y|215 )|227 ;|-1
UnivariateFunction|800 f|204 =|800 i|235 .|802 interpolate|214 (|800 x|234 ,|800 y|215 )|227 ;|-1
UnivariateFunction|800 f|204 =|800 i|235 .|802 interpolate|214 (|800 x|234 ,|800 y|215 )|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 QuinticFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 p|204 =|800 interpolator|235 .|802 interpolate|214 (|800 x|234 ,|800 y|215 )|227 ;|-1
final|801 UnivariateFunction|800 dfdx|204 =|800 f|235 .|802 derivative|216 ()|227 ;|-1
final|801 UnivariateFunction|800 dfdx|204 =|800 f|235 .|802 derivative|216 ()|227 ;|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 QuinticFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 QuinticFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 QuinticFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
final|801 UnivariateFunction|800 f|-1
final|801 UnivariateFunction|800 f|-1
final|801 UnivariateFunction|800 f|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 f|-1
final|801 UnivariateFunction|800 dfdx|204 =|800 f|235 .|802 derivative|216 ()|227 ;|-1
final|801 UnivariateFunction|800 dfdx|204 =|800 f|235 .|802 derivative|216 ()|227 ;|-1
final|801 UnivariateFunction|800 f|204 =|304 new|801 Sigmoid|216 ()|227 ;|-1
UnivariateFunction|800 function|-1
UnivariateFunction|800 function|-1
UnivariateFunction|800 function|-1
UnivariateFunction|800 function|-1
UnivariateFunction|800 function|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 f|-1
final|801 UnivariateFunction|800 f|-1
DifferentiableUnivariateFunction|800 f|204 =|304 new|801 QuinticFunction|216 ()|227 ;|-1
DifferentiableUnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 f|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
final|801 ParametricUnivariateFunction|800 f|-1
final|801 ParametricUnivariateFunction|800 f|-1
final|801 ParametricUnivariateFunction|800 f|-1
final|801 UnivariateFunction|800 f|-1
final|801 UnivariateFunction|800 f|-1
UnivariateFunction|800 p|204 =|800 interpolator|235 .|802 interpolate|214 (|800 x|234 ,|800 y|215 )|227 ;|-1
final|801 UnivariateFunction|800 dfdx|204 =|800 f|235 .|802 derivative|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 QuinticFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Expm1Function|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 QuinticFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 QuinticFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
final|801 UnivariateFunction|800 f|-1
final|801 UnivariateFunction|800 lsf|204 =|304 new|801 LineSearchFunction|214 (|800 searchDirection|215 )|227 ;|-1
DifferentiableUnivariateFunction|800 f|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 QuinticFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 QuinticFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 QuinticFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 function|-1
UnivariateFunction|800 function|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 SinFunction|216 ()|227 ;|-1
@|800 Override|83 public|801 RealVector|802 mapToSelf|214 (|801 UnivariateFunction|800 function|215 )|218 {|320 throw|802 unsupported|216 ()|227 ;|219 }|-1
@|800 Override|83 public|801 RealVector|802 map|214 (|801 UnivariateFunction|800 function|215 )|218 {|320 throw|802 unsupported|216 ()|227 ;|219 }|-1
public|802 MonitoredFunction|214 (|801 UnivariateFunction|800 f|215 )|218 {|800 callsCount|204 =|34 NUMBER_CONSTANT|227 ;|315 this|235 .|800 f|204 =|800 f|227 ;|219 }|-1
UnivariateFunction|800 dSpline|204 =|800 spline|235 .|802 derivative|216 ()|227 ;|-1
final|801 MultivariateFunction|800 evaluationFunction|-1
MultivariateFunction|800 func|-1
MultivariateFunction|800 coll|204 =|800 FunctionUtils|235 .|802 collector|214 (|800 bi|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 MultivariateFunction|800 evaluationFunction|-1
final|801 MultivariateFunction|800 evaluationFunction|-1
final|801 DifferentiableMultivariateFunction|800 f|-1
DifferentiableMultivariateFunction|800 func|-1
DifferentiableMultivariateFunction|800 func|-1
MultivariateFunction|800 func|-1
final|801 MultivariateFunction|800 evaluationFunction|-1
final|801 MultivariateFunction|800 evaluationFunction|-1
MultivariateFunction|800 func|-1
public|802 KeplerHandler|214 (|801 TestProblem3|800 pb|215 )|218 {|315 this|235 .|800 pb|204 =|800 pb|227 ;|219 }|-1
public|802 KeplerHandler|214 (|801 TestProblem3|800 pb|215 )|218 {|315 this|235 .|800 pb|204 =|800 pb|227 ;|800 maxError|204 =|34 NUMBER_CONSTANT|227 ;|219 }|-1
public|802 KeplerStepHandler|214 (|801 TestProblem3|800 pb|215 )|218 {|315 this|235 .|800 pb|204 =|800 pb|227 ;|219 }|-1
evaluations|235 .|802 resetCount|216 ()|227 ;|-1
public|802 KeplerStepHandler|214 (|801 TestProblem3|800 pb|215 )|218 {|315 this|235 .|800 pb|204 =|800 pb|227 ;|219 }|-1
public|802 KeplerHandler|214 (|801 TestProblem3|800 pb|215 )|218 {|315 this|235 .|800 pb|204 =|800 pb|227 ;|219 }|-1
final|801 DifferentiableMultivariateVectorFunction|800 f|-1
final|801 MultivariateVectorFunction|800 function|-1
final|801 MultivariateVectorFunction|800 function|-1
final|801 MultivariateVectorFunction|800 function|-1
#|802 optimize|214 (|39 int|234 ,|800 MultivariateVectorFunction|234 ,|39 double|85 []|234 ,|39 double|85 []|234 ,|39 double|85 []|215 )|-1
DifferentiableMultivariateVectorFunction|800 problem|-1
result|204 =|800 transformer|235 .|802 inverseTransform|214 (|800 f|234 ,|800 min|234 ,|800 max|234 ,|800 N|215 )|227 ;|-1
if|214 (|800 forward|215 )|218 {|800 temp|204 =|802 transform2|214 (|800 temp|215 )|227 ;|219 }|322 else|218 {|800 temp|204 =|802 inverseTransform2|214 (|800 temp|215 )|227 ;|219 }|-1
double|801 dResult|85 []|204 =|800 transformer|235 .|802 inverseTransform|214 (|800 dY|215 )|227 ;|-1
Object|85 []|800 o|-1
double|85 []|800 d|-1
Complex|85 []|800 f|-1
double|85 []|800 f|-1
Complex|85 []|800 f|-1
double|85 []|800 f|-1
double|85 []|800 f|-1
double|85 []|800 f|-1
double|85 []|800 f|-1
double|85 []|800 f|-1
int|85 []|800 x|-1
double|85 []|800 x|-1
int|85 []|800 f|-1
double|85 []|800 f|-1
double|85 []|800 f|-1
double|85 []|800 f|-1
double|85 []|800 f|-1
double|85 []|800 f|-1
double|85 []|800 f|-1
new|801 Fraction|214 (|214 (|214 (|800 Math|235 .|802 abs|214 (|800 w|215 )|202 *|800 d|215 )|200 +|800 n|215 )|202 *|800 MathUtils|235 .|802 copySign|214 (|34 NUMBER_CONSTANT|234 ,|800 w|215 )|234 ,|800 d|215 )|-1
int|800 bits|-1
if|214 (|800 seed|236 ==|500 null|215 )|218 {|802 setSeed|214 (|800 System|235 .|802 currentTimeMillis|216 ()|200 +|800 System|235 .|802 identityHashCode|214 (|315 this|215 )|215 )|227 ;|500 return;|219 }|-1
catch|214 (|801 Exception|800 e|215 )|218 {|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
catch|214 (|801 Exception|800 e|215 )|218 {|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
int|800 x|-1
p|204 =|800 dist|235 .|802 cumulativeProbability|214 (|214 (|39 int|215 )|800 x|215 )|227 ;|-1
RealDistribution|800 distribution|-1
RealDistribution|800 distribution|-1
FastFourierTransformer|800 transformer|204 =|800 FastFourierTransformer|235 .|802 create|216 ()|227 ;|-1
FastFourierTransformer|800 transformer|204 =|800 FastFourierTransformer|235 .|802 create|216 ()|227 ;|-1
FastFourierTransformer|800 transformer|204 =|800 FastFourierTransformer|235 .|802 create|216 ()|227 ;|-1
FastFourierTransformer|800 transformer|204 =|800 FastFourierTransformer|235 .|802 create|216 ()|227 ;|-1
FastCosineTransformer|800 transformer|204 =|800 FastCosineTransformer|235 .|802 create|216 ()|227 ;|-1
FastCosineTransformer|800 transformer|204 =|800 FastCosineTransformer|235 .|802 create|216 ()|227 ;|-1
DifferentiableMultivariateVectorOptimizer|800 optimizer|-1
{|801 DifferentiableMultivariateVectorOptimizer|800 optimizer|204 =|304 new|801 GaussNewtonOptimizer|214 (|9 true|215 )|227 ;|802 checkUnsolvableProblem|214 (|800 optimizer|234 ,|9 false|215 )|227 ;|219 }|-1
final|801 DifferentiableMultivariateVectorOptimizer|800 optimizer|-1
public|802 HarmonicFitter|214 (|83 final|801 DifferentiableMultivariateVectorOptimizer|800 optimizer|215 )|218 {|349 super|214 (|800 optimizer|215 )|227 ;|219 }|-1
final|801 DifferentiableMultivariateVectorOptimizer|800 optimizer|-1
public|802 GaussianFitter|214 (|801 DifferentiableMultivariateVectorOptimizer|800 optimizer|215 )|218 {|349 super|214 (|800 optimizer|215 )|227 ;|219 }|-1
final|800 BaseMultivariateOptimizer|230 <|800 FUNC|231 >|800 optimizer|-1
MultivariateOptimizer|800 optim|-1
final|801 DifferentiableMultivariateOptimizer|800 optimizer|-1
final|801 MultivariateOptimizer|800 optimizer|-1
@|800 Override|83 public|39 void|802 setSeed|214 (|39 int|800 seed|215 )|218 {|800 ran|235 .|802 setSeed|214 (|800 seed|215 )|227 ;|802 clear|216 ()|227 ;|219 }|-1
{|313 if|214 (|800 rand|236 ==|500 null|215 )|218 {|802 initRan|216 ()|227 ;|219 }|800 rand|235 .|802 setSeed|214 (|800 seed|215 )|227 ;|219 }|-1
FastSineTransformer|800 transformer|204 =|800 FastSineTransformer|235 .|802 create|216 ()|227 ;|-1
FastSineTransformer|800 transformer|204 =|800 FastSineTransformer|235 .|802 create|216 ()|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 dist|235 .|802 inverseCumulativeProbability|214 (|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
setInverseCumulativeTestValues|214 (|304 new|39 int|85 []|218 {|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|219 }|215 )|227 ;|-1
setInverseCumulativeTestValues|214 (|304 new|39 int|85 []|218 {|40 Integer.MAX_VALUE|234 ,|40 Integer.MAX_VALUE|219 }|215 )|227 ;|-1
{|329 return|800 numberOfTrials|202 *|800 probabilityOfSuccess|227 ;|219 }|-1
if|214 (|207 !|800 ArithmeticUtils|235 .|802 isPowerOfTwo|214 (|800 n|215 )|215 )|218 {|320 throw|304 new|801 MathIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POWER_OF_TWO_PLUS_ONE|234 ,|800 Integer|235 .|802 valueOf|214 (|40 f.length|215 )|215 )|227 ;|219 }|-1
{|313 if|214 (|207 !|800 ArithmeticUtils|235 .|802 isPowerOfTwo|214 (|40 o.length|215 )|215 )|218 {|320 throw|304 new|801 MathIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING|234 ,|800 Integer|235 .|802 valueOf|214 (|40 o.length|215 )|215 )|227 ;|219 }|219 }|-1
{|313 if|214 (|207 !|800 ArithmeticUtils|235 .|802 isPowerOfTwo|214 (|40 d.length|215 )|215 )|218 {|320 throw|304 new|801 MathIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING|234 ,|800 Integer|235 .|802 valueOf|214 (|40 d.length|215 )|215 )|227 ;|219 }|219 }|-1
if|214 (|207 !|800 ArithmeticUtils|235 .|802 isPowerOfTwo|214 (|800 n|215 )|215 )|218 {|320 throw|304 new|801 MathIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POWER_OF_TWO|234 ,|800 Integer|235 .|802 valueOf|214 (|800 n|215 )|215 )|227 ;|219 }|-1
if|214 (|207 !|800 ArithmeticUtils|235 .|802 isPowerOfTwo|214 (|800 n|215 )|215 )|218 {|320 throw|304 new|801 MathIllegalArgumentException|214 (|40 LocalizedFormats.NOT_POWER_OF_TWO|234 ,|800 Integer|235 .|802 valueOf|214 (|800 n|215 )|215 )|227 ;|219 }|-1
final|39 double|85 []|800 data|204 =|800 FunctionUtils|235 .|802 sample|214 (|800 f|234 ,|800 min|234 ,|800 max|234 ,|800 n|215 )|227 ;|-1
final|39 double|85 []|800 data|204 =|800 FunctionUtils|235 .|802 sample|214 (|800 f|234 ,|800 min|234 ,|800 max|234 ,|800 n|215 )|227 ;|-1
{|83 final|39 double|85 []|800 data|204 =|800 FunctionUtils|235 .|802 sample|214 (|800 f|234 ,|800 min|234 ,|800 max|234 ,|800 n|215 )|227 ;|329 return|802 inverseTransform|214 (|800 data|215 )|227 ;|219 }|-1
{|83 final|39 double|85 []|800 data|204 =|800 FunctionUtils|235 .|802 sample|214 (|800 f|234 ,|800 min|234 ,|800 max|234 ,|800 n|215 )|227 ;|329 return|802 transform|214 (|800 data|215 )|227 ;|219 }|-1
final|39 double|85 []|800 unscaled|204 =|802 fht|214 (|800 FunctionUtils|235 .|802 sample|214 (|800 f|234 ,|800 min|234 ,|800 max|234 ,|800 n|215 )|215 )|227 ;|-1
{|329 return|802 fht|214 (|800 FunctionUtils|235 .|802 sample|214 (|800 f|234 ,|800 min|234 ,|800 max|234 ,|800 n|215 )|215 )|227 ;|219 }|-1
final|39 double|85 []|800 data|204 =|800 FunctionUtils|235 .|802 sample|214 (|800 f|234 ,|800 min|234 ,|800 max|234 ,|800 n|215 )|227 ;|-1
final|39 double|85 []|800 data|204 =|800 FunctionUtils|235 .|802 sample|214 (|800 f|234 ,|800 min|234 ,|800 max|234 ,|800 n|215 )|227 ;|-1
return|800 TransformUtils|235 .|802 scaleArray|214 (|802 fst|214 (|800 data|215 )|234 ,|800 s|215 )|227 ;|-1
return|800 TransformUtils|235 .|802 scaleArray|214 (|802 fst|214 (|800 f|215 )|234 ,|800 s|215 )|227 ;|-1
{|83 final|39 double|800 s|204 =|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|203 /|800 n|215 )|227 ;|329 return|800 TransformUtils|235 .|802 scaleArray|214 (|802 fst|214 (|800 data|215 )|234 ,|800 s|215 )|227 ;|219 }|-1
{|83 final|39 double|800 s|204 =|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|203 /|40 f.length|215 )|227 ;|329 return|800 TransformUtils|235 .|802 scaleArray|214 (|802 fst|214 (|800 f|215 )|234 ,|800 s|215 )|227 ;|219 }|-1
TransformUtils|235 .|802 scaleArray|214 (|800 x2|234 ,|34 NUMBER_CONSTANT|203 /|800 FastMath|235 .|802 sqrt|214 (|40 x2.length|215 )|215 )|227 ;|-1
return|800 TransformUtils|235 .|802 scaleArray|214 (|800 transformed|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
return|800 TransformUtils|235 .|802 scaleArray|214 (|802 fft|214 (|800 f|215 )|234 ,|800 s|215 )|227 ;|-1
return|800 TransformUtils|235 .|802 scaleArray|214 (|802 fft|214 (|800 data|234 ,|9 true|215 )|234 ,|800 s|215 )|227 ;|-1
return|800 TransformUtils|235 .|802 scaleArray|214 (|802 fft|214 (|800 f|234 ,|9 true|215 )|234 ,|800 s|215 )|227 ;|-1
{|83 final|39 double|800 s|204 =|34 NUMBER_CONSTANT|203 /|800 FastMath|235 .|802 sqrt|214 (|40 f.length|215 )|227 ;|329 return|800 TransformUtils|235 .|802 scaleArray|214 (|802 fft|214 (|800 f|215 )|234 ,|800 s|215 )|227 ;|219 }|-1
return|800 TransformUtils|235 .|802 scaleArray|214 (|802 fft|214 (|800 data|234 ,|9 false|215 )|234 ,|800 s|215 )|227 ;|-1
return|800 TransformUtils|235 .|802 scaleArray|214 (|802 fft|214 (|800 f|234 ,|9 false|215 )|234 ,|800 s|215 )|227 ;|-1
TransformUtils|235 .|802 scaleArray|214 (|800 x|234 ,|800 FastMath|235 .|802 sqrt|214 (|40 x.length|203 /|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
return|800 TransformUtils|235 .|802 scaleArray|214 (|802 fct|214 (|800 f|215 )|234 ,|800 s1|215 )|227 ;|-1
return|800 TransformUtils|235 .|802 scaleArray|214 (|802 fct|214 (|800 f|215 )|234 ,|800 s|215 )|227 ;|-1
return|800 TransformUtils|235 .|802 scaleArray|214 (|800 unscaled|234 ,|34 NUMBER_CONSTANT|203 /|800 n|215 )|227 ;|-1
{|329 return|800 TransformUtils|235 .|802 scaleArray|214 (|802 fht|214 (|800 f|215 )|234 ,|34 NUMBER_CONSTANT|203 /|40 f.length|215 )|227 ;|219 }|-1
{|303 for|214 (|39 double|800 diag|226 :|800 rDiag|215 )|218 {|313 if|214 (|800 FastMath|235 .|802 abs|214 (|800 diag|215 )|252 <=|800 threshold|215 )|218 {|329 return|9 false|227 ;|219 }|219 }|329 return|9 true|227 ;|219 }|-1
public|801 DecompositionSolver|802 getSolver|216 ()|218 {|329 return|304 new|801 Solver|214 (|800 qrt|234 ,|800 rDiag|234 ,|800 threshold|215 )|227 ;|219 }|-1
@|802 Test|214 (|800 expected|204 =|800 NumberIsTooLargeException|235 .|341 class|215 )|-1
final|801 UnivariateSolver|800 solver|-1
final|801 UnivariateSolver|800 solver|-1
UnivariateSolver|800 solver|204 =|304 new|801 MullerSolver|216 ()|227 ;|-1
UnivariateSolver|800 solver|204 =|304 new|801 MullerSolver|216 ()|227 ;|-1
UnivariateSolver|800 solver|204 =|304 new|801 MullerSolver|216 ()|227 ;|-1
UnivariateSolver|800 solver|204 =|304 new|801 MullerSolver|216 ()|227 ;|-1
UnivariateSolverUtils|235 .|802 verifyInterval|214 (|800 lower|234 ,|800 upper|215 )|227 ;|-1
{|329 return|349 super|235 .|802 solve|214 (|800 maxEval|234 ,|800 f|234 ,|800 UnivariateSolverUtils|235 .|802 midpoint|214 (|800 min|234 ,|800 max|215 )|215 )|227 ;|219 }|-1
final|801 UnivariateSolver|800 lineSearchSolver|-1
final|801 UnivariateSolver|800 lineSearchSolver|-1
UnivariateSolver|800 solver|204 =|304 new|801 RiddersSolver|216 ()|227 ;|-1
UnivariateSolver|800 solver|204 =|304 new|801 RiddersSolver|216 ()|227 ;|-1
UnivariateSolver|800 solver|204 =|304 new|801 RiddersSolver|216 ()|227 ;|-1
UnivariateSolver|800 solver|204 =|304 new|801 RiddersSolver|216 ()|227 ;|-1
UnivariateSolver|800 solver|204 =|304 new|801 BrentSolver|216 ()|227 ;|-1
UnivariateSolver|800 solver|204 =|304 new|801 BrentSolver|216 ()|227 ;|-1
UnivariateSolver|800 solver|204 =|304 new|801 MullerSolver2|216 ()|227 ;|-1
UnivariateSolver|800 solver|204 =|304 new|801 MullerSolver2|216 ()|227 ;|-1
UnivariateSolver|800 solver|204 =|304 new|801 MullerSolver2|216 ()|227 ;|-1
UnivariateSolver|800 solver|204 =|304 new|801 MullerSolver2|216 ()|227 ;|-1
double|800 x|204 =|800 UnivariateSolverUtils|235 .|802 solve|214 (|800 toSolve|234 ,|800 lowerBound|234 ,|800 upperBound|234 ,|802 getSolverAbsoluteAccuracy|216 ()|215 )|227 ;|-1
UnivariateSolver|800 solver|-1
UnivariateSolver|800 solver|204 =|802 getSolver|216 ()|227 ;|-1
UnivariateSolver|800 solver|204 =|802 getSolver|216 ()|227 ;|-1
UnivariateSolver|800 solver|204 =|802 getSolver|216 ()|227 ;|-1
UnivariateSolver|800 solver|204 =|802 getSolver|216 ()|227 ;|-1
UnivariateSolver|800 solver|204 =|802 getSolver|216 ()|227 ;|-1
UnivariateSolver|800 solver|204 =|802 getSolver|216 ()|227 ;|-1
UnivariateSolver|800 solver|204 =|802 getSolver|216 ()|227 ;|-1
UnivariateSolver|800 solver|204 =|802 getSolver|216 ()|227 ;|-1
final|801 UnivariateSolver|800 solver|204 =|304 new|801 RegulaFalsiSolver|216 ()|227 ;|-1
final|801 UnivariateSolver|800 solver|-1
final|39 int|800 populationLimit|-1
final|801 Chromosome|800 chromosome|-1
final|800 List|230 <|800 Chromosome|231 >|800 chromosomes|-1
final|39 int|800 arity|-1
final|801 Population|800 population|-1
final|801 Chromosome|800 original|-1
final|801 Chromosome|800 another|-1
final|801 Chromosome|800 another|-1
final|39 int|800 l|-1
final|800 List|230 <|800 Double|231 >|800 chromosomeRepresentation|-1
final|801 Chromosome|800 another|-1
final|800 List|230 <|800 T|231 >|800 sequence|-1
final|801 Double|85 []|800 representation|-1
final|801 Population|800 current|-1
final|801 RandomGenerator|800 random|-1
{|313 if|214 (|800 maxGenerations|252 <=|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 NumberIsTooSmallException|214 (|800 maxGenerations|234 ,|34 NUMBER_CONSTANT|234 ,|9 true|215 )|227 ;|219 }|315 this|235 .|800 maxGenerations|204 =|800 maxGenerations|227 ;|219 }|-1
if|214 (|800 elitismRate|230 <|34 NUMBER_CONSTANT|250 |||800 elitismRate|231 >|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 OutOfRangeException|214 (|40 LocalizedFormats.ELITISM_RATE|234 ,|800 elitismRate|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
partialDerivatives|204 =|304 new|801 BivariateFunction|221 [|221 [|221 [|34 NUMBER_CONSTANT|222 ]|221 [|800 lastI|222 ]|221 [|800 lastJ|222 ]|227 ;|-1
BivariateFunction|800 div|204 =|304 new|801 Divide|216 ()|227 ;|-1
BivariateFunction|800 bi|204 =|304 new|801 Add|216 ()|227 ;|-1
BivariateFunction|800 bi|204 =|304 new|801 Add|216 ()|227 ;|-1
final|801 BivariateFunction|800 f|-1
final|801 BivariateFunction|800 f|-1
final|801 BivariateFunction|800 combiner|-1
final|801 BivariateFunction|800 combiner|-1
final|801 BivariateFunction|800 combiner|-1
final|801 IterativeLinearSolverEvent|800 event|204 =|304 new|801 SymmLQEvent|214 (|315 this|234 ,|800 state|215 )|227 ;|-1
{|329 return|800 x|235 .|802 ebeDivide|214 (|800 diag|215 )|227 ;|219 }|-1
final|801 RealLinearOperator|800 m|204 =|800 JacobiPreconditioner|235 .|802 create|214 (|800 a|215 )|227 ;|-1
final|801 RealLinearOperator|800 m|204 =|800 JacobiPreconditioner|235 .|802 create|214 (|800 a|215 )|227 ;|-1
final|801 RealLinearOperator|800 m|204 =|800 JacobiPreconditioner|235 .|802 create|214 (|800 a|215 )|227 ;|-1
final|801 RealLinearOperator|800 m|204 =|800 JacobiPreconditioner|235 .|802 create|214 (|800 a|215 )|227 ;|-1
final|801 RealLinearOperator|800 m|204 =|800 JacobiPreconditioner|235 .|802 create|214 (|800 a|215 )|227 ;|-1
final|801 RealLinearOperator|800 m|204 =|800 JacobiPreconditioner|235 .|802 create|214 (|800 a|215 )|227 ;|-1
roots|235 .|802 computeOmega|214 (|40 f.length|215 )|227 ;|-1
roots|235 .|802 computeOmega|214 (|201 -|40 f.length|215 )|227 ;|-1
BivariateGridInterpolator|800 interpolator|204 =|304 new|801 SmoothingPolynomialBicubicSplineInterpolator|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
BivariateGridInterpolator|800 interpolator|204 =|304 new|801 SmoothingPolynomialBicubicSplineInterpolator|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
BivariateGridInterpolator|800 interpolator|204 =|304 new|801 SmoothingPolynomialBicubicSplineInterpolator|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
MultivariateInterpolator|800 interpolator|204 =|304 new|801 MicrosphereInterpolator|216 ()|227 ;|-1
MultivariateInterpolator|800 interpolator|204 =|304 new|801 MicrosphereInterpolator|216 ()|227 ;|-1
UnivariateInterpolator|800 i|204 =|304 new|801 LinearInterpolator|216 ()|227 ;|-1
UnivariateInterpolator|800 i|204 =|304 new|801 LinearInterpolator|216 ()|227 ;|-1
UnivariateInterpolator|800 i|204 =|304 new|801 LinearInterpolator|216 ()|227 ;|-1
UnivariateInterpolator|800 i|204 =|304 new|801 LinearInterpolator|216 ()|227 ;|-1
UnivariateInterpolator|800 interpolator|204 =|304 new|801 NevilleInterpolator|216 ()|227 ;|-1
UnivariateInterpolator|800 interpolator|204 =|304 new|801 NevilleInterpolator|216 ()|227 ;|-1
UnivariateInterpolator|800 interpolator|204 =|304 new|801 NevilleInterpolator|216 ()|227 ;|-1
BivariateGridInterpolator|800 interpolator|204 =|304 new|801 BicubicSplineInterpolator|216 ()|227 ;|-1
BivariateGridInterpolator|800 interpolator|204 =|304 new|801 BicubicSplineInterpolator|216 ()|227 ;|-1
BivariateGridInterpolator|800 interpolator|204 =|304 new|801 BicubicSplineInterpolator|216 ()|227 ;|-1
UnivariateInterpolator|800 interpolator|204 =|304 new|801 DividedDifferenceInterpolator|216 ()|227 ;|-1
UnivariateInterpolator|800 interpolator|204 =|304 new|801 DividedDifferenceInterpolator|216 ()|227 ;|-1
UnivariateInterpolator|800 interpolator|204 =|304 new|801 DividedDifferenceInterpolator|216 ()|227 ;|-1
TrivariateGridInterpolator|800 interpolator|204 =|304 new|801 TricubicSplineInterpolator|216 ()|227 ;|-1
TrivariateGridInterpolator|800 interpolator|204 =|304 new|801 TricubicSplineInterpolator|216 ()|227 ;|-1
TrivariateGridInterpolator|800 interpolator|204 =|304 new|801 TricubicSplineInterpolator|216 ()|227 ;|-1
UnivariateInterpolator|800 i|204 =|304 new|801 SplineInterpolator|216 ()|227 ;|-1
UnivariateInterpolator|800 i|204 =|304 new|801 SplineInterpolator|216 ()|227 ;|-1
UnivariateInterpolator|800 i|204 =|304 new|801 SplineInterpolator|216 ()|227 ;|-1
UnivariateInterpolator|800 i|204 =|304 new|801 SplineInterpolator|216 ()|227 ;|-1
UnivariateInterpolator|800 i|204 =|304 new|801 SplineInterpolator|216 ()|227 ;|-1
roots|235 .|802 computeRoots|214 (|40 f.length|215 )|227 ;|-1
roots|235 .|802 computeRoots|214 (|201 -|40 f.length|215 )|227 ;|-1
UnivariateIntegrator|800 integrator|204 =|304 new|801 TrapezoidIntegrator|216 ()|227 ;|-1
UnivariateIntegrator|800 integrator|204 =|304 new|801 TrapezoidIntegrator|216 ()|227 ;|-1
LegendreGaussIntegrator|800 integrator|204 =|304 new|801 LegendreGaussIntegrator|214 (|800 n|234 ,|40 BaseAbstractUnivariateIntegrator.DEFAULT_RELATIVE_ACCURACY|234 ,|40 BaseAbstractUnivariateIntegrator.DEFAULT_ABSOLUTE_ACCURACY|234 ,|40 BaseAbstractUnivariateIntegrator.DEFAULT_MIN_ITERATIONS_COUNT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UnivariateIntegrator|800 integrator|204 =|304 new|801 SimpsonIntegrator|216 ()|227 ;|-1
UnivariateIntegrator|800 integrator|204 =|304 new|801 SimpsonIntegrator|216 ()|227 ;|-1
UnivariateIntegrator|800 integrator|204 =|304 new|801 RombergIntegrator|216 ()|227 ;|-1
UnivariateIntegrator|800 integrator|204 =|304 new|801 RombergIntegrator|216 ()|227 ;|-1
final|801 BaseAbstractUnivariateIntegrator|800 baseIntegrator|-1
{|802 setSeed|214 (|800 seed|215 )|227 ;|219 }|-1
public|802 ISAACRandom|214 (|39 long|800 seed|215 )|218 {|802 setSeed|214 (|800 seed|215 )|227 ;|219 }|-1
{|313 if|214 (|800 incMoment|215 )|218 {|800 moment|235 .|802 increment|214 (|800 d|215 )|227 ;|219 }|322 else|218 {|320 throw|304 new|801 MathIllegalStateException|214 (|40 LocalizedFormats.CANNOT_INCREMENT_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS|215 )|227 ;|219 }|219 }|-1
final|39 double|800 fact2|204 =|800 n|203 /|214 (|800 n|201 -|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|39 double|800 fact2|204 =|800 n|203 /|214 (|34 NUMBER_CONSTANT|200 +|800 n|215 )|227 ;|-1
public|39 void|802 init|214 (|39 double|800 t0|234 ,|39 double|85 []|800 y0|234 ,|39 double|800 time|215 )|220 {}|-1
try|218 {|800 t|235 .|802 transform|214 (|800 input|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 e|215 )|220 {}|-1
catch|214 (|801 MathIllegalArgumentException|800 e|215 )|218 {|800 e|235 .|802 printStackTrace|216 ()|227 ;|219 }|-1
if|214 (|214 (|800 nvars|200 +|34 NUMBER_CONSTANT|215 )|202 *|800 nobs|242 !=|40 data.length|215 )|218 {|320 throw|304 new|801 MathIllegalArgumentException|214 (|40 LocalizedFormats.INVALID_REGRESSION_ARRAY|234 ,|40 data.length|234 ,|800 nobs|234 ,|800 nvars|215 )|227 ;|219 }|-1
empiricalDistribution|204 =|304 new|801 EmpiricalDistribution|214 (|800 binCount|234 ,|800 randomData|215 )|227 ;|-1
{|802 computeDistribution|214 (|40 EmpiricalDistribution.DEFAULT_BIN_COUNT|215 )|227 ;|219 }|-1
EmpiricalDistribution|800 dist|204 =|304 new|801 EmpiricalDistribution|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|304 new|801 EmpiricalDistribution|216 ()|235 .|802 load|214 (|214 (|800 File|215 )|500 null|215 )|227 ;|219 }|-1
{|304 new|801 EmpiricalDistribution|216 ()|235 .|802 load|214 (|214 (|800 URL|215 )|500 null|215 )|227 ;|219 }|-1
{|304 new|801 EmpiricalDistribution|216 ()|235 .|802 load|214 (|214 (|39 double|85 []|215 )|500 null|215 )|227 ;|219 }|-1
EmpiricalDistribution|800 dist|204 =|304 new|801 EmpiricalDistribution|216 ()|227 ;|-1
new|801 EmpiricalDistribution|216 ()|235 .|802 load|214 (|800 x|215 )|227 ;|-1
dataRI|204 =|304 new|39 double|85 []|85 []|218 {|800 MathArrays|235 .|802 copyOf|214 (|800 f|234 ,|40 f.length|215 )|234 ,|304 new|39 double|221 [|40 f.length|222 ]|219 }|-1
dataRI|204 =|304 new|39 double|85 []|85 []|218 {|800 MathArrays|235 .|802 copyOf|214 (|800 f|234 ,|40 f.length|215 )|234 ,|304 new|39 double|221 [|40 f.length|222 ]|219 }|-1
final|800 Collection|230 <|39 double|85 []|231 >|800 categoryData|-1
final|800 Collection|230 <|39 double|85 []|231 >|800 categoryData|-1
final|800 Collection|230 <|39 double|85 []|231 >|800 categoryData|-1
final|39 boolean|800 exactPValue|-1
double|801 dResult|85 []|204 =|800 transformer|235 .|802 transform|214 (|800 dY|234 ,|40 TransformType.INVERSE|215 )|227 ;|-1
double|801 dResult|85 []|204 =|800 transformer|235 .|802 transform|214 (|800 dX|234 ,|40 TransformType.FORWARD|215 )|227 ;|-1
protected|802 BaseAbstractMultivariateSimpleBoundsOptimizer|214 (|800 ConvergenceChecker|230 <|800 PointValuePair|231 >|800 checker|215 )|218 {|349 super|214 (|800 checker|215 )|227 ;|219 }|-1
UnivariatePointValuePair|85 []|800 optima|204 =|800 optimizer|235 .|802 getOptima|216 ()|227 ;|-1
public|802 SimplexOptimizer|214 (|800 ConvergenceChecker|230 <|800 PointValuePair|231 >|800 checker|215 )|218 {|349 super|214 (|800 checker|215 )|227 ;|219 }|-1
PointValuePair|800 expected|-1
protected|802 AbstractScalarDifferentiableOptimizer|214 (|800 ConvergenceChecker|230 <|800 PointValuePair|231 >|800 checker|215 )|218 {|349 super|214 (|800 checker|215 )|227 ;|219 }|-1
ConvergenceChecker|230 <|800 PointValuePair|231 >|800 checker|-1
ConvergenceChecker|230 <|800 UnivariatePointValuePair|231 >|800 checker|-1
ConvergenceChecker|230 <|800 PointValuePair|231 >|800 checker|-1
ConvergenceChecker|230 <|800 UnivariatePointValuePair|231 >|800 checker|-1
ConvergenceChecker|230 <|800 PointValuePair|231 >|800 checker|-1
ConvergenceChecker|230 <|800 PointValuePair|231 >|800 checker|-1
ConvergenceChecker|230 <|800 PointValuePair|231 >|800 checker|-1
ConvergenceChecker|230 <|800 PointValuePair|231 >|800 checker|-1
PointValuePair|85 []|800 points|-1
PointValuePair|800 point|-1
final|800 Comparator|230 <|800 PointValuePair|231 >|800 comparator|-1
ChiSquareTest|800 chiSquareTest|204 =|304 new|801 ChiSquareTest|216 ()|227 ;|-1
org.apache.commons.math.stat.inference.ChiSquareTest|800 csti|204 =|304 new|40 org.apache.commons.math.stat.inference.ChiSquareTest|216 ()|227 ;|-1
org.apache.commons.math.stat.inference.ChiSquareTest|800 csti|204 =|304 new|40 org.apache.commons.math.stat.inference.ChiSquareTest|216 ()|227 ;|-1
ChiSquareTest|800 chiSquareTest|204 =|304 new|801 ChiSquareTest|216 ()|227 ;|-1
PointVectorValuePair|800 optimum|-1
ConvergenceChecker|230 <|800 PointVectorValuePair|231 >|800 checker|-1
ConvergenceChecker|230 <|800 PointVectorValuePair|231 >|800 checker|-1
ConvergenceChecker|230 <|800 PointVectorValuePair|231 >|800 checker|-1
ConvergenceChecker|230 <|800 PointVectorValuePair|231 >|800 checker|-1
ConvergenceChecker|230 <|800 PointVectorValuePair|231 >|800 checker|-1
protected|802 AbstractLeastSquaresOptimizer|214 (|800 ConvergenceChecker|230 <|800 PointVectorValuePair|231 >|800 checker|215 )|218 {|349 super|214 (|800 checker|215 )|227 ;|219 }|-1
SimplexOptimizer|800 optimizer|204 =|304 new|801 SimplexOptimizer|214 (|304 new|801 SimplePointChecker|230 <|800 PointValuePair|231 >|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
SimplexOptimizer|800 underlying|204 =|304 new|801 SimplexOptimizer|214 (|304 new|801 SimpleValueChecker|214 (|201 -|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
NonLinearConjugateGradientOptimizer|800 optimizer|204 =|304 new|801 NonLinearConjugateGradientOptimizer|214 (|40 ConjugateGradientFormula.POLAK_RIBIERE|234 ,|304 new|801 SimpleValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|234 ,|304 new|801 BrentSolver|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
NonLinearConjugateGradientOptimizer|800 optimizer|204 =|304 new|801 NonLinearConjugateGradientOptimizer|214 (|40 ConjugateGradientFormula.POLAK_RIBIERE|234 ,|304 new|801 SimpleValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
NonLinearConjugateGradientOptimizer|800 optimizer|204 =|304 new|801 NonLinearConjugateGradientOptimizer|214 (|40 ConjugateGradientFormula.POLAK_RIBIERE|234 ,|304 new|801 SimpleValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
NonLinearConjugateGradientOptimizer|800 optimizer|204 =|304 new|801 NonLinearConjugateGradientOptimizer|214 (|40 ConjugateGradientFormula.POLAK_RIBIERE|234 ,|304 new|801 SimpleValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
NonLinearConjugateGradientOptimizer|800 optimizer|204 =|304 new|801 NonLinearConjugateGradientOptimizer|214 (|40 ConjugateGradientFormula.POLAK_RIBIERE|234 ,|304 new|801 SimpleValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
NonLinearConjugateGradientOptimizer|800 optimizer|204 =|304 new|801 NonLinearConjugateGradientOptimizer|214 (|40 ConjugateGradientFormula.POLAK_RIBIERE|234 ,|304 new|801 SimpleValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|234 ,|304 new|801 BrentSolver|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
NonLinearConjugateGradientOptimizer|800 optimizer|204 =|304 new|801 NonLinearConjugateGradientOptimizer|214 (|40 ConjugateGradientFormula.POLAK_RIBIERE|234 ,|304 new|801 SimpleValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
NonLinearConjugateGradientOptimizer|800 optimizer|204 =|304 new|801 NonLinearConjugateGradientOptimizer|214 (|40 ConjugateGradientFormula.POLAK_RIBIERE|234 ,|304 new|801 SimpleValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|234 ,|304 new|801 BrentSolver|216 ()|234 ,|800 preconditioner|215 )|227 ;|-1
NonLinearConjugateGradientOptimizer|800 optimizer|204 =|304 new|801 NonLinearConjugateGradientOptimizer|214 (|40 ConjugateGradientFormula.POLAK_RIBIERE|234 ,|304 new|801 SimpleValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
NonLinearConjugateGradientOptimizer|800 optimizer|204 =|304 new|801 NonLinearConjugateGradientOptimizer|214 (|40 ConjugateGradientFormula.POLAK_RIBIERE|234 ,|304 new|801 SimpleValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
NonLinearConjugateGradientOptimizer|800 optimizer|204 =|304 new|801 NonLinearConjugateGradientOptimizer|214 (|40 ConjugateGradientFormula.POLAK_RIBIERE|234 ,|304 new|801 SimpleValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
NonLinearConjugateGradientOptimizer|800 optimizer|204 =|304 new|801 NonLinearConjugateGradientOptimizer|214 (|40 ConjugateGradientFormula.POLAK_RIBIERE|234 ,|304 new|801 SimpleValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
SimplexOptimizer|800 optimizer|204 =|304 new|801 SimplexOptimizer|214 (|304 new|801 SimpleValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
NonLinearConjugateGradientOptimizer|800 underlying|204 =|304 new|801 NonLinearConjugateGradientOptimizer|214 (|40 ConjugateGradientFormula.POLAK_RIBIERE|234 ,|304 new|801 SimpleValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
{|315 this|214 (|800 lambda|234 ,|800 inputSigma|234 ,|800 boundaries|234 ,|800 maxIterations|234 ,|800 stopFitness|234 ,|800 isActiveCMA|234 ,|800 diagonalOnly|234 ,|800 checkFeasableCount|234 ,|800 random|234 ,|800 generateStatistics|234 ,|304 new|801 SimpleValueChecker|216 ()|215 )|227 ;|219 }|-1
{|315 this|214 (|304 new|801 SimpleValueChecker|214 (|800 rel|234 ,|800 abs|215 )|215 )|227 ;|219 }|-1
DifferentiableMultivariateVectorOptimizer|800 underlyingOptimizer|204 =|304 new|801 GaussNewtonOptimizer|214 (|9 true|234 ,|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
DifferentiableMultivariateVectorOptimizer|800 underlyingOptimizer|204 =|304 new|801 GaussNewtonOptimizer|214 (|9 true|234 ,|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
GaussNewtonOptimizer|800 optimizer|204 =|304 new|801 GaussNewtonOptimizer|214 (|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
GaussNewtonOptimizer|800 optimizer|204 =|304 new|801 GaussNewtonOptimizer|214 (|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
GaussNewtonOptimizer|800 optimizer|204 =|304 new|801 GaussNewtonOptimizer|214 (|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
GaussNewtonOptimizer|800 optimizer|204 =|304 new|801 GaussNewtonOptimizer|214 (|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
GaussNewtonOptimizer|800 optimizer|204 =|304 new|801 GaussNewtonOptimizer|214 (|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
GaussNewtonOptimizer|800 optimizer|204 =|304 new|801 GaussNewtonOptimizer|214 (|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
GaussNewtonOptimizer|800 optimizer|204 =|304 new|801 GaussNewtonOptimizer|214 (|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
GaussNewtonOptimizer|800 optimizer|204 =|304 new|801 GaussNewtonOptimizer|214 (|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
GaussNewtonOptimizer|800 optimizer|204 =|304 new|801 GaussNewtonOptimizer|214 (|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
GaussNewtonOptimizer|800 optimizer|204 =|304 new|801 GaussNewtonOptimizer|214 (|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
GaussNewtonOptimizer|800 optimizer|204 =|304 new|801 GaussNewtonOptimizer|214 (|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
GaussNewtonOptimizer|800 optimizer|204 =|304 new|801 GaussNewtonOptimizer|214 (|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
GaussNewtonOptimizer|800 optimizer|204 =|304 new|801 GaussNewtonOptimizer|214 (|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
GaussNewtonOptimizer|800 optimizer|204 =|304 new|801 GaussNewtonOptimizer|214 (|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
GaussNewtonOptimizer|800 optimizer|204 =|304 new|801 GaussNewtonOptimizer|214 (|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
GaussNewtonOptimizer|800 optimizer|204 =|304 new|801 GaussNewtonOptimizer|214 (|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
GaussNewtonOptimizer|800 optimizer|204 =|304 new|801 GaussNewtonOptimizer|214 (|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
LevenbergMarquardtOptimizer|800 optimizer|204 =|304 new|801 LevenbergMarquardtOptimizer|214 (|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
{|320 throw|304 new|801 MathUnsupportedOperationException|216 ()|227 ;|219 }|-1
FastSineTransformer|800 transformer|204 =|304 new|800 FastSineTransformer|214 (|40 DstNormalization.STANDARD_DST_I|215 )|227 ;|-1
FastSineTransformer|800 transformer|204 =|304 new|800 FastSineTransformer|214 (|40 DstNormalization.STANDARD_DST_I|215 )|227 ;|-1
{|320 throw|304 new|801 NumberIsTooSmallException|214 (|40 LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION|234 ,|800 FastMath|235 .|802 abs|214 (|800 h|215 )|234 ,|800 minStep|234 ,|9 true|215 )|227 ;|219 }|-1
if|214 (|800 variablesToInclude|236 ==|500 null|250 |||40 variablesToInclude.length|236 ==|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 MathIllegalArgumentException|214 (|40 LocalizedFormats.ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED|215 )|227 ;|219 }|-1
UnivariateOptimizer|800 optimizer|204 =|304 new|801 BrentOptimizer|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UnivariateOptimizer|800 optimizer|204 =|304 new|801 BrentOptimizer|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UnivariateOptimizer|800 optimizer|204 =|304 new|801 BrentOptimizer|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UnivariateOptimizer|800 optimizer|204 =|304 new|801 BrentOptimizer|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UnivariateOptimizer|800 optimizer|204 =|304 new|801 BrentOptimizer|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UnivariateOptimizer|800 underlying|204 =|304 new|801 BrentOptimizer|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UnivariateOptimizer|800 underlying|204 =|304 new|801 BrentOptimizer|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UnivariateOptimizer|800 underlying|204 =|304 new|801 BrentOptimizer|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
static|39 double|85 []|85 []|802 loadLnMant|216 ()|218 {|329 return|800 LN_MANT|227 ;|219 }|-1
static|39 double|85 []|802 loadExpFracB|216 ()|218 {|329 return|800 EXP_FRAC_B|227 ;|219 }|-1
static|39 double|85 []|802 loadExpFracA|216 ()|218 {|329 return|800 EXP_FRAC_A|227 ;|219 }|-1
static|39 double|85 []|802 loadExpIntB|216 ()|218 {|329 return|800 EXP_INT_B|227 ;|219 }|-1
static|39 double|85 []|802 loadExpIntA|216 ()|218 {|329 return|800 EXP_INT_A|227 ;|219 }|-1
@|802 Test|214 (|800 expected|204 =|800 DimensionMismatchException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 DimensionMismatchException|235 .|341 class|215 )|-1
StringBuffer|800 imAppendTo|227 ;|-1
{|313 if|214 (|315 this|235 .|800 fitness|236 ==|800 NO_FITNESS|215 )|218 {|315 this|235 .|800 fitness|204 =|800 fitness|216 ()|227 ;|219 }|329 return|315 this|235 .|800 fitness|227 ;|219 }|-1
setControlFactors|214 (|201 -|34 NUMBER_CONSTANT|234 ,|201 -|34 NUMBER_CONSTANT|234 ,|201 -|34 NUMBER_CONSTANT|234 ,|201 -|34 NUMBER_CONSTANT|215 )|227 ;|-1
setControlFactors|214 (|201 -|34 NUMBER_CONSTANT|234 ,|201 -|34 NUMBER_CONSTANT|234 ,|201 -|34 NUMBER_CONSTANT|234 ,|201 -|34 NUMBER_CONSTANT|215 )|227 ;|-1
(|800 n|202 *|214 (|800 n|200 +|34 NUMBER_CONSTANT|215 )|202 *|800 moment|235 .|802 getResult|216 ()|201 -|34 NUMBER_CONSTANT|202 *|40 moment.m2|202 *|40 moment.m2|202 *|214 (|800 n|201 -|34 NUMBER_CONSTANT|215 )|215 )|-1
double|85 []|800 hatResiduals|204 =|800 I|235 .|802 subtract|214 (|800 hat|215 )|235 .|802 operate|214 (|800 model|235 .|802 getY|216 ()|215 )|235 .|802 toArray|216 ()|227 ;|-1
{|801 RealVector|800 b|204 =|802 calculateBeta|216 ()|227 ;|329 return|800 yVector|235 .|802 subtract|214 (|800 xMatrix|235 .|802 operate|214 (|800 b|215 )|215 )|227 ;|219 }|-1
return|800 residuals|235 .|802 dotProduct|214 (|800 residuals|215 )|203 /|214 (|800 xMatrix|235 .|802 getRowDimension|216 ()|201 -|800 xMatrix|235 .|802 getColumnDimension|216 ()|215 )|227 ;|-1
RealVector|800 e|204 =|800 yVector|235 .|802 subtract|214 (|800 xMatrix|235 .|802 operate|214 (|800 b|215 )|215 )|227 ;|-1
this|235 .|800 yVector|204 =|304 new|801 ArrayRealVector|214 (|800 y|215 )|227 ;|-1
return|800 t|203 /|214 (|802 getX|216 ()|235 .|802 getRowDimension|216 ()|201 -|802 getX|216 ()|235 .|802 getColumnDimension|216 ()|215 )|227 ;|-1
int|800 p|204 =|802 getX|216 ()|235 .|802 getColumnDimension|216 ()|227 ;|-1
{|329 return|800 qr|235 .|802 getSolver|216 ()|235 .|802 solve|214 (|802 getY|216 ()|215 )|227 ;|219 }|-1
{|349 super|235 .|802 newXSampleData|214 (|800 x|215 )|227 ;|800 qr|204 =|304 new|801 QRDecomposition|214 (|802 getX|216 ()|215 )|227 ;|219 }|-1
{|349 super|235 .|802 newSampleData|214 (|800 data|234 ,|800 nobs|234 ,|800 nvars|215 )|227 ;|800 qr|204 =|304 new|801 QRDecomposition|214 (|802 getX|216 ()|215 )|227 ;|219 }|-1
final|801 RealMatrix|800 x|204 =|800 ols|235 .|802 getX|216 ()|235 .|802 copy|216 ()|227 ;|-1
final|39 int|800 length|204 =|800 b|235 .|802 getDimension|216 ()|227 ;|-1
final|39 double|800 epsa|204 =|214 (|800 s|200 +|800 MACH_PREC|215 )|202 *|800 CBRT_MACH_PREC|227 ;|-1
@|800 Override|83 public|800 RealVector|802 getRightHandSideVector|216 ()|218 {|329 return|800 RealVector|235 .|802 unmodifiableRealVector|214 (|800 state|235 .|802 getRightHandSideVector|216 ()|215 )|227 ;|219 }|-1
this|235 .|800 xL|235 .|802 set|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
this|235 .|800 xL|204 =|800 x|227 ;|-1
solver|204 =|304 new|801 SymmLQ|214 (|800 maxIterations|234 ,|34 NUMBER_CONSTANT|234 ,|9 true|215 )|227 ;|-1
solver|204 =|304 new|801 SymmLQ|214 (|800 maxIterations|234 ,|34 NUMBER_CONSTANT|234 ,|9 true|215 )|227 ;|-1
double|85 []|800 array|-1
final|39 double|85 []|85 []|800 householderMatrix|-1
{|315 this|214 (|800 k|234 ,|800 v|234 ,|9 false|215 )|227 ;|219 }|-1
{|315 this|214 (|800 entry|235 .|802 getKey|216 ()|234 ,|800 entry|235 .|802 getValue|216 ()|215 )|227 ;|219 }|-1
{|800 key|204 =|800 k|227 ;|800 value|204 =|800 v|227 ;|219 }|-1
throw|304 new|801 MathInternalError|216 ()|227 ;|-1
throw|304 new|801 MathInternalError|216 ()|227 ;|-1
if|214 (|800 x|252 <=|34 NUMBER_CONSTANT|215 )|218 {|800 ret|204 =|34 NUMBER_CONSTANT|227 ;|219 }|322 else|218 {|800 ret|204 =|800 Gamma|235 .|802 regularizedGammaP|214 (|800 shape|234 ,|800 x|203 /|800 scale|215 )|227 ;|219 }|-1
{|329 return|800 shape|202 *|800 scale|227 ;|219 }|-1
v|235 .|802 walkInOptimizedOrder|214 (|800 visitor|234 ,|800 expectedStart|234 ,|800 expectedEnd|215 )|227 ;|-1
{|800 ret|204 =|802 innerCumulativeProbability|214 (|801 domain|221 [|34 NUMBER_CONSTANT|222 ]|234 ,|800 x|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|800 tree|235 .|802 visit|214 (|304 new|801 BoundaryBuilder|230 <|800 S|231 >|216 ()|215 )|227 ;|219 }|-1
SimplexOptimizer|800 optimizer|204 =|304 new|801 SimplexOptimizer|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
@|800 Override|83 public|801 RealVector|802 create|214 (|83 final|39 double|85 []|800 data|215 )|218 {|329 return|304 new|801 TestVectorImpl|214 (|800 data|215 )|227 ;|219 }|-1
TestVectorImpl|214 (|39 double|85 []|800 values|215 )|218 {|315 this|235 .|800 values|204 =|800 MathArrays|235 .|802 copyOf|214 (|800 values|215 )|227 ;|219 }|-1
catch|214 (|801 MathArithmeticException|800 e|215 )|220 {}|-1
T|800 f|-1
T|800 f|-1
final|39 long|800 n1n2prod|204 =|214 (|39 long|215 )|800 n1|202 *|800 n2|227 ;|-1
{|802 create|214 (|304 new|39 double|221 [|34 NUMBER_CONSTANT|222 ]|215 )|235 .|802 addToEntry|214 (|201 -|34 NUMBER_CONSTANT|234 ,|802 getPreferredEntryValue|216 ()|215 )|227 ;|219 }|-1
{|802 create|214 (|304 new|39 double|221 [|34 NUMBER_CONSTANT|222 ]|215 )|235 .|802 setEntry|214 (|201 -|34 NUMBER_CONSTANT|234 ,|802 getPreferredEntryValue|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|801 RealVector|802 createAlien|214 (|83 final|39 double|85 []|800 data|215 )|218 {|329 return|304 new|801 RealVectorTestImpl|214 (|800 data|215 )|227 ;|219 }|-1
final|801 RealVector|800 x|204 =|304 new|801 RealVectorTestImpl|214 (|800 v|235 .|802 clone|216 ()|215 )|227 ;|-1
@|800 Override|83 public|801 RealVector|802 createAlien|214 (|39 double|85 []|800 data|215 )|218 {|329 return|304 new|801 RealVectorTestImpl|214 (|800 data|215 )|227 ;|219 }|-1
@|800 Override|83 public|801 RealVector|802 create|214 (|83 final|39 double|85 []|800 data|215 )|218 {|329 return|304 new|801 RealVectorTestImpl|214 (|800 data|215 )|227 ;|219 }|-1
RealVectorTestImpl|800 v7_i|204 =|304 new|801 RealVectorTestImpl|214 (|800 vec1|215 )|227 ;|-1
@|800 Override|83 public|801 RealVector|802 createAlien|214 (|39 double|85 []|800 data|215 )|218 {|329 return|304 new|801 RealVectorTestImpl|214 (|800 data|215 )|227 ;|219 }|-1
Assert|235 .|802 assertEquals|214 (|801 dataU|221 [|800 i|222 ]|200 +|45 STRING_CONSTANT|200 +|801 dataV|221 [|800 j|222 ]|234 ,|800 expected|234 ,|800 actual|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
private|802 ComplexUtils|216 ()|220 {}|-1
Object|800 other|-1
final|39 int|800 n|204 =|40 coefficients.length|201 -|34 NUMBER_CONSTANT|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 indefinite|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 distinct|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 repeated|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 m|215 )|227 ;|-1
RealMatrix|800 v|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|215 )|235 .|802 getV|216 ()|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 symmetric|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|802 createTestMatrix|214 (|800 r|234 ,|800 bigValues|215 )|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 t|235 .|802 getMainDiagonalRef|216 ()|234 ,|800 t|235 .|802 getSecondaryDiagonalRef|216 ()|215 )|227 ;|-1
decomposition|204 =|304 new|801 EigenDecomposition|214 (|800 mainTridiagonal|234 ,|800 secondaryTridiagonal|215 )|227 ;|-1
decomposition|204 =|304 new|801 EigenDecomposition|214 (|800 mainTridiagonal|234 ,|800 secondaryTridiagonal|215 )|227 ;|-1
decomposition|204 =|304 new|801 EigenDecomposition|214 (|800 mainTridiagonal|234 ,|800 secondaryTridiagonal|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|215 )|227 ;|-1
ed|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|215 )|227 ;|-1
{|329 return|214 (|39 int|215 )|800 FastMath|235 .|802 min|214 (|802 nextPoisson|214 (|800 mean|215 )|234 ,|40 Integer.MAX_VALUE|215 )|227 ;|219 }|-1
{|83 final|39 double|800 n|204 =|800 random|235 .|802 nextGaussian|216 ()|227 ;|329 return|800 FastMath|235 .|802 exp|214 (|800 scale|200 +|800 shape|202 *|800 n|215 )|227 ;|219 }|-1
EigenDecomposition|800 eig|204 =|304 new|801 EigenDecomposition|214 (|800 C|215 )|227 ;|-1
BaseRuleFactory|230 <|233 ?|332 extends|800 Number|231 >|800 factory|-1
final|801 GaussIntegrator|800 g|204 =|800 FACTORY|235 .|802 legendreHighPrecision|214 (|800 numberOfPoints|234 ,|800 a|234 ,|800 b|215 )|227 ;|-1
{|315 this|214 (|800 DEFAULT_PREFIX|234 ,|800 DEFAULT_SUFFIX|234 ,|800 DEFAULT_ROW_PREFIX|234 ,|800 DEFAULT_ROW_SUFFIX|234 ,|800 DEFAULT_ROW_SEPARATOR|234 ,|800 DEFAULT_COLUMN_SEPARATOR|234 ,|800 format|215 )|227 ;|219 }|-1
public|802 RealMatrixFormat|216 ()|218 {|315 this|214 (|800 DEFAULT_PREFIX|234 ,|800 DEFAULT_SUFFIX|234 ,|800 DEFAULT_ROW_PREFIX|234 ,|800 DEFAULT_ROW_SUFFIX|234 ,|800 DEFAULT_ROW_SEPARATOR|234 ,|800 DEFAULT_COLUMN_SEPARATOR|234 ,|800 CompositeFormat|235 .|802 getDefaultNumberFormat|216 ()|215 )|227 ;|219 }|-1
DecompositionSolver|800 es|204 =|304 new|801 EigenDecomposition|214 (|800 m|215 )|235 .|802 getSolver|216 ()|227 ;|-1
DecompositionSolver|800 es|204 =|304 new|801 EigenDecomposition|214 (|800 matrix|215 )|235 .|802 getSolver|216 ()|227 ;|-1
DecompositionSolver|800 es|204 =|304 new|801 EigenDecomposition|214 (|800 m|215 )|235 .|802 getSolver|216 ()|227 ;|-1
DecompositionSolver|800 es|204 =|304 new|801 EigenDecomposition|214 (|800 m|215 )|235 .|802 getSolver|216 ()|227 ;|-1
{|83 final|39 double|800 multiplier|204 =|800 tableau|235 .|802 getEntry|214 (|800 i|234 ,|800 pivotCol|215 )|227 ;|800 tableau|235 .|802 subtractRow|214 (|800 i|234 ,|800 pivotRow|234 ,|800 multiplier|215 )|227 ;|219 }|-1
if|214 (|800 entry|230 <|800 minValue|215 )|218 {|800 minValue|204 =|800 entry|227 ;|800 minPos|204 =|800 i|227 ;|219 }|-1
if|214 (|800 p|230 <|34 NUMBER_CONSTANT|215 )|218 {|800 s|204 =|201 -|800 s|227 ;|219 }|-1
catch|214 (|801 Exception|800 e|215 )|218 {|320 throw|304 new|801 MathIllegalStateException|214 (|40 LocalizedFormats.SIMPLE_MESSAGE|234 ,|800 e|235 .|802 getMessage|216 ()|215 )|227 ;|219 }|-1
{|313 if|214 (|207 !|800 Precision|235 .|802 equals|214 (|801 imagEigenvalues|221 [|800 i|222 ]|234 ,|34 NUMBER_CONSTANT|234 ,|800 EPSILON|215 )|215 )|218 {|329 return|9 true|227 ;|219 }|219 }|-1
Assert|235 .|802 assertNull|214 (|45 STRING_CONSTANT|200 +|800 source|200 +|45 STRING_CONSTANT|234 ,|800 realMatrixFormat|235 .|802 parse|214 (|800 source|234 ,|800 pos|215 )|215 )|227 ;|-1
Assert|235 .|802 assertNull|214 (|45 STRING_CONSTANT|200 +|800 source|200 +|45 STRING_CONSTANT|234 ,|800 realMatrixFormat|235 .|802 parse|214 (|800 source|234 ,|800 pos|215 )|215 )|227 ;|-1
Assert|235 .|802 assertNull|214 (|45 STRING_CONSTANT|200 +|800 source|200 +|45 STRING_CONSTANT|234 ,|800 realMatrixFormat|235 .|802 parse|214 (|800 source|234 ,|800 pos|215 )|215 )|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Expm1|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Expm1|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Expm1|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Expm1|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
DifferentiableUnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Expm1|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
final|801 UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
UnivariateFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
{|800 delegate|235 .|802 setSecureAlgorithm|214 (|800 algorithm|234 ,|800 provider|215 )|227 ;|219 }|-1
{|329 return|800 delegate|235 .|802 nextZipf|214 (|800 numberOfElements|234 ,|800 exponent|215 )|227 ;|219 }|-1
{|329 return|800 delegate|235 .|802 nextWeibull|214 (|800 shape|234 ,|800 scale|215 )|227 ;|219 }|-1
{|329 return|800 delegate|235 .|802 nextT|214 (|800 df|215 )|227 ;|219 }|-1
{|329 return|800 delegate|235 .|802 nextPascal|214 (|800 r|234 ,|800 p|215 )|227 ;|219 }|-1
{|329 return|800 delegate|235 .|802 nextHypergeometric|214 (|800 populationSize|234 ,|800 numberOfSuccesses|234 ,|800 sampleSize|215 )|227 ;|219 }|-1
{|329 return|800 delegate|235 .|802 nextF|214 (|800 numeratorDf|234 ,|800 denominatorDf|215 )|227 ;|219 }|-1
{|329 return|800 delegate|235 .|802 nextChiSquare|214 (|800 df|215 )|227 ;|219 }|-1
{|329 return|800 delegate|235 .|802 nextCauchy|214 (|800 median|234 ,|800 scale|215 )|227 ;|219 }|-1
{|329 return|800 delegate|235 .|802 nextBinomial|214 (|800 numberOfTrials|234 ,|800 probabilityOfSuccess|215 )|227 ;|219 }|-1
{|329 return|800 delegate|235 .|802 nextBeta|214 (|800 alpha|234 ,|800 beta|215 )|227 ;|219 }|-1
{|329 return|800 delegate|235 .|802 nextUniform|214 (|800 lower|234 ,|800 upper|215 )|227 ;|219 }|-1
{|800 delegate|204 =|304 new|801 RandomDataGenerator|214 (|800 rand|215 )|227 ;|219 }|-1
double|800 dotProduct|204 =|304 new|801 IterativeLegendreGaussIntegrator|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|235 .|802 integrate|214 (|34 NUMBER_CONSTANT|234 ,|800 f|234 ,|800 a|234 ,|800 b|215 )|227 ;|-1
FastMath|235 .|802 exp|214 (|802 logGamma|214 (|800 shape|215 )|215 )|-1
@|800 Override|83 public|39 int|802 hashCode|216 ()|218 {|320 throw|304 new|801 MathUnsupportedOperationException|216 ()|227 ;|219 }|-1
{|320 throw|304 new|801 MathUnsupportedOperationException|216 ()|227 ;|219 }|-1
final|39 double|800 x|204 =|800 randomData|235 .|802 nextUniform|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
fillBinStats|214 (|304 new|801 StreamDataAdapter|214 (|800 in|215 )|215 )|227 ;|-1
final|801 UnivariateDifferentiableFunction|800 sPrime|204 =|304 new|801 Sqrt|216 ()|227 ;|-1
final|801 UnivariateDifferentiableFunction|800 f|204 =|304 new|801 QuinticFunction|216 ()|227 ;|-1
UnivariateDifferentiableFunction|800 f|204 =|304 new|801 Sin|216 ()|227 ;|-1
final|801 UnivariateDifferentiableFunction|800 f|-1
final|801 UnivariateDifferentiableFunction|800 f|-1
UnivariateDifferentiableFunction|800 f|-1
final|801 UnivariateDifferentiableFunction|800 q|204 =|304 new|801 QuinticFunction|216 ()|227 ;|-1
catch|214 (|83 final|801 MathArithmeticException|800 e|215 )|218 {|320 throw|304 new|801 MathArithmeticException|214 (|40 LocalizedFormats.INDEX|234 ,|800 i|215 )|227 ;|219 }|-1
catch|214 (|83 final|801 MathArithmeticException|800 e|215 )|218 {|320 throw|304 new|801 MathArithmeticException|214 (|40 LocalizedFormats.INDEX|234 ,|800 i|215 )|227 ;|219 }|-1
catch|214 (|83 final|801 MathArithmeticException|800 e|215 )|218 {|320 throw|304 new|801 MathArithmeticException|214 (|40 LocalizedFormats.INDEX|234 ,|800 i|215 )|227 ;|219 }|-1
catch|214 (|83 final|801 MathArithmeticException|800 e|215 )|218 {|320 throw|304 new|801 MathArithmeticException|214 (|40 LocalizedFormats.INDEX|234 ,|800 i|215 )|227 ;|219 }|-1
final|801 MultivariateDifferentiableVectorFunction|800 problem|227 ;|-1
public|802 CircleScalar|216 ()|218 {|800 points|204 =|304 new|801 ArrayList|230 <|800 Vector2D|231 >|216 ()|227 ;|219 }|-1
{|800 gradient|204 =|800 f|235 .|800 gradient|216 ()|227 ;|329 return|802 optimizeInternal|214 (|800 maxEval|234 ,|800 f|234 ,|800 goalType|234 ,|800 startPoint|215 )|227 ;|219 }|-1
MultivariateDifferentiableVectorFunction|800 problem|-1
public|802 CircleVectorial|216 ()|218 {|800 points|204 =|304 new|801 ArrayList|230 <|800 Vector2D|231 >|216 ()|227 ;|219 }|-1
final|800 Quaternion|800 product|204 =|800 Quaternion|235 .|802 multiply|214 (|800 inverseQ|234 ,|800 q|215 )|227 ;|-1
final|39 double|800 normSquareRef|204 =|800 Quaternion|235 .|802 multiply|214 (|800 q|234 ,|800 q|235 .|802 getConjugate|216 ()|215 )|235 .|802 getScalarPart|216 ()|227 ;|-1
{|329 return|802 multiply|214 (|315 this|234 ,|800 q|215 )|227 ;|219 }|-1
optimum|204 =|304 new|801 PointValuePair|214 (|800 fitfun|235 .|802 repairAndDecode|214 (|800 bestArx|235 .|802 getColumn|214 (|34 NUMBER_CONSTANT|215 )|215 )|234 ,|800 isMinimize|233 ?|800 bestFitness|226 :|201 -|800 bestFitness|215 )|227 ;|-1
final|39 double|800 tmp|204 =|800 wxi|202 *|800 xi|203 /|800 di|227 ;|-1
Iterator|230 <|800 Entry|231 >|800 it|204 =|802 iterator|216 ()|227 ;|-1
Iterator|230 <|800 Entry|231 >|800 it|204 =|802 iterator|216 ()|227 ;|-1
Iterator|230 <|800 Entry|231 >|800 it|204 =|802 iterator|216 ()|227 ;|-1
Iterator|230 <|800 Entry|231 >|800 it|204 =|802 iterator|216 ()|227 ;|-1
Iterator|230 <|800 Entry|231 >|800 it|204 =|802 iterator|216 ()|227 ;|-1
Iterator|230 <|800 Entry|231 >|800 it|204 =|800 v|235 .|802 iterator|216 ()|227 ;|-1
Iterator|230 <|800 Entry|231 >|800 it|204 =|800 v|235 .|802 iterator|216 ()|227 ;|-1
public|39 double|85 []|802 getStartPoint|216 ()|218 {|329 return|800 start|236 ==|500 null|233 ?|500 null|226 :|800 start|235 .|802 clone|216 ()|227 ;|219 }|-1
{|329 return|349 super|235 .|802 optimizeInternal|214 (|800 maxEval|234 ,|800 f|234 ,|800 goalType|234 ,|304 new|801 InitialGuess|214 (|800 startPoint|215 )|215 )|227 ;|219 }|-1
public|39 double|85 []|802 getUpperBound|216 ()|218 {|329 return|349 super|235 .|802 getUpperBound|216 ()|227 ;|219 }|-1
public|39 double|85 []|802 getLowerBound|216 ()|218 {|329 return|349 super|235 .|802 getLowerBound|216 ()|227 ;|219 }|-1
Math|235 .|802 max|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|201 -|800 dimension|203 /|214 (|34 NUMBER_CONSTANT|200 +|800 maxIterations|215 )|215 )|-1
final|39 int|800 dim|204 =|802 getDimension|216 ()|227 ;|-1
final|39 int|800 dim|204 =|802 getDimension|216 ()|227 ;|-1
final|39 int|800 dim|204 =|802 getDimension|216 ()|227 ;|-1
final|39 double|85 []|85 []|800 out|204 =|304 new|39 double|221 [|221 [|800 sampleSize|222 ]|221 [|800 dimension|222 ]|227 ;|-1
{|800 random|204 =|800 rng|227 ;|800 dimension|204 =|800 n|227 ;|219 }|-1
final|39 int|800 dim|204 =|800 d|235 .|802 getDimension|216 ()|227 ;|-1
final|39 int|800 dim|204 =|800 d|235 .|802 getDimension|216 ()|227 ;|-1
double|85 []|800 insigma|204 =|802 point|214 (|800 DIM|200 +|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
double|85 []|800 insigma|204 =|802 point|214 (|800 DIM|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
double|85 []|800 insigma|204 =|802 point|214 (|800 DIM|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
double|85 []|800 insigma|204 =|802 point|214 (|800 DIM|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|39 double|235 .|235 .|235 .|800 f|-1
jF|204 =|800 f|227 ;|-1
{|800 distribution|235 .|802 get|214 (|800 i|215 )|235 .|802 reseedRandomGenerator|214 (|800 i|200 +|34 NUMBER_CONSTANT|200 +|800 seed|215 )|227 ;|219 }|-1
FUNC|800 f|-1
FUNC|800 f|-1
final|801 RealMatrix|800 d|204 =|800 MatrixUtils|235 .|802 createRealDiagonalMatrix|214 (|800 eigenValues|215 )|227 ;|-1
RealMatrix|800 m|204 =|800 MatrixUtils|235 .|802 createRealDiagonalMatrix|214 (|800 diagonal|215 )|227 ;|-1
{|800 x|204 =|800 list|235 .|802 remove|214 (|800 list|235 .|802 size|216 ()|201 -|34 NUMBER_CONSTANT|215 )|235 .|802 getInf|216 ()|227 ;|219 }|-1
final|39 double|85 []|800 sigma|204 =|800 optim|235 .|802 computeSigma|214 (|800 regress|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|39 double|85 []|800 currentPoint|204 =|802 getStartPoint|216 ()|227 ;|-1
final|39 double|85 []|85 []|800 covMatrix|204 =|800 optimizer|235 .|802 computeCovariances|214 (|800 paramFound|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|39 double|85 []|85 []|800 covarMatrix|204 =|800 optimizer|235 .|802 computeCovariances|214 (|800 solution|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
qrDecomposition|214 (|802 computeWeightedJacobian|214 (|800 currentPoint|215 )|215 )|227 ;|-1
final|801 RealMatrix|800 j|204 =|802 computeWeightedJacobian|214 (|800 params|215 )|227 ;|-1
final|801 RealMatrix|800 weightedJacobian|204 =|802 computeWeightedJacobian|214 (|800 currentPoint|215 )|227 ;|-1
try|218 {|800 testStatistic|235 .|802 gTest|214 (|800 expected|234 ,|800 observed|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 OutOfRangeException|800 ex|215 )|220 {}|-1
try|218 {|800 testStatistic|235 .|802 gTest|214 (|800 expected|234 ,|800 observed|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 NotStrictlyPositiveException|800 ex|215 )|220 {}|-1
final|39 double|800 residual|204 =|801 currentResiduals|221 [|800 i|222 ]|227 ;|-1
{|349 super|235 .|802 testAdd1000|216 ()|227 ;|800 Assert|235 .|802 assertEquals|214 (|45 STRING_CONSTANT|200 +|45 STRING_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|214 (|214 (|800 ResizableDoubleArray|215 )|800 da|215 )|235 .|802 getCapacity|216 ()|215 )|227 ;|219 }|-1
final|800 ResizableDoubleArray|800 other|204 =|214 (|800 ResizableDoubleArray|215 )|800 object|227 ;|-1
{|83 final|801 ResizableDoubleArray|800 result|204 =|304 new|801 ResizableDoubleArray|216 ()|227 ;|802 copy|214 (|315 this|234 ,|800 result|215 )|227 ;|329 return|800 result|227 ;|219 }|-1
hashData|221 [|34 NUMBER_CONSTANT|222 ]|204 =|800 expansionMode|235 .|802 hashCode|216 ()|227 ;|-1
expansionMode|236 ==|40 ExpansionMode.MULTIPLICATIVE|-1
expansionMode|236 ==|40 ExpansionMode.MULTIPLICATIVE|-1
{|313 if|214 (|800 initialDoubleArray|242 !=|500 null|215 )|218 {|800 eDA|204 =|304 new|801 StatArray|214 (|800 initialDoubleArray|215 )|227 ;|219 }|219 }|-1
{|313 if|214 (|800 initialDoubleArray|242 !=|500 null|215 )|218 {|800 eDA|204 =|304 new|801 ResizableDoubleArray|214 (|800 initialDoubleArray|215 )|227 ;|219 }|219 }|-1
{|315 this|214 (|800 DEFAULT_INITIAL_CAPACITY|234 ,|800 DEFAULT_EXPANSION_FACTOR|234 ,|800 DEFAULT_CONTRACTION_DELTA|200 +|800 DEFAULT_EXPANSION_FACTOR|234 ,|40 ExpansionMode.MULTIPLICATIVE|234 ,|800 initialArray|215 )|227 ;|219 }|-1
hashData|221 [|34 NUMBER_CONSTANT|222 ]|204 =|304 new|801 Float|214 (|800 contractionCriterion|215 )|235 .|802 hashCode|216 ()|227 ;|-1
result|204 =|800 result|249 &&|214 (|40 other.contractionCriterion|236 ==|800 contractionCriterion|215 )|227 ;|-1
dest.contractionCriterion|204 =|40 source.contractionCriterion|227 ;|-1
{|802 checkContractExpand|214 (|802 getContractionCriterion|216 ()|234 ,|800 expansionFactor|215 )|227 ;|310 synchronized|214 (|315 this|215 )|218 {|315 this|235 .|800 expansionFactor|204 =|800 expansionFactor|227 ;|219 }|219 }|-1
{|802 checkContractExpand|214 (|800 contractionCriteria|234 ,|802 getExpansionFactor|216 ()|215 )|227 ;|310 synchronized|214 (|315 this|215 )|218 {|315 this|235 .|800 contractionCriterion|204 =|800 contractionCriteria|227 ;|219 }|219 }|-1
public|39 double|802 getContractionCriterion|216 ()|218 {|329 return|800 contractionCriterion|227 ;|219 }|-1
{|349 super|214 (|800 relativeThreshold|234 ,|800 absoluteThreshold|215 )|227 ;|800 maxIterationCount|204 =|800 ITERATION_CHECK_DISABLED|227 ;|219 }|-1
@|800 Deprecated|83 public|802 SimpleVectorValueChecker|216 ()|218 {|800 maxIterationCount|204 =|800 ITERATION_CHECK_DISABLED|227 ;|219 }|-1
{|349 super|214 (|800 relativeThreshold|234 ,|800 absoluteThreshold|215 )|227 ;|800 maxIterationCount|204 =|800 ITERATION_CHECK_DISABLED|227 ;|219 }|-1
@|800 Deprecated|83 public|802 SimpleValueChecker|216 ()|218 {|800 maxIterationCount|204 =|800 ITERATION_CHECK_DISABLED|227 ;|219 }|-1
{|349 super|214 (|800 relativeThreshold|234 ,|800 absoluteThreshold|215 )|227 ;|800 maxIterationCount|204 =|800 ITERATION_CHECK_DISABLED|227 ;|219 }|-1
@|800 Deprecated|83 public|802 SimplePointChecker|216 ()|218 {|800 maxIterationCount|204 =|800 ITERATION_CHECK_DISABLED|227 ;|219 }|-1
NaturalRanking|800 ranking|204 =|304 new|801 NaturalRanking|214 (|40 NaNStrategy.MAXIMAL|234 ,|40 TiesStrategy.MINIMUM|215 )|227 ;|-1
{|349 super|214 (|800 relativeThreshold|234 ,|800 absoluteThreshold|215 )|227 ;|800 maxIterationCount|204 =|800 ITERATION_CHECK_DISABLED|227 ;|219 }|-1
@|800 Deprecated|83 public|802 SimpleUnivariateValueChecker|216 ()|218 {|800 maxIterationCount|204 =|800 ITERATION_CHECK_DISABLED|227 ;|219 }|-1
logBeta|214 (|800 a|234 ,|800 b|215 )|-1
RandomDataGenerator|800 randomData|-1
public|802 EmpiricalDistribution|214 (|39 int|800 binCount|215 )|218 {|315 this|214 (|800 binCount|234 ,|304 new|801 RandomDataGenerator|216 ()|215 )|227 ;|219 }|-1
RandomDataGenerator|800 randomData|-1
this|235 .|800 q0|204 =|800 scalar|227 ;|-1
if|214 (|800 diagonalOnly|252 <=|34 NUMBER_CONSTANT|215 )|218 {|802 updateCovariance|214 (|800 hsig|234 ,|800 bestArx|234 ,|800 arz|234 ,|800 arindex|234 ,|800 xold|215 )|227 ;|219 }|322 else|218 {|802 updateCovarianceDiagonalOnly|214 (|800 hsig|234 ,|800 bestArz|215 )|227 ;|219 }|-1
if|214 (|800 diagonalOnly|252 <=|34 NUMBER_CONSTANT|215 )|218 {|802 updateCovariance|214 (|800 hsig|234 ,|800 bestArx|234 ,|800 arz|234 ,|800 arindex|234 ,|800 xold|215 )|227 ;|219 }|322 else|218 {|802 updateCovarianceDiagonalOnly|214 (|800 hsig|234 ,|800 bestArz|215 )|227 ;|219 }|-1
final|801 CodyWaite|800 cw|204 =|304 new|801 CodyWaite|214 (|800 xa|215 )|227 ;|-1
final|801 CodyWaite|800 cw|204 =|304 new|801 CodyWaite|214 (|800 xa|215 )|227 ;|-1
final|801 CodyWaite|800 cw|204 =|304 new|801 CodyWaite|214 (|800 xa|215 )|227 ;|-1
@|800 Override|83 public|39 void|802 reseedRandomGenerator|214 (|39 long|800 seed|215 )|218 {|802 reSeed|214 (|800 seed|215 )|227 ;|219 }|-1
public|802 EmpiricalDistribution|214 (|39 int|800 binCount|215 )|218 {|315 this|214 (|800 binCount|234 ,|214 (|800 RandomGenerator|215 )|500 null|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 reseedRandomGenerator|214 (|39 long|800 seed|215 )|218 {|800 randomData|235 .|802 reSeed|214 (|800 seed|215 )|227 ;|219 }|-1
public|802 EmpiricalDistribution|214 (|39 int|800 binCount|215 )|218 {|315 this|214 (|800 binCount|234 ,|304 new|801 RandomDataImpl|216 ()|215 )|227 ;|219 }|-1
public|802 EmpiricalDistribution|214 (|39 int|800 binCount|215 )|218 {|315 this|214 (|800 binCount|234 ,|304 new|801 RandomDataGenerator|216 ()|215 )|227 ;|219 }|-1
filePointer|204 =|304 new|801 BufferedReader|214 (|304 new|801 InputStreamReader|214 (|800 valuesFileURL|235 .|802 openStream|216 ()|234 ,|45 STRING_CONSTANT|215 )|215 )|227 ;|-1
new|801 NonCorrelatedWeight|214 (|800 w|215 )|-1
new|801 NonCorrelatedWeight|214 (|800 weights|215 )|-1
new|801 NonCorrelatedWeight|214 (|800 weights|215 )|-1
new|801 NonCorrelatedWeight|214 (|304 new|39 double|85 []|218 {|34 NUMBER_CONSTANT|219 }|215 )|-1
new|801 NonCorrelatedWeight|214 (|800 w|215 )|-1
new|801 NonCorrelatedWeight|214 (|800 problem|235 .|802 weight|216 ()|215 )|-1
new|801 NonCorrelatedWeight|214 (|304 new|39 double|85 []|218 {|34 NUMBER_CONSTANT|219 }|215 )|-1
new|801 NonCorrelatedWeight|214 (|304 new|39 double|85 []|218 {|34 NUMBER_CONSTANT|219 }|215 )|-1
new|801 NonCorrelatedWeight|214 (|800 circle|235 .|802 weight|216 ()|215 )|-1
new|801 NonCorrelatedWeight|214 (|800 weights|215 )|-1
new|801 NonCorrelatedWeight|214 (|800 weights|215 )|-1
new|801 NonCorrelatedWeight|214 (|800 function|235 .|802 getWeight|216 ()|215 )|-1
new|801 NonCorrelatedWeight|214 (|800 w|215 )|-1
new|801 NonCorrelatedWeight|214 (|800 w|215 )|-1
new|801 NonCorrelatedWeight|214 (|800 w|215 )|-1
new|801 Weight|214 (|800 w|215 )|-1
new|801 Weight|214 (|800 w|215 )|-1
new|801 Weight|214 (|800 w|215 )|-1
new|801 Weight|214 (|800 weights|215 )|-1
new|801 Weight|214 (|800 function|235 .|802 getWeight|216 ()|215 )|-1
new|801 Weight|214 (|800 w|215 )|-1
new|801 Weight|214 (|800 weights|215 )|-1
new|801 Weight|214 (|800 weights|215 )|-1
new|801 Weight|214 (|304 new|39 double|85 []|218 {|34 NUMBER_CONSTANT|219 }|215 )|-1
new|801 Weight|214 (|304 new|39 double|85 []|218 {|34 NUMBER_CONSTANT|219 }|215 )|-1
new|801 Weight|214 (|304 new|39 double|85 []|218 {|34 NUMBER_CONSTANT|219 }|215 )|-1
new|801 Weight|214 (|800 circle|235 .|802 weight|216 ()|215 )|-1
new|801 Weight|214 (|800 weights|215 )|-1
new|801 Weight|214 (|800 w|215 )|-1
new|801 Weight|214 (|800 problem|235 .|802 weight|216 ()|215 )|-1
{|315 this|214 (|800 d|234 ,|9 true|215 )|227 ;|219 }|-1
public|802 SimplexSolver|214 (|83 final|39 double|800 epsilon|215 )|218 {|315 this|214 (|800 epsilon|234 ,|800 DEFAULT_ULPS|234 ,|800 DEFAULT_CUT_OFF|215 )|227 ;|219 }|-1
if|214 (|800 FastMath|235 .|802 abs|214 (|800 result|215 )|230 <|800 cutOff|215 )|218 {|800 result|204 =|34 NUMBER_CONSTANT|227 ;|219 }|-1
{|315 this|214 (|800 f|234 ,|800 constraints|234 ,|800 goalType|234 ,|800 restrictToNonNegative|234 ,|800 epsilon|234 ,|40 SimplexSolver.DEFAULT_ULPS|234 ,|40 SimplexSolver.DEFAULT_CUT_OFF|215 )|227 ;|219 }|-1
final|801 T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|800 nCols|215 )|227 ;|-1
final|801 T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|800 nCols|215 )|227 ;|-1
final|801 T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|800 nRows|215 )|227 ;|-1
final|801 T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|800 nRows|215 )|227 ;|-1
final|801 T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|800 nRows|215 )|227 ;|-1
final|801 T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|800 nCols|215 )|227 ;|-1
final|801 T|85 []|85 []|800 data|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|-1
final|801 T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|802 getField|216 ()|234 ,|800 columns|215 )|227 ;|-1
final|801 T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|802 getField|216 ()|234 ,|800 rows|215 )|227 ;|-1
final|801 T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|802 getField|216 ()|234 ,|800 rows|215 )|227 ;|-1
final|801 T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|802 getField|216 ()|234 ,|800 columns|215 )|227 ;|-1
final|801 T|85 []|800 outData|204 =|800 MathArrays|235 .|802 buildArray|214 (|802 getField|216 ()|234 ,|800 rows|215 )|227 ;|-1
final|801 T|85 []|800 outData|204 =|800 MathArrays|235 .|802 buildArray|214 (|802 getField|216 ()|234 ,|800 columns|215 )|227 ;|-1
final|801 T|85 []|85 []|800 data|204 =|800 MathArrays|235 .|802 buildArray|214 (|802 getField|216 ()|234 ,|802 getRowDimension|216 ()|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|-1
{|800 blocks|204 =|800 MathArrays|235 .|802 buildArray|214 (|802 getField|216 ()|234 ,|800 blockRows|202 *|800 blockColumns|234 ,|201 -|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
final|801 T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|40 data.length|200 +|34 NUMBER_CONSTANT|215 )|227 ;|-1
T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|40 data.length|215 )|227 ;|-1
T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|40 data.length|215 )|227 ;|-1
T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|40 data.length|215 )|227 ;|-1
T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|40 data.length|215 )|227 ;|-1
T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|40 data.length|215 )|227 ;|-1
T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|40 data.length|215 )|227 ;|-1
T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|40 data.length|215 )|227 ;|-1
T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|40 data.length|215 )|227 ;|-1
T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|40 data.length|215 )|227 ;|-1
T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|40 data.length|215 )|227 ;|-1
T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|40 data.length|215 )|227 ;|-1
T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|40 data.length|215 )|227 ;|-1
T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|40 data.length|215 )|227 ;|-1
data|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|40 v1.length|200 +|40 v2.length|215 )|227 ;|-1
data|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|40 v1.length|200 +|40 v2.data.length|215 )|227 ;|-1
data|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|40 v1.data.length|200 +|40 v2.length|215 )|227 ;|-1
data|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|40 v1.data.length|200 +|40 v2.data.length|215 )|227 ;|-1
data|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|800 v|235 .|802 getDimension|216 ()|215 )|227 ;|-1
data|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|800 size|215 )|227 ;|-1
data|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|800 size|215 )|227 ;|-1
final|801 T|85 []|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|802 getField|216 ()|234 ,|800 nRows|234 ,|802 getColumnDimension|216 ()|215 )|227 ;|-1
final|801 T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|802 getField|216 ()|234 ,|800 nCols|215 )|227 ;|-1
final|801 T|85 []|800 out|204 =|800 MathArrays|235 .|802 buildArray|214 (|802 getField|216 ()|234 ,|800 nRows|215 )|227 ;|-1
data|204 =|800 MathArrays|235 .|802 buildArray|214 (|802 getField|216 ()|234 ,|40 subMatrix.length|234 ,|800 nCols|215 )|227 ;|-1
final|801 T|85 []|85 []|800 outData|204 =|800 MathArrays|235 .|802 buildArray|214 (|802 getField|216 ()|234 ,|800 nRows|234 ,|800 nCols|215 )|227 ;|-1
final|801 T|85 []|85 []|800 outData|204 =|800 MathArrays|235 .|802 buildArray|214 (|802 getField|216 ()|234 ,|800 rowCount|234 ,|800 columnCount|215 )|227 ;|-1
final|801 T|85 []|85 []|800 outData|204 =|800 MathArrays|235 .|802 buildArray|214 (|802 getField|216 ()|234 ,|800 rowCount|234 ,|800 columnCount|215 )|227 ;|-1
data|204 =|800 MathArrays|235 .|802 buildArray|214 (|802 getField|216 ()|234 ,|800 nRows|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|349 super|214 (|800 field|234 ,|800 rowDimension|234 ,|800 columnDimension|215 )|227 ;|800 data|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|800 rowDimension|234 ,|800 columnDimension|215 )|227 ;|219 }|-1
T|85 []|800 res|204 =|800 MathArrays|235 .|802 buildArray|214 (|800 field|234 ,|800 virtualSize|215 )|227 ;|-1
int|800 exponent|204 =|214 (|39 int|215 )|214 (|800 y|235 .|802 intLog10|216 ()|202 *|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|329 return|304 new|801 Decimal64|214 (|800 FastMath|235 .|802 IEEEremainder|214 (|800 value|234 ,|40 a.value|215 )|215 )|227 ;|219 }|-1
{|329 return|304 new|801 Decimal64|214 (|800 FastMath|235 .|802 IEEEremainder|214 (|800 value|234 ,|800 a|215 )|215 )|227 ;|219 }|-1
return|800 ePlus|235 .|802 subtract|214 (|800 eMinus|215 )|235 .|802 divide|214 (|800 ePlus|235 .|802 add|214 (|800 eMinus|215 )|215 )|227 ;|-1
DerivativeStructure|800 ref|204 =|800 dsX|235 .|802 subtract|214 (|800 x|201 -|800 FastMath|235 .|802 IEEEremainder|214 (|800 x|234 ,|800 y|215 )|215 )|227 ;|-1
DerivativeStructure|800 sAccurate|204 =|800 FieldVector3D|235 .|802 dotProduct|214 (|800 u1|234 ,|800 u2|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|201 -|34 NUMBER_CONSTANT|234 ,|800 FieldVector3D|235 .|802 dotProduct|214 (|800 r|235 .|802 getAxis|216 ()|234 ,|800 reverted|235 .|802 getAxis|216 ()|215 )|235 .|802 getReal|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|201 -|34 NUMBER_CONSTANT|234 ,|800 FieldVector3D|235 .|802 dotProduct|214 (|800 r|235 .|802 getAxis|216 ()|234 ,|800 reverted|235 .|802 getAxis|216 ()|215 )|235 .|802 getReal|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
randomData|204 =|304 new|801 RandomDataGenerator|214 (|800 randomGenerator|215 )|227 ;|-1
{|500 super();|315 this|235 .|800 tiesStrategy|204 =|40 TiesStrategy.RANDOM|227 ;|800 nanStrategy|204 =|800 DEFAULT_NAN_STRATEGY|227 ;|800 randomData|204 =|304 new|801 RandomDataGenerator|214 (|800 randomGenerator|215 )|227 ;|219 }|-1
{|500 super();|315 this|235 .|800 nanStrategy|204 =|800 nanStrategy|227 ;|315 this|235 .|800 tiesStrategy|204 =|800 tiesStrategy|227 ;|800 randomData|204 =|304 new|801 RandomDataGenerator|216 ()|227 ;|219 }|-1
{|500 super();|315 this|235 .|800 tiesStrategy|204 =|800 tiesStrategy|227 ;|800 nanStrategy|204 =|800 DEFAULT_NAN_STRATEGY|227 ;|800 randomData|204 =|304 new|801 RandomDataGenerator|216 ()|227 ;|219 }|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
T|332 extends|800 RealFieldElement|230 <|800 T|231 >|-1
@|802 Test|214 (|800 expected|204 =|800 NumberIsTooLargeException|235 .|341 class|215 )|-1
{|802 getRandomGenerator|216 ()|235 .|802 setSeed|214 (|800 System|235 .|802 currentTimeMillis|216 ()|200 +|800 System|235 .|802 identityHashCode|214 (|315 this|215 )|215 )|227 ;|219 }|-1
{|802 getRandomGenerator|216 ()|235 .|802 setSeed|214 (|800 seed|215 )|227 ;|219 }|-1
final|801 RandomGenerator|800 generator|204 =|802 getRandomGenerator|216 ()|227 ;|-1
{|329 return|304 new|801 FDistribution|214 (|802 getRandomGenerator|216 ()|234 ,|800 numeratorDf|234 ,|800 denominatorDf|234 ,|40 FDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY|215 )|235 .|802 sample|216 ()|227 ;|219 }|-1
{|329 return|304 new|801 ChiSquaredDistribution|214 (|802 getRandomGenerator|216 ()|234 ,|800 df|234 ,|40 ChiSquaredDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY|215 )|235 .|802 sample|216 ()|227 ;|219 }|-1
{|329 return|304 new|801 CauchyDistribution|214 (|802 getRandomGenerator|216 ()|234 ,|800 median|234 ,|800 scale|234 ,|40 CauchyDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY|215 )|235 .|802 sample|216 ()|227 ;|219 }|-1
{|329 return|304 new|801 BinomialDistribution|214 (|802 getRandomGenerator|216 ()|234 ,|800 numberOfTrials|234 ,|800 probabilityOfSuccess|215 )|235 .|802 sample|216 ()|227 ;|219 }|-1
{|329 return|304 new|801 BetaDistribution|214 (|802 getRandomGenerator|216 ()|234 ,|800 alpha|234 ,|800 beta|234 ,|40 BetaDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY|215 )|235 .|802 sample|216 ()|227 ;|219 }|-1
{|329 return|304 new|801 ZipfDistribution|214 (|802 getRandomGenerator|216 ()|234 ,|800 numberOfElements|234 ,|800 exponent|215 )|235 .|802 sample|216 ()|227 ;|219 }|-1
{|329 return|304 new|801 WeibullDistribution|214 (|802 getRandomGenerator|216 ()|234 ,|800 shape|234 ,|800 scale|234 ,|40 WeibullDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY|215 )|235 .|802 sample|216 ()|227 ;|219 }|-1
{|329 return|304 new|801 TDistribution|214 (|802 getRandomGenerator|216 ()|234 ,|800 df|234 ,|40 TDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY|215 )|235 .|802 sample|216 ()|227 ;|219 }|-1
{|329 return|304 new|801 PascalDistribution|214 (|802 getRandomGenerator|216 ()|234 ,|800 r|234 ,|800 p|215 )|235 .|802 sample|216 ()|227 ;|219 }|-1
{|329 return|304 new|801 HypergeometricDistribution|214 (|802 getRandomGenerator|216 ()|234 ,|800 populationSize|234 ,|800 numberOfSuccesses|234 ,|800 sampleSize|215 )|235 .|802 sample|216 ()|227 ;|219 }|-1
{|329 return|304 new|801 GammaDistribution|214 (|802 getRandomGenerator|216 ()|234 ,|800 shape|234 ,|800 scale|234 ,|40 GammaDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY|215 )|235 .|802 sample|216 ()|227 ;|219 }|-1
{|329 return|304 new|801 ExponentialDistribution|214 (|802 getRandomGenerator|216 ()|234 ,|800 mean|234 ,|40 ExponentialDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY|215 )|235 .|802 sample|216 ()|227 ;|219 }|-1
return|800 sigma|202 *|802 getRandomGenerator|216 ()|235 .|802 nextGaussian|216 ()|200 +|800 mu|227 ;|-1
{|329 return|304 new|801 PoissonDistribution|214 (|802 getRandomGenerator|216 ()|234 ,|800 mean|234 ,|40 PoissonDistribution.DEFAULT_EPSILON|234 ,|40 PoissonDistribution.DEFAULT_MAX_ITERATIONS|215 )|235 .|802 sample|216 ()|227 ;|219 }|-1
RandomGenerator|800 ran|204 =|802 getRandomGenerator|216 ()|227 ;|-1
{|329 return|802 getKernel|214 (|800 stats|215 )|235 .|802 sample|216 ()|227 ;|219 }|-1
@|800 Test|83 public|39 void|802 testReciprocalZero|216 ()|218 {|800 Assert|235 .|802 assertEquals|214 (|40 Complex.ZERO|235 .|802 reciprocal|216 ()|234 ,|40 Complex.INF|215 )|227 ;|219 }|-1
{|329 return|214 (|214 (|800 Float|235 .|802 floatToRawIntBits|214 (|800 f|215 )|231 >|231 >|231 >|34 NUMBER_CONSTANT|215 )|213 &|34 NUMBER_CONSTANT|215 )|201 -|34 NUMBER_CONSTANT|227 ;|219 }|-1
final|39 long|800 bits|204 =|800 Double|235 .|802 doubleToRawLongBits|214 (|800 d|215 )|227 ;|-1
final|39 long|800 bits|204 =|800 Double|235 .|802 doubleToRawLongBits|214 (|800 d|215 )|227 ;|-1
return|802 abs|214 (|800 x|201 -|800 Double|235 .|802 longBitsToDouble|214 (|800 Double|235 .|802 doubleToRawLongBits|214 (|800 x|215 )|212 ^|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
{|39 long|800 bits|204 =|800 Double|235 .|802 doubleToRawLongBits|214 (|800 x|215 )|227 ;|313 if|214 (|800 bits|230 <|34 NUMBER_CONSTANT|215 )|218 {|329 return|201 -|34 NUMBER_CONSTANT|227 ;|219 }|329 return|34 NUMBER_CONSTANT|227 ;|219 }|-1
{|39 long|800 bits|204 =|800 Double|235 .|802 doubleToRawLongBits|214 (|800 x|215 )|227 ;|313 if|214 (|800 bits|230 <|34 NUMBER_CONSTANT|215 )|218 {|329 return|201 -|34 NUMBER_CONSTANT|227 ;|219 }|329 return|34 NUMBER_CONSTANT|227 ;|219 }|-1
long|800 inbits|204 =|800 Double|235 .|802 doubleToRawLongBits|214 (|800 x|215 )|227 ;|-1
long|800 bits|204 =|800 Double|235 .|802 doubleToRawLongBits|214 (|800 x|215 )|227 ;|-1
long|800 bits|204 =|800 Double|235 .|802 doubleToRawLongBits|214 (|800 x|215 )|227 ;|-1
long|800 xl|204 =|800 Double|235 .|802 doubleToRawLongBits|214 (|800 d|215 )|227 ;|-1
File|800 file|204 =|304 new|801 File|214 (|800 url|235 .|802 toURI|216 ()|215 )|227 ;|-1
{|329 return|800 Double|235 .|802 longBitsToDouble|214 (|800 MASK_NON_SIGN_LONG|213 &|800 Double|235 .|802 doubleToRawLongBits|214 (|800 x|215 )|215 )|227 ;|219 }|-1
{|329 return|800 Float|235 .|802 intBitsToFloat|214 (|800 MASK_NON_SIGN_INT|213 &|800 Float|235 .|802 floatToRawIntBits|214 (|800 x|215 )|215 )|227 ;|219 }|-1
final|39 double|85 []|85 []|800 matrix|-1
{|315 this|214 (|304 new|801 Well19937c|216 ()|234 ,|800 lower|234 ,|800 upper|215 )|227 ;|219 }|-1
{|802 fit|214 (|800 initialMixture|234 ,|800 DEFAULT_MAX_ITERATIONS|234 ,|800 DEFAULT_THRESHOLD|215 )|227 ;|219 }|-1
sum|237 +=|800 FastMath|235 .|802 pow|214 (|800 distA|203 /|800 distB|234 ,|34 NUMBER_CONSTANT|203 /|214 (|800 fuzziness|201 -|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
final|39 double|800 u|204 =|800 FastMath|235 .|802 pow|214 (|801 membershipMatrix|221 [|800 i|222 ]|221 [|800 j|222 ]|234 ,|800 fuzziness|215 )|227 ;|-1
final|39 long|800 grayCode|204 =|800 i|212 ^|214 (|800 i|231 >|231 >|34 NUMBER_CONSTANT|215 )|227 ;|-1
int|800 count|204 =|800 samples|203 /|800 centers|227 ;|-1
{|315 this|235 .|801 a|221 [|800 i|222 ]|221 [|800 j|222 ]|204 =|801 a|221 [|800 i|202 *|800 N|200 +|800 j|222 ]|227 ;|219 }|-1
Assert|235 .|802 assertArrayEquals|214 (|800 expected|234 ,|800 actual|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|39 double|800 tEnd|204 =|802 test|214 (|34 NUMBER_CONSTANT|215 )|227 ;|800 Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 tEnd|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|39 double|800 tEnd|204 =|802 test|214 (|34 NUMBER_CONSTANT|215 )|227 ;|800 Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 tEnd|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|83 final|39 double|800 midPoint|204 =|800 min|200 +|34 NUMBER_CONSTANT|202 *|800 diff|227 ;|329 return|800 diff|202 *|802 computeObjectiveValue|214 (|800 midPoint|215 )|227 ;|219 }|-1
{|304 new|801 WeibullDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
{|304 new|801 WeibullDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
incrementValue|214 (|800 entry|235 .|802 getKey|216 ()|234 ,|800 entry|235 .|802 getValue|216 ()|235 .|802 longValue|216 ()|215 )|227 ;|-1
Assert|235 .|802 assertFalse|214 (|800 random|235 .|802 nextBoolean|216 ()|215 )|227 ;|-1
{|801 result|221 [|800 i|222 ]|204 =|800 r|235 .|802 call|216 ()|235 .|802 doubleValue|216 ()|227 ;|219 }|-1
final|39 int|800 uniDimIndex|204 =|800 iter|235 .|802 next|216 ()|235 .|802 intValue|216 ()|227 ;|-1
{|349 super|214 (|800 specific|234 ,|800 value|234 ,|800 INTEGER_ZERO|234 ,|9 true|215 )|227 ;|219 }|-1
public|802 NotPositiveException|214 (|801 Number|800 value|215 )|218 {|349 super|214 (|800 value|234 ,|800 INTEGER_ZERO|234 ,|9 true|215 )|227 ;|219 }|-1
{|349 super|214 (|800 specific|234 ,|800 INTEGER_ZERO|234 ,|800 arguments|215 )|227 ;|219 }|-1
{|329 return|801 expected|221 [|800 index|222 ]|235 .|802 intValue|216 ()|227 ;|219 }|-1
{|329 return|801 wrong|221 [|800 index|222 ]|235 .|802 intValue|216 ()|227 ;|219 }|-1
{|349 super|214 (|800 specific|234 ,|800 value|234 ,|800 INTEGER_ZERO|234 ,|9 false|215 )|227 ;|219 }|-1
public|802 NotStrictlyPositiveException|214 (|801 Number|800 value|215 )|218 {|349 super|214 (|800 value|234 ,|800 INTEGER_ZERO|234 ,|9 false|215 )|227 ;|219 }|-1
{|349 super|214 (|800 specific|234 ,|800 Integer|235 .|802 valueOf|214 (|800 wrong|215 )|234 ,|800 Integer|235 .|802 valueOf|214 (|800 expected|215 )|215 )|227 ;|800 dimension|204 =|800 expected|227 ;|219 }|-1
{|800 secRand|204 =|800 RandomGeneratorFactory|235 .|802 createRandomGenerator|214 (|800 SecureRandom|235 .|802 getInstance|214 (|800 algorithm|234 ,|800 provider|215 )|215 )|227 ;|219 }|-1
final|801 RandomGenerator|800 secRan|204 =|802 getSecRan|216 ()|227 ;|-1
T|802 withConvergenceChecker|214 (|800 ConvergenceChecker|230 <|800 PAIR|231 >|800 checker|215 )|227 ;|-1
{|800 term|239 *=|800 FastMath|235 .|802 pow|214 (|801 delta|221 [|800 k|222 ]|234 ,|801 orders|221 [|800 k|222 ]|215 )|203 /|800 CombinatoricsUtils|235 .|802 factorial|214 (|801 orders|221 [|800 k|222 ]|215 )|227 ;|219 }|-1
RandomDataGenerator|800 randomData|204 =|304 new|801 RandomDataGenerator|216 ()|227 ;|-1
{|801 coeff|221 [|800 i|222 ]|221 [|800 j|222 ]|204 =|214 (|39 int|215 )|800 CombinatoricsUtils|235 .|802 binomialCoefficient|214 (|800 i|234 ,|800 j|215 )|227 ;|219 }|-1
long|800 expected|204 =|800 CombinatoricsUtils|235 .|802 binomialCoefficient|214 (|800 i|200 +|800 j|234 ,|800 i|215 )|227 ;|-1
double|800 binomial|204 =|800 CombinatoricsUtils|235 .|802 binomialCoefficient|214 (|800 v|200 +|800 i|234 ,|800 i|215 )|227 ;|-1
double|800 refDer|204 =|201 -|800 CombinatoricsUtils|235 .|802 factorial|214 (|800 n|201 -|34 NUMBER_CONSTANT|215 )|203 /|800 FastMath|235 .|802 pow|214 (|201 -|800 x|234 ,|800 n|215 )|227 ;|-1
ArithmeticUtils|235 .|802 pow|214 (|201 -|34 NUMBER_CONSTANT|234 ,|800 i|215 )|202 *|800 CombinatoricsUtils|235 .|802 factorial|214 (|800 i|215 )|203 /|800 FastMath|235 .|802 pow|214 (|800 x|234 ,|800 i|200 +|34 NUMBER_CONSTANT|215 )|-1
double|800 inv|204 =|34 NUMBER_CONSTANT|203 /|800 CombinatoricsUtils|235 .|802 factorial|214 (|800 i|215 )|227 ;|-1
AbstractOptimizer|230 <|800 PAIR|234 ,|800 OPTIM|231 >|800 other|-1
{|329 return|800 Double|235 .|802 parseDouble|214 (|800 o|235 .|802 toString|216 ()|215 )|227 ;|219 }|-1
return|800 Double|235 .|802 parseDouble|214 (|800 str|215 )|227 ;|-1
{|800 val|204 =|800 Double|235 .|802 parseDouble|214 (|800 str|215 )|227 ;|800 sampleStats|235 .|802 addValue|214 (|800 val|215 )|227 ;|219 }|-1
List|230 <|800 LinearConstraint|231 >|800 normalized|204 =|304 new|801 ArrayList|230 <|800 LinearConstraint|231 >|214 (|800 originalConstraints|235 .|802 size|216 ()|215 )|227 ;|-1
List|230 <|800 Edge|231 >|800 edges|204 =|304 new|801 ArrayList|230 <|800 Edge|231 >|214 (|800 n|215 )|227 ;|-1
final|800 List|230 <|800 Segment|231 >|800 segments|204 =|304 new|801 ArrayList|230 <|800 Segment|231 >|214 (|800 list|235 .|802 size|216 ()|215 )|227 ;|-1
final|800 List|230 <|800 EventHandler|231 >|800 list|204 =|304 new|801 ArrayList|230 <|800 EventHandler|231 >|214 (|800 eventsStates|235 .|802 size|216 ()|215 )|227 ;|-1
List|230 <|800 LinearConstraint|231 >|800 normalized|204 =|304 new|801 ArrayList|230 <|800 LinearConstraint|231 >|214 (|800 originalConstraints|235 .|802 size|216 ()|215 )|227 ;|-1
List|230 <|39 int|85 []|231 >|800 row|204 =|304 new|801 ArrayList|230 <|39 int|85 []|231 >|214 (|40 dRow.length|202 *|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|800 List|230 <|800 Segment|231 >|800 segments|204 =|304 new|801 ArrayList|230 <|800 Segment|231 >|214 (|800 list|235 .|802 size|216 ()|215 )|227 ;|-1
final|39 double|85 []|800 vectorData|227 ;|-1
{|315 this|214 (|800 value|234 ,|800 DEFAULT_EPSILON|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 f|235 .|802 getCount|214 (|800 THREE|215 )|215 )|227 ;|-1
f|235 .|802 addValue|214 (|800 THREE|215 )|227 ;|-1
{|329 return|304 new|801 Combinations|214 (|800 n|234 ,|800 k|215 )|235 .|802 iterator|216 ()|227 ;|219 }|-1
int|85 []|800 index|204 =|800 MathArrays|235 .|802 natural|214 (|800 n|215 )|227 ;|-1
{|83 final|39 int|85 []|800 natural|204 =|800 MathArrays|235 .|800 natural|214 (|34 NUMBER_CONSTANT|215 )|227 ;|800 Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|40 natural.length|215 )|227 ;|219 }|-1
AbstractLeastSquaresOptimizer|230 <|800 OPTIM|231 >|800 other|-1
if|214 (|800 FastMath|235 .|802 abs|214 (|800 a0|215 )|231 >|800 overflow|215 )|218 {|320 throw|304 new|801 FractionConversionException|214 (|800 value|234 ,|800 a0|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|329 return|34 NUMBER_CONSTANT|200 +|34 NUMBER_CONSTANT|202 *|800 MathUtils|235 .|802 hash|214 (|800 value|215 )|200 +|34 NUMBER_CONSTANT|202 *|800 derivatives|235 .|802 hashCode|216 ()|227 ;|219 }|-1
mult|235 .|802 multiplyInPlace|214 (|800 var1|215 )|227 ;|-1
{|329 return|800 MathArrays|235 .|802 verifyValues|214 (|800 values|234 ,|800 weights|234 ,|800 begin|234 ,|800 length|234 ,|800 allowEmpty|215 )|227 ;|219 }|-1
{|329 return|800 MathArrays|235 .|802 verifyValues|214 (|800 values|234 ,|800 weights|234 ,|800 begin|234 ,|800 length|234 ,|9 false|215 )|227 ;|219 }|-1
{|329 return|800 MathArrays|235 .|802 verifyValues|214 (|800 values|234 ,|800 begin|234 ,|800 length|234 ,|800 allowEmpty|215 )|227 ;|219 }|-1
{|329 return|800 MathArrays|235 .|802 verifyValues|214 (|800 values|234 ,|800 begin|234 ,|800 length|234 ,|9 false|215 )|227 ;|219 }|-1
w|238 -=|34 NUMBER_CONSTANT|227 ;|-1
num|241 %=|800 den|227 ;|-1
if|214 (|800 i|231 >|34 NUMBER_CONSTANT|215 )|218 {|800 randInt|231 >|231 >|204 =|34 NUMBER_CONSTANT|227 ;|219 }|-1
for|214 (|83 final|801 T|800 a|226 :|800 data|215 )|218 {|800 h|245 ^=|800 a|235 .|802 hashCode|216 ()|227 ;|219 }|-1
rhs|221 [|800 m|222 ]|240 /=|800 X|227 ;|-1
coeff1|240 /=|800 pc2|227 ;|-1
bits|243 &=|34 NUMBER_CONSTANT|227 ;|-1
den|237 +=|34 NUMBER_CONSTANT|227 ;|-1
trial|239 *=|34 NUMBER_CONSTANT|227 ;|-1
den|237 +=|34 NUMBER_CONSTANT|227 ;|-1
{|801 bytes|221 [|800 i|247 ++|222 ]|204 =|214 (|39 byte|215 )|214 (|800 random|213 &|34 NUMBER_CONSTANT|215 )|227 ;|800 random|231 >|231 >|204 =|34 NUMBER_CONSTANT|227 ;|219 }|-1
if|214 (|800 result|236 ==|34 NUMBER_CONSTANT|215 )|218 {|800 result|239 *=|800 x|227 ;|219 }|-1
za|239 *=|800 ya|227 ;|-1
e|231 >|231 >|204 =|34 NUMBER_CONSTANT|227 ;|-1
z|239 *=|800 lnb|227 ;|-1
xl|243 &=|800 MASK_30BITS|227 ;|-1
r|239 *=|800 rnd|227 ;|-1
extra|238 -=|800 rh|202 *|800 RADIX|227 ;|-1
{|350 while|214 (|34 NUMBER_CONSTANT|236 ==|800 n|211 %|800 p|215 )|218 {|800 n|240 /=|800 p|227 ;|800 factors|235 .|802 add|214 (|800 p|215 )|227 ;|219 }|219 }|-1
n|244 |=|34 NUMBER_CONSTANT|227 ;|-1
xx|237 +=|34 NUMBER_CONSTANT|203 /|34 NUMBER_CONSTANT|227 ;|-1
iter|247 ++|227 ;|-1
{|801 data|221 [|800 i|222 ]|240 /=|800 d|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|239 *=|800 d|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|238 -=|800 d|227 ;|219 }|-1
{|801 data|221 [|800 i|222 ]|237 +=|800 d|227 ;|219 }|-1
k|237 +=|800 m|227 ;|-1
coeff1|240 /=|800 pc2|227 ;|-1
{|801 c|221 [|34 NUMBER_CONSTANT|222 ]|247 ++|227 ;|329 return|800 ret|227 ;|219 }|-1
coeff1|240 /=|800 pc2|227 ;|-1
{|800 m|231 >|231 >|204 =|34 NUMBER_CONSTANT|227 ;|247 ++|800 k|227 ;|219 }|-1
e|231 >|231 >|204 =|34 NUMBER_CONSTANT|227 ;|-1
e|231 >|231 >|204 =|34 NUMBER_CONSTANT|227 ;|-1
e|231 >|231 >|204 =|34 NUMBER_CONSTANT|227 ;|-1
v|239 *=|800 v|227 ;|-1
{|800 ret|204 =|800 scale|202 *|800 FastMath|235 .|802 pow|214 (|201 -|800 FastMath|235 .|802 log1p|214 (|201 -|800 p|215 )|234 ,|34 NUMBER_CONSTANT|203 /|800 shape|215 )|227 ;|219 }|-1
(|800 a|202 *|800 FastMath|235 .|802 log|214 (|800 x|215 )|215 )|200 +|214 (|800 b|202 *|800 FastMath|235 .|802 log1p|214 (|201 -|800 x|215 )|215 )|-1
return|214 (|800 FastMath|235 .|802 expm1|214 (|800 ss|215 )|215 )|202 *|800 FastMath|235 .|802 exp|214 (|34 NUMBER_CONSTANT|202 *|800 scale|200 +|800 ss|215 )|227 ;|-1
{|802 correct|214 (|304 new|801 ArrayRealVector|214 (|800 z|234 ,|9 false|215 )|215 )|227 ;|219 }|-1
{|802 predict|214 (|304 new|801 ArrayRealVector|214 (|800 u|234 ,|9 false|215 )|215 )|227 ;|219 }|-1
minadj|240 /=|40 divisor.mant|221 [|40 mant.length|201 -|34 NUMBER_CONSTANT|222 ]|200 +|34 NUMBER_CONSTANT|227 ;|-1
for|214 (|800 k|204 =|34 NUMBER_CONSTANT|227 ;|800 k|230 <|800 DIM|227 ;|247 ++|800 k|215 )|801 basis|221 [|800 i|222 ]|221 [|800 k|222 ]|240 /=|800 FastMath|235 .|802 sqrt|214 (|800 sp|215 )|227 ;|-1
{|39 double|800 f|204 =|800 FastMath|235 .|802 pow|214 (|304 new|801 DiffPow|216 ()|235 .|802 value|214 (|800 x|215 )|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|329 return|800 f|227 ;|219 }|-1
f|237 +=|800 FastMath|235 .|802 pow|214 (|800 factor|234 ,|800 i|203 /|214 (|40 x.length|201 -|34 NUMBER_CONSTANT|215 )|215 )|202 *|801 x|221 [|800 i|222 ]|202 *|801 x|221 [|800 i|222 ]|227 ;|-1
f|237 +=|800 FastMath|235 .|802 pow|214 (|800 factor|234 ,|800 i|203 /|214 (|40 x.length|201 -|34 NUMBER_CONSTANT|215 )|215 )|202 *|801 x|221 [|800 i|222 ]|202 *|801 x|221 [|800 i|222 ]|227 ;|-1
for|214 (|800 k|204 =|34 NUMBER_CONSTANT|227 ;|800 k|230 <|800 DIM|227 ;|247 ++|800 k|215 )|801 basis|221 [|800 i|222 ]|221 [|800 k|222 ]|240 /=|800 FastMath|235 .|802 sqrt|214 (|800 sp|215 )|227 ;|-1
{|39 double|800 f|204 =|800 FastMath|235 .|802 pow|214 (|304 new|801 DiffPow|216 ()|235 .|802 value|214 (|800 x|215 )|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|329 return|800 f|227 ;|219 }|-1
f|237 +=|800 FastMath|235 .|802 pow|214 (|800 factor|234 ,|800 i|203 /|214 (|40 x.length|201 -|34 NUMBER_CONSTANT|215 )|215 )|202 *|801 x|221 [|800 i|222 ]|202 *|801 x|221 [|800 i|222 ]|227 ;|-1
f|237 +=|800 FastMath|235 .|802 pow|214 (|800 factor|234 ,|800 i|203 /|214 (|40 x.length|201 -|34 NUMBER_CONSTANT|215 )|215 )|202 *|801 x|221 [|800 i|222 ]|202 *|801 x|221 [|800 i|222 ]|227 ;|-1
final|39 double|800 max|204 =|40 FastMath.PI|227 ;|-1
{|800 FunctionUtils|235 .|802 sample|214 (|304 new|801 Sin|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|40 FastMath.PI|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|800 FunctionUtils|235 .|802 sample|214 (|304 new|801 Sin|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|40 FastMath.PI|234 ,|201 -|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|800 FunctionUtils|235 .|802 sample|214 (|304 new|801 Sin|216 ()|234 ,|40 FastMath.PI|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
double|800 x|204 =|800 FastMath|235 .|802 random|216 ()|202 *|34 NUMBER_CONSTANT|227 ;|-1
double|800 x|204 =|800 FastMath|235 .|802 random|216 ()|227 ;|-1
-|34 NUMBER_CONSTANT|203 /|214 (|800 a|202 *|800 a|215 )|201 -|34 NUMBER_CONSTANT|200 +|800 FastMath|235 .|802 cos|214 (|800 a|215 )|-1
minDiff|204 =|800 FastMath|235 .|802 min|214 (|800 minDiff|234 ,|801 boundDifference|221 [|800 i|222 ]|215 )|227 ;|-1
minDiff|204 =|800 FastMath|235 .|802 min|214 (|800 minDiff|234 ,|801 boundDifference|221 [|800 i|222 ]|215 )|227 ;|-1
{|801 d|221 [|800 r|222 ]|221 [|800 c|222 ]|204 =|800 FastMath|235 .|802 sqrt|214 (|800 m|235 .|802 getEntry|214 (|800 r|234 ,|800 c|215 )|215 )|227 ;|219 }|-1
{|801 d|221 [|800 r|222 ]|221 [|800 c|222 ]|204 =|800 FastMath|235 .|802 log|214 (|800 m|235 .|802 getEntry|214 (|800 r|234 ,|800 c|215 )|215 )|227 ;|219 }|-1
double|800 diff|204 =|800 FastMath|235 .|802 abs|214 (|801 x|221 [|800 i|222 ]|201 -|801 repaired|221 [|800 i|222 ]|215 )|227 ;|-1
(|34 NUMBER_CONSTANT|201 -|800 ccovmu|215 )|202 *|34 NUMBER_CONSTANT|202 *|800 mueff|203 /|214 (|800 FastMath|235 .|802 pow|214 (|800 dimension|200 +|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|200 +|34 NUMBER_CONSTANT|202 *|800 mueff|215 )|-1
{|801 d|221 [|800 r|222 ]|221 [|800 c|222 ]|204 =|800 FastMath|235 .|802 sqrt|214 (|800 m|235 .|802 getEntry|214 (|800 r|234 ,|800 c|215 )|215 )|227 ;|219 }|-1
{|801 d|221 [|800 r|222 ]|221 [|800 c|222 ]|204 =|800 FastMath|235 .|802 log|214 (|800 m|235 .|802 getEntry|214 (|800 r|234 ,|800 c|215 )|215 )|227 ;|219 }|-1
double|800 diff|204 =|800 FastMath|235 .|802 abs|214 (|801 x|221 [|800 i|222 ]|201 -|801 repaired|221 [|800 i|222 ]|215 )|227 ;|-1
(|34 NUMBER_CONSTANT|201 -|800 ccovmu|215 )|202 *|34 NUMBER_CONSTANT|202 *|800 mueff|203 /|214 (|800 FastMath|235 .|802 pow|214 (|800 dimension|200 +|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|200 +|34 NUMBER_CONSTANT|202 *|800 mueff|215 )|-1
for|214 (|800 k|204 =|34 NUMBER_CONSTANT|227 ;|800 k|230 <|800 DIM|227 ;|247 ++|800 k|215 )|801 basis|221 [|800 i|222 ]|221 [|800 k|222 ]|240 /=|800 FastMath|235 .|802 sqrt|214 (|800 sp|215 )|227 ;|-1
{|39 double|800 f|204 =|800 FastMath|235 .|802 pow|214 (|304 new|801 DiffPow|216 ()|235 .|802 value|214 (|800 x|215 )|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|329 return|800 f|227 ;|219 }|-1
f|237 +=|800 FastMath|235 .|802 pow|214 (|800 factor|234 ,|800 i|203 /|214 (|40 x.length|201 -|34 NUMBER_CONSTANT|215 )|215 )|202 *|801 x|221 [|800 i|222 ]|202 *|801 x|221 [|800 i|222 ]|227 ;|-1
f|237 +=|800 FastMath|235 .|802 pow|214 (|800 factor|234 ,|800 i|203 /|214 (|40 x.length|201 -|34 NUMBER_CONSTANT|215 )|215 )|202 *|801 x|221 [|800 i|222 ]|202 *|801 x|221 [|800 i|222 ]|227 ;|-1
double|800 diff|204 =|800 FastMath|235 .|802 abs|214 (|800 constantValue|201 -|800 filter|235 .|802 getStateEstimation|216 ()|221 [|34 NUMBER_CONSTANT|222 ]|215 )|227 ;|-1
source|204 =|218 {|40 Double.NEGATIVE_INFINITY|234 ,|201 -|40 Double.MAX_VALUE|234 ,|201 -|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|40 Double.MIN_VALUE|234 ,|800 FastMath|235 .|802 ulp|214 (|34 NUMBER_CONSTANT|215 )|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|40 Double.MAX_VALUE|234 ,|40 Double.POSITIVE_INFINITY|219 }|-1
source|204 =|218 {|40 Double.NEGATIVE_INFINITY|234 ,|201 -|40 Double.MAX_VALUE|234 ,|201 -|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|40 Double.MIN_VALUE|234 ,|800 FastMath|235 .|802 ulp|214 (|34 NUMBER_CONSTANT|215 )|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|40 Double.MAX_VALUE|234 ,|40 Double.POSITIVE_INFINITY|219 }|-1
source|204 =|218 {|40 Double.NEGATIVE_INFINITY|234 ,|201 -|40 Double.MAX_VALUE|234 ,|201 -|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|40 Double.MIN_VALUE|234 ,|800 FastMath|235 .|802 ulp|214 (|34 NUMBER_CONSTANT|215 )|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|40 Double.MAX_VALUE|234 ,|40 Double.POSITIVE_INFINITY|219 }|-1
for|214 (|800 k|204 =|34 NUMBER_CONSTANT|227 ;|800 k|230 <|800 DIM|227 ;|247 ++|800 k|215 )|801 basis|221 [|800 i|222 ]|221 [|800 k|222 ]|240 /=|800 FastMath|235 .|802 sqrt|214 (|800 sp|215 )|227 ;|-1
{|39 double|800 f|204 =|800 FastMath|235 .|802 pow|214 (|304 new|801 DiffPow|216 ()|235 .|802 value|214 (|800 x|215 )|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|329 return|800 f|227 ;|219 }|-1
f|237 +=|800 FastMath|235 .|802 pow|214 (|800 factor|234 ,|800 i|203 /|214 (|40 x.length|201 -|34 NUMBER_CONSTANT|215 )|215 )|202 *|801 x|221 [|800 i|222 ]|202 *|801 x|221 [|800 i|222 ]|227 ;|-1
f|237 +=|800 FastMath|235 .|802 pow|214 (|800 factor|234 ,|800 i|203 /|214 (|40 x.length|201 -|34 NUMBER_CONSTANT|215 )|215 )|202 *|801 x|221 [|800 i|222 ]|202 *|801 x|221 [|800 i|222 ]|227 ;|-1
a1|204 =|800 FastMath|235 .|802 sqrt|214 (|40 FastMath.PI|202 *|800 twolpd|215 )|202 *|800 FastMath|235 .|802 exp|214 (|34 NUMBER_CONSTANT|203 /|214 (|34 NUMBER_CONSTANT|202 *|800 lambda|215 )|215 )|-1
ret|237 +=|801 c|221 [|800 i|222 ]|202 *|800 ArithmeticUtils|235 .|802 pow|214 (|800 n|234 ,|800 i|215 )|227 ;|-1
for|214 (|39 int|800 i|204 =|34 NUMBER_CONSTANT|227 ;|800 i|230 <|800 length|227 ;|800 i|247 ++|215 )|218 {|801 sample|221 [|800 i|222 ]|204 =|800 FastMath|235 .|802 random|216 ()|227 ;|219 }|-1
System|235 .|802 arraycopy|214 (|800 seed|234 ,|34 NUMBER_CONSTANT|234 ,|800 v|234 ,|34 NUMBER_CONSTANT|234 ,|800 FastMath|235 .|802 min|214 (|40 seed.length|234 ,|40 v.length|215 )|215 )|227 ;|-1
expected|204 =|800 FastMath|235 .|802 abs|214 (|800 period|215 )|201 -|800 delta|227 ;|-1
final|39 int|800 shift|204 =|800 FastMath|235 .|802 min|214 (|800 aTwos|234 ,|800 bTwos|215 )|227 ;|-1
double|800 xabs|204 =|800 FastMath|235 .|802 abs|214 (|801 v|221 [|800 i|222 ]|215 )|227 ;|-1
int|800 shift|204 =|800 FastMath|235 .|802 max|214 (|800 numerator|235 .|802 bitLength|216 ()|234 ,|800 denominator|235 .|802 bitLength|216 ()|215 )|201 -|800 FastMath|235 .|802 getExponent|214 (|40 Float.MAX_VALUE|215 )|227 ;|-1
int|800 shift|204 =|800 FastMath|235 .|802 max|214 (|800 numerator|235 .|802 bitLength|216 ()|234 ,|800 denominator|235 .|802 bitLength|216 ()|215 )|201 -|800 FastMath|235 .|802 getExponent|214 (|40 Double.MAX_VALUE|215 )|227 ;|-1
double|800 denom|204 =|800 FastMath|235 .|802 abs|214 (|800 val|215 )|230 <|800 EPS_MIN|233 ?|34 NUMBER_CONSTANT|202 *|800 EPS_MIN|226 :|34 NUMBER_CONSTANT|202 *|800 val|227 ;|-1
int|800 k|204 =|214 (|39 int|215 )|800 FastMath|235 .|802 ceil|214 (|800 n|202 *|800 d|215 )|227 ;|-1
final|39 int|800 k|204 =|214 (|39 int|215 )|800 FastMath|235 .|802 ceil|214 (|800 n|202 *|800 d|215 )|227 ;|-1
final|39 int|800 k|204 =|214 (|39 int|215 )|800 FastMath|235 .|802 ceil|214 (|800 n|202 *|800 d|215 )|227 ;|-1
{|329 return|34 NUMBER_CONSTANT|201 -|34 NUMBER_CONSTANT|202 *|800 FastMath|235 .|802 pow|214 (|34 NUMBER_CONSTANT|201 -|800 d|234 ,|800 n|215 )|227 ;|219 }|-1
double|800 err|204 =|800 FastMath|235 .|802 abs|214 (|800 actual|201 -|800 expected|215 )|203 /|800 Math|235 .|802 ulp|214 (|800 expected|215 )|227 ;|-1
double|800 denom|204 =|800 FastMath|235 .|802 abs|214 (|800 val|215 )|230 <|800 EPS_MIN|233 ?|34 NUMBER_CONSTANT|202 *|800 EPS_MIN|226 :|34 NUMBER_CONSTANT|202 *|800 val|227 ;|-1
{|329 return|800 FastMath|235 .|802 exp|214 (|800 x|215 )|201 -|800 FastMath|235 .|802 pow|214 (|40 Math.PI|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
new|801 Fraction|214 (|214 (|214 (|800 FastMath|235 .|802 abs|214 (|800 w|215 )|202 *|800 d|215 )|200 +|800 n|215 )|202 *|800 MathUtils|235 .|802 copySign|214 (|34 NUMBER_CONSTANT|234 ,|800 w|215 )|234 ,|800 d|215 )|-1
num|204 =|800 FastMath|235 .|802 abs|214 (|800 num|215 )|227 ;|-1
final|39 double|800 delta|204 =|34 NUMBER_CONSTANT|202 *|800 FastMath|235 .|802 abs|214 (|800 expected|215 )|227 ;|-1
final|39 double|800 delta|204 =|34 NUMBER_CONSTANT|202 *|800 FastMath|235 .|802 abs|214 (|800 expected|215 )|227 ;|-1
final|39 double|800 delta|204 =|34 NUMBER_CONSTANT|202 *|800 FastMath|235 .|802 abs|214 (|800 expected|215 )|227 ;|-1
final|39 double|800 delta|204 =|34 NUMBER_CONSTANT|202 *|800 FastMath|235 .|802 abs|214 (|800 expected|215 )|227 ;|-1
final|39 double|800 delta|204 =|34 NUMBER_CONSTANT|202 *|800 FastMath|235 .|802 abs|214 (|800 expected|215 )|227 ;|-1
final|39 double|800 delta|204 =|34 NUMBER_CONSTANT|202 *|800 FastMath|235 .|802 abs|214 (|800 expected|215 )|227 ;|-1
final|39 double|800 delta|204 =|34 NUMBER_CONSTANT|202 *|800 FastMath|235 .|802 abs|214 (|800 expected|215 )|227 ;|-1
h|237 +=|800 p_i|202 *|800 FastMath|235 .|802 log|214 (|800 p_i|215 )|227 ;|-1
h|237 +=|800 p_ij|202 *|800 FastMath|235 .|802 log|214 (|800 p_ij|215 )|227 ;|-1
if|214 (|800 FastMath|235 .|802 abs|214 (|800 sumExpected|201 -|800 sumObserved|215 )|231 >|34 NUMBER_CONSTANT|215 )|218 {|800 ratio|204 =|800 sumObserved|203 /|800 sumExpected|227 ;|800 rescale|204 =|9 true|227 ;|219 }|-1
final|39 double|800 delta|204 =|34 NUMBER_CONSTANT|202 *|800 FastMath|235 .|802 abs|214 (|800 expected|215 )|227 ;|-1
final|39 double|800 delta|204 =|34 NUMBER_CONSTANT|202 *|800 FastMath|235 .|802 abs|214 (|800 expected|215 )|227 ;|-1
final|39 double|800 delta|204 =|34 NUMBER_CONSTANT|202 *|800 FastMath|235 .|802 abs|214 (|800 expected|215 )|227 ;|-1
final|39 double|800 delta|204 =|34 NUMBER_CONSTANT|202 *|800 FastMath|235 .|802 abs|214 (|800 expected|215 )|227 ;|-1
final|39 double|800 delta|204 =|34 NUMBER_CONSTANT|202 *|800 FastMath|235 .|802 abs|214 (|800 expected|215 )|227 ;|-1
public|39 double|802 estimateRegressionStandardError|216 ()|218 {|329 return|800 FastMath|235 .|802 sqrt|214 (|802 estimateErrorVariance|216 ()|215 )|227 ;|219 }|-1
Assert|235 .|802 assertTrue|214 (|45 STRING_CONSTANT|234 ,|800 FastMath|235 .|802 abs|214 (|800 v|201 -|800 randomData|235 .|802 nextUniform|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|231 >|34 NUMBER_CONSTANT|215 )|227 ;|-1
System|235 .|802 arraycopy|214 (|800 seed|234 ,|34 NUMBER_CONSTANT|234 ,|800 rsl|234 ,|34 NUMBER_CONSTANT|234 ,|800 FastMath|235 .|802 min|214 (|800 seedLen|234 ,|800 rslLen|215 )|215 )|227 ;|-1
FastMath|235 .|802 sqrt|214 (|801 d|221 [|800 col|222 ]|215 )|230 <|801 tol|221 [|800 col|222 ]|-1
FastMath|235 .|802 sqrt|214 (|801 d|221 [|800 i|222 ]|215 )|230 <|801 tol|221 [|800 i|222 ]|-1
final|39 double|800 result|204 =|34 NUMBER_CONSTANT|202 *|800 Erf|235 .|802 erfc|214 (|801 ref|221 [|800 i|222 ]|221 [|34 NUMBER_CONSTANT|222 ]|203 /|800 FastMath|235 .|802 sqrt|214 (|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
final|39 double|800 originalDelta|204 =|800 FastMath|235 .|802 random|216 ()|227 ;|-1
final|39 double|800 gn|204 =|800 factor1|202 *|800 FastMath|235 .|802 log|214 (|800 qExp1|215 )|202 *|800 oneOverN|227 ;|-1
{|83 public|39 double|802 value|214 (|39 double|800 x|215 )|218 {|329 return|34 NUMBER_CONSTANT|203 /|214 (|34 NUMBER_CONSTANT|202 *|800 FastMath|235 .|802 sqrt|214 (|800 x|215 )|215 )|227 ;|219 }|219 }|-1
f|204 =|304 new|801 UnivariateFunction|216 ()|218 {|83 public|39 double|802 value|214 (|39 double|800 x|215 )|218 {|329 return|800 FastMath|235 .|802 sqrt|214 (|800 x|215 )|227 ;|219 }|219 }|-1
{|800 minValue|204 =|800 entry|227 ;|800 minPos|204 =|800 i|227 ;|313 if|214 (|800 pivotSelection|236 ==|40 PivotSelectionRule.BLAND|249 &&|802 isValidPivotColumn|214 (|800 tableau|234 ,|800 i|215 )|215 )|218 {|500 break;|219 }|219 }|-1
this|235 .|800 pivotSelection|204 =|40 PivotSelectionRule.DANTZIG|227 ;|-1
solution|204 =|304 new|801 SimplexSolver|216 ()|235 .|802 optimize|214 (|800 DEFAULT_MAX_ITER|234 ,|800 f|234 ,|304 new|801 LinearConstraintSet|214 (|800 constraints|215 )|234 ,|40 GoalType.MINIMIZE|234 ,|304 new|801 NonNegativeConstraint|214 (|9 true|215 )|234 ,|40 PivotSelectionRule.BLAND|215 )|-1
{|315 this|214 (|800 f|234 ,|800 constraints|234 ,|800 goalType|234 ,|800 restrictToNonNegative|234 ,|800 epsilon|234 ,|40 SimplexSolver.DEFAULT_ULPS|215 )|227 ;|219 }|-1
if|214 (|800 Precision|235 .|802 compareTo|214 (|800 entry|234 ,|34 NUMBER_CONSTANT|234 ,|800 cutOff|215 )|231 >|34 NUMBER_CONSTANT|215 )|218 {|329 return|9 true|227 ;|219 }|-1
final|800 Point|230 <|800 S|231 >|800 point|-1
final|800 Point|230 <|800 Euclidean2D|231 >|800 point|-1
final|800 Point|230 <|800 Euclidean2D|231 >|800 point|-1
final|800 Point|230 <|800 Euclidean2D|231 >|800 point|-1
final|800 Point|230 <|800 Euclidean1D|231 >|800 point|-1
final|800 Point|230 <|800 Euclidean2D|231 >|800 point|-1
Point|230 <|800 S|231 >|800 point|-1
final|800 Point|230 <|800 Euclidean3D|231 >|800 point|-1
final|800 Point|230 <|800 Euclidean3D|231 >|800 point|-1
final|800 Point|230 <|800 Euclidean1D|231 >|800 point|-1
final|800 Point|230 <|800 Euclidean3D|231 >|800 point|-1
final|800 Point|230 <|800 S|231 >|800 point|-1
{|83 final|800 Vector2D|800 v2|204 =|214 (|800 Vector2D|215 )|800 v|227 ;|329 return|800 MathArrays|235 .|802 linearCombination|214 (|800 x|234 ,|40 v2.x|234 ,|800 y|234 ,|40 v2.y|215 )|227 ;|219 }|-1
final|800 Point|230 <|800 S|231 >|800 barycenter|-1
final|800 Point|230 <|800 S|231 >|800 point|-1
final|800 Point|230 <|800 S|231 >|800 point|-1
final|800 Point|230 <|800 Euclidean1D|231 >|800 point|-1
public|801 ArcsSet|802 wholeSpace|216 ()|218 {|329 return|304 new|801 ArcsSet|214 (|800 tolerance|215 )|227 ;|219 }|-1
{|329 return|800 Vector3D|235 .|802 angle|214 (|800 pole|234 ,|800 direction|215 )|201 -|34 NUMBER_CONSTANT|202 *|40 FastMath.PI|227 ;|219 }|-1
public|801 SphericalPolygonsSet|802 wholeSpace|216 ()|218 {|329 return|304 new|801 SphericalPolygonsSet|214 (|800 tolerance|215 )|227 ;|219 }|-1
public|801 SubCircle|802 wholeHyperplane|216 ()|218 {|329 return|304 new|801 SubCircle|214 (|315 this|234 ,|304 new|801 ArcsSet|214 (|800 tolerance|215 )|215 )|227 ;|219 }|-1
{|315 this|214 (|40 circle.pole|234 ,|40 circle.x|234 ,|40 circle.y|234 ,|40 circle.tolerance|215 )|227 ;|219 }|-1
{|329 return|304 new|801 ArcsSet|214 (|800 tree|234 ,|800 tolerance|215 )|227 ;|219 }|-1
final|801 Vector1D|800 x|204 =|800 thisLine|235 .|802 toSubSpace|214 (|214 (|800 Point|230 <|800 Euclidean2D|231 >|215 )|800 crossing|215 )|227 ;|-1
final|801 Vector1D|800 x|204 =|800 thisLine|235 .|802 toSubSpace|214 (|214 (|800 Point|230 <|800 Euclidean2D|231 >|215 )|800 crossing|215 )|227 ;|-1
final|39 double|800 offset|204 =|800 plane|235 .|802 getOffset|214 (|214 (|800 Point|230 <|800 Euclidean3D|231 >|215 )|800 point|215 )|227 ;|-1
Point|230 <|800 Euclidean2D|231 >|800 p|-1
Point|230 <|800 Euclidean1D|231 >|800 p|-1
Point|230 <|800 Euclidean3D|231 >|800 v|-1
final|801 Vector3D|800 point|204 =|800 line|235 .|802 toSpace|214 (|214 (|800 Point|230 <|800 Euclidean1D|231 >|215 )|40 Vector1D.ZERO|215 )|227 ;|-1
public|801 SubChord|802 copySelf|216 ()|218 {|329 return|304 new|801 SubChord|214 (|800 chord|235 .|802 copySelf|216 ()|234 ,|800 limits|215 )|227 ;|219 }|-1
{|315 this|235 .|800 upper|204 =|40 MathUtils.TWO_PI|200 +|800 lower|227 ;|219 }|-1
Arc|800 arc|204 =|304 new|801 Arc|214 (|34 NUMBER_CONSTANT|234 ,|800 FastMath|235 .|802 nextAfter|214 (|34 NUMBER_CONSTANT|234 ,|40 Double.POSITIVE_INFINITY|215 )|234 ,|40 Precision.EPSILON|215 )|227 ;|-1
{|329 return|802 buildNew|214 (|800 hyperplane|235 .|802 copySelf|216 ()|234 ,|800 remainingRegion|215 )|227 ;|219 }|-1
Segment|800 segment|204 =|304 new|801 Segment|214 (|800 p1|234 ,|800 p2|234 ,|304 new|801 Line|214 (|800 p1|234 ,|800 p2|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
final|801 EdgesBuilder|800 visitor|204 =|304 new|801 EdgesBuilder|214 (|800 root|234 ,|802 getTolerance|216 ()|215 )|227 ;|-1
{|329 return|304 new|801 SphericalPolygonsSet|214 (|800 tree|234 ,|802 getTolerance|216 ()|215 )|227 ;|219 }|-1
{|349 super|214 (|800 boundary|234 ,|800 tolerance|215 )|227 ;|219 }|-1
{|349 super|214 (|800 tree|234 ,|800 tolerance|215 )|227 ;|219 }|-1
public|802 SphericalPolygonsSet|214 (|83 final|39 double|800 tolerance|215 )|218 {|349 super|214 (|800 tolerance|215 )|227 ;|219 }|-1
return|802 getRemainingRegion|216 ()|235 .|802 side|214 (|304 new|801 OrientedPoint|214 (|800 x|234 ,|800 direct|234 ,|800 thisLine|235 .|802 getTolerance|216 ()|215 )|215 )|227 ;|-1
public|801 SubLine|802 wholeLine|216 ()|218 {|329 return|304 new|801 SubLine|214 (|315 this|234 ,|304 new|801 IntervalsSet|214 (|800 tolerance|215 )|215 )|227 ;|219 }|-1
{|329 return|802 distance|214 (|800 p|215 )|230 <|800 tolerance|227 ;|219 }|-1
final|800 BSPTree|230 <|800 S|231 >|800 cell|204 =|800 node|235 .|802 getCell|214 (|800 point|234 ,|800 tolerance|215 )|227 ;|-1
{|329 return|304 new|801 PolyhedronsSet|214 (|800 tree|234 ,|802 getTolerance|216 ()|215 )|227 ;|219 }|-1
public|801 IntervalsSet|802 wholeSpace|216 ()|218 {|329 return|304 new|801 IntervalsSet|214 (|800 tolerance|215 )|227 ;|219 }|-1
{|802 add|214 (|304 new|801 NestedLoops|214 (|800 bLoop|234 ,|800 tolerance|215 )|215 )|227 ;|219 }|-1
return|304 new|801 OrientedPoint|214 (|800 newLoc|234 ,|800 op|235 .|802 isDirect|216 ()|234 ,|40 originalLine.tolerance|215 )|235 .|802 wholeHyperplane|216 ()|227 ;|-1
{|329 return|800 FastMath|235 .|802 abs|214 (|802 getOffset|214 (|800 p|215 )|215 )|230 <|800 tolerance|227 ;|219 }|-1
public|801 PolygonsSet|802 wholeSpace|216 ()|218 {|329 return|304 new|801 PolygonsSet|214 (|800 tolerance|215 )|227 ;|219 }|-1
public|801 SubLine|802 wholeHyperplane|216 ()|218 {|329 return|304 new|801 SubLine|214 (|315 this|234 ,|304 new|801 IntervalsSet|214 (|800 tolerance|215 )|215 )|227 ;|219 }|-1
if|214 (|800 FastMath|235 .|802 abs|214 (|800 d|215 )|230 <|800 tolerance|215 )|218 {|329 return|500 null|227 ;|219 }|-1
{|329 return|304 new|801 PolygonsSet|214 (|800 tree|234 ,|802 getTolerance|216 ()|215 )|227 ;|219 }|-1
if|214 (|800 line|236 ==|500 null|215 )|218 {|800 line|204 =|304 new|801 Line|214 (|800 start|235 .|802 getLocation|216 ()|234 ,|800 end|235 .|802 getLocation|216 ()|234 ,|800 hyperplaneThickness|215 )|227 ;|219 }|-1
{|329 return|304 new|801 ArcsSet|214 (|800 tree|234 ,|802 getTolerance|216 ()|215 )|227 ;|219 }|-1
{|329 return|304 new|801 LimitAngle|214 (|304 new|801 S1Point|214 (|800 alpha|215 )|234 ,|9 true|234 ,|802 getTolerance|216 ()|215 )|235 .|802 wholeHyperplane|216 ()|227 ;|219 }|-1
{|329 return|304 new|801 LimitAngle|214 (|304 new|801 S1Point|214 (|800 alpha|215 )|234 ,|9 false|234 ,|802 getTolerance|216 ()|215 )|235 .|802 wholeHyperplane|216 ()|227 ;|219 }|-1
{|349 super|214 (|800 boundary|234 ,|800 tolerance|215 )|227 ;|219 }|-1
{|349 super|214 (|800 tree|234 ,|800 tolerance|215 )|227 ;|219 }|-1
public|802 ArcsSet|214 (|83 final|39 double|800 tolerance|215 )|218 {|349 super|214 (|800 tolerance|215 )|227 ;|219 }|-1
Segment|800 segment|204 =|304 new|801 Segment|214 (|800 start|234 ,|800 end|234 ,|304 new|801 Line|214 (|800 start|234 ,|800 end|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
{|329 return|304 new|801 Line|214 (|800 start|234 ,|800 end|234 ,|34 NUMBER_CONSTANT|215 )|235 .|802 wholeHyperplane|216 ()|227 ;|219 }|-1
return|304 new|801 PolygonsSet|214 (|800 edges|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 BoundaryProjector|800 projector|204 =|304 new|801 BoundaryProjector|214 (|800 polyhedronsSet|235 .|802 getTolerance|216 ()|215 )|227 ;|-1
public|801 PolyhedronsSet|802 wholeSpace|216 ()|218 {|329 return|304 new|801 PolyhedronsSet|214 (|800 tolerance|215 )|227 ;|219 }|-1
public|801 SubPlane|802 wholeHyperplane|216 ()|218 {|329 return|304 new|801 SubPlane|214 (|315 this|234 ,|304 new|801 PolygonsSet|214 (|800 tolerance|215 )|215 )|227 ;|219 }|-1
final|801 Plane|800 plane|204 =|304 new|801 Plane|214 (|800 origin|235 .|802 add|214 (|800 translation|215 )|234 ,|800 w|234 ,|800 tolerance|215 )|227 ;|-1
PolyhedronsSet|800 tree|204 =|304 new|801 PolyhedronsSet|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|329 return|304 new|801 IntervalsSet|214 (|800 tree|234 ,|802 getTolerance|216 ()|215 )|227 ;|219 }|-1
boundary|235 .|802 add|214 (|304 new|801 LimitAngle|214 (|304 new|801 S1Point|214 (|40 MathUtils.TWO_PI|201 -|34 NUMBER_CONSTANT|215 )|234 ,|9 true|234 ,|34 NUMBER_CONSTANT|215 )|235 .|802 wholeHyperplane|216 ()|215 )|227 ;|-1
(|800 Boolean|215 )|802 getFirstLeaf|214 (|802 getTree|214 (|9 false|215 )|215 )|235 .|802 getAttribute|216 ()|-1
Assert|235 .|802 assertTrue|214 (|800 projection|235 .|802 getOriginal|216 ()|236 ==|800 v|215 )|227 ;|-1
Iterable|230 <|800 P|231 >|800 points|-1
final|800 Iterable|230 <|800 P|231 >|800 points|-1
ConvexHull2D|800 hull|204 =|800 generator|235 .|802 generate|214 (|802 reducePoints|214 (|800 points|215 )|215 )|227 ;|-1
GrahamScan|800 generator|204 =|304 new|801 GrahamScan|216 ()|227 ;|-1
RandomGenerator|800 random|204 =|304 new|801 MersenneTwister|216 ()|227 ;|-1
@|800 Before|83 public|39 void|802 setUp|216 ()|218 {|800 generator|204 =|802 createConvexHullGenerator|214 (|9 false|215 )|227 ;|800 random|204 =|304 new|801 MersenneTwister|214 (|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
final|800 Iterable|230 <|800 Vector2D|231 >|800 points|-1
Assert|235 .|802 assertTrue|214 (|800 hull|235 .|802 getVertices|216 ()|235 .|800 length|236 ==|34 NUMBER_CONSTANT|215 )|227 ;|-1
ConvexHullGenerator2D|800 generator|204 =|304 new|801 MonotoneChain|214 (|9 true|215 )|227 ;|-1
public|801 Segment|85 []|802 getLineSegments|216 ()|218 {|329 return|802 retrieveLineSegments|216 ()|235 .|802 clone|216 ()|227 ;|219 }|-1
EnclosingBall|230 <|800 Sphere2D|234 ,|800 S2Point|231 >|800 cap|204 =|304 new|801 SphericalCapGenerator|214 (|40 Vector3D.PLUS_I|215 )|235 .|802 ballOnSupport|214 (|800 support|215 )|227 ;|-1
cap|204 =|304 new|801 SphericalCapGenerator|214 (|304 new|801 Vector3D|214 (|201 -|34 NUMBER_CONSTANT|234 ,|201 -|34 NUMBER_CONSTANT|234 ,|201 -|34 NUMBER_CONSTANT|215 )|215 )|235 .|802 ballOnSupport|214 (|800 support|215 )|-1
cap|204 =|304 new|801 SphericalCapGenerator|214 (|304 new|801 Vector3D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|235 .|802 ballOnSupport|214 (|800 support|215 )|-1
EnclosingBall|230 <|800 Sphere2D|234 ,|800 S2Point|231 >|800 cap|204 =|304 new|801 SphericalCapGenerator|214 (|40 Vector3D.PLUS_K|215 )|235 .|802 ballOnSupport|214 (|800 support|215 )|227 ;|-1
EnclosingBall|230 <|800 Sphere2D|234 ,|800 S2Point|231 >|800 cap|204 =|304 new|801 SphericalCapGenerator|214 (|40 Vector3D.PLUS_K|215 )|235 .|802 ballOnSupport|214 (|800 support|215 )|227 ;|-1
{|329 return|304 new|801 EnclosingBall|230 <|800 Sphere2D|234 ,|800 S2Point|231 >|214 (|304 new|800 S2Point|214 (|800 inside|215 )|234 ,|201 -|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 protected|801 ConvexHullGenerator2D|802 createConvexHullGenerator|214 (|39 boolean|800 includeCollinearPoints|215 )|218 {|329 return|304 new|801 MonotoneChain|214 (|800 includeCollinearPoints|215 )|227 ;|219 }|-1
{|329 return|802 getOptimizer|216 ()|235 .|802 optimize|214 (|802 getProblem|214 (|800 points|215 )|215 )|235 .|802 getPoint|216 ()|227 ;|219 }|-1
final|39 boolean|800 useLU|-1
{|329 return|304 new|800 LevenbergMarquardtOptimizer|216 ()|227 ;|219 }|-1
optimizer|204 =|304 new|800 LevenbergMarquardtOptimizer|216 ()|235 .|802 withInitialStepBoundFactor|214 (|800 initialStepBoundFactor|215 )|235 .|802 withCostRelativeTolerance|214 (|800 costRelativeTolerance|215 )|235 .|802 withParameterRelativeTolerance|214 (|800 parRelativeTolerance|215 )|235 .|802 withOrthoTolerance|214 (|800 orthoTolerance|215 )|235 .|802 withRankingThreshold|214 (|40 Precision.SAFE_MIN|215 )|-1
{|329 return|304 new|801 LeastSquaresProblemImpl|214 (|800 model|234 ,|800 jacobian|234 ,|800 observed|234 ,|800 start|234 ,|800 checker|234 ,|800 maxEvaluations|234 ,|800 maxIterations|215 )|227 ;|219 }|-1
public|801 RealMatrix|802 computeJacobian|216 ()|218 {|329 return|315 this|235 .|800 jacobian|227 ;|219 }|-1
public|39 double|85 []|802 computeValue|216 ()|218 {|329 return|315 this|235 .|800 values|235 .|802 toArray|216 ()|227 ;|219 }|-1
@|800 Test|83 public|39 void|802 testGaussNewtonQR|214 (|215 )|301 throws|800 Exception|218 {|802 check|214 (|304 new|801 GaussNewtonOptimizer|214 (|40 Decomposition.QR|215 )|215 )|227 ;|219 }|-1
@|800 Test|83 public|39 void|802 testGaussNewtonLU|214 (|215 )|301 throws|800 Exception|218 {|802 check|214 (|304 new|801 GaussNewtonOptimizer|214 (|40 Decomposition.LU|215 )|215 )|227 ;|219 }|-1
final|800 ConvergenceChecker|230 <|800 Evaluation|231 >|800 checker|-1
final|800 ConvergenceChecker|230 <|800 Evaluation|231 >|800 checker|-1
final|800 ConvergenceChecker|230 <|800 Evaluation|231 >|800 checker|-1
final|800 ConvergenceChecker|230 <|800 Evaluation|231 >|800 checker|-1
final|800 ConvergenceChecker|230 <|800 Evaluation|231 >|800 checker|-1
{|329 return|304 new|801 LeastSquaresBuilder|216 ()|235 .|802 checkerPair|214 (|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|235 .|802 maxEvaluations|214 (|34 NUMBER_CONSTANT|215 )|235 .|802 maxIterations|214 (|802 getMaxIterations|216 ()|215 )|227 ;|219 }|-1
builder|214 (|800 circle|215 )|235 .|802 checkerPair|214 (|304 new|801 SimpleVectorValueChecker|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|235 .|802 maxIterations|214 (|40 Integer.MAX_VALUE|215 )|-1
function|235 .|802 checkTheoreticalMinParams|214 (|800 optimum|235 .|802 getPoint|216 ()|235 .|802 toArray|216 ()|215 )|227 ;|-1
RealVector|800 point|-1
RealVector|802 computeValue|214 (|215 )|227 ;|-1
RealVector|800 point|-1
RealVector|802 getStart|214 (|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 optimum|235 .|802 computeRMS|216 ()|234 ,|800 TOl|215 )|227 ;|-1
final|801 RealVector|800 point|-1
final|801 RealVector|800 point|-1
final|801 RealVector|800 start|-1
final|801 RealVector|800 target|-1
public|801 RealVector|802 computeValue|216 ()|218 {|329 return|315 this|235 .|800 weightSqrt|235 .|802 operate|214 (|800 unweighted|235 .|802 computeValue|216 ()|215 )|227 ;|219 }|-1
catch|214 (|801 NonPositiveDefiniteMatrixException|800 e|215 )|218 {|320 throw|304 new|801 ConvergenceException|214 (|40 LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM|234 ,|800 e|215 )|227 ;|219 }|-1
catch|214 (|801 SingularMatrixException|800 e|215 )|218 {|320 throw|304 new|801 ConvergenceException|214 (|40 LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM|234 ,|800 e|215 )|227 ;|219 }|-1
catch|214 (|801 SingularMatrixException|800 e|215 )|218 {|320 throw|304 new|801 ConvergenceException|214 (|40 LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM|234 ,|800 e|215 )|227 ;|219 }|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 optimum|235 .|802 getRMS|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 optimum|235 .|802 getRMS|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 optimum|235 .|802 getRMS|216 ()|234 ,|800 TOl|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 optimum|235 .|802 getRMS|216 ()|234 ,|800 TOl|215 )|227 ;|-1
Assert|235 .|802 assertTrue|214 (|800 optimum|235 .|802 getRMS|216 ()|231 >|34 NUMBER_CONSTANT|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 optimum|235 .|802 getRMS|216 ()|234 ,|800 TOl|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 optimum|235 .|802 getRMS|216 ()|234 ,|800 TOl|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 optimum|235 .|802 getRMS|216 ()|234 ,|800 TOl|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 optimum|235 .|802 getRMS|216 ()|234 ,|800 TOl|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 optimum|235 .|802 getRMS|216 ()|234 ,|800 TOl|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 optimum|235 .|802 getRMS|216 ()|234 ,|800 TOl|215 )|227 ;|-1
RealVector|802 getValue|214 (|215 )|227 ;|-1
final|39 double|800 cost|204 =|800 lsp|235 .|802 evaluate|214 (|800 params|215 )|235 .|802 getCost|216 ()|227 ;|-1
final|801 RealVector|800 sigma|204 =|800 lsp|235 .|802 evaluate|214 (|800 regress|215 )|235 .|802 getSigma|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 RealVector|800 sigma|204 =|800 lsp|235 .|802 evaluate|214 (|800 init|215 )|235 .|802 getSigma|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
function|235 .|802 checkTheoreticalMinCost|214 (|800 optimum|235 .|802 getRMS|216 ()|215 )|227 ;|-1
final|39 double|85 []|800 asymptoticStandardErrorFound|204 =|800 optimum|235 .|802 getSigma|214 (|34 NUMBER_CONSTANT|215 )|235 .|802 toArray|216 ()|227 ;|-1
final|801 RealMatrix|800 covarMatrix|204 =|800 optimum|235 .|802 getCovariances|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|39 double|800 actual|204 =|800 lsp|235 .|802 evaluate|214 (|800 lsp|235 .|802 getStart|216 ()|215 )|235 .|802 getRMS|216 ()|227 ;|-1
final|39 double|800 cost|204 =|800 lsp|235 .|802 evaluate|214 (|800 lsp|235 .|802 getStart|216 ()|215 )|235 .|802 getCost|216 ()|227 ;|-1
Assert|235 .|802 assertArrayEquals|214 (|800 evaluation|235 .|802 getResiduals|216 ()|235 .|802 toArray|216 ()|234 ,|304 new|39 double|85 []|218 {|34 NUMBER_CONSTANT|234 ,|201 -|34 NUMBER_CONSTANT|219 }|234 ,|40 Precision.EPSILON|215 )|227 ;|-1
Assert|235 .|802 assertNotSame|214 (|45 STRING_CONSTANT|234 ,|800 v1|235 .|802 getDataRef|216 ()|234 ,|800 v_copy|235 .|802 toArray|216 ()|215 )|227 ;|-1
{|329 return|304 new|801 LocalLeastSquaresProblem|214 (|800 model|234 ,|800 observed|234 ,|800 start|234 ,|800 checker|234 ,|800 maxEvaluations|234 ,|800 maxIterations|215 )|227 ;|219 }|-1
assertEquals|214 (|800 TOl|234 ,|800 optimum|235 .|802 getResiduals|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
line|204 =|304 new|801 LineSearch|214 (|315 this|234 ,|800 lineRel|234 ,|800 lineAbs|215 )|227 ;|-1
line|204 =|304 new|801 LineSearch|214 (|315 this|234 ,|800 lineRel|234 ,|800 lineAbs|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|315 this|214 (|800 updateFormula|234 ,|800 checker|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|304 new|801 IdentityPreconditioner|216 ()|215 )|227 ;|219 }|-1
penalty|237 +=|800 diff|227 ;|-1
public|802 FitnessFunction|216 ()|218 {|800 isRepairMode|204 =|9 true|227 ;|219 }|-1
{|349 super|235 .|802 newSampleData|214 (|800 data|234 ,|800 nobs|234 ,|800 nvars|215 )|227 ;|800 qr|204 =|304 new|801 QRDecomposition|214 (|802 getX|216 ()|234 ,|800 threshold|215 )|227 ;|219 }|-1
public|801 RealVector|802 getResiduals|216 ()|218 {|329 return|800 residuals|227 ;|219 }|-1
public|801 RealVector|802 getPoint|216 ()|218 {|329 return|800 point|227 ;|219 }|-1
public|801 RealMatrix|802 getJacobian|216 ()|218 {|329 return|800 jacobian|227 ;|219 }|-1
super|214 (|800 randomData|235 .|802 getRandomGenerator|216 ()|215 )|227 ;|-1
@|800 Override|83 protected|801 RealDistribution|802 getKernel|214 (|801 SummaryStatistics|800 bStats|215 )|218 {|329 return|304 new|801 ConstantRealDistribution|214 (|800 bStats|235 .|802 getMean|216 ()|215 )|227 ;|219 }|-1
return|304 new|801 Median|216 ()|235 .|802 withEstimationType|214 (|800 type|215 )|235 .|802 withNaNStrategy|214 (|800 strategy|215 )|227 ;|-1
double|800 result|204 =|304 new|801 Percentile|214 (|800 p|215 )|235 .|802 withEstimationType|214 (|800 e|215 )|235 .|802 withNaNStrategy|214 (|800 nanStrategy|215 )|235 .|802 evaluate|214 (|800 data|215 )|227 ;|-1
{|304 new|801 Percentile|214 (|34 NUMBER_CONSTANT|215 )|235 .|802 withEstimationType|214 (|40 Percentile.EstimationType.LEGACY|215 )|235 .|802 withNaNStrategy|214 (|500 null|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|200 +|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
new|801 Percentile|214 (|34 NUMBER_CONSTANT|215 )|235 .|802 withEstimationType|214 (|40 Percentile.EstimationType.R_9|215 )|235 .|802 withNaNStrategy|214 (|40 NaNStrategy.FAILED|215 )|235 .|802 evaluate|214 (|800 specialValues|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|329 return|304 new|801 Percentile|214 (|800 quantile|215 )|235 .|802 withEstimationType|214 (|800 type|215 )|235 .|802 withNaNStrategy|214 (|800 nanStrategy|215 )|235 .|802 withPivotingStrategy|214 (|800 pivotingStrategy|215 )|227 ;|219 }|-1
final|801 BicubicSplineInterpolator|800 bsi|204 =|304 new|801 BicubicSplineInterpolator|214 (|9 true|215 )|227 ;|-1
return|304 new|801 BicubicSplineInterpolatingFunction|214 (|800 xval|234 ,|800 yval|234 ,|800 fval|234 ,|800 dFdX|234 ,|800 dFdY|234 ,|800 d2FdXdY|234 ,|800 initializeDerivatives|215 )|227 ;|-1
final|800 FieldMatrix|230 <|800 BigFraction|231 >|800 H|204 =|315 this|235 .|802 createExactH|214 (|800 d|234 ,|800 n|215 )|227 ;|-1
final|801 Percentile|800 p|204 =|802 getUnivariateStatistic|216 ()|227 ;|-1
final|801 Percentile|800 p|204 =|802 getUnivariateStatistic|216 ()|227 ;|-1
final|801 Percentile|800 p|204 =|802 getUnivariateStatistic|216 ()|227 ;|-1
{|303 for|214 (|83 final|40 Percentile.EstimationType|800 e|226 :|40 Percentile.EstimationType|235 .|802 values|216 ()|215 )|218 {|802 reset|214 (|800 quantile|234 ,|800 e|215 )|227 ;|802 testWeightedConsistency|216 ()|227 ;|219 }|219 }|-1
{|303 for|214 (|83 final|40 Percentile.EstimationType|800 e|226 :|40 Percentile.EstimationType|235 .|802 values|216 ()|215 )|218 {|802 reset|214 (|800 quantile|234 ,|800 e|215 )|227 ;|802 testEvaluateArraySegment|216 ()|227 ;|219 }|219 }|-1
{|303 for|214 (|83 final|40 Percentile.EstimationType|800 e|226 :|40 Percentile.EstimationType|235 .|802 values|216 ()|215 )|218 {|802 reset|214 (|800 quantile|234 ,|800 e|215 )|227 ;|802 testEvaluateArraySegmentWeighted|216 ()|227 ;|219 }|219 }|-1
final|801 UnivariateStatistic|800 percentile|204 =|802 getUnivariateStatistic|216 ()|227 ;|-1
final|801 UnivariateStatistic|800 percentile|204 =|802 getUnivariateStatistic|216 ()|227 ;|-1
final|801 Percentile|800 percentile|204 =|304 new|801 Percentile|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|329 return|304 new|801 Median|214 (|802 getEstimationType|216 ()|234 ,|800 newNaNStrategy|234 ,|802 getKthSelector|216 ()|215 )|227 ;|219 }|-1
{|329 return|304 new|801 Median|214 (|800 newEstimationType|234 ,|802 getNaNStrategy|216 ()|234 ,|802 getKthSelector|216 ()|215 )|227 ;|219 }|-1
return|40 work.length|236 ==|34 NUMBER_CONSTANT|233 ?|40 Double.NaN|226 :|800 estimationType|235 .|802 evaluate|214 (|800 work|234 ,|800 pivotsHeap|234 ,|800 p|234 ,|800 kthSelector|215 )|227 ;|-1
kthSelector|204 =|800 original|235 .|802 getKthSelector|216 ()|227 ;|-1
final|39 double|800 Umin|204 =|214 (|39 long|215 )|40 x.length|202 *|40 y.length|201 -|800 Umax|227 ;|-1
{|329 return|304 new|801 LazyUnweightedEvaluation|214 (|214 (|800 ValueAndJacobianFunction|215 )|800 model|234 ,|800 target|234 ,|800 p|215 )|227 ;|219 }|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|214 (|214 (|800 ResizableDoubleArray|215 )|800 da|215 )|235 .|802 getContractionCriterion|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
ResizableDoubleArray|800 testDa|204 =|304 new|801 ResizableDoubleArray|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|40 ResizableDoubleArray.ExpansionMode.ADDITIVE|215 )|227 ;|-1
testDa|204 =|304 new|801 ResizableDoubleArray|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|40 ResizableDoubleArray.ExpansionMode.ADDITIVE|215 )|227 ;|-1
ResizableDoubleArray|800 testDa|204 =|304 new|801 ResizableDoubleArray|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|40 ResizableDoubleArray.ExpansionMode.ADDITIVE|215 )|227 ;|-1
RandomDataGenerator|800 random|204 =|304 new|801 RandomDataGenerator|216 ()|227 ;|-1
empiricalDistribution|204 =|304 new|801 EmpiricalDistribution|214 (|800 binCount|234 ,|800 randomData|235 .|802 getRandomGenerator|216 ()|215 )|227 ;|-1
{|315 this|235 .|800 randomData|204 =|304 new|801 RandomDataGenerator|214 (|800 generator|215 )|227 ;|219 }|-1
{|315 this|235 .|800 randomData|204 =|800 randomData|235 .|802 getDelegate|216 ()|227 ;|219 }|-1
{|329 return|214 (|40 MathUtils.PI_SQUARED|203 /|34 NUMBER_CONSTANT|215 )|202 *|214 (|34 NUMBER_CONSTANT|203 /|214 (|800 s|202 *|800 s|215 )|215 )|227 ;|219 }|-1
final|801 NormalDistribution|800 standardNormal|204 =|304 new|801 NormalDistribution|214 (|500 null|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 FDistribution|800 fdist|204 =|304 new|801 FDistribution|214 (|500 null|234 ,|40 a.dfbg|234 ,|40 a.dfwg|215 )|227 ;|-1
final|801 ChiSquaredDistribution|800 distribution|204 =|304 new|801 ChiSquaredDistribution|214 (|500 null|234 ,|214 (|39 double|215 )|40 observed1.length|201 -|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 ChiSquaredDistribution|800 distribution|204 =|304 new|801 ChiSquaredDistribution|214 (|500 null|234 ,|40 expected.length|201 -|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 ChiSquaredDistribution|800 distribution|204 =|304 new|801 ChiSquaredDistribution|214 (|500 null|234 ,|40 expected.length|201 -|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 NormalDistribution|800 standardNormal|204 =|304 new|801 NormalDistribution|214 (|500 null|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 BinomialDistribution|800 distribution|204 =|304 new|801 BinomialDistribution|214 (|500 null|234 ,|800 numberOfTrials|234 ,|800 probability|215 )|227 ;|-1
{|349 super|235 .|802 newXSampleData|214 (|800 x|215 )|227 ;|800 qr|204 =|304 new|801 QRDecomposition|214 (|802 getX|216 ()|234 ,|800 threshold|215 )|227 ;|219 }|-1
t|235 .|802 insertInTree|214 (|800 parentTree|234 ,|800 isPlusChild|234 ,|304 new|801 VanishingToLeaf|214 (|9 true|215 )|215 )|227 ;|-1
return|800 MathArrays|235 .|802 linearCombination|214 (|800 sin|234 ,|40 otherL.sin|234 ,|800 cos|234 ,|40 otherL.cos|215 )|251 >=|34 NUMBER_CONSTANT|227 ;|-1
tree|204 =|800 region1|235 .|802 getTree|214 (|9 false|215 )|235 .|802 merge|214 (|800 region2|235 .|802 getTree|214 (|9 false|215 )|234 ,|304 new|801 DifferenceMerger|214 (|800 region1|234 ,|800 region2|215 )|215 )|-1
{|802 unlinkReverse|216 ()|227 ;|800 originOffset|204 =|800 offset|227 ;|219 }|-1
if|214 (|800 p|236 ==|34 NUMBER_CONSTANT|215 )|218 {|329 return|40 Double.NEGATIVE_INFINITY|227 ;|219 }|322 else|313 if|214 (|800 p|236 ==|34 NUMBER_CONSTANT|215 )|218 {|329 return|40 Double.POSITIVE_INFINITY|227 ;|219 }|-1
{|800 vals|204 =|800 MathArrays|235 .|802 copyOf|214 (|800 b|234 ,|40 b.length|215 )|227 ;|800 nVals|204 =|800 n|227 ;|219 }|-1
org.apache.commons.math4.stat.inference.ChiSquareTest|800 csti|204 =|304 new|40 org.apache.commons.math4.stat.inference.ChiSquareTest|216 ()|227 ;|-1
org.apache.commons.math4.stat.inference.ChiSquareTest|800 csti|204 =|304 new|40 org.apache.commons.math4.stat.inference.ChiSquareTest|216 ()|227 ;|-1
cachedTransform|204 =|40 org.apache.commons.math4.geometry.euclidean.twod.Line|235 .|802 getTransform|214 (|800 at|215 )|227 ;|-1
cachedTransform|204 =|40 org.apache.commons.math4.geometry.euclidean.twod.Line|235 .|802 getTransform|214 (|800 at|215 )|227 ;|-1
@|802 Test|214 (|800 expected|204 =|40 org.apache.commons.math4.linear.SingularMatrixException|235 .|341 class|215 )|-1
(|800 numIterations|230 <|800 maximumIterations|215 )|249 &&|214 (|800 a|231 >|800 lowerBound|250 |||800 b|230 <|800 upperBound|215 )|-1
public|802 Well19937c|214 (|39 long|800 seed|215 )|218 {|349 super|214 (|800 K|234 ,|800 seed|215 )|227 ;|219 }|-1
{|349 super|214 (|800 K|234 ,|800 seed|215 )|227 ;|219 }|-1
public|802 Well19937c|214 (|39 int|800 seed|215 )|218 {|349 super|214 (|800 K|234 ,|800 seed|215 )|227 ;|219 }|-1
public|802 Well512a|214 (|39 long|800 seed|215 )|218 {|349 super|214 (|800 K|234 ,|800 seed|215 )|227 ;|219 }|-1
{|349 super|214 (|800 K|234 ,|800 seed|215 )|227 ;|219 }|-1
public|802 Well512a|214 (|39 int|800 seed|215 )|218 {|349 super|214 (|800 K|234 ,|800 seed|215 )|227 ;|219 }|-1
public|802 Well44497b|214 (|39 long|800 seed|215 )|218 {|349 super|214 (|800 K|234 ,|800 seed|215 )|227 ;|219 }|-1
{|349 super|214 (|800 K|234 ,|800 seed|215 )|227 ;|219 }|-1
public|802 Well44497b|214 (|39 int|800 seed|215 )|218 {|349 super|214 (|800 K|234 ,|800 seed|215 )|227 ;|219 }|-1
public|802 Well1024a|214 (|39 long|800 seed|215 )|218 {|349 super|214 (|800 K|234 ,|800 seed|215 )|227 ;|219 }|-1
{|349 super|214 (|800 K|234 ,|800 seed|215 )|227 ;|219 }|-1
public|802 Well1024a|214 (|39 int|800 seed|215 )|218 {|349 super|214 (|800 K|234 ,|800 seed|215 )|227 ;|219 }|-1
public|802 Well44497a|214 (|39 long|800 seed|215 )|218 {|349 super|214 (|800 K|234 ,|800 seed|215 )|227 ;|219 }|-1
{|349 super|214 (|800 K|234 ,|800 seed|215 )|227 ;|219 }|-1
public|802 Well44497a|214 (|39 int|800 seed|215 )|218 {|349 super|214 (|800 K|234 ,|800 seed|215 )|227 ;|219 }|-1
public|802 Well19937a|214 (|39 long|800 seed|215 )|218 {|349 super|214 (|800 K|234 ,|800 seed|215 )|227 ;|219 }|-1
{|349 super|214 (|800 K|234 ,|800 seed|215 )|227 ;|219 }|-1
public|802 Well19937a|214 (|39 int|800 seed|215 )|218 {|349 super|214 (|800 K|234 ,|800 seed|215 )|227 ;|219 }|-1
TestUtils|235 .|802 assertEquals|214 (|800 m|235 .|802 preMultiply|214 (|304 new|801 ArrayFieldVector|230 <|800 Fraction|231 >|214 (|800 testVector|215 )|235 .|802 toArray|216 ()|215 )|234 ,|800 preMultTest|215 )|227 ;|-1
assertClose|214 (|45 STRING_CONSTANT|234 ,|800 m|235 .|802 preMultiply|214 (|304 new|801 ArrayFieldVector|230 <|800 Fraction|231 >|214 (|800 testVector|215 )|235 .|802 toArray|216 ()|215 )|234 ,|800 preMultTest|234 ,|800 normTolerance|215 )|227 ;|-1
TestUtils|235 .|802 assertEquals|214 (|800 m|235 .|802 preMultiply|214 (|304 new|801 ArrayFieldVector|230 <|800 Fraction|231 >|214 (|800 testVector|215 )|235 .|802 toArray|216 ()|215 )|234 ,|800 preMultTest|215 )|227 ;|-1
tP|204 =|304 new|801 UniformRealDistribution|214 (|800 rng|234 ,|34 NUMBER_CONSTANT|234 ,|40 MathUtils.TWO_PI|215 )|227 ;|-1
x|204 =|304 new|801 UniformRealDistribution|214 (|800 rng|234 ,|800 lo|234 ,|800 hi|215 )|227 ;|-1
x|204 =|304 new|801 UniformRealDistribution|214 (|800 rng|234 ,|800 lo|234 ,|800 hi|215 )|227 ;|-1
x|204 =|304 new|801 UniformRealDistribution|214 (|800 rng|234 ,|800 lo|234 ,|800 hi|215 )|227 ;|-1
tP|204 =|304 new|801 UniformRealDistribution|214 (|800 rng|234 ,|34 NUMBER_CONSTANT|234 ,|40 MathUtils.TWO_PI|215 )|227 ;|-1
tP|204 =|304 new|801 UniformRealDistribution|214 (|800 rng|234 ,|34 NUMBER_CONSTANT|234 ,|40 MathUtils.TWO_PI|215 )|227 ;|-1
try|218 {|800 distribution|235 .|802 probability|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
{|39 double|800 actual|204 =|802 getDistribution|216 ()|235 .|802 probability|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|800 Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 actual|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
distribution|235 .|802 probability|214 (|801 lower|221 [|800 i|222 ]|234 ,|801 upper|221 [|800 i|222 ]|215 )|-1
final|39 double|800 withinBinKernelMass|204 =|800 kernel|235 .|802 probability|214 (|800 lower|234 ,|800 upper|215 )|227 ;|-1
try|218 {|800 distribution|235 .|802 probability|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 ex|215 )|220 {}|-1
distribution|235 .|802 logDensity|214 (|801 cumulativeTestPoints|221 [|800 i|222 ]|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 NullArgumentException|235 .|341 class|215 )|83 public|39 void|802 testNullFunction|216 ()|218 {|800 UnivariateSolverUtils|235 .|802 bracket|214 (|500 null|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|802 Test|214 (|800 expected|204 =|800 NullArgumentException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 NullArgumentException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 NullArgumentException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 NullArgumentException|235 .|341 class|215 )|-1
try|218 {|800 StatUtils|235 .|802 min|214 (|800 x|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 NullArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 StatUtils|235 .|802 max|214 (|800 x|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 NullArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 StatUtils|235 .|802 variance|214 (|800 x|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 NullArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 StatUtils|235 .|802 variance|214 (|800 x|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 NullArgumentException|800 ex|215 )|220 {}|-1
try|218 {|800 StatUtils|235 .|802 mean|214 (|800 x|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 NullArgumentException|800 ex|215 )|220 {}|-1
@|802 Test|214 (|800 expected|204 =|800 NullArgumentException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 NullArgumentException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 NullArgumentException|235 .|341 class|215 )|-1
tournamentPopulation|204 =|304 new|801 ListPopulation|214 (|315 this|235 .|800 arity|215 )|218 {|208 @|800 Override|83 public|801 Population|802 nextGeneration|216 ()|218 {|329 return|500 null|227 ;|219 }|219 }|-1
delta|204 =|214 (|800 max|201 -|800 min|215 )|203 /|214 (|800 binCount|215 )|227 ;|-1
@|801 Override|801 T|802 reciprocal|214 (|215 )|227 ;|-1
delta|204 =|214 (|800 max|201 -|800 min|215 )|203 /|800 binCount|227 ;|-1
protected|39 double|802 getSolverAbsoluteAccuracy|216 ()|218 {|329 return|800 SOLVER_DEFAULT_ABSOLUTE_ACCURACY|227 ;|219 }|-1
SparseGradient|800 sgY2|204 =|800 sgX|235 .|802 compose|214 (|800 poly|235 .|802 value|214 (|800 x|215 )|234 ,|800 poly|235 .|802 polynomialDerivative|216 ()|235 .|802 value|214 (|800 x|215 )|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|800 f|235 .|802 polynomialDerivative|216 ()|235 .|802 polynomialDerivative|216 ()|235 .|802 value|214 (|34 NUMBER_CONSTANT|215 )|234 ,|34 NUMBER_CONSTANT|234 ,|800 tolerance|215 )|227 ;|-1
UnivariateFunction|800 dSpline|204 =|800 spline|235 .|802 polynomialSplineDerivative|216 ()|227 ;|-1
{|329 return|800 FastMath|235 .|802 abs|214 (|802 getOffset|214 (|800 p|215 )|215 )|230 <|800 tolerance|227 ;|219 }|-1
if|214 (|800 direction|235 .|802 getNorm|216 ()|230 <|800 tolerance|215 )|218 {|329 return|500 null|227 ;|219 }|-1
MathArrays|235 .|802 verifyValues|214 (|800 values|234 ,|800 weights|234 ,|800 begin|234 ,|800 length|234 ,|9 true|215 )|-1
MathArrays|235 .|802 verifyValues|214 (|800 values|234 ,|800 begin|234 ,|800 length|234 ,|9 true|215 )|-1
m|235 .|802 incrementAll|214 (|800 values|215 )|227 ;|-1
MathArrays|235 .|802 verifyValues|214 (|800 values|234 ,|800 begin|234 ,|800 length|234 ,|9 true|215 )|-1
MathArrays|235 .|802 verifyValues|214 (|800 values|234 ,|800 begin|234 ,|800 length|234 ,|9 true|215 )|-1
MathArrays|235 .|802 verifyValues|214 (|800 values|234 ,|800 begin|234 ,|800 length|215 )|249 &&|800 length|231 >|34 NUMBER_CONSTANT|-1
MathArrays|235 .|802 verifyValues|214 (|800 values|234 ,|800 start|234 ,|800 length|215 )|227 ;|-1
MathArrays|235 .|802 verifyValues|214 (|800 values|234 ,|800 begin|234 ,|800 length|215 )|-1
MathArrays|235 .|802 verifyValues|214 (|800 values|234 ,|800 begin|234 ,|800 length|215 )|-1
MathArrays|235 .|802 verifyValues|214 (|800 values|234 ,|800 begin|234 ,|800 length|215 )|227 ;|-1
MathArrays|235 .|802 verifyValues|214 (|800 values|234 ,|800 weights|234 ,|800 begin|234 ,|800 length|234 ,|9 true|215 )|-1
{|800 MathArrays|235 .|802 verifyValues|214 (|800 values|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|329 return|802 evaluate|214 (|800 values|234 ,|34 NUMBER_CONSTANT|234 ,|40 values.length|215 )|227 ;|219 }|-1
ptile|235 .|802 incrementAll|214 (|800 d|215 )|227 ;|-1
MathArrays|235 .|802 verifyValues|214 (|800 values|234 ,|800 weights|234 ,|800 begin|234 ,|800 length|215 )|-1
MathArrays|235 .|802 verifyValues|214 (|800 values|234 ,|800 begin|234 ,|800 length|215 )|-1
MathArrays|235 .|802 verifyValues|214 (|800 values|234 ,|800 weights|234 ,|800 begin|234 ,|800 length|215 )|-1
MathArrays|235 .|802 verifyValues|214 (|800 values|234 ,|800 begin|234 ,|800 length|215 )|-1
m|235 .|802 incrementAll|214 (|800 values|215 )|227 ;|-1
catch|214 (|801 MathIllegalArgumentException|800 iae|215 )|220 {}|-1
@|802 Test|214 (|800 expected|204 =|800 MathIllegalArgumentException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 MathIllegalArgumentException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 MathIllegalArgumentException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 MathIllegalArgumentException|235 .|341 class|215 )|-1
catch|214 (|801 MathIllegalArgumentException|800 iae|215 )|218 {|329 return|9 true|227 ;|219 }|-1
@|802 Test|214 (|800 expected|204 =|800 MathIllegalArgumentException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 MathIllegalArgumentException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 MathIllegalArgumentException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 MathIllegalArgumentException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 MathIllegalArgumentException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 MathIllegalArgumentException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 MathIllegalArgumentException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 MathIllegalArgumentException|235 .|341 class|215 )|-1
@|802 Test|214 (|800 expected|204 =|800 MathIllegalArgumentException|235 .|341 class|215 )|-1
try|218 {|800 stats|235 .|802 setWindowSize|214 (|201 -|34 NUMBER_CONSTANT|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 iae|215 )|220 {}|-1
{|335 try|218 {|304 new|801 DummyBinaryChromosome|214 (|800 repr|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathIllegalArgumentException|800 e|215 )|220 {}|219 }|-1
catch|214 (|801 MathIllegalArgumentException|800 iae|215 )|220 {}|-1
final|39 double|800 Hs|204 =|800 nthHarmonic|227 ;|-1
final|39 double|800 Hs|204 =|800 nthHarmonic|227 ;|-1
return|802 generalizedHarmonic|214 (|800 x|234 ,|800 exponent|215 )|203 /|800 nthHarmonic|227 ;|-1
return|201 -|800 FastMath|235 .|802 log|214 (|800 x|215 )|202 *|800 exponent|201 -|800 FastMath|235 .|802 log|214 (|800 nthHarmonic|215 )|227 ;|-1
if|214 (|800 Double|235 .|802 isNaN|214 (|800 x|215 )|215 )|218 {|329 return|800 x|227 ;|219 }|-1
if|214 (|800 Double|235 .|802 isNaN|214 (|800 x|215 )|215 )|218 {|329 return|800 x|227 ;|219 }|-1
if|214 (|800 Double|235 .|802 isNaN|214 (|800 x|215 )|215 )|218 {|329 return|40 Double.NaN|227 ;|219 }|-1
if|214 (|800 Double|235 .|802 isNaN|214 (|800 x|215 )|215 )|218 {|329 return|40 Double.NaN|227 ;|219 }|-1
if|214 (|800 Double|235 .|802 isNaN|214 (|800 x|215 )|250 |||800 Double|235 .|802 isNaN|214 (|800 y|215 )|215 )|218 {|329 return|40 Double.NaN|227 ;|219 }|-1
if|214 (|800 Double|235 .|802 isNaN|214 (|800 x|215 )|250 |||800 x|236 ==|34 NUMBER_CONSTANT|215 )|218 {|329 return|800 x|227 ;|219 }|-1
if|214 (|800 Double|235 .|802 isNaN|214 (|800 x|215 )|215 )|218 {|329 return|800 x|227 ;|219 }|-1
if|214 (|800 Double|235 .|802 isNaN|214 (|800 x|215 )|215 )|218 {|329 return|800 x|227 ;|219 }|-1
if|214 (|800 Double|235 .|802 isNaN|214 (|800 x|215 )|215 )|218 {|329 return|800 x|227 ;|219 }|-1
{|349 super|214 (|40 LocalizedFormats.UNKNOWN_PARAMETER|234 ,|800 name|215 )|227 ;|315 this|235 .|800 name|204 =|800 name|227 ;|219 }|-1
final|39 double|800 exponent|-1
MultivariateInterpolator|800 interpolator|204 =|304 new|801 MicrosphereInterpolator|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
double|800 brightnessExponent|-1
{|329 return|214 (|800 numerator|235 .|802 signum|216 ()|236 ==|34 NUMBER_CONSTANT|215 )|233 ?|315 this|226 :|802 negate|216 ()|227 ;|219 }|-1
final|39 long|800 numCalls|204 =|800 numberOfCalls|235 .|802 incrementAndGet|216 ()|201 -|34 NUMBER_CONSTANT|227 ;|-1
final|801 Gaussian|800 neighbourhoodDecay|204 =|304 new|801 Gaussian|214 (|800 currentLearning|234 ,|34 NUMBER_CONSTANT|234 ,|800 currentNeighbourhood|215 )|227 ;|-1
{|329 return|802 divide|214 (|304 new|801 Fraction|214 (|800 i|215 )|215 )|227 ;|219 }|-1
{|329 return|802 multiply|214 (|304 new|801 Fraction|214 (|800 i|215 )|215 )|227 ;|219 }|-1
TestUtils|235 .|802 assertRelativelyEquals|214 (|800 expected|234 ,|800 ZipfRejectionInversionSampler|235 .|802 helper2|214 (|800 testValue|215 )|202 *|800 testValue|234 ,|800 tol|215 )|227 ;|-1
this|235 .|800 maxEvaluations|204 =|800 maxEvaluations|227 ;|-1
final|39 int|800 rowOffset|227 ;|-1
long|800 swaps|204 =|34 NUMBER_CONSTANT|227 ;|-1
{|313 if|214 (|800 x|230 <|34 NUMBER_CONSTANT|215 )|218 {|329 return|34 NUMBER_CONSTANT|227 ;|219 }|322 else|218 {|329 return|800 FastMath|235 .|802 exp|214 (|800 log1mProbabilityOfSuccess|202 *|800 x|215 )|202 *|800 probabilityOfSuccess|227 ;|219 }|219 }|-1
SQRT_TWO_PI|203 /|800 absX|202 *|800 FastMath|235 .|802 pow|214 (|800 y|234 ,|800 absX|200 +|34 NUMBER_CONSTANT|215 )|202 *|800 FastMath|235 .|802 exp|214 (|201 -|800 y|215 )|-1
return|304 new|801 CorrelatedRandomVectorGenerator|214 (|304 new|39 double|221 [|40 cov.length|222 ]|234 ,|800 matrix|234 ,|800 small|234 ,|304 new|801 GaussianRandomGenerator|214 (|304 new|801 Well1024a|214 (|34 NUMBER_CONSTANT|215 )|215 )|215 )|227 ;|-1
BigFractionMatrixConverter|216 ()|218 {|349 super|214 (|40 BigFraction.ZERO|215 )|227 ;|219 }|-1
FractionMatrixConverter|216 ()|218 {|349 super|214 (|40 Fraction.ZERO|215 )|227 ;|219 }|-1
final|800 RealFieldUnivariateFunction|230 <|800 T|231 >|800 f|-1
final|800 RealFieldUnivariateFunction|230 <|800 T|231 >|800 f|-1
RealFieldUnivariateFunction|230 <|800 Dfp|231 >|800 f|-1
final|801 EnumeratedRealDistribution|800 dist|204 =|304 new|801 EnumeratedRealDistribution|214 (|800 rng|234 ,|800 combined|215 )|227 ;|-1
public|802 JDKRandomGenerator|214 (|39 long|800 seed|215 )|218 {|802 setSeed|214 (|800 seed|215 )|227 ;|219 }|-1
StepInterpolatorTestUtils|235 .|802 checkDerivativesConsistency|214 (|800 integ|234 ,|800 pb|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
StepInterpolatorTestUtils|235 .|802 checkDerivativesConsistency|214 (|800 integ|234 ,|800 pb|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
StepInterpolatorTestUtils|235 .|802 checkDerivativesConsistency|214 (|800 integ|234 ,|800 pb|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
StepInterpolatorTestUtils|235 .|802 checkDerivativesConsistency|214 (|800 integ|234 ,|800 pb|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
StepInterpolatorTestUtils|235 .|802 checkDerivativesConsistency|214 (|800 integ|234 ,|800 pb|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
StepInterpolatorTestUtils|235 .|802 checkDerivativesConsistency|214 (|800 integ|234 ,|800 pb|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
StepInterpolatorTestUtils|235 .|802 checkDerivativesConsistency|214 (|800 integ|234 ,|800 pb|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
StepInterpolatorTestUtils|235 .|802 checkDerivativesConsistency|214 (|800 integ|234 ,|800 pb|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
starter|235 .|802 addStepHandler|214 (|304 new|801 NordsieckInitializer|214 (|214 (|800 nSteps|200 +|34 NUMBER_CONSTANT|215 )|203 /|34 NUMBER_CONSTANT|234 ,|40 y0.length|215 )|215 )|227 ;|-1
StepInterpolatorTestUtils|235 .|802 checkDerivativesConsistency|214 (|800 integ|234 ,|800 pb|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
StepInterpolatorTestUtils|235 .|802 checkDerivativesConsistency|214 (|800 integ|234 ,|800 pb|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
StepInterpolatorTestUtils|235 .|802 checkDerivativesConsistency|214 (|800 integ|234 ,|800 pb|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|800 evaluations|235 .|802 increment|216 ()|227 ;|800 expandable|235 .|802 computeDerivatives|214 (|800 t|234 ,|800 y|234 ,|800 yDot|215 )|227 ;|219 }|-1
evaluations|204 =|800 evaluations|235 .|802 withStart|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
catch|214 (|801 InitializationCompletedMarkerException|800 icme|215 )|218 {|802 getCounter|216 ()|235 .|802 increment|214 (|800 starter|235 .|802 getEvaluations|216 ()|215 )|227 ;|219 }|-1
FieldVector3D|230 <|800 DerivativeStructure|231 >|800 axis|204 =|800 r|235 .|802 getAxis|214 (|40 RotationConvention.VECTOR_OPERATOR|215 )|227 ;|-1
FieldVector3D|230 <|800 Dfp|231 >|800 axis|204 =|800 r|235 .|802 getAxis|214 (|40 RotationConvention.VECTOR_OPERATOR|215 )|227 ;|-1
Vector3D|800 axis|204 =|800 r|235 .|802 getAxis|214 (|40 RotationConvention.VECTOR_OPERATOR|215 )|227 ;|-1
{|329 return|800 r1|235 .|802 composeInverseInternal|214 (|800 r2|215 )|235 .|802 getAngle|216 ()|227 ;|219 }|-1
{|329 return|800 r1|235 .|802 composeInverseInternal|214 (|800 r2|215 )|235 .|802 getAngle|216 ()|227 ;|219 }|-1
final|801 Rotation|800 composite|204 =|800 r1|235 .|802 compose|214 (|800 r2|235 .|802 compose|214 (|800 r3|234 ,|40 RotationConvention.FRAME_TRANSFORM|215 )|234 ,|40 RotationConvention.FRAME_TRANSFORM|215 )|227 ;|-1
{|335 try|218 {|329 return|800 delegate|235 .|802 nextInt|214 (|800 n|215 )|227 ;|219 }|331 catch|214 (|801 IllegalArgumentException|800 e|215 )|218 {|320 throw|304 new|801 NotStrictlyPositiveException|214 (|800 n|215 )|227 ;|219 }|219 }|-1
{|800 delegate|235 .|802 setSeed|214 (|800 RandomGeneratorFactory|235 .|802 convertToLong|214 (|800 seed|215 )|215 )|227 ;|219 }|-1
{|800 delegate|235 .|802 setSeed|214 (|214 (|39 long|215 )|800 seed|215 )|227 ;|219 }|-1
setSeedInternal|214 (|800 seed|215 )|227 ;|-1
{|802 setSeedInternal|214 (|800 seed|215 )|227 ;|219 }|-1
public|802 ISAACRandom|214 (|39 long|800 seed|215 )|218 {|802 setSeedInternal|214 (|800 seed|215 )|227 ;|219 }|-1
{|802 setSeedInternal|214 (|800 System|235 .|802 currentTimeMillis|216 ()|200 +|800 System|235 .|802 identityHashCode|214 (|315 this|215 )|215 )|227 ;|219 }|-1
{|800 mt|204 =|304 new|39 int|221 [|800 N|222 ]|227 ;|802 setSeedInternal|214 (|800 seed|215 )|227 ;|219 }|-1
{|800 mt|204 =|304 new|39 int|221 [|800 N|222 ]|227 ;|802 setSeedInternal|214 (|800 seed|215 )|227 ;|219 }|-1
{|800 mt|204 =|304 new|39 int|221 [|800 N|222 ]|227 ;|802 setSeedInternal|214 (|800 seed|215 )|227 ;|219 }|-1
{|800 mt|204 =|304 new|39 int|221 [|800 N|222 ]|227 ;|802 setSeedInternal|214 (|800 System|235 .|802 currentTimeMillis|216 ()|200 +|800 System|235 .|802 identityHashCode|214 (|315 this|215 )|215 )|227 ;|219 }|-1
{|800 bits|204 =|802 nextInt|216 ()|231 >|231 >|231 >|34 NUMBER_CONSTANT|227 ;|800 val|204 =|800 bits|211 %|800 n|227 ;|219 }|-1
if|214 (|800 seed|236 ==|500 null|215 )|218 {|802 setSeedInternal|214 (|800 System|235 .|802 currentTimeMillis|216 ()|200 +|800 System|235 .|802 identityHashCode|214 (|315 this|215 )|215 )|227 ;|500 return;|219 }|-1
if|214 (|800 seed|236 ==|500 null|215 )|218 {|802 setSeedInternal|214 (|800 System|235 .|802 currentTimeMillis|216 ()|200 +|800 System|235 .|802 identityHashCode|214 (|315 this|215 )|215 )|227 ;|500 return;|219 }|-1
{|802 setSeedInternal|214 (|304 new|39 int|85 []|218 {|800 seed|219 }|215 )|227 ;|219 }|-1
return|802 computeInterpolatedStateAndDerivatives|214 (|800 mapper|234 ,|800 time|234 ,|800 theta|234 ,|800 oneMinusThetaH|215 )|227 ;|-1
mapper|204 =|500 null|227 ;|-1
yDotK|221 [|34 NUMBER_CONSTANT|222 ]|204 =|800 equations|235 .|802 getMapper|216 ()|235 .|802 mapDerivative|214 (|800 stepStart|215 )|227 ;|-1
mainSetDimension|204 =|800 eqn|235 .|802 getStateDimension|216 ()|227 ;|-1
final|800 BracketedRealFieldUnivariateSolver|230 <|800 T|231 >|800 solver|-1
final|800 BracketedRealFieldUnivariateSolver|230 <|800 T|231 >|800 solver|-1
BracketedRealFieldUnivariateSolver|230 <|800 T|231 >|800 solver|-1
public|802 TestProblem5|216 ()|218 {|802 setFinalConditions|214 (|34 NUMBER_CONSTANT|202 *|800 t0|201 -|800 t1|215 )|227 ;|219 }|-1
i|230 <|802 getDimension|216 ()|-1
i|230 <|802 getDimension|216 ()|-1
i|230 <|802 getDimension|216 ()|-1
for|214 (|39 int|800 i|204 =|34 NUMBER_CONSTANT|227 ;|800 i|230 <|802 getDimension|216 ()|227 ;|247 ++|800 i|215 )|218 {|801 y|221 [|800 i|222 ]|204 =|800 c|227 ;|219 }|-1
i|230 <|802 getDimension|216 ()|-1
currentState|204 =|800 y|227 ;|-1
super|214 (|800 field|234 ,|800 METHOD_NAME|234 ,|34 NUMBER_CONSTANT|234 ,|800 minStep|234 ,|800 maxStep|234 ,|800 vecAbsoluteTolerance|234 ,|800 vecRelativeTolerance|215 )|227 ;|-1
super|214 (|800 field|234 ,|800 METHOD_NAME|234 ,|34 NUMBER_CONSTANT|234 ,|800 minStep|234 ,|800 maxStep|234 ,|800 scalAbsoluteTolerance|234 ,|800 scalRelativeTolerance|215 )|227 ;|-1
super|214 (|800 field|234 ,|800 METHOD_NAME|234 ,|201 -|34 NUMBER_CONSTANT|234 ,|800 minStep|234 ,|800 maxStep|234 ,|800 vecAbsoluteTolerance|234 ,|800 vecRelativeTolerance|215 )|227 ;|-1
super|214 (|800 field|234 ,|800 METHOD_NAME|234 ,|201 -|34 NUMBER_CONSTANT|234 ,|800 minStep|234 ,|800 maxStep|234 ,|800 scalAbsoluteTolerance|234 ,|800 scalRelativeTolerance|215 )|227 ;|-1
start|235 .|802 subtract|214 (|800 problem|235 .|802 getInitialState|216 ()|235 .|802 getTime|216 ()|215 )|235 .|802 divide|214 (|800 integrator|235 .|802 getCurrentSignedStepsize|216 ()|215 )|235 .|802 abs|216 ()|235 .|802 getReal|216 ()|231 >|34 NUMBER_CONSTANT|-1
{|349 super|214 (|800 field|215 )|227 ;|802 setFinalConditions|214 (|802 getInitialState|216 ()|235 .|802 getTime|216 ()|235 .|802 multiply|214 (|34 NUMBER_CONSTANT|215 )|235 .|802 subtract|214 (|802 getFinalTime|216 ()|215 )|215 )|227 ;|219 }|-1
super|214 (|800 field|234 ,|800 METHOD_NAME|234 ,|34 NUMBER_CONSTANT|234 ,|800 minStep|234 ,|800 maxStep|234 ,|800 vecAbsoluteTolerance|234 ,|800 vecRelativeTolerance|215 )|227 ;|-1
super|214 (|800 field|234 ,|800 METHOD_NAME|234 ,|34 NUMBER_CONSTANT|234 ,|800 minStep|234 ,|800 maxStep|234 ,|800 scalAbsoluteTolerance|234 ,|800 scalRelativeTolerance|215 )|227 ;|-1
{|329 return|304 new|801 EulerFieldStepInterpolator|230 <|800 T|231 >|214 (|802 getField|216 ()|234 ,|800 forward|234 ,|800 mapper|215 )|227 ;|219 }|-1
{|329 return|304 new|801 DormandPrince54FieldStepInterpolator|230 <|800 T|231 >|214 (|802 getField|216 ()|234 ,|800 forward|234 ,|800 mapper|215 )|227 ;|219 }|-1
{|329 return|304 new|801 GillFieldStepInterpolator|230 <|800 T|231 >|214 (|802 getField|216 ()|234 ,|800 forward|234 ,|800 mapper|215 )|227 ;|219 }|-1
final|801 T|800 one|204 =|802 getField|216 ()|235 .|802 getOne|216 ()|227 ;|-1
{|329 return|304 new|801 MidpointFieldStepInterpolator|230 <|800 T|231 >|214 (|802 getField|216 ()|234 ,|800 forward|234 ,|800 mapper|215 )|227 ;|219 }|-1
{|329 return|304 new|801 LutherFieldStepInterpolator|230 <|800 T|231 >|214 (|802 getField|216 ()|234 ,|800 forward|234 ,|800 mapper|215 )|227 ;|219 }|-1
{|329 return|304 new|801 ThreeEighthesFieldStepInterpolator|230 <|800 T|231 >|214 (|802 getField|216 ()|234 ,|800 forward|234 ,|800 mapper|215 )|227 ;|219 }|-1
{|329 return|304 new|801 DormandPrince853FieldStepInterpolator|230 <|800 T|231 >|214 (|802 getField|216 ()|234 ,|800 forward|234 ,|800 mapper|215 )|227 ;|219 }|-1
{|329 return|802 doCopy|216 ()|227 ;|219 }|-1
final|801 T|800 coeffDot1|204 =|802 getField|216 ()|235 .|802 getOne|216 ()|235 .|802 subtract|214 (|800 coeffDot2|215 )|227 ;|-1
final|801 T|800 one|204 =|802 getField|216 ()|235 .|802 getOne|216 ()|227 ;|-1
{|329 return|304 new|801 HighamHall54FieldStepInterpolator|230 <|800 T|231 >|214 (|802 getField|216 ()|234 ,|800 forward|234 ,|800 mapper|215 )|227 ;|219 }|-1
{|329 return|802 getField|216 ()|235 .|802 getOne|216 ()|235 .|802 multiply|214 (|800 p|215 )|235 .|802 divide|214 (|800 q|215 )|227 ;|219 }|-1
d|204 =|800 MathArrays|235 .|802 buildArray|214 (|802 getField|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|201 -|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|329 return|304 new|801 ClassicalRungeKuttaFieldStepInterpolator|230 <|800 T|231 >|214 (|802 getField|216 ()|234 ,|800 forward|234 ,|800 mapper|215 )|227 ;|219 }|-1
final|801 T|800 two|204 =|802 getField|216 ()|235 .|802 getZero|216 ()|235 .|802 add|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|329 return|802 getField|216 ()|235 .|802 getZero|216 ()|235 .|802 add|214 (|800 p|215 )|235 .|802 divide|214 (|800 q|215 )|227 ;|219 }|-1
{|329 return|304 new|801 EulerFieldStepInterpolator|230 <|800 T|231 >|214 (|800 field|234 ,|800 forward|234 ,|800 mapper|215 )|227 ;|219 }|-1
mapper|204 =|304 new|801 FieldEquationsMapper|230 <|800 T|231 >|214 (|800 mapper|234 ,|800 secondary|235 .|802 getDimension|216 ()|215 )|227 ;|-1
FieldFirstOrderDifferentialEquations|230 <|800 T|231 >|800 eqn|204 =|304 new|801 SinCos|230 <|800 T|231 >|214 (|800 field|215 )|227 ;|-1
setUpInterpolator|214 (|800 field|234 ,|304 new|801 SinCos|230 <|800 T|231 >|214 (|800 field|215 )|234 ,|34 NUMBER_CONSTANT|234 ,|304 new|39 double|85 []|218 {|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|219 }|234 ,|34 NUMBER_CONSTANT|215 )|-1
setUpInterpolator|214 (|800 field|234 ,|304 new|801 SinCos|230 <|800 T|231 >|214 (|800 field|215 )|234 ,|34 NUMBER_CONSTANT|234 ,|304 new|39 double|85 []|218 {|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|219 }|234 ,|34 NUMBER_CONSTANT|215 )|-1
integrator|235 .|802 integrate|214 (|304 new|801 FieldExpandableODE|230 <|800 T|231 >|214 (|800 problem|215 )|234 ,|800 problem|235 .|802 getInitialState|216 ()|234 ,|800 problem|235 .|802 getFinalTime|216 ()|215 )|227 ;|-1
integ|235 .|802 integrate|214 (|304 new|801 FieldExpandableODE|230 <|800 T|231 >|214 (|800 pb|215 )|234 ,|800 pb|235 .|802 getInitialState|216 ()|234 ,|800 pb|235 .|802 getFinalTime|216 ()|215 )|227 ;|-1
integ|235 .|802 integrate|214 (|304 new|801 FieldExpandableODE|230 <|800 T|231 >|214 (|800 pb|215 )|234 ,|800 pb|235 .|802 getInitialState|216 ()|234 ,|800 pb|235 .|802 getFinalTime|216 ()|215 )|227 ;|-1
integ|235 .|802 integrate|214 (|304 new|801 FieldExpandableODE|230 <|800 T|231 >|214 (|800 pb|215 )|234 ,|800 pb|235 .|802 getInitialState|216 ()|234 ,|800 pb|235 .|802 getFinalTime|216 ()|215 )|227 ;|-1
integ|235 .|802 integrate|214 (|304 new|801 FieldExpandableODE|230 <|800 T|231 >|214 (|800 equations|215 )|234 ,|304 new|801 FieldODEState|230 <|800 T|231 >|214 (|800 t0|234 ,|800 y0|215 )|234 ,|800 t|215 )|227 ;|-1
integ|235 .|802 integrate|214 (|304 new|801 FieldExpandableODE|230 <|800 T|231 >|214 (|800 pb|215 )|234 ,|800 pb|235 .|802 getInitialState|216 ()|234 ,|800 pb|235 .|802 getFinalTime|216 ()|215 )|227 ;|-1
integ|235 .|802 integrate|214 (|304 new|801 FieldExpandableODE|230 <|800 T|231 >|214 (|800 pb|215 )|234 ,|800 pb|235 .|802 getInitialState|216 ()|234 ,|800 pb|235 .|802 getFinalTime|216 ()|215 )|227 ;|-1
steps|235 .|802 add|214 (|800 interpolator|215 )|227 ;|-1
for|214 (|800 FieldStepInterpolator|230 <|800 T|231 >|800 interpolator|226 :|40 model.steps|215 )|218 {|800 steps|235 .|802 add|214 (|800 interpolator|215 )|227 ;|219 }|-1
while|214 (|247 ++|800 index|230 <|802 getNumberOfEquations|216 ()|215 )|218 {|802 insertEquationData|214 (|800 index|234 ,|800 state|235 .|802 getSecondaryDerivative|214 (|800 index|215 )|234 ,|800 yDot|215 )|227 ;|219 }|-1
while|214 (|247 ++|800 index|230 <|802 getNumberOfEquations|216 ()|215 )|218 {|802 insertEquationData|214 (|800 index|234 ,|800 state|235 .|802 getSecondaryState|214 (|800 index|215 )|234 ,|800 y|215 )|227 ;|219 }|-1
{|800 System|235 .|802 arraycopy|214 (|40 mapper.start|234 ,|34 NUMBER_CONSTANT|234 ,|800 start|234 ,|34 NUMBER_CONSTANT|234 ,|800 index|200 +|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testKepler|216 ()|218 {|802 doTestKepler|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testBackward|216 ()|218 {|802 doTestBackward|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testSanityChecks|216 ()|218 {|802 doTestSanityChecks|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testNonFieldIntegratorConsistency|216 ()|218 {|802 doTestNonFieldIntegratorConsistency|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testDerivativesConsistency|216 ()|218 {|802 doTestDerivativesConsistency|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testUnstableDerivative|216 ()|218 {|802 doTestUnstableDerivative|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testTooLargeFirstStep|216 ()|218 {|802 doTestTooLargeFirstStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testSingleStep|216 ()|218 {|802 doTestSingleStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testStepSize|216 ()|218 {|802 doTestStepSize|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testKepler|216 ()|218 {|802 doTestKepler|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testBackward|216 ()|218 {|802 doTestBackward|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testBigStep|216 ()|218 {|802 doTestBigStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testSmallStep|216 ()|218 {|802 doTestSmallStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testDecreasingSteps|216 ()|218 {|802 doTestDecreasingSteps|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testSanityChecks|216 ()|218 {|802 doTestSanityChecks|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testMissedEndEvent|216 ()|218 {|802 doTestMissedEndEvent|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testNonFieldIntegratorConsistency|216 ()|218 {|802 doTestNonFieldIntegratorConsistency|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testDerivativesConsistency|216 ()|218 {|802 doTestDerivativesConsistency|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testUnstableDerivative|216 ()|218 {|802 doTestUnstableDerivative|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testTooLargeFirstStep|216 ()|218 {|802 doTestTooLargeFirstStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testSingleStep|216 ()|218 {|802 doTestSingleStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testStepSize|216 ()|218 {|802 doTestStepSize|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testKepler|216 ()|218 {|802 doTestKepler|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testBackward|216 ()|218 {|802 doTestBackward|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testBigStep|216 ()|218 {|802 doTestBigStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testSmallStep|216 ()|218 {|802 doTestSmallStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testDecreasingSteps|216 ()|218 {|802 doTestDecreasingSteps|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testSanityChecks|216 ()|218 {|802 doTestSanityChecks|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testMissedEndEvent|216 ()|218 {|802 doTestMissedEndEvent|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testNonFieldIntegratorConsistency|216 ()|218 {|802 doTestNonFieldIntegratorConsistency|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testKepler|216 ()|218 {|802 doTestKepler|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testBackward|216 ()|218 {|802 doTestBackward|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testSanityChecks|216 ()|218 {|802 doTestSanityChecks|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testNonFieldIntegratorConsistency|216 ()|218 {|802 doTestNonFieldIntegratorConsistency|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testKepler|216 ()|218 {|802 doTestKepler|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testBackward|216 ()|218 {|802 doTestBackward|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testSanityChecks|216 ()|218 {|802 doTestSanityChecks|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testNonFieldIntegratorConsistency|216 ()|218 {|802 doTestNonFieldIntegratorConsistency|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testDerivativesConsistency|216 ()|218 {|802 doTestDerivativesConsistency|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testUnstableDerivative|216 ()|218 {|802 doTestUnstableDerivative|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testTooLargeFirstStep|216 ()|218 {|802 doTestTooLargeFirstStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testSingleStep|216 ()|218 {|802 doTestSingleStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|-1
@|800 Override|-1
@|800 Override|-1
@|800 Override|-1
@|800 Override|-1
@|800 Override|-1
@|800 Override|-1
@|800 Override|-1
@|800 Override|83 public|39 void|802 testNonFieldIntegratorConsistency|216 ()|218 {|802 doTestNonFieldIntegratorConsistency|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testDerivativesConsistency|216 ()|218 {|802 doTestDerivativesConsistency|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testUnstableDerivative|216 ()|218 {|802 doTestUnstableDerivative|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testTooLargeFirstStep|216 ()|218 {|802 doTestTooLargeFirstStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testSingleStep|216 ()|218 {|802 doTestSingleStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testStepSize|216 ()|218 {|802 doTestStepSize|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testKepler|216 ()|218 {|802 doTestKepler|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testBackward|216 ()|218 {|802 doTestBackward|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testBigStep|216 ()|218 {|802 doTestBigStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testSmallStep|216 ()|218 {|802 doTestSmallStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testDecreasingSteps|216 ()|218 {|802 doTestDecreasingSteps|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testSanityChecks|216 ()|218 {|802 doTestSanityChecks|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testMissedEndEvent|216 ()|218 {|802 doTestMissedEndEvent|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testNonFieldIntegratorConsistency|216 ()|218 {|802 doTestNonFieldIntegratorConsistency|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testDerivativesConsistency|216 ()|218 {|802 doTestDerivativesConsistency|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testUnstableDerivative|216 ()|218 {|802 doTestUnstableDerivative|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testTooLargeFirstStep|216 ()|218 {|802 doTestTooLargeFirstStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testSingleStep|216 ()|218 {|802 doTestSingleStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testStepSize|216 ()|218 {|802 doTestStepSize|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testKepler|216 ()|218 {|802 doTestKepler|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testBackward|216 ()|218 {|802 doTestBackward|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testBigStep|216 ()|218 {|802 doTestBigStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testSmallStep|216 ()|218 {|802 doTestSmallStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testDecreasingSteps|216 ()|218 {|802 doTestDecreasingSteps|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testSanityChecks|216 ()|218 {|802 doTestSanityChecks|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testMissedEndEvent|216 ()|218 {|802 doTestMissedEndEvent|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testNonFieldIntegratorConsistency|216 ()|218 {|802 doTestNonFieldIntegratorConsistency|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testDerivativesConsistency|216 ()|218 {|802 doTestDerivativesConsistency|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testUnstableDerivative|216 ()|218 {|802 doTestUnstableDerivative|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testTooLargeFirstStep|216 ()|218 {|802 doTestTooLargeFirstStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testSingleStep|216 ()|218 {|802 doTestSingleStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testStepSize|216 ()|218 {|802 doTestStepSize|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testKepler|216 ()|218 {|802 doTestKepler|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testBackward|216 ()|218 {|802 doTestBackward|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testBigStep|216 ()|218 {|802 doTestBigStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testSmallStep|216 ()|218 {|802 doTestSmallStep|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testDecreasingSteps|216 ()|218 {|802 doTestDecreasingSteps|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testSanityChecks|216 ()|218 {|802 doTestSanityChecks|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testMissedEndEvent|216 ()|218 {|802 doTestMissedEndEvent|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
@|800 Override|83 public|39 void|802 testNonFieldIntegratorConsistency|216 ()|218 {|802 doTestNonFieldIntegratorConsistency|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|215 )|227 ;|219 }|-1
FirstOrderFieldIntegrator|230 <|800 T|231 >|800 integrator|-1
final|800 FirstOrderFieldDifferentialEquations|230 <|800 T|231 >|800 eqn|-1
final|800 FirstOrderFieldDifferentialEquations|230 <|800 T|231 >|800 eqn|-1
final|800 FirstOrderFieldIntegrator|230 <|800 T|231 >|800 integrator|-1
final|800 FirstOrderFieldDifferentialEquations|230 <|800 T|231 >|800 equations|-1
final|800 FirstOrderFieldDifferentialEquations|230 <|800 T|231 >|800 primary|-1
@|802 Test|214 (|800 expected|204 =|800 MaxCountExceededException|235 .|341 class|215 )|83 public|39 void|802 exceedMaxEvaluations|216 ()|218 {|802 doExceedMaxEvaluations|214 (|800 Decimal64Field|235 .|802 getInstance|216 ()|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
{|329 return|802 taylor|214 (|800 reference|234 ,|800 time|234 ,|800 scalingH|234 ,|800 scaled|234 ,|800 nordsieck|215 )|227 ;|219 }|-1
if|214 (|800 seed|236 ==|500 null|215 )|218 {|802 setSeed|214 (|800 System|235 .|802 currentTimeMillis|216 ()|200 +|800 System|235 .|802 identityHashCode|214 (|315 this|215 )|215 )|227 ;|500 return;|219 }|-1
{|802 setSeed|214 (|304 new|39 int|85 []|218 {|800 seed|219 }|215 )|227 ;|219 }|-1
if|214 (|800 seed|236 ==|500 null|215 )|218 {|802 setSeed|214 (|800 System|235 .|802 currentTimeMillis|216 ()|200 +|800 System|235 .|802 identityHashCode|214 (|315 this|215 )|215 )|227 ;|500 return;|219 }|-1
{|800 bits|204 =|214 (|802 nextInt|216 ()|231 >|231 >|231 >|34 NUMBER_CONSTANT|215 )|227 ;|800 val|204 =|800 bits|211 %|800 n|227 ;|219 }|-1
{|800 mt|204 =|304 new|39 int|221 [|800 N|222 ]|227 ;|802 setSeed|214 (|800 seed|215 )|227 ;|219 }|-1
{|800 mt|204 =|304 new|39 int|221 [|800 N|222 ]|227 ;|802 setSeed|214 (|800 seed|215 )|227 ;|219 }|-1
{|800 mt|204 =|304 new|39 int|221 [|800 N|222 ]|227 ;|802 setSeed|214 (|800 seed|215 )|227 ;|219 }|-1
{|800 mt|204 =|304 new|39 int|221 [|800 N|222 ]|227 ;|802 setSeed|214 (|800 System|235 .|802 currentTimeMillis|216 ()|200 +|800 System|235 .|802 identityHashCode|214 (|315 this|215 )|215 )|227 ;|219 }|-1
{|802 setSeed|214 (|800 seed|215 )|227 ;|219 }|-1
public|802 ISAACRandom|214 (|39 long|800 seed|215 )|218 {|802 setSeed|214 (|800 seed|215 )|227 ;|219 }|-1
{|802 setSeed|214 (|800 System|235 .|802 currentTimeMillis|216 ()|200 +|800 System|235 .|802 identityHashCode|214 (|315 this|215 )|215 )|227 ;|219 }|-1
setSeed|214 (|800 seed|215 )|227 ;|-1
{|329 return|802 timeAndReport|214 (|800 title|234 ,|800 DEFAULT_MAX_NAME_WIDTH|234 ,|800 DEFAULT_REPEAT_CHUNK|234 ,|800 DEFAULT_REPEAT_STAT|234 ,|9 false|234 ,|800 methods|215 )|227 ;|219 }|-1
@|800 Deprecated|39 double|802 sample|214 (|215 )|227 ;|-1
random|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|800 seed|215 )|227 ;|-1
{|315 this|214 (|800 cityList|234 ,|800 numNeuronsPerCity|234 ,|800 RandomSource|235 .|802 createLong|216 ()|215 )|227 ;|219 }|-1
final|801 ChiSquaredDistribution|800 distribution|204 =|304 new|801 ChiSquaredDistribution|214 (|214 (|39 double|215 )|40 observed1.length|201 -|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 ChiSquaredDistribution|800 distribution|204 =|304 new|801 ChiSquaredDistribution|214 (|40 expected.length|201 -|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 ChiSquaredDistribution|800 distribution|204 =|304 new|801 ChiSquaredDistribution|214 (|40 expected.length|201 -|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 ChiSquaredDistribution|800 distribution|204 =|304 new|801 ChiSquaredDistribution|214 (|214 (|39 double|215 )|40 observed1.length|201 -|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 ChiSquaredDistribution|800 distribution|204 =|304 new|801 ChiSquaredDistribution|214 (|40 expected.length|201 -|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|83 final|39 double|800 u|204 =|800 rng|235 .|802 nextDouble|216 ()|227 ;|329 return|800 u|202 *|800 upper|200 +|214 (|34 NUMBER_CONSTANT|201 -|800 u|215 )|202 *|800 lower|227 ;|219 }|-1
return|800 empiricalDistribution|235 .|802 createSampler|214 (|800 randomData|235 .|802 getRandomProvider|216 ()|215 )|235 .|802 sample|216 ()|227 ;|-1
empiricalDistribution|204 =|304 new|801 EmpiricalDistribution|214 (|800 binCount|215 )|227 ;|-1
{|315 this|235 .|800 value|204 =|800 value|227 ;|219 }|-1
final|801 FDistribution|800 fdist|204 =|304 new|801 FDistribution|214 (|40 a.dfbg|234 ,|40 a.dfwg|215 )|227 ;|-1
final|801 FDistribution|800 fdist|204 =|304 new|801 FDistribution|214 (|40 a.dfbg|234 ,|40 a.dfwg|215 )|227 ;|-1
final|801 TDistribution|800 distribution|204 =|304 new|801 TDistribution|214 (|800 degreesOfFreedom|215 )|227 ;|-1
final|801 TDistribution|800 distribution|204 =|304 new|801 TDistribution|214 (|800 degreesOfFreedom|215 )|227 ;|-1
final|801 TDistribution|800 distribution|204 =|304 new|801 TDistribution|214 (|800 n|201 -|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 KolmogorovSmirnovTest|800 test|204 =|304 new|801 KolmogorovSmirnovTest|214 (|40 RandomSource.WELL_19937_C|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 KolmogorovSmirnovTest|800 test|204 =|304 new|801 KolmogorovSmirnovTest|214 (|40 RandomSource.WELL_19937_C|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 KolmogorovSmirnovTest|800 test|204 =|304 new|801 KolmogorovSmirnovTest|214 (|40 RandomSource.WELL_19937_C|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 KolmogorovSmirnovTest|800 test|204 =|304 new|801 KolmogorovSmirnovTest|214 (|40 RandomSource.WELL_19937_C|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 KolmogorovSmirnovTest|800 test|204 =|304 new|801 KolmogorovSmirnovTest|214 (|40 RandomSource.WELL_19937_C|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 KolmogorovSmirnovTest|800 test|204 =|304 new|801 KolmogorovSmirnovTest|214 (|40 RandomSource.WELL_19937_C|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 KolmogorovSmirnovTest|800 test|204 =|304 new|801 KolmogorovSmirnovTest|214 (|40 RandomSource.WELL_19937_C|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 NormalDistribution|800 standardNormal|204 =|304 new|801 NormalDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 NormalDistribution|800 standardNormal|204 =|304 new|801 NormalDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 BinomialDistribution|800 distribution|204 =|304 new|801 BinomialDistribution|214 (|800 numberOfTrials|234 ,|800 probability|215 )|227 ;|-1
{|800 rand|204 =|304 new|801 Well19937c|216 ()|227 ;|219 }|-1
return|800 complexSolver|235 .|802 solve|214 (|800 ComplexUtils|235 .|802 real2Complex|214 (|800 coefficients|215 )|234 ,|304 new|801 Complex|214 (|800 initial|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
return|800 complexSolver|235 .|802 solveAll|214 (|800 ComplexUtils|235 .|802 real2Complex|214 (|800 coefficients|215 )|234 ,|304 new|801 Complex|214 (|800 initial|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
final|801 Complex|801 c|85 []|204 =|800 ComplexUtils|235 .|802 real2Complex|214 (|802 getCoefficients|216 ()|215 )|227 ;|-1
UniformRandomProvider|800 rng|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_19937_C|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
RealDistribution.Sampler|800 distribution|-1
if|214 (|800 shuffle|215 )|218 {|800 Collections|235 .|800 shuffle|214 (|800 points|234 ,|304 new|801 JDKRandomAdaptor|214 (|800 rng|215 )|215 )|227 ;|219 }|-1
if|214 (|800 shuffle|215 )|218 {|800 Collections|235 .|800 shuffle|214 (|800 points|234 ,|304 new|801 JDKRandomAdaptor|214 (|800 rng|215 )|215 )|227 ;|219 }|-1
if|214 (|800 shuffle|215 )|218 {|800 Collections|235 .|800 shuffle|214 (|800 points|234 ,|304 new|801 JDKRandomAdaptor|214 (|800 rng|215 )|215 )|227 ;|219 }|-1
for|214 (|39 int|800 i|204 =|34 NUMBER_CONSTANT|227 ;|800 i|230 <|800 dim|227 ;|800 i|247 ++|215 )|218 {|801 normalVals|221 [|800 i|222 ]|204 =|800 gauss|235 .|802 sample|216 ()|227 ;|219 }|-1
cachedD|204 =|800 MatrixUtils|235 .|802 createRealMatrixWithDiagonal|214 (|800 realEigenvalues|215 )|227 ;|-1
ComplexFormat|800 cf|204 =|800 ComplexFormat|235 .|802 getInstance|214 (|802 getLocale|216 ()|215 )|227 ;|-1
ComplexFormat|800 cf|204 =|800 ComplexFormat|235 .|802 getInstance|214 (|802 getLocale|216 ()|215 )|227 ;|-1
UniformRandomProvider|800 randomGenerator|-1
public|802 NaturalRanking|214 (|801 UniformRandomProvider|800 randomGenerator|215 )|218 {|315 this|214 (|800 DEFAULT_NAN_STRATEGY|234 ,|40 TiesStrategy.RANDOM|234 ,|800 randomGenerator|215 )|227 ;|219 }|-1
{|315 this|214 (|800 nanStrategy|234 ,|800 tiesStrategy|234 ,|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_19937_C|215 )|215 )|227 ;|219 }|-1
{|315 this|214 (|800 DEFAULT_NAN_STRATEGY|234 ,|800 tiesStrategy|234 ,|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_19937_C|215 )|215 )|227 ;|219 }|-1
final|801 UniformRandomProvider|800 random|-1
final|801 UniformRandomProvider|800 random|-1
{|315 this|214 (|800 k|234 ,|800 maxIterations|234 ,|800 measure|234 ,|800 RandomSource|235 .|802 create|214 (|40 RandomSource.MT_64|215 )|215 )|227 ;|219 }|-1
final|801 UniformRandomProvider|800 random|-1
{|315 this|214 (|800 k|234 ,|800 fuzziness|234 ,|800 maxIterations|234 ,|800 measure|234 ,|800 DEFAULT_EPSILON|234 ,|800 RandomSource|235 .|802 create|214 (|40 RandomSource.MT_64|215 )|215 )|227 ;|219 }|-1
final|801 UniformRandomProvider|800 random|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.MT_64|215 )|227 ;|-1
final|801 UniformRandomProvider|800 random|-1
final|801 UniformRandomProvider|800 random|204 =|800 GeneticAlgorithm|235 .|802 getRandomGenerator|216 ()|227 ;|-1
final|801 UniformRandomProvider|800 random|204 =|800 GeneticAlgorithm|235 .|802 getRandomGenerator|216 ()|227 ;|-1
UniformRandomProvider|800 randGen|204 =|802 getRandomGenerator|216 ()|227 ;|-1
final|801 UniformRandomProvider|800 random|-1
final|801 UniformRandomProvider|800 random|204 =|800 GeneticAlgorithm|235 .|802 getRandomGenerator|216 ()|227 ;|-1
{|801 d|221 [|800 r|222 ]|221 [|800 c|222 ]|204 =|800 random|235 .|802 sample|216 ()|227 ;|219 }|-1
for|214 (|39 int|800 i|204 =|34 NUMBER_CONSTANT|227 ;|800 i|230 <|800 size|227 ;|800 i|247 ++|215 )|218 {|801 randn|221 [|800 i|222 ]|204 =|800 random|235 .|802 sample|216 ()|227 ;|219 }|-1
final|801 UniformRandomProvider|800 generator|-1
UnitSphereRandomVectorGenerator|800 random|204 =|304 new|801 UnitSphereRandomVectorGenerator|214 (|34 NUMBER_CONSTANT|234 ,|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
UnitSphereRandomVectorGenerator|800 random|204 =|304 new|801 UnitSphereRandomVectorGenerator|214 (|34 NUMBER_CONSTANT|234 ,|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
UniformRandomProvider|800 random|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 random|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 random|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|39 double|800 comp|204 =|800 rand|235 .|802 sample|216 ()|227 ;|-1
{|315 this|214 (|800 dimension|234 ,|800 RandomSource|235 .|802 create|214 (|40 RandomSource.MT_64|215 )|215 )|227 ;|219 }|-1
UniformRandomProvider|800 random|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 random|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 random|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 random|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 random|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 generator|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 generator|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|800 field|204 =|304 new|801 DfpField|214 (|34 NUMBER_CONSTANT|215 )|227 ;|800 generator|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.MT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
UniformRandomProvider|800 random|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.XOR_SHIFT_1024_S|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 rng|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.TWO_CMRES|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 UniformRandomProvider|800 r|-1
UniformRandomProvider|800 r|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 r|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 r|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 r|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 r|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 r|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 r|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 r|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 random|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 random|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 random|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 random|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 random|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 random|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
UniformRandomProvider|800 rng|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
new|801 PivotingStrategyInterface|85 []|218 {|304 new|801 MedianOf3PivotingStrategy|216 ()|234 ,|304 new|801 CentralPivotingStrategy|216 ()|234 ,|304 new|801 RandomPivotingStrategy|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|219 }|-1
kthSelector|204 =|304 new|801 KthSelector|214 (|304 new|801 RandomPivotingStrategy|214 (|40 RandomSource.WELL_1024_A|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
final|801 RandomGenerator|800 rng|204 =|304 new|801 RngAdaptor|214 (|40 RandomSource.MT|215 )|227 ;|-1
return|800 InferenceTestUtils|235 .|802 gTest|214 (|800 expected|234 ,|800 observed|215 )|227 ;|-1
{|800 out|235 .|802 defaultWriteObject|216 ()|227 ;|800 out|235 .|802 writeObject|214 (|800 RandomSource|235 .|802 saveState|214 (|800 random|215 )|235 .|802 getState|216 ()|215 )|227 ;|219 }|-1
{|800 out|235 .|802 defaultWriteObject|216 ()|227 ;|800 out|235 .|802 writeObject|214 (|800 RandomSource|235 .|802 saveState|214 (|800 delegate|215 )|235 .|802 getState|216 ()|215 )|227 ;|219 }|-1
this|235 .|800 rng|204 =|304 new|801 GaussianRandomGenerator|214 (|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_19937_C|234 ,|800 seed|215 )|215 )|227 ;|-1
rng|204 =|304 new|801 GaussianRandomGenerator|214 (|800 RandomSource|235 .|802 create|214 (|40 RandomSource.WELL_19937_C|234 ,|800 seed|215 )|215 )|227 ;|-1
final|801 UniformRandomProvider|800 random|204 =|800 RandomSource|235 .|802 create|214 (|40 RandomSource.MT|215 )|227 ;|-1
final|801 UniformRandomProvider|800 random|204 =|800 GeneticAlgorithm|235 .|802 getRandomGenerator|216 ()|227 ;|-1
final|800 Collection|230 <|800 Neuron|231 >|800 exclude|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
ArrayFieldVector|230 <|800 T|231 >|800 out|204 =|304 new|800 ArrayFieldVector|232 <>|214 (|800 field|234 ,|800 n|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
{|329 return|304 new|801 ArrayFieldVector|232 <>|214 (|315 this|234 ,|800 v|215 )|227 ;|219 }|-1
final|800 FieldMatrix|230 <|800 T|231 >|800 out|204 =|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 field|234 ,|800 m|234 ,|800 n|215 )|227 ;|-1
final|800 FieldMatrix|230 <|800 T|231 >|800 out|204 =|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 field|234 ,|800 m|234 ,|800 n|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|800 field|234 ,|800 out|234 ,|9 false|215 )|227 ;|-1
{|329 return|304 new|801 ArrayFieldVector|232 <>|214 (|315 this|234 ,|9 true|215 )|227 ;|219 }|-1
{|800 components|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|800 firstIndex|204 =|800 primary|235 .|802 getDimension|216 ()|227 ;|219 }|-1
this|235 .|800 components|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
ListUnivariateImpl|800 u|204 =|304 new|801 ListUnivariateImpl|214 (|304 new|801 ArrayList|232 <>|216 ()|234 ,|800 transformers|215 )|227 ;|-1
ListUnivariateImpl|800 u|204 =|304 new|801 ListUnivariateImpl|214 (|304 new|801 ArrayList|232 <>|216 ()|234 ,|800 transformers|215 )|227 ;|-1
DescriptiveStatistics|800 u|204 =|304 new|801 ListUnivariateImpl|214 (|304 new|801 ArrayList|232 <>|216 ()|234 ,|800 transformers|215 )|227 ;|-1
List|230 <|800 Object|231 >|800 externalList|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
List|230 <|800 Double|231 >|800 valuesList|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
List|230 <|800 Chromosome|231 >|800 popList|204 =|304 new|801 LinkedList|232 <>|216 ()|227 ;|-1
return|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 out|215 )|227 ;|-1
Array2DRowFieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|800 Array2DRowFieldMatrix|232 <>|214 (|800 testData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 subTestData|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|800 data|234 ,|9 false|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 subTestData|215 )|227 ;|-1
{|800 Assert|235 .|802 assertEquals|214 (|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 reference|215 )|234 ,|800 sub|215 )|227 ;|219 }|-1
{|800 Assert|235 .|802 assertEquals|214 (|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 reference|215 )|234 ,|800 sub|215 )|227 ;|219 }|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 testData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 testData|215 )|227 ;|-1
Collection|230 <|800 SummaryStatistics|231 >|800 aggregate|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 SummaryStatistics|231 >|800 aggregate|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 StatisticalSummary|231 >|800 aggregate|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 SummaryStatistics|231 >|800 aggregate|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
return|304 new|801 FieldODEStateAndDerivative|232 <>|214 (|800 time|234 ,|800 y|234 ,|800 yDot|215 )|227 ;|-1
this|235 .|800 interpolator|204 =|304 new|801 PerfectInterpolator|232 <>|214 (|800 problem|215 )|227 ;|-1
this|235 .|800 circles|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
ContinuousOutputFieldModel|230 <|800 T|231 >|800 otherCm|204 =|304 new|800 ContinuousOutputFieldModel|232 <>|216 ()|227 ;|-1
ContinuousOutputFieldModel|230 <|800 T|231 >|800 cm|204 =|304 new|800 ContinuousOutputFieldModel|232 <>|216 ()|227 ;|-1
{|304 new|801 SparseFieldMatrix|232 <>|214 (|800 field|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|800 data|234 ,|9 false|215 )|227 ;|-1
assertClose|214 (|45 STRING_CONSTANT|234 ,|800 m|235 .|802 preMultiply|214 (|304 new|801 ArrayFieldVector|232 <>|214 (|800 testVector|215 )|235 .|802 toArray|216 ()|215 )|234 ,|800 preMultTest|234 ,|800 normTolerance|215 )|227 ;|-1
assertClose|214 (|45 STRING_CONSTANT|234 ,|800 testVector|234 ,|800 m|235 .|802 operate|214 (|304 new|801 ArrayFieldVector|232 <>|214 (|800 testVector|215 )|215 )|235 .|802 toArray|216 ()|234 ,|800 entryTolerance|215 )|227 ;|-1
assertClose|214 (|45 STRING_CONSTANT|234 ,|800 m|235 .|802 multiply|214 (|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 FractionField|235 .|802 getInstance|216 ()|234 ,|800 testDataInv|215 )|215 )|234 ,|800 identity|234 ,|800 entryTolerance|215 )|227 ;|-1
RegionFactory|230 <|800 Sphere1D|231 >|800 factory|204 =|304 new|800 RegionFactory|232 <>|216 ()|227 ;|-1
List|230 <|800 SubHyperplane|230 <|800 Sphere1D|231 >|231 >|800 boundary|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 ArrayList|230 <|801 Object|85 []|231 >|800 parameters|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
singletons|204 =|304 new|801 ArrayList|232 <>|214 (|800 pmf|235 .|802 size|216 ()|215 )|227 ;|-1
{|329 return|304 new|801 GillFieldIntegrator|232 <>|214 (|800 field|234 ,|800 field|235 .|802 getOne|216 ()|215 )|227 ;|219 }|-1
final|800 ArrayList|230 <|801 Object|85 []|231 >|800 parameters|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
return|304 new|801 FieldODEStateAndDerivative|232 <>|214 (|800 time|234 ,|800 interpolatedState|234 ,|800 interpolatedDerivatives|215 )|227 ;|-1
DBSCANClusterer|230 <|800 DoublePoint|231 >|800 clusterer|204 =|304 new|800 DBSCANClusterer|232 <>|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|800 DBSCANClusterer|230 <|800 DoublePoint|231 >|800 transformer|204 =|304 new|800 DBSCANClusterer|232 <>|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|800 DBSCANClusterer|230 <|800 DoublePoint|231 >|800 transformer|204 =|304 new|800 DBSCANClusterer|232 <>|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|800 DBSCANClusterer|230 <|800 DoublePoint|231 >|800 clusterer|204 =|304 new|800 DBSCANClusterer|232 <>|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|800 DBSCANClusterer|230 <|800 DoublePoint|231 >|800 transformer|204 =|304 new|800 DBSCANClusterer|232 <>|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
HashSet|230 <|800 Object|231 >|800 sampSet|204 =|304 new|800 HashSet|232 <>|216 ()|227 ;|-1
final|800 List|230 <|39 double|85 []|231 >|800 coordinatesList|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 Neuron|231 >|800 list|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 City|231 >|800 cityList|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
public|802 CircleVectorial|216 ()|218 {|800 points|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|219 }|-1
{|329 return|304 new|801 MidpointFieldIntegrator|232 <>|214 (|800 field|234 ,|800 field|235 .|802 getOne|216 ()|215 )|227 ;|219 }|-1
return|304 new|801 FieldODEStateAndDerivative|232 <>|214 (|800 time|234 ,|800 interpolatedState|234 ,|800 interpolatedDerivatives|215 )|227 ;|-1
this|235 .|800 convexCellsInsidePoints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
root|204 =|304 new|801 BSPTree|232 <>|216 ()|227 ;|-1
Collection|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 Segment|231 >|800 segments|204 =|304 new|801 ArrayList|232 <>|214 (|800 list|235 .|802 size|216 ()|215 )|227 ;|-1
{|800 parametersNames|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|800 parametersNames|235 .|802 addAll|214 (|800 names|215 )|227 ;|219 }|-1
parametersNames|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
return|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 field|234 ,|800 d|234 ,|9 false|215 )|227 ;|-1
{|800 map|204 =|304 new|801 HashMap|232 <>|216 ()|227 ;|800 defaultTransformer|204 =|304 new|801 DefaultTransformer|216 ()|227 ;|219 }|-1
final|800 Set|230 <|800 T|231 >|800 oneSet|204 =|304 new|801 HashSet|232 <>|214 (|800 one|215 )|227 ;|-1
final|800 List|230 <|800 T|231 >|800 neighbors|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
List|230 <|800 T|231 >|800 seeds|204 =|304 new|801 ArrayList|232 <>|214 (|800 neighbors|215 )|227 ;|-1
final|800 List|230 <|800 Segment|231 >|800 segments|204 =|304 new|801 ArrayList|232 <>|214 (|800 list|235 .|802 size|216 ()|215 )|227 ;|-1
return|304 new|801 Pair|232 <>|214 (|800 normal|234 ,|800 jTr|215 )|227 ;|-1
Collection|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
List|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
List|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
ArrayList|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
ArrayList|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
ArrayList|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
ArrayList|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
ArrayList|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
ArrayList|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
ArrayList|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
ArrayList|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
ArrayList|230 <|800 LinearConstraint|231 >|800 constraints|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
{|800 points|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|800 sigma|204 =|800 error|227 ;|219 }|-1
final|800 List|230 <|800 Long|231 >|800 linkEnd|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
List|230 <|800 Chromosome|231 >|800 chromosomes|204 =|304 new|801 ArrayList|232 <>|214 (|800 population|235 .|802 getChromosomes|216 ()|215 )|227 ;|-1
List|230 <|800 Comparable|230 <|231 >|231 >|800 modeList|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
this|235 .|800 features|204 =|304 new|801 AtomicReference|232 <>|214 (|800 features|235 .|802 clone|216 ()|215 )|227 ;|-1
List|230 <|800 Vector3D|231 >|800 reducedSupport|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
List|230 <|800 Vector3D|231 >|800 points|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
WelzlEncloser|230 <|800 Euclidean3D|234 ,|800 Vector3D|231 >|800 encloser|204 =|304 new|800 WelzlEncloser|232 <>|214 (|34 NUMBER_CONSTANT|234 ,|800 generator|215 )|227 ;|-1
WelzlEncloser|230 <|800 Euclidean3D|234 ,|800 Vector3D|231 >|800 encloser|204 =|304 new|800 WelzlEncloser|232 <>|214 (|34 NUMBER_CONSTANT|234 ,|800 generator|215 )|227 ;|-1
TreeSet|230 <|800 Double|231 >|800 values|204 =|304 new|800 TreeSet|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 PairDoubleInteger|231 >|800 list|204 =|304 new|801 ArrayList|232 <>|214 (|800 len|215 )|227 ;|-1
return|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 pData|234 ,|9 false|215 )|227 ;|-1
KMeansPlusPlusClusterer|230 <|800 DoublePoint|231 >|800 transformer|204 =|304 new|800 KMeansPlusPlusClusterer|232 <>|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|800 List|230 <|39 double|85 []|231 >|800 paramsAndChi2|204 =|304 new|801 ArrayList|232 <>|214 (|800 gridSize|202 *|800 gridSize|215 )|227 ;|-1
{|329 return|304 new|801 ThreeEighthesFieldIntegrator|232 <>|214 (|800 field|234 ,|800 step|215 )|227 ;|219 }|-1
p2|204 =|304 new|801 Pair|232 <>|214 (|45 STRING_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|-1
List|230 <|800 Chromosome|231 >|800 popList|204 =|304 new|801 LinkedList|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 Neuron|231 >|800 neuronList|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 Neuron|231 >|800 neurons|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
{|40 copy.linkMap|235 .|802 put|214 (|800 e|235 .|802 getKey|216 ()|234 ,|304 new|801 HashSet|232 <>|214 (|800 e|235 .|802 getValue|216 ()|215 )|215 )|227 ;|219 }|-1
FieldHermiteInterpolator|230 <|800 BigFraction|231 >|800 interpolator|204 =|304 new|800 FieldHermiteInterpolator|232 <>|216 ()|227 ;|-1
FieldHermiteInterpolator|230 <|800 BigFraction|231 >|800 interpolator|204 =|304 new|800 FieldHermiteInterpolator|232 <>|216 ()|227 ;|-1
FieldHermiteInterpolator|230 <|800 BigFraction|231 >|800 interpolator|204 =|304 new|800 FieldHermiteInterpolator|232 <>|216 ()|227 ;|-1
FieldHermiteInterpolator|230 <|800 Dfp|231 >|800 interpolator|204 =|304 new|800 FieldHermiteInterpolator|232 <>|216 ()|227 ;|-1
FieldHermiteInterpolator|230 <|800 Dfp|231 >|800 interpolator|204 =|304 new|800 FieldHermiteInterpolator|232 <>|216 ()|227 ;|-1
FieldHermiteInterpolator|230 <|800 Dfp|231 >|800 interpolator|204 =|304 new|800 FieldHermiteInterpolator|232 <>|216 ()|227 ;|-1
FieldHermiteInterpolator|230 <|800 Dfp|231 >|800 interpolator|204 =|304 new|800 FieldHermiteInterpolator|232 <>|216 ()|227 ;|-1
FieldHermiteInterpolator|230 <|800 BigFraction|231 >|800 interpolator|204 =|304 new|800 FieldHermiteInterpolator|232 <>|216 ()|227 ;|-1
FieldHermiteInterpolator|230 <|800 BigFraction|231 >|800 interpolator|204 =|304 new|800 FieldHermiteInterpolator|232 <>|216 ()|227 ;|-1
FieldHermiteInterpolator|230 <|800 BigFraction|231 >|800 interpolator|204 =|304 new|800 FieldHermiteInterpolator|232 <>|216 ()|227 ;|-1
return|304 new|801 FieldODEStateAndDerivative|232 <>|214 (|800 time|234 ,|800 interpolatedState|234 ,|800 interpolatedDerivatives|215 )|227 ;|-1
final|800 List|230 <|800 WeightedObservedPoint|231 >|800 points|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 ArrayList|230 <|800 Chromosome|231 >|800 chromosomes|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
final|800 ArrayList|230 <|800 Chromosome|231 >|800 chromosomes|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
final|800 ArrayList|230 <|800 Chromosome|231 >|800 chromosomes|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
final|800 ArrayList|230 <|800 Chromosome|231 >|800 chromosomes|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
final|800 ArrayList|230 <|800 Chromosome|231 >|800 chromosomes|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
final|800 ArrayList|230 <|800 Chromosome|231 >|800 chromosomes|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
ArrayList|230 <|800 Chromosome|231 >|800 chromosomes|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
List|230 <|800 Vector2D|231 >|800 reducedSupport|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
List|230 <|800 Vector2D|231 >|800 list|204 =|304 new|801 ArrayList|232 <>|214 (|40 coordinates.length|203 /|34 NUMBER_CONSTANT|215 )|227 ;|-1
List|230 <|800 Vector2D|231 >|800 points|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
WelzlEncloser|230 <|800 Euclidean2D|234 ,|800 Vector2D|231 >|800 encloser|204 =|304 new|800 WelzlEncloser|232 <>|214 (|34 NUMBER_CONSTANT|234 ,|800 generator|215 )|227 ;|-1
WelzlEncloser|230 <|800 Euclidean2D|234 ,|800 Vector2D|231 >|800 encloser|204 =|304 new|800 WelzlEncloser|232 <>|214 (|34 NUMBER_CONSTANT|234 ,|800 generator|215 )|227 ;|-1
mapper|204 =|304 new|801 FieldEquationsMapper|232 <>|214 (|800 mapper|234 ,|800 secondary|235 .|802 getDimension|216 ()|215 )|227 ;|-1
Map|230 <|800 String|234 ,|800 String|231 >|800 referenceRules|204 =|304 new|801 HashMap|232 <>|216 ()|227 ;|-1
Map|230 <|800 String|234 ,|800 String|231 >|800 referenceRules|204 =|304 new|801 HashMap|232 <>|216 ()|227 ;|-1
FirstOrderFieldDifferentialEquations|230 <|800 T|231 >|800 eqn|204 =|304 new|801 SinCos|232 <>|214 (|800 field|215 )|227 ;|-1
setUpInterpolator|214 (|800 field|234 ,|304 new|801 SinCos|232 <>|214 (|800 field|215 )|234 ,|34 NUMBER_CONSTANT|234 ,|304 new|39 double|85 []|218 {|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|219 }|234 ,|34 NUMBER_CONSTANT|215 )|-1
setUpInterpolator|214 (|800 field|234 ,|304 new|801 SinCos|232 <>|214 (|800 field|215 )|234 ,|34 NUMBER_CONSTANT|234 ,|304 new|39 double|85 []|218 {|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|219 }|234 ,|34 NUMBER_CONSTANT|215 )|-1
return|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 pData|234 ,|9 false|215 )|227 ;|-1
{|800 innerDistribution|204 =|304 new|801 EnumeratedDistribution|232 <>|214 (|802 createDistribution|214 (|800 singletons|234 ,|800 probabilities|215 )|215 )|227 ;|219 }|-1
{|329 return|304 new|801 ClassicalRungeKuttaFieldIntegrator|232 <>|214 (|800 field|234 ,|800 step|215 )|227 ;|219 }|-1
{|329 return|304 new|801 FieldLUDecomposition|232 <>|214 (|800 m|215 )|235 .|802 getDeterminant|216 ()|235 .|802 doubleValue|216 ()|227 ;|219 }|-1
solver|204 =|304 new|801 FieldLUDecomposition|232 <>|214 (|802 createFractionMatrix|214 (|800 singular|215 )|215 )|235 .|802 getSolver|216 ()|227 ;|-1
solver|204 =|304 new|801 FieldLUDecomposition|232 <>|214 (|802 createFractionMatrix|214 (|800 testData|215 )|215 )|235 .|802 getSolver|216 ()|227 ;|-1
List|230 <|800 Chromosome|231 >|800 popList|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
NPointCrossover|230 <|800 Integer|231 >|800 npc|204 =|304 new|800 NPointCrossover|232 <>|214 (|800 order|215 )|227 ;|-1
return|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|802 getField|216 ()|234 ,|800 outData|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|802 getField|216 ()|234 ,|800 outData|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|802 getField|216 ()|234 ,|800 outData|234 ,|9 false|215 )|227 ;|-1
{|329 return|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|802 getField|216 ()|234 ,|800 rowDimension|234 ,|800 columnDimension|215 )|227 ;|219 }|-1
final|800 BlockFieldMatrix|230 <|800 T|231 >|800 out|204 =|304 new|800 BlockFieldMatrix|232 <>|214 (|802 getField|216 ()|234 ,|800 nCols|234 ,|800 nRows|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|802 getField|216 ()|234 ,|800 outData|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|802 getField|216 ()|234 ,|800 outData|234 ,|9 false|215 )|227 ;|-1
final|800 BlockFieldMatrix|230 <|800 T|231 >|800 out|204 =|304 new|800 BlockFieldMatrix|232 <>|214 (|802 getField|216 ()|234 ,|800 rows|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|800 BlockFieldMatrix|230 <|800 T|231 >|800 out|204 =|304 new|800 BlockFieldMatrix|232 <>|214 (|802 getField|216 ()|234 ,|34 NUMBER_CONSTANT|234 ,|800 columns|215 )|227 ;|-1
final|800 BlockFieldMatrix|230 <|800 T|231 >|800 out|204 =|304 new|800 BlockFieldMatrix|232 <>|214 (|802 getField|216 ()|234 ,|800 rows|234 ,|40 m.columns|215 )|227 ;|-1
final|800 BlockFieldMatrix|230 <|800 T|231 >|800 out|204 =|304 new|800 BlockFieldMatrix|232 <>|214 (|802 getField|216 ()|234 ,|800 rows|234 ,|800 columns|215 )|227 ;|-1
final|800 BlockFieldMatrix|230 <|800 T|231 >|800 out|204 =|304 new|800 BlockFieldMatrix|232 <>|214 (|802 getField|216 ()|234 ,|800 rows|234 ,|800 columns|215 )|227 ;|-1
final|800 BlockFieldMatrix|230 <|800 T|231 >|800 out|204 =|304 new|800 BlockFieldMatrix|232 <>|214 (|802 getField|216 ()|234 ,|800 rows|234 ,|800 columns|215 )|227 ;|-1
final|800 BlockFieldMatrix|230 <|800 T|231 >|800 out|204 =|304 new|800 BlockFieldMatrix|232 <>|214 (|802 getField|216 ()|234 ,|800 rows|234 ,|800 columns|215 )|227 ;|-1
final|800 BlockFieldMatrix|230 <|800 T|231 >|800 out|204 =|304 new|800 BlockFieldMatrix|232 <>|214 (|802 getField|216 ()|234 ,|800 rows|234 ,|800 columns|215 )|227 ;|-1
final|800 BlockFieldMatrix|230 <|800 T|231 >|800 out|204 =|304 new|800 BlockFieldMatrix|232 <>|214 (|802 getField|216 ()|234 ,|800 rows|234 ,|800 columns|215 )|227 ;|-1
{|329 return|304 new|801 BlockFieldMatrix|232 <>|214 (|802 getField|216 ()|234 ,|800 rowDimension|234 ,|800 columnDimension|215 )|227 ;|219 }|-1
loops|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 Integer|231 >|800 factors|204 =|304 new|801 ArrayList|232 <>|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
return|304 new|801 SparseFieldVector|232 <>|214 (|800 field|234 ,|800 t|215 )|227 ;|-1
final|800 SparseFieldVector|230 <|800 Fraction|231 >|800 v|204 =|304 new|800 SparseFieldVector|232 <>|214 (|800 field|234 ,|800 data|215 )|227 ;|-1
final|800 SparseFieldVector|230 <|800 Fraction|231 >|800 v|204 =|304 new|800 SparseFieldVector|232 <>|214 (|800 field|234 ,|800 data|215 )|227 ;|-1
final|800 SparseFieldVector|230 <|800 Fraction|231 >|800 v|204 =|304 new|800 SparseFieldVector|232 <>|214 (|800 field|234 ,|800 data|215 )|227 ;|-1
final|800 SparseFieldVector|230 <|800 Fraction|231 >|800 v|204 =|304 new|800 SparseFieldVector|232 <>|214 (|800 field|234 ,|800 data|215 )|227 ;|-1
final|800 SparseFieldVector|230 <|800 Fraction|231 >|800 v|204 =|304 new|800 SparseFieldVector|232 <>|214 (|800 field|234 ,|800 data|215 )|227 ;|-1
final|800 SparseFieldVector|230 <|800 Fraction|231 >|800 v|204 =|304 new|800 SparseFieldVector|232 <>|214 (|800 field|234 ,|800 data|215 )|227 ;|-1
final|800 SparseFieldVector|230 <|800 Fraction|231 >|800 v|204 =|304 new|800 SparseFieldVector|232 <>|214 (|800 field|234 ,|800 data|215 )|227 ;|-1
final|800 SparseFieldVector|230 <|800 Fraction|231 >|800 v|204 =|304 new|800 SparseFieldVector|232 <>|214 (|800 field|234 ,|800 data|215 )|227 ;|-1
SparseFieldVector|230 <|800 Fraction|231 >|800 v1|204 =|304 new|800 SparseFieldVector|232 <>|214 (|800 field|234 ,|800 vec1|215 )|227 ;|-1
SparseFieldVector|230 <|800 Fraction|231 >|800 v1|204 =|304 new|800 SparseFieldVector|232 <>|214 (|800 field|234 ,|800 vec1|215 )|227 ;|-1
{|329 return|304 new|801 FieldODEState|232 <>|214 (|800 t0|234 ,|800 y0|215 )|227 ;|219 }|-1
RegionFactory|230 <|800 Sphere1D|231 >|800 factory|204 =|304 new|800 RegionFactory|232 <>|216 ()|227 ;|-1
RegionFactory|230 <|800 Sphere2D|231 >|800 factory|204 =|304 new|800 RegionFactory|232 <>|216 ()|227 ;|-1
RegionFactory|230 <|800 Sphere2D|231 >|800 factory|204 =|304 new|800 RegionFactory|232 <>|216 ()|227 ;|-1
List|230 <|800 SubHyperplane|230 <|800 Sphere2D|231 >|231 >|800 boundary|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
List|230 <|800 SubHyperplane|230 <|800 Sphere2D|231 >|231 >|800 boundary|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
RegionFactory|230 <|800 Sphere2D|231 >|800 factory|204 =|304 new|800 RegionFactory|232 <>|216 ()|227 ;|-1
RegionFactory|230 <|800 Sphere2D|231 >|800 factory|204 =|304 new|800 RegionFactory|232 <>|216 ()|227 ;|-1
final|800 ArrayList|230 <|800 Integer|231 >|800 nonZeroPositions|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
{|315 this|235 .|800 tolerance|204 =|800 tolerance|227 ;|315 this|235 .|800 segments|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|219 }|-1
final|800 List|230 <|800 Segment|231 >|800 loop|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
loops|204 =|304 new|801 ArrayList|232 <>|216 ()|-1
this|235 .|800 lines|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
this|235 .|800 representation|204 =|800 Collections|235 .|802 unmodifiableList|214 (|800 copyList|233 ?|304 new|801 ArrayList|232 <>|214 (|800 representation|215 )|226 :|800 representation|215 )|227 ;|-1
newClusters|204 =|304 new|801 ArrayList|232 <>|214 (|800 k|215 )|-1
microsphereData|204 =|304 new|801 ArrayList|232 <>|214 (|800 size|215 )|227 ;|-1
final|800 Set|230 <|800 Neuron|231 >|800 list|204 =|304 new|801 HashSet|232 <>|216 ()|227 ;|-1
this|235 .|800 listeners|204 =|304 new|801 CopyOnWriteArrayList|232 <>|216 ()|227 ;|-1
this|235 .|800 listeners|204 =|304 new|801 CopyOnWriteArrayList|232 <>|216 ()|227 ;|-1
List|230 <|800 Integer|231 >|800 minRatioPositions|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
{|800 innerDistribution|204 =|304 new|801 EnumeratedDistribution|232 <>|214 (|802 createDistribution|214 (|800 singletons|234 ,|800 probabilities|215 )|215 )|227 ;|219 }|-1
final|800 List|230 <|800 Interval|231 >|800 list|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
{|329 return|304 new|801 LutherFieldIntegrator|232 <>|214 (|800 field|234 ,|800 step|215 )|227 ;|219 }|-1
final|800 FuzzyKMeansClusterer|230 <|800 DoublePoint|231 >|800 clusterer|204 =|304 new|800 FuzzyKMeansClusterer|232 <>|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|329 return|304 new|801 SparseFieldMatrix|232 <>|214 (|802 getField|216 ()|234 ,|800 rowDimension|234 ,|800 columnDimension|215 )|227 ;|219 }|-1
{|329 return|304 new|801 SparseFieldMatrix|232 <>|214 (|315 this|215 )|227 ;|219 }|-1
entries|204 =|304 new|801 OpenIntToFieldHashMap|232 <>|214 (|802 getField|216 ()|215 )|227 ;|-1
entries|204 =|304 new|801 OpenIntToFieldHashMap|232 <>|214 (|40 other.entries|215 )|227 ;|-1
entries|204 =|304 new|801 OpenIntToFieldHashMap|232 <>|214 (|800 field|215 )|227 ;|-1
entries|204 =|304 new|801 OpenIntToFieldHashMap|232 <>|214 (|800 field|215 )|227 ;|-1
steps|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
output|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
@|800 Before|83 public|39 void|802 setUp|216 ()|218 {|800 evaluator|204 =|304 new|801 SumOfClusterVariances|232 <>|214 (|304 new|801 EuclideanDistance|216 ()|215 )|227 ;|219 }|-1
OpenIntToFieldHashMap|230 <|800 Fraction|231 >|800 map|204 =|304 new|800 OpenIntToFieldHashMap|232 <>|214 (|800 field|215 )|227 ;|-1
OpenIntToFieldHashMap|230 <|800 Fraction|231 >|800 map|204 =|304 new|800 OpenIntToFieldHashMap|232 <>|214 (|800 field|215 )|227 ;|-1
Map|230 <|800 Integer|234 ,|800 Fraction|231 >|800 generated|204 =|304 new|801 HashMap|232 <>|216 ()|227 ;|-1
OpenIntToFieldHashMap|230 <|800 Fraction|231 >|800 map|204 =|304 new|800 OpenIntToFieldHashMap|232 <>|214 (|800 field|215 )|227 ;|-1
Set|230 <|800 Integer|231 >|800 keysInMap|204 =|304 new|801 HashSet|232 <>|214 (|800 javaMap|235 .|802 keySet|216 ()|215 )|227 ;|-1
OpenIntToFieldHashMap|230 <|800 Fraction|231 >|800 map|204 =|304 new|800 OpenIntToFieldHashMap|232 <>|214 (|800 field|215 )|227 ;|-1
OpenIntToFieldHashMap|230 <|800 Fraction|231 >|800 map|204 =|304 new|800 OpenIntToFieldHashMap|232 <>|214 (|800 field|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
OpenIntToFieldHashMap|230 <|800 Fraction|231 >|800 map|204 =|304 new|800 OpenIntToFieldHashMap|232 <>|214 (|800 field|215 )|227 ;|-1
Map|230 <|800 Integer|234 ,|800 Fraction|231 >|800 map|204 =|304 new|801 HashMap|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 Field|231 >|800 fields|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
RegionFactory|230 <|800 Euclidean1D|231 >|800 factory|204 =|304 new|800 RegionFactory|232 <>|216 ()|227 ;|-1
{|329 return|304 new|801 ArrayList|232 <>|214 (|800 observations|215 )|227 ;|219 }|-1
final|800 HashMap|230 <|800 Neuron|234 ,|800 Integer|231 >|800 hit|204 =|304 new|800 HashMap|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 PairNeuronDouble|231 >|800 list|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
List|230 <|800 CentroidCluster|230 <|800 T|231 >|231 >|800 newClusters|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
List|230 <|801 Object|85 []|231 >|800 list|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
return|304 new|801 FieldODEStateAndDerivative|232 <>|214 (|800 time|234 ,|800 interpolatedState|234 ,|800 interpolatedDerivatives|215 )|227 ;|-1
{|329 return|304 new|801 GillFieldIntegrator|232 <>|214 (|800 field|234 ,|800 step|215 )|227 ;|219 }|-1
return|304 new|801 FieldRotation|232 <>|214 (|800 mds|234 ,|800 threshold|215 )|227 ;|-1
FieldRotation|230 <|800 DerivativeStructure|231 >|800 quat|204 =|304 new|800 FieldRotation|232 <>|214 (|800 u1|234 ,|800 u2|234 ,|800 v1|234 ,|800 v2|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|800 t|215 )|227 ;|-1
final|800 ArrayFieldVector|230 <|800 Fraction|231 >|800 v|204 =|304 new|800 ArrayFieldVector|232 <>|214 (|800 data|215 )|227 ;|-1
final|800 ArrayFieldVector|230 <|800 Fraction|231 >|800 v|204 =|304 new|800 ArrayFieldVector|232 <>|214 (|800 data|215 )|227 ;|-1
final|800 ArrayFieldVector|230 <|800 Fraction|231 >|800 v|204 =|304 new|800 ArrayFieldVector|232 <>|214 (|800 data|215 )|227 ;|-1
final|800 ArrayFieldVector|230 <|800 Fraction|231 >|800 v|204 =|304 new|800 ArrayFieldVector|232 <>|214 (|800 data|215 )|227 ;|-1
final|800 ArrayFieldVector|230 <|800 Fraction|231 >|800 v|204 =|304 new|800 ArrayFieldVector|232 <>|214 (|800 data|215 )|227 ;|-1
final|800 ArrayFieldVector|230 <|800 Fraction|231 >|800 v|204 =|304 new|800 ArrayFieldVector|232 <>|214 (|800 data|215 )|227 ;|-1
final|800 ArrayFieldVector|230 <|800 Fraction|231 >|800 v|204 =|304 new|800 ArrayFieldVector|232 <>|214 (|800 data|215 )|227 ;|-1
final|800 ArrayFieldVector|230 <|800 Fraction|231 >|800 v|204 =|304 new|800 ArrayFieldVector|232 <>|214 (|800 data|215 )|227 ;|-1
ArrayFieldVector|230 <|800 Fraction|231 >|800 v|204 =|304 new|800 ArrayFieldVector|232 <>|214 (|800 vec1|215 )|227 ;|-1
ArrayFieldVector|230 <|800 Fraction|231 >|800 v1|204 =|304 new|800 ArrayFieldVector|232 <>|214 (|800 vec1|215 )|227 ;|-1
return|304 new|801 FieldVectorTestImpl|232 <>|214 (|800 out|215 )|227 ;|-1
final|800 List|230 <|800 Object|231 >|800 orig|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
this|235 .|800 hParam|204 =|304 new|801 HashMap|232 <>|216 ()|227 ;|-1
regions|204 =|304 new|801 ArrayList|232 <>|214 (|34 NUMBER_CONSTANT|215 )|-1
return|304 new|801 BoundaryProjection|232 <>|214 (|800 original|234 ,|800 projected|234 ,|800 offset|215 )|227 ;|-1
binStats|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
{|329 return|304 new|801 MidpointFieldIntegrator|232 <>|214 (|800 field|234 ,|800 step|215 )|227 ;|219 }|-1
RegionFactory|230 <|800 Euclidean2D|231 >|800 factory|204 =|304 new|800 RegionFactory|232 <>|216 ()|227 ;|-1
{|315 this|235 .|800 surrounded|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|315 this|235 .|800 tolerance|204 =|800 tolerance|227 ;|219 }|-1
return|304 new|801 FieldODEStateAndDerivative|232 <>|214 (|800 time|234 ,|800 estimatedState|234 ,|800 estimatedDerivatives|215 )|227 ;|-1
this|235 .|800 nordsieck|204 =|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 nordsieck|235 .|802 getData|216 ()|234 ,|9 false|215 )|227 ;|-1
boundary|204 =|304 new|801 ArrayList|232 <>|216 ()|-1
{|329 return|304 new|801 BSPTree|232 <>|214 (|40 Boolean.FALSE|215 )|227 ;|219 }|-1
SparseFieldVector|230 <|800 T|231 >|800 res|204 =|304 new|800 SparseFieldVector|232 <>|214 (|315 this|215 )|227 ;|-1
FieldMatrix|230 <|800 T|231 >|800 res|204 =|304 new|801 SparseFieldMatrix|232 <>|214 (|800 field|234 ,|800 virtualSize|234 ,|800 n|215 )|227 ;|-1
SparseFieldMatrix|230 <|800 T|231 >|800 res|204 =|304 new|800 SparseFieldMatrix|232 <>|214 (|800 field|234 ,|800 virtualSize|234 ,|800 n|215 )|227 ;|-1
SparseFieldVector|230 <|800 T|231 >|800 res|204 =|304 new|800 SparseFieldVector|232 <>|214 (|800 field|234 ,|800 n|215 )|227 ;|-1
SparseFieldVector|230 <|800 T|231 >|800 res|204 =|304 new|800 SparseFieldVector|232 <>|214 (|315 this|215 )|227 ;|-1
SparseFieldVector|230 <|800 T|231 >|800 res|204 =|304 new|800 SparseFieldVector|232 <>|214 (|315 this|215 )|227 ;|-1
{|329 return|304 new|801 SparseFieldVector|232 <>|214 (|315 this|215 )|227 ;|219 }|-1
FieldVector|230 <|800 T|231 >|800 res|204 =|304 new|801 SparseFieldVector|232 <>|214 (|315 this|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
FieldVector|230 <|800 T|231 >|800 res|204 =|304 new|801 SparseFieldVector|232 <>|214 (|315 this|234 ,|800 n|215 )|227 ;|-1
entries|204 =|304 new|801 OpenIntToFieldHashMap|232 <>|214 (|800 v|235 .|802 getEntries|216 ()|215 )|227 ;|-1
entries|204 =|304 new|801 OpenIntToFieldHashMap|232 <>|214 (|800 field|215 )|227 ;|-1
entries|204 =|304 new|801 OpenIntToFieldHashMap|232 <>|214 (|800 field|234 ,|800 expectedSize|215 )|227 ;|-1
entries|204 =|304 new|801 OpenIntToFieldHashMap|232 <>|214 (|40 v.entries|215 )|227 ;|-1
entries|204 =|304 new|801 OpenIntToFieldHashMap|232 <>|214 (|800 field|215 )|227 ;|-1
{|329 return|304 new|801 ClassicalRungeKuttaFieldIntegrator|232 <>|214 (|800 field|234 ,|800 field|235 .|802 getOne|216 ()|215 )|227 ;|219 }|-1
public|802 ListUnivariateImpl|216 ()|218 {|315 this|214 (|304 new|801 ArrayList|232 <>|216 ()|215 )|227 ;|219 }|-1
return|304 new|801 FieldODEStateAndDerivative|232 <>|214 (|800 time|234 ,|800 interpolatedState|234 ,|800 interpolatedDerivatives|215 )|227 ;|-1
TestFieldProblem3|230 <|800 T|231 >|800 pb|204 =|304 new|800 TestFieldProblem3|232 <>|214 (|800 field|215 )|227 ;|-1
this|235 .|800 jacobianProviders|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
{|329 return|304 new|801 LutherFieldIntegrator|232 <>|214 (|800 field|234 ,|800 field|235 .|802 getOne|216 ()|215 )|227 ;|219 }|-1
List|230 <|800 Frequency|231 >|800 coll|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
{|329 return|304 new|801 ThreeEighthesFieldIntegrator|232 <>|214 (|800 field|234 ,|800 field|235 .|802 getOne|216 ()|215 )|227 ;|219 }|-1
List|230 <|800 Integer|231 >|800 newRepr|204 =|304 new|801 ArrayList|232 <>|214 (|800 origChrom|235 .|802 getRepresentation|216 ()|215 )|227 ;|-1
final|800 RegionFactory|230 <|800 Euclidean2D|231 >|800 factory|204 =|304 new|800 RegionFactory|232 <>|216 ()|227 ;|-1
return|304 new|801 FieldODEStateAndDerivative|232 <>|214 (|800 time|234 ,|800 interpolatedState|234 ,|800 interpolatedDerivatives|215 )|227 ;|-1
final|800 SimplePointChecker|230 <|800 PointValuePair|231 >|800 checker|204 =|304 new|800 SimplePointChecker|232 <>|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|800 SimplePointChecker|230 <|800 PointValuePair|231 >|800 checker|204 =|304 new|800 SimplePointChecker|232 <>|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|800 max|215 )|227 ;|-1
final|800 Collection|230 <|800 SummaryStatistics|231 >|800 categoryDataSummaryStatistics|204 =|304 new|801 ArrayList|232 <>|214 (|800 categoryData|235 .|802 size|216 ()|215 )|227 ;|-1
final|800 ArrayList|230 <|800 String|231 >|800 lines|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
List|230 <|800 Number|231 >|800 components|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
{|329 return|304 new|801 EulerFieldIntegrator|232 <>|214 (|800 field|234 ,|800 step|215 )|227 ;|219 }|-1
final|800 ArrayList|230 <|800 Double|231 >|800 list|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
List|230 <|800 Vector3D|231 >|800 support|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
public|802 CircleScalar|216 ()|218 {|800 points|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|219 }|-1
final|800 List|230 <|800 Integer|231 >|800 seq|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 Integer|231 >|800 seq|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 Integer|231 >|800 seq|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 Integer|231 >|800 seq|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 Integer|231 >|800 seq|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 Integer|231 >|800 seq|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 Integer|231 >|800 seq|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 Integer|231 >|800 seq|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 EventHandler|231 >|800 list|204 =|304 new|801 ArrayList|232 <>|214 (|800 eventsStates|235 .|802 size|216 ()|215 )|227 ;|-1
final|800 List|230 <|800 WeightedObservedPoint|231 >|800 observations|204 =|304 new|801 ArrayList|232 <>|214 (|800 unsorted|215 )|227 ;|-1
this|235 .|800 chromosomes|204 =|304 new|801 ArrayList|232 <>|214 (|800 populationLimit|215 )|227 ;|-1
BlockFieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|800 BlockFieldMatrix|232 <>|214 (|800 testData|215 )|227 ;|-1
BlockFieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|800 BlockFieldMatrix|232 <>|214 (|800 testData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 BlockFieldMatrix|232 <>|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 BlockFieldMatrix|232 <>|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 BlockFieldMatrix|232 <>|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 BlockFieldMatrix|232 <>|214 (|800 subTestData|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|800 data|234 ,|9 false|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 BlockFieldMatrix|232 <>|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 BlockFieldMatrix|232 <>|214 (|800 subTestData|215 )|227 ;|-1
{|800 Assert|235 .|802 assertEquals|214 (|304 new|801 BlockFieldMatrix|232 <>|214 (|800 reference|215 )|234 ,|800 sub|215 )|227 ;|219 }|-1
{|800 Assert|235 .|802 assertEquals|214 (|304 new|801 BlockFieldMatrix|232 <>|214 (|800 reference|215 )|234 ,|800 sub|215 )|227 ;|219 }|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 BlockFieldMatrix|232 <>|214 (|800 subTestData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 BlockFieldMatrix|232 <>|214 (|800 testData|215 )|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 BlockFieldMatrix|232 <>|214 (|800 testData|215 )|227 ;|-1
return|304 new|801 FieldODEStateAndDerivative|232 <>|214 (|800 time|234 ,|800 interpolatedState|234 ,|800 interpolatedDerivatives|215 )|227 ;|-1
RegionFactory|230 <|800 Sphere1D|231 >|800 factory|204 =|304 new|800 RegionFactory|232 <>|216 ()|227 ;|-1
return|304 new|801 ArrayList|232 <>|214 (|800 edgeToNode|235 .|802 keySet|216 ()|215 )|227 ;|-1
final|800 FieldODEStateAndDerivative|230 <|800 T|231 >|800 stateTmp|204 =|304 new|800 FieldODEStateAndDerivative|232 <>|214 (|800 stepEnd|234 ,|800 yTmp|234 ,|800 yDotTmp|215 )|227 ;|-1
ListUnivariateImpl|800 u|204 =|304 new|801 ListUnivariateImpl|214 (|304 new|801 ArrayList|232 <>|216 ()|215 )|227 ;|-1
List|230 <|800 Object|231 >|800 list|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
List|230 <|800 Object|231 >|800 externalList|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 FieldODEStateAndDerivative|230 <|800 T|231 >|800 state0|204 =|304 new|800 FieldODEStateAndDerivative|232 <>|214 (|800 t0|234 ,|800 y0|234 ,|800 y0Dot|215 )|227 ;|-1
RegionFactory|230 <|800 Euclidean3D|231 >|800 factory|204 =|304 new|800 RegionFactory|232 <>|216 ()|227 ;|-1
integrator|235 .|802 integrate|214 (|304 new|801 FieldExpandableODE|232 <>|214 (|800 problem|215 )|234 ,|800 problem|235 .|802 getInitialState|216 ()|234 ,|800 problem|235 .|802 getFinalTime|216 ()|215 )|227 ;|-1
points|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
{|329 return|304 new|801 FieldVector3D|232 <>|214 (|34 NUMBER_CONSTANT|234 ,|315 this|234 ,|800 factor|234 ,|800 v|215 )|227 ;|219 }|-1
final|800 List|230 <|800 Object|231 >|800 list|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 Complex|231 >|800 result|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
return|304 new|801 FieldRotation|232 <>|214 (|800 mds|234 ,|800 threshold|215 )|227 ;|-1
FieldRotation|230 <|800 Dfp|231 >|800 quat|204 =|304 new|800 FieldRotation|232 <>|214 (|800 u1|234 ,|800 u2|234 ,|800 v1|234 ,|800 v2|215 )|227 ;|-1
OnePointCrossover|230 <|800 Integer|231 >|800 opc|204 =|304 new|800 OnePointCrossover|232 <>|216 ()|227 ;|-1
BSPTree|230 <|800 Sphere1D|231 >|800 tree|204 =|304 new|800 BSPTree|232 <>|214 (|40 Boolean.FALSE|215 )|227 ;|-1
final|800 List|230 <|800 Arc|231 >|800 list|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
List|230 <|800 Double|231 >|800 newRepr|204 =|304 new|801 ArrayList|232 <>|214 (|800 repr|215 )|227 ;|-1
return|304 new|801 FieldODEStateAndDerivative|232 <>|214 (|800 time|234 ,|800 interpolatedState|234 ,|800 interpolatedDerivatives|215 )|227 ;|-1
Map|230 <|800 Integer|234 ,|800 Double|231 >|800 generated|204 =|304 new|801 HashMap|232 <>|216 ()|227 ;|-1
Set|230 <|800 Integer|231 >|800 keysInMap|204 =|304 new|801 HashSet|232 <>|214 (|800 javaMap|235 .|802 keySet|216 ()|215 )|227 ;|-1
Map|230 <|800 Integer|234 ,|800 Double|231 >|800 map|204 =|304 new|801 HashMap|232 <>|216 ()|227 ;|-1
final|800 Set|230 <|800 Integer|231 >|800 usedBasicRows|204 =|304 new|801 HashSet|232 <>|216 ()|227 ;|-1
final|800 Set|230 <|800 Integer|231 >|800 columnsToDrop|204 =|304 new|801 TreeSet|232 <>|216 ()|227 ;|-1
List|230 <|800 LinearConstraint|231 >|800 normalized|204 =|304 new|801 ArrayList|232 <>|214 (|800 originalConstraints|235 .|802 size|216 ()|215 )|227 ;|-1
final|800 ArrayList|230 <|801 Object|85 []|231 >|800 parameters|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
{|329 return|304 new|801 Pair|232 <>|214 (|800 k|234 ,|800 v|215 )|227 ;|219 }|-1
public|802 Cluster|216 ()|218 {|800 points|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|219 }|-1
close|204 =|304 new|801 ArrayList|232 <>|216 ()|-1
return|304 new|801 FieldODEStateAndDerivative|232 <>|214 (|800 time|234 ,|800 interpolatedState|234 ,|800 interpolatedDerivatives|215 )|227 ;|-1
final|800 HashSet|230 <|800 Double|231 >|800 values|204 =|304 new|800 HashSet|232 <>|216 ()|227 ;|-1
return|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 BigFractionField|235 .|802 getInstance|216 ()|234 ,|800 Hdata|215 )|227 ;|-1
TestFieldProblem3|230 <|800 T|231 >|800 pb|204 =|304 new|800 TestFieldProblem3|232 <>|214 (|800 field|215 )|227 ;|-1
final|800 BoundarySizeVisitor|230 <|800 S|231 >|800 visitor|204 =|304 new|800 BoundarySizeVisitor|232 <>|216 ()|227 ;|-1
final|800 BoundaryProjector|230 <|800 S|234 ,|800 T|231 >|800 projector|204 =|304 new|800 BoundaryProjector|232 <>|214 (|800 point|215 )|227 ;|-1
{|800 tree|204 =|304 new|801 BSPTree|232 <>|214 (|40 Boolean.FALSE|215 )|227 ;|219 }|-1
{|315 this|235 .|800 tree|204 =|304 new|801 BSPTree|232 <>|214 (|40 Boolean.TRUE|215 )|227 ;|315 this|235 .|800 tolerance|204 =|800 tolerance|227 ;|219 }|-1
List|230 <|800 Integer|231 >|800 baseSequence|204 =|304 new|801 ArrayList|232 <>|214 (|800 l|215 )|227 ;|-1
List|230 <|800 S|231 >|800 origDataCopy|204 =|304 new|801 ArrayList|232 <>|214 (|800 originalData|215 )|227 ;|-1
List|230 <|800 S|231 >|800 sortedData|204 =|304 new|801 ArrayList|232 <>|214 (|800 data|215 )|227 ;|-1
List|230 <|800 Double|231 >|800 repr|204 =|304 new|801 ArrayList|232 <>|214 (|800 l|215 )|227 ;|-1
List|230 <|800 Double|231 >|800 repr|204 =|304 new|801 ArrayList|232 <>|214 (|800 l|215 )|227 ;|-1
List|230 <|800 Double|231 >|800 sortedRepr|204 =|304 new|801 ArrayList|232 <>|214 (|802 getRepresentation|216 ()|215 )|227 ;|-1
distribution|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
List|230 <|800 Vector2D|231 >|800 quadrilateral|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 Vector2D|231 >|800 reducedPoints|204 =|304 new|801 ArrayList|232 <>|214 (|800 quadrilateral|215 )|227 ;|-1
List|230 <|800 Integer|231 >|800 rList|204 =|304 new|801 ArrayList|232 <>|214 (|800 length|215 )|227 ;|-1
context|204 =|304 new|801 HashMap|232 <>|216 ()|227 ;|-1
List|230 <|800 Vector2D|231 >|800 support|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 ArrayList|230 <|800 Double|231 >|800 integrationTestPoints|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
edges|204 =|304 new|801 ArrayList|232 <>|216 ()|-1
final|800 Collection|230 <|800 Vector2D|231 >|800 points|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
return|304 new|801 FieldODEState|232 <>|214 (|800 state|235 .|802 getTime|216 ()|234 ,|800 y|215 )|227 ;|-1
ArrayList|230 <|800 Integer|231 >|800 out|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
FieldMatrix|230 <|800 Fraction|231 >|800 m|204 =|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 fData|234 ,|9 false|215 )|227 ;|-1
FieldMatrix|230 <|800 BigFraction|231 >|800 m|204 =|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 bfData|234 ,|9 false|215 )|227 ;|-1
{|329 return|304 new|801 ArrayList|232 <>|216 ()|227 ;|219 }|-1
FieldBracketingNthOrderBrentSolver|230 <|800 Dfp|231 >|800 solver|204 =|304 new|800 FieldBracketingNthOrderBrentSolver|232 <>|214 (|800 relativeAccuracy|234 ,|800 absoluteAccuracy|234 ,|800 functionValueAccuracy|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
FieldBracketingNthOrderBrentSolver|230 <|800 Dfp|231 >|800 solver|204 =|304 new|800 FieldBracketingNthOrderBrentSolver|232 <>|214 (|800 relativeAccuracy|234 ,|800 absoluteAccuracy|234 ,|800 functionValueAccuracy|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|304 new|801 FieldBracketingNthOrderBrentSolver|232 <>|214 (|800 relativeAccuracy|234 ,|800 absoluteAccuracy|234 ,|800 functionValueAccuracy|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
List|230 <|800 Vector2D|231 >|800 points|204 =|304 new|801 ArrayList|232 <>|214 (|800 size|215 )|227 ;|-1
List|230 <|800 Vector2D|231 >|800 points|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
List|230 <|800 Vector2D|231 >|800 points|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 Collection|230 <|800 Vector2D|231 >|800 points|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 Collection|230 <|800 Vector2D|231 >|800 points|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 Collection|230 <|800 Vector2D|231 >|800 points|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 Collection|230 <|800 Vector2D|231 >|800 points|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 Collection|230 <|800 Vector2D|231 >|800 points|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 Collection|230 <|800 Vector2D|231 >|800 points|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 Collection|230 <|800 Vector2D|231 >|800 points|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 Collection|230 <|800 Vector2D|231 >|800 points|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 Collection|230 <|800 Vector2D|231 >|800 points|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
ArrayList|230 <|800 SubHyperplane|230 <|800 Euclidean2D|231 >|231 >|800 edges|204 =|304 new|800 ArrayList|232 <>|216 ()|227 ;|-1
RegionFactory|230 <|800 Euclidean2D|231 >|800 factory|204 =|304 new|800 RegionFactory|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 WeightedObservedPoint|231 >|800 observations|204 =|304 new|801 ArrayList|232 <>|214 (|800 unsorted|215 )|227 ;|-1
steps|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
final|800 Set|230 <|800 City|231 >|800 unique|204 =|304 new|801 HashSet|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 Future|230 <|231 >|231 >|800 execOutput|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
certifiedValues|204 =|304 new|801 HashMap|232 <>|216 ()|227 ;|-1
{|329 return|304 new|801 EulerFieldIntegrator|232 <>|214 (|800 field|234 ,|800 field|235 .|802 getOne|216 ()|215 )|227 ;|219 }|-1
FieldMatrix|230 <|800 T|231 >|800 identity|204 =|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 field|234 ,|800 m|234 ,|800 m|215 )|227 ;|-1
return|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 field|234 ,|800 bp|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|800 bp|234 ,|9 false|215 )|227 ;|-1
return|304 new|801 ArrayFieldVector|232 <>|214 (|800 field|234 ,|800 bp|234 ,|9 false|215 )|227 ;|-1
{|329 return|304 new|801 Solver|232 <>|214 (|800 field|234 ,|800 lu|234 ,|800 pivot|234 ,|800 singular|215 )|227 ;|219 }|-1
cachedP|204 =|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 field|234 ,|800 m|234 ,|800 m|215 )|227 ;|-1
cachedU|204 =|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 field|234 ,|800 m|234 ,|800 m|215 )|227 ;|-1
cachedL|204 =|304 new|801 Array2DRowFieldMatrix|232 <>|214 (|800 field|234 ,|800 m|234 ,|800 m|215 )|227 ;|-1
List|230 <|800 Chromosome|231 >|800 popChr|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
Collection|230 <|800 Neuron|231 >|800 exclude|204 =|304 new|801 HashSet|232 <>|216 ()|227 ;|-1
Collection|230 <|800 Neuron|231 >|800 exclude|204 =|304 new|801 HashSet|232 <>|216 ()|227 ;|-1
final|800 List|230 <|800 BigFraction|231 >|800 list|204 =|304 new|801 ArrayList|232 <>|216 ()|227 ;|-1
this|235 .|800 derivatives|204 =|304 new|801 HashMap|232 <>|216 ()|227 ;|-1
this|235 .|800 derivatives|204 =|304 new|801 HashMap|232 <>|216 ()|227 ;|-1
tasks|204 =|304 new|801 ArrayList|232 <>|216 ()|-1
final|800 FieldODEStateAndDerivative|230 <|800 T|231 >|800 stateTmp|204 =|304 new|800 FieldODEStateAndDerivative|232 <>|214 (|800 stepEnd|234 ,|800 yTmp|234 ,|800 yDotTmp|215 )|227 ;|-1
population|204 =|304 new|801 ListPopulation|214 (|800 chromosomes|234 ,|34 NUMBER_CONSTANT|215 )|218 {|208 @|800 Override|83 public|801 Population|802 nextGeneration|216 ()|218 {|329 return|500 null|227 ;|219 }|219 }|-1
population|204 =|304 new|801 ListPopulation|214 (|34 NUMBER_CONSTANT|215 )|218 {|208 @|800 Override|83 public|801 Population|802 nextGeneration|216 ()|218 {|329 return|500 null|227 ;|219 }|219 }|-1
population|204 =|304 new|801 ListPopulation|214 (|34 NUMBER_CONSTANT|215 )|218 {|208 @|800 Override|83 public|801 Population|802 nextGeneration|216 ()|218 {|329 return|500 null|227 ;|219 }|219 }|-1
population|204 =|304 new|801 ListPopulation|214 (|34 NUMBER_CONSTANT|215 )|218 {|208 @|800 Override|83 public|801 Population|802 nextGeneration|216 ()|218 {|329 return|500 null|227 ;|219 }|219 }|-1
new|801 ListPopulation|214 (|800 chromosomes|234 ,|34 NUMBER_CONSTANT|215 )|218 {|208 @|800 Override|83 public|801 Population|802 nextGeneration|216 ()|218 {|329 return|500 null|227 ;|219 }|219 }|227 ;|-1
new|801 ListPopulation|214 (|800 chromosomes|234 ,|201 -|34 NUMBER_CONSTANT|215 )|218 {|208 @|800 Override|83 public|801 Population|802 nextGeneration|216 ()|218 {|329 return|500 null|227 ;|219 }|219 }|227 ;|-1
{|304 new|801 ListPopulation|214 (|201 -|34 NUMBER_CONSTANT|215 )|218 {|208 @|800 Override|83 public|801 Population|802 nextGeneration|216 ()|218 {|329 return|500 null|227 ;|219 }|219 }|227 ;|219 }|-1
population|204 =|304 new|801 ListPopulation|214 (|34 NUMBER_CONSTANT|215 )|218 {|208 @|800 Override|83 public|801 Population|802 nextGeneration|216 ()|218 {|329 return|500 null|227 ;|219 }|219 }|-1
population|204 =|304 new|801 ListPopulation|214 (|34 NUMBER_CONSTANT|215 )|218 {|208 @|800 Override|83 public|801 Population|802 nextGeneration|216 ()|218 {|329 return|500 null|227 ;|219 }|219 }|-1
@|800 Override|83 public|801 StepInterpolator|802 copy|216 ()|218 {|329 return|315 this|227 ;|219 }|-1
final|801 Chromosome|800 p1c|204 =|304 new|801 Chromosome|216 ()|218 {|208 @|800 Override|83 public|39 double|802 fitness|216 ()|218 {|329 return|34 NUMBER_CONSTANT|227 ;|219 }|219 }|227 ;|-1
final|801 Chromosome|800 p2c|204 =|304 new|801 Chromosome|216 ()|218 {|208 @|800 Override|83 public|39 double|802 fitness|216 ()|218 {|329 return|34 NUMBER_CONSTANT|227 ;|219 }|219 }|227 ;|-1
@|800 Override|83 public|801 StepInterpolator|802 copy|216 ()|218 {|329 return|315 this|227 ;|219 }|-1
final|801 Chromosome|800 p1c|204 =|304 new|801 Chromosome|216 ()|218 {|208 @|800 Override|83 public|39 double|802 fitness|216 ()|218 {|329 return|34 NUMBER_CONSTANT|227 ;|219 }|219 }|227 ;|-1
final|801 Chromosome|800 p2c|204 =|304 new|801 Chromosome|216 ()|218 {|208 @|800 Override|83 public|39 double|802 fitness|216 ()|218 {|329 return|34 NUMBER_CONSTANT|227 ;|219 }|219 }|227 ;|-1
final|801 Chromosome|800 p1c|204 =|304 new|801 Chromosome|216 ()|218 {|208 @|800 Override|83 public|39 double|802 fitness|216 ()|218 {|329 return|34 NUMBER_CONSTANT|227 ;|219 }|219 }|227 ;|-1
final|801 Chromosome|800 p2c|204 =|304 new|801 Chromosome|216 ()|218 {|208 @|800 Override|83 public|39 double|802 fitness|216 ()|218 {|329 return|34 NUMBER_CONSTANT|227 ;|219 }|219 }|227 ;|-1
final|801 Chromosome|800 p1c|204 =|304 new|801 Chromosome|216 ()|218 {|208 @|800 Override|83 public|39 double|802 fitness|216 ()|218 {|329 return|34 NUMBER_CONSTANT|227 ;|219 }|219 }|227 ;|-1
final|801 Chromosome|800 p2c|204 =|304 new|801 Chromosome|216 ()|218 {|208 @|800 Override|83 public|39 double|802 fitness|216 ()|218 {|329 return|34 NUMBER_CONSTANT|227 ;|219 }|219 }|227 ;|-1
for|214 (|39 int|800 val|226 :|315 this|235 .|802 getRepresentation|216 ()|215 )|218 {|313 if|214 (|800 val|242 !=|34 NUMBER_CONSTANT|215 )|218 {|800 num|247 ++|227 ;|219 }|219 }|-1
if|214 (|800 count|247 ++|231 >|34 NUMBER_CONSTANT|215 )|218 {|500 break;|219 }|-1
if|214 (|800 count|247 ++|231 >|34 NUMBER_CONSTANT|215 )|218 {|500 break;|219 }|-1
if|214 (|801 counts|221 [|800 i|222 ]|236 ==|201 -|34 NUMBER_CONSTANT|215 )|218 {|500 continue;|219 }|-1
random|235 .|802 restoreState|214 (|800 state|215 )|227 ;|-1
{|800 out|235 .|802 defaultWriteObject|216 ()|227 ;|800 out|235 .|802 writeObject|214 (|214 (|214 (|40 RandomSource.State|215 )|800 random|235 .|802 saveState|216 ()|215 )|235 .|802 getState|216 ()|215 )|227 ;|219 }|-1
delegate|235 .|802 restoreState|214 (|800 state|215 )|227 ;|-1
{|800 out|235 .|802 defaultWriteObject|216 ()|227 ;|800 out|235 .|802 writeObject|214 (|214 (|214 (|40 RandomSource.State|215 )|800 delegate|235 .|802 saveState|216 ()|215 )|235 .|802 getState|216 ()|215 )|227 ;|219 }|-1
{|39 double|800 n|204 =|800 upperMinusLower|200 +|34 NUMBER_CONSTANT|227 ;|329 return|214 (|800 n|202 *|800 n|201 -|34 NUMBER_CONSTANT|215 )|203 /|34 NUMBER_CONSTANT|227 ;|219 }|-1
{|329 return|34 NUMBER_CONSTANT|202 *|800 upperPlusLower|227 ;|219 }|-1
return|214 (|800 x|201 -|800 lower|200 +|34 NUMBER_CONSTANT|215 )|203 /|214 (|800 upperMinusLower|200 +|34 NUMBER_CONSTANT|215 )|227 ;|-1
return|34 NUMBER_CONSTANT|203 /|214 (|800 upperMinusLower|200 +|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|800 out|235 .|802 defaultWriteObject|216 ()|227 ;|800 out|235 .|802 writeObject|214 (|214 (|214 (|800 RandomProviderDefaultState|215 )|800 delegate|235 .|802 saveState|216 ()|215 )|235 .|802 getState|216 ()|215 )|227 ;|219 }|-1
{|800 out|235 .|802 defaultWriteObject|216 ()|227 ;|800 out|235 .|802 writeObject|214 (|214 (|214 (|800 RandomProviderDefaultState|215 )|800 random|235 .|802 saveState|216 ()|215 )|235 .|802 getState|216 ()|215 )|227 ;|219 }|-1
if|214 (|800 shuffle|215 )|218 {|800 ListSampler|235 .|800 shuffle|214 (|800 rng|234 ,|800 points|215 )|227 ;|219 }|-1
if|214 (|800 shuffle|215 )|218 {|800 ListSampler|235 .|800 shuffle|214 (|800 rng|234 ,|800 points|215 )|227 ;|219 }|-1
if|214 (|800 shuffle|215 )|218 {|800 ListSampler|235 .|800 shuffle|214 (|800 rng|234 ,|800 points|215 )|227 ;|219 }|-1
final|39 double|800 delta|204 =|214 (|214 (|800 Coordinates1D|215 )|800 point|215 )|235 .|802 getX|216 ()|201 -|800 location|235 .|802 getX|216 ()|227 ;|-1
final|801 Coordinates1D|800 location|-1
{|83 final|800 Circle|800 otherC|204 =|214 (|800 Circle|215 )|800 other|227 ;|329 return|800 Coordinates3D|235 .|802 dotProduct|214 (|800 pole|234 ,|40 otherC.pole|215 )|251 >=|34 NUMBER_CONSTANT|227 ;|219 }|-1
final|801 Coordinates3D|800 direction|-1
final|801 Coordinates3D|800 pole|-1
Coordinates3D|85 []|800 points|-1
final|800 List|230 <|800 Coordinates3D|231 >|800 vertices|-1
Arrays|235 .|802 asList|214 (|40 Coordinates3D.ZERO|234 ,|40 Coordinates3D.PLUS_I|234 ,|40 Coordinates3D.PLUS_J|234 ,|40 Coordinates3D.PLUS_K|215 )|-1
try|218 {|800 ps|235 .|802 checkPoint|214 (|40 Coordinates3D.ZERO|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 NullPointerException|800 npe|215 )|220 {}|-1
final|801 Coordinates2D|800 tmp|204 =|801 loop|221 [|800 min|222 ]|227 ;|-1
final|801 Coordinates2D|85 []|800 bLoop|-1
final|801 Coordinates3D|800 axis|-1
Coordinates3D|800 axis|-1
Coordinates2D|800 oneTwo|204 =|304 new|801 Coordinates2D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|304 new|801 Coordinates2D|214 (|800 v|215 )|227 ;|219 }|-1
{|83 final|800 Coordinates1D|800 p1|204 =|214 (|800 Coordinates1D|215 )|800 vector|227 ;|329 return|802 format|214 (|800 toAppendTo|234 ,|800 pos|234 ,|800 p1|235 .|802 getX|216 ()|215 )|227 ;|219 }|-1
Coordinates2D|800 expected|204 =|304 new|801 Coordinates2D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Coordinates2D|800 c|204 =|40 Coordinates2D.NEGATIVE_INFINITY|227 ;|-1
Coordinates2D|800 c|204 =|40 Coordinates2D.POSITIVE_INFINITY|227 ;|-1
Coordinates2D|800 c|204 =|40 Coordinates2D.NaN|227 ;|-1
Coordinates2D|800 c|204 =|304 new|801 Coordinates2D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Coordinates2D|800 c|204 =|304 new|801 Coordinates2D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Coordinates2D|800 c|204 =|304 new|801 Coordinates2D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Coordinates2D|800 c|204 =|304 new|801 Coordinates2D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Coordinates2D|800 c|204 =|304 new|801 Coordinates2D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|329 return|304 new|801 Line|214 (|304 new|801 Coordinates2D|214 (|802 getNumber|216 ()|234 ,|802 getNumber|216 ()|215 )|234 ,|802 getNumber|216 ()|234 ,|802 getNumber|216 ()|215 )|227 ;|219 }|-1
{|329 return|304 new|801 OrientedPoint|214 (|304 new|801 Coordinates1D|214 (|802 getNumber|216 ()|215 )|234 ,|802 getBoolean|216 ()|234 ,|802 getNumber|216 ()|215 )|227 ;|219 }|-1
{|329 return|304 new|801 Circle|214 (|304 new|801 Coordinates3D|214 (|802 getNumber|216 ()|234 ,|802 getNumber|216 ()|234 ,|802 getNumber|216 ()|215 )|234 ,|802 getNumber|216 ()|215 )|227 ;|219 }|-1
final|801 Coordinates3D|800 v1|-1
final|801 Coordinates3D|800 v2|-1
final|801 Coordinates3D|800 v1|-1
final|801 Coordinates3D|800 v2|-1
final|801 Coordinates3D|800 v1|-1
final|801 Coordinates3D|800 v2|-1
final|801 Coordinates3D|800 v1|-1
final|801 Coordinates3D|800 v2|-1
final|801 Coordinates3D|800 v1|-1
final|801 Coordinates3D|800 v2|-1
final|801 Coordinates3D|800 v1|-1
final|801 Coordinates3D|800 v2|-1
final|801 Coordinates3D|800 v|-1
final|801 Coordinates3D|800 v|-1
final|801 Coordinates3D|800 v|-1
final|801 Coordinates3D|800 v|-1
final|801 Coordinates3D|800 v|-1
final|801 Coordinates3D|800 v|-1
final|801 Coordinates3D|800 v1|-1
final|801 Coordinates3D|800 v2|-1
final|801 Coordinates3D|800 v|-1
final|801 Coordinates3D|800 v|-1
final|801 Coordinates3D|800 v|-1
final|801 Coordinates3D|800 v|-1
final|801 Coordinates3D|800 v|-1
final|801 Coordinates3D|800 v|-1
final|801 Coordinates3D|800 u|-1
Coordinates1D|800 v|-1
Coordinates1D|800 v|204 =|304 new|801 Coordinates1D|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
Coordinates1D|800 v|204 =|304 new|801 Coordinates1D|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|801 Space|800 space|204 =|304 new|801 Coordinates1D|214 (|34 NUMBER_CONSTANT|215 )|235 .|802 getSpace|216 ()|227 ;|800 Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 space|235 .|802 getDimension|216 ()|215 )|227 ;|219 }|-1
final|801 Coordinates3D|800 p|204 =|800 h|235 .|802 toSpace|214 (|40 Coordinates2D.ZERO|215 )|227 ;|-1
final|801 Coordinates2D|800 p|204 =|800 h|235 .|802 toSpace|214 (|40 Coordinates1D.ZERO|215 )|227 ;|-1
final|800 Coordinates2D|800 p2|204 =|214 (|800 Coordinates2D|215 )|800 vector|227 ;|-1
Coordinates3D|800 c|204 =|40 Coordinates3D.NEGATIVE_INFINITY|227 ;|-1
Coordinates3D|800 c|204 =|40 Coordinates3D.POSITIVE_INFINITY|227 ;|-1
Coordinates3D|800 c|204 =|40 Coordinates3D.NaN|227 ;|-1
Coordinates1D|800 expected|204 =|304 new|801 Coordinates1D|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
Coordinates1D|800 c|204 =|40 Coordinates1D.NEGATIVE_INFINITY|227 ;|-1
Coordinates1D|800 c|204 =|40 Coordinates1D.POSITIVE_INFINITY|227 ;|-1
Coordinates1D|800 c|204 =|40 Coordinates1D.NaN|227 ;|-1
Coordinates1D|800 c|204 =|304 new|801 Coordinates1D|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
Coordinates1D|800 c|204 =|304 new|801 Coordinates1D|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
Coordinates1D|800 c|204 =|304 new|801 Coordinates1D|214 (|201 -|34 NUMBER_CONSTANT|215 )|227 ;|-1
Coordinates1D|800 c|204 =|304 new|801 Coordinates1D|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
Coordinates1D|800 c|204 =|304 new|801 Coordinates1D|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
Coordinates1D|800 c|204 =|304 new|801 Coordinates1D|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|39 double|800 angle|204 =|800 Coordinates3D|235 .|800 angle|214 (|800 thisCircle|235 .|802 getPole|216 ()|234 ,|800 otherCircle|235 .|802 getPole|216 ()|215 )|227 ;|-1
{|329 return|800 Coordinates3D|235 .|802 angle|214 (|40 p1.vector|234 ,|40 p2.vector|215 )|227 ;|219 }|-1
final|801 Coordinates3D|800 vector|-1
{|329 return|214 (|214 (|800 Coordinates3D|215 )|800 point|215 )|235 .|802 dotProduct|214 (|800 w|215 )|200 +|800 originOffset|227 ;|219 }|-1
final|801 Coordinates3D|800 p|-1
final|801 Coordinates3D|800 translation|-1
final|39 double|800 angle|204 =|800 Coordinates3D|235 .|800 angle|214 (|800 w|234 ,|40 plane.w|215 )|227 ;|-1
final|801 Coordinates3D|800 tmp|204 =|800 u|227 ;|-1
final|801 Coordinates3D|800 normal|-1
Coordinates3D|800 v|-1
{|304 new|801 Coordinates3D|214 (|304 new|39 double|85 []|218 {|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|219 }|215 )|227 ;|219 }|-1
Space|800 space|204 =|304 new|801 Coordinates3D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|235 .|802 getSpace|216 ()|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|214 (|214 (|800 Coordinates1D|215 )|800 set|235 .|802 getBarycenter|216 ()|215 )|235 .|802 getX|216 ()|234 ,|40 Precision.EPSILON|215 )|227 ;|-1
final|801 Coordinates2D|800 p|-1
final|801 Coordinates2D|800 p|-1
final|801 Coordinates2D|800 p|-1
Coordinates2D|800 p2|204 =|214 (|800 Coordinates2D|215 )|800 point|227 ;|-1
final|801 Coordinates2D|800 p|-1
final|801 Coordinates2D|800 p|-1
TranslationTransform|214 (|83 final|801 Coordinates3D|800 translation|215 )|218 {|315 this|235 .|800 translation|204 =|800 translation|227 ;|219 }|-1
final|801 Coordinates3D|800 translation|-1
final|801 Coordinates3D|800 center|-1
final|801 Coordinates3D|800 center|-1
final|801 Coordinates3D|800 point|-1
{|802 setSize|214 (|34 NUMBER_CONSTANT|215 )|227 ;|802 setBarycenter|214 (|214 (|800 Point|230 <|800 Euclidean3D|231 >|215 )|304 new|801 Coordinates3D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|219 }|-1
final|800 List|230 <|800 Coordinates3D|231 >|800 vertices|-1
final|800 List|230 <|800 Coordinates3D|231 >|800 vertices|-1
Circle|800 circle|204 =|304 new|801 Circle|214 (|40 Coordinates3D.PLUS_K|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 Coordinates3D|800 u|-1
final|801 Coordinates3D|800 u|-1
final|801 Coordinates2D|85 []|800 vertices|-1
Collection|230 <|800 Coordinates2D|231 >|800 points|-1
this|235 .|800 summedBarycenter|204 =|40 Coordinates3D.ZERO|227 ;|-1
{|329 return|800 Coordinates2D|235 .|802 angle|214 (|40 p1.vector|234 ,|40 p2.vector|215 )|227 ;|219 }|-1
final|801 Coordinates2D|800 vector|-1
try|218 {|800 FieldVector3D|235 .|802 angle|214 (|800 v1|234 ,|40 Coordinates3D.ZERO|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathArithmeticException|800 mae|215 )|220 {}|-1
for|214 (|801 Coordinates2D|800 p|226 :|800 factory|235 .|802 generate|214 (|800 numPoints|215 )|215 )|218 {|800 circle|235 .|802 addPoint|214 (|800 p|235 .|802 getX|216 ()|234 ,|800 p|235 .|802 getY|216 ()|215 )|227 ;|219 }|-1
for|214 (|801 Coordinates2D|800 p|226 :|800 factory|235 .|802 generate|214 (|800 numPoints|215 )|215 )|218 {|800 circle|235 .|802 addPoint|214 (|800 p|235 .|802 getX|216 ()|234 ,|800 p|235 .|802 getY|216 ()|215 )|227 ;|219 }|-1
{|329 return|304 new|801 SphericalCoordinates|214 (|304 new|801 Coordinates3D|214 (|800 x|234 ,|800 y|234 ,|800 z|215 )|215 )|227 ;|219 }|-1
final|801 Coordinates3D|800 v|-1
final|801 Coordinates2D|800 point|-1
final|801 Coordinates2D|800 location|-1
final|800 Coordinates2D|235 .|235 .|235 .|800 vertices|-1
final|800 Coordinates2D|235 .|235 .|235 .|800 vertices|-1
final|801 Coordinates3D|800 pole|-1
final|801 Coordinates3D|800 p|-1
final|39 double|800 angle|204 =|800 Coordinates3D|235 .|800 angle|214 (|800 direction|234 ,|40 line.direction|215 )|227 ;|-1
final|801 Coordinates3D|800 point|-1
final|800 Collection|230 <|800 Coordinates2D|231 >|800 points|-1
final|800 Collection|230 <|800 Coordinates2D|231 >|800 points|-1
final|800 Collection|230 <|800 Coordinates2D|231 >|800 points|-1
ConvexHull2D|800 hull|204 =|800 generator|235 .|802 generate|214 (|800 Collections|235 .|230 <|800 Coordinates2D|231 >|802 emptyList|216 ()|215 )|227 ;|-1
final|39 double|800 x|204 =|214 (|214 (|800 Coordinates1D|215 )|800 point|215 )|235 .|802 getX|216 ()|227 ;|-1
final|801 Cartesian2D|800 tmp|204 =|801 loop|221 [|800 min|222 ]|227 ;|-1
final|801 Cartesian2D|85 []|800 bLoop|-1
final|800 Cartesian2D|800 p2|204 =|214 (|800 Cartesian2D|215 )|800 vector|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|214 (|214 (|800 Cartesian1D|215 )|800 set|235 .|802 getBarycenter|216 ()|215 )|235 .|802 getX|216 ()|234 ,|40 Precision.EPSILON|215 )|227 ;|-1
Cartesian3D|85 []|800 points|-1
final|800 List|230 <|800 Cartesian3D|231 >|800 vertices|-1
Arrays|235 .|802 asList|214 (|40 Cartesian3D.ZERO|234 ,|40 Cartesian3D.PLUS_I|234 ,|40 Cartesian3D.PLUS_J|234 ,|40 Cartesian3D.PLUS_K|215 )|-1
try|218 {|800 ps|235 .|802 checkPoint|214 (|40 Cartesian3D.ZERO|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 NullPointerException|800 npe|215 )|220 {}|-1
final|801 Cartesian3D|800 p|204 =|800 h|235 .|802 toSpace|214 (|40 Cartesian2D.ZERO|215 )|227 ;|-1
final|801 Cartesian2D|800 p|204 =|800 h|235 .|802 toSpace|214 (|40 Cartesian1D.ZERO|215 )|227 ;|-1
Cartesian2D|800 expected|204 =|304 new|801 Cartesian2D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Cartesian2D|800 c|204 =|40 Cartesian2D.NEGATIVE_INFINITY|227 ;|-1
Cartesian2D|800 c|204 =|40 Cartesian2D.POSITIVE_INFINITY|227 ;|-1
Cartesian2D|800 c|204 =|40 Cartesian2D.NaN|227 ;|-1
Cartesian2D|800 c|204 =|304 new|801 Cartesian2D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Cartesian2D|800 c|204 =|304 new|801 Cartesian2D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Cartesian2D|800 c|204 =|304 new|801 Cartesian2D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Cartesian2D|800 c|204 =|304 new|801 Cartesian2D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Cartesian2D|800 c|204 =|304 new|801 Cartesian2D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|39 double|800 x|204 =|214 (|214 (|800 Cartesian1D|215 )|800 point|215 )|235 .|802 getX|216 ()|227 ;|-1
Cartesian3D|800 v|-1
{|304 new|801 Cartesian3D|214 (|304 new|39 double|85 []|218 {|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|219 }|215 )|227 ;|219 }|-1
Space|800 space|204 =|304 new|801 Cartesian3D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|235 .|802 getSpace|216 ()|227 ;|-1
{|329 return|304 new|801 Line|214 (|304 new|801 Cartesian2D|214 (|802 getNumber|216 ()|234 ,|802 getNumber|216 ()|215 )|234 ,|802 getNumber|216 ()|234 ,|802 getNumber|216 ()|215 )|227 ;|219 }|-1
{|329 return|304 new|801 OrientedPoint|214 (|304 new|801 Cartesian1D|214 (|802 getNumber|216 ()|215 )|234 ,|802 getBoolean|216 ()|234 ,|802 getNumber|216 ()|215 )|227 ;|219 }|-1
{|329 return|304 new|801 Circle|214 (|304 new|801 Cartesian3D|214 (|802 getNumber|216 ()|234 ,|802 getNumber|216 ()|234 ,|802 getNumber|216 ()|215 )|234 ,|802 getNumber|216 ()|215 )|227 ;|219 }|-1
Circle|800 circle|204 =|304 new|801 Circle|214 (|40 Cartesian3D.PLUS_K|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|329 return|304 new|801 SphericalCoordinates|214 (|304 new|801 Cartesian3D|214 (|800 x|234 ,|800 y|234 ,|800 z|215 )|215 )|227 ;|219 }|-1
final|801 Cartesian3D|800 v|-1
this|235 .|800 summedBarycenter|204 =|40 Cartesian3D.ZERO|227 ;|-1
{|83 final|800 Cartesian1D|800 p1|204 =|214 (|800 Cartesian1D|215 )|800 vector|227 ;|329 return|802 format|214 (|800 toAppendTo|234 ,|800 pos|234 ,|800 p1|235 .|802 getX|216 ()|215 )|227 ;|219 }|-1
{|329 return|800 Cartesian2D|235 .|802 angle|214 (|40 p1.vector|234 ,|40 p2.vector|215 )|227 ;|219 }|-1
final|801 Cartesian2D|800 vector|-1
final|801 Cartesian3D|800 p|-1
final|39 double|800 angle|204 =|800 Cartesian3D|235 .|800 angle|214 (|800 direction|234 ,|40 line.direction|215 )|227 ;|-1
final|801 Cartesian3D|800 point|-1
Cartesian3D|800 c|204 =|40 Cartesian3D.NEGATIVE_INFINITY|227 ;|-1
Cartesian3D|800 c|204 =|40 Cartesian3D.POSITIVE_INFINITY|227 ;|-1
Cartesian3D|800 c|204 =|40 Cartesian3D.NaN|227 ;|-1
Cartesian1D|800 expected|204 =|304 new|801 Cartesian1D|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
Cartesian1D|800 c|204 =|40 Cartesian1D.NEGATIVE_INFINITY|227 ;|-1
Cartesian1D|800 c|204 =|40 Cartesian1D.POSITIVE_INFINITY|227 ;|-1
Cartesian1D|800 c|204 =|40 Cartesian1D.NaN|227 ;|-1
Cartesian1D|800 c|204 =|304 new|801 Cartesian1D|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
Cartesian1D|800 c|204 =|304 new|801 Cartesian1D|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
Cartesian1D|800 c|204 =|304 new|801 Cartesian1D|214 (|201 -|34 NUMBER_CONSTANT|215 )|227 ;|-1
Cartesian1D|800 c|204 =|304 new|801 Cartesian1D|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
Cartesian1D|800 c|204 =|304 new|801 Cartesian1D|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
Cartesian1D|800 c|204 =|304 new|801 Cartesian1D|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 Cartesian3D|800 axis|-1
Cartesian3D|800 axis|-1
final|801 Cartesian3D|800 v1|-1
final|801 Cartesian3D|800 v2|-1
final|801 Cartesian3D|800 v1|-1
final|801 Cartesian3D|800 v2|-1
final|801 Cartesian3D|800 v1|-1
final|801 Cartesian3D|800 v2|-1
final|801 Cartesian3D|800 v1|-1
final|801 Cartesian3D|800 v2|-1
final|801 Cartesian3D|800 v1|-1
final|801 Cartesian3D|800 v2|-1
final|801 Cartesian3D|800 v1|-1
final|801 Cartesian3D|800 v2|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 v1|-1
final|801 Cartesian3D|800 v2|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 u|-1
final|39 double|800 angle|204 =|800 Cartesian3D|235 .|800 angle|214 (|800 thisCircle|235 .|802 getPole|216 ()|234 ,|800 otherCircle|235 .|802 getPole|216 ()|215 )|227 ;|-1
for|214 (|801 Cartesian2D|800 p|226 :|800 factory|235 .|802 generate|214 (|800 numPoints|215 )|215 )|218 {|800 circle|235 .|802 addPoint|214 (|800 p|235 .|802 getX|216 ()|234 ,|800 p|235 .|802 getY|216 ()|215 )|227 ;|219 }|-1
for|214 (|801 Cartesian2D|800 p|226 :|800 factory|235 .|802 generate|214 (|800 numPoints|215 )|215 )|218 {|800 circle|235 .|802 addPoint|214 (|800 p|235 .|802 getX|216 ()|234 ,|800 p|235 .|802 getY|216 ()|215 )|227 ;|219 }|-1
{|329 return|214 (|214 (|800 Cartesian3D|215 )|800 point|215 )|235 .|802 dotProduct|214 (|800 w|215 )|200 +|800 originOffset|227 ;|219 }|-1
final|801 Cartesian3D|800 p|-1
final|801 Cartesian3D|800 translation|-1
final|39 double|800 angle|204 =|800 Cartesian3D|235 .|800 angle|214 (|800 w|234 ,|40 plane.w|215 )|227 ;|-1
final|801 Cartesian3D|800 tmp|204 =|800 u|227 ;|-1
final|801 Cartesian3D|800 normal|-1
try|218 {|800 FieldVector3D|235 .|802 angle|214 (|800 v1|234 ,|40 Cartesian3D.ZERO|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathArithmeticException|800 mae|215 )|220 {}|-1
{|83 final|800 Circle|800 otherC|204 =|214 (|800 Circle|215 )|800 other|227 ;|329 return|800 Cartesian3D|235 .|802 dotProduct|214 (|800 pole|234 ,|40 otherC.pole|215 )|251 >=|34 NUMBER_CONSTANT|227 ;|219 }|-1
final|801 Cartesian3D|800 direction|-1
final|801 Cartesian3D|800 pole|-1
{|329 return|800 Cartesian3D|235 .|802 angle|214 (|40 p1.vector|234 ,|40 p2.vector|215 )|227 ;|219 }|-1
final|801 Cartesian3D|800 vector|-1
Collection|230 <|800 Cartesian2D|231 >|800 points|-1
final|800 Collection|230 <|800 Cartesian2D|231 >|800 points|-1
final|800 Collection|230 <|800 Cartesian2D|231 >|800 points|-1
final|800 Collection|230 <|800 Cartesian2D|231 >|800 points|-1
ConvexHull2D|800 hull|204 =|800 generator|235 .|802 generate|214 (|800 Collections|235 .|230 <|800 Cartesian2D|231 >|802 emptyList|216 ()|215 )|227 ;|-1
final|39 double|800 delta|204 =|214 (|214 (|800 Cartesian1D|215 )|800 point|215 )|235 .|802 getX|216 ()|201 -|800 location|235 .|802 getX|216 ()|227 ;|-1
final|801 Cartesian1D|800 location|-1
final|801 Cartesian3D|800 u|-1
final|801 Cartesian3D|800 u|-1
final|801 Cartesian3D|800 pole|-1
final|801 Cartesian2D|800 point|-1
final|801 Cartesian2D|800 location|-1
final|800 Cartesian2D|235 .|235 .|235 .|800 vertices|-1
final|800 Cartesian2D|235 .|235 .|235 .|800 vertices|-1
Cartesian2D|800 oneTwo|204 =|304 new|801 Cartesian2D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|304 new|801 Cartesian2D|214 (|800 v|215 )|227 ;|219 }|-1
final|801 Cartesian2D|85 []|800 vertices|-1
TranslationTransform|214 (|83 final|801 Cartesian3D|800 translation|215 )|218 {|315 this|235 .|800 translation|204 =|800 translation|227 ;|219 }|-1
final|801 Cartesian3D|800 translation|-1
final|801 Cartesian3D|800 center|-1
final|801 Cartesian3D|800 center|-1
final|801 Cartesian3D|800 point|-1
{|802 setSize|214 (|34 NUMBER_CONSTANT|215 )|227 ;|802 setBarycenter|214 (|214 (|800 Point|230 <|800 Euclidean3D|231 >|215 )|304 new|801 Cartesian3D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|219 }|-1
final|800 List|230 <|800 Cartesian3D|231 >|800 vertices|-1
final|800 List|230 <|800 Cartesian3D|231 >|800 vertices|-1
Cartesian1D|800 v|-1
Cartesian1D|800 v|204 =|304 new|801 Cartesian1D|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
Cartesian1D|800 v|204 =|304 new|801 Cartesian1D|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|801 Space|800 space|204 =|304 new|801 Cartesian1D|214 (|34 NUMBER_CONSTANT|215 )|235 .|802 getSpace|216 ()|227 ;|800 Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 space|235 .|802 getDimension|216 ()|215 )|227 ;|219 }|-1
final|801 Cartesian2D|800 p|-1
final|801 Cartesian2D|800 p|-1
final|801 Cartesian2D|800 p|-1
final|801 Cartesian2D|800 p|-1
final|801 Cartesian2D|800 p|-1
{|801 centered|221 [|800 i|222 ]|204 =|801 values|221 [|800 i|222 ]|201 -|801 means|221 [|800 i|222 ]|227 ;|219 }|-1
private|83 final|801 ContinuousSampler|800 sampler|204 =|304 new|801 MarsagliaLogNormalSampler|214 (|800 rng|234 ,|800 scale|234 ,|800 shape|215 )|227 ;|-1
private|83 final|801 ContinuousSampler|800 sampler|204 =|304 new|801 GaussianSampler|214 (|304 new|801 MarsagliaNormalizedGaussianSampler|214 (|800 rng|215 )|234 ,|800 mean|234 ,|800 standardDeviation|215 )|227 ;|-1
public|802 Plot|214 (|83 final|800 List|230 <|800 Cartesian2D|231 >|800 points|215 )|218 {|315 this|235 .|800 points|204 =|800 points|227 ;|219 }|-1
List|230 <|800 Cartesian2D|231 >|800 points|204 =|500 null|227 ;|-1
Cartesian3D|800 p|-1
rings|204 =|304 new|801 ChineseRings|214 (|304 new|801 Cartesian3D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|-1
Vector1D|800 actual|204 =|800 vector1DFormat|235 .|802 parse|214 (|800 source|215 )|227 ;|-1
Vector1D|800 actual|204 =|800 vector1DFormat|235 .|802 parse|214 (|800 source|215 )|227 ;|-1
Vector1D|800 actual|204 =|800 vector1DFormat|235 .|802 parse|214 (|800 source|215 )|227 ;|-1
Vector1D|800 expected|204 =|304 new|801 Cartesian1D|214 (|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|83 final|800 Vector1D|800 p1|204 =|214 (|800 Vector1D|215 )|800 vector|227 ;|329 return|802 format|214 (|800 toAppendTo|234 ,|800 pos|234 ,|800 p1|235 .|802 getX|216 ()|215 )|227 ;|219 }|-1
final|800 Vector2D|800 p2|204 =|214 (|800 Vector2D|215 )|800 vector|227 ;|-1
Vector2D|800 actual|204 =|800 vector2DFormat|235 .|802 parse|214 (|800 source|215 )|227 ;|-1
Vector2D|800 actual|204 =|800 vector2DFormat|235 .|802 parse|214 (|800 source|215 )|227 ;|-1
Vector2D|800 actual|204 =|800 vector2DFormat|235 .|802 parse|214 (|800 source|215 )|227 ;|-1
Vector3D|800 actual|204 =|800 vector3DFormat|235 .|802 parse|214 (|800 source|215 )|227 ;|-1
Vector3D|800 actual|204 =|800 vector3DFormat|235 .|802 parse|214 (|800 source|215 )|227 ;|-1
Vector3D|800 actual|204 =|800 vector3DFormat|235 .|802 parse|214 (|800 source|215 )|227 ;|-1
int|800 j|204 =|800 minor|-1
Assert|235 .|802 assertFalse|214 (|45 STRING_CONSTANT|200 +|800 level|234 ,|304 new|801 KolmogorovSmirnovTest|216 ()|235 .|802 kolmogorovSmirnovTest|214 (|800 betaDistribution|234 ,|800 observed|215 )|230 <|800 level|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|800 test|235 .|802 exactP|214 (|800 d|234 ,|800 sampleSize1|234 ,|800 sampleSize2|234 ,|800 strict|215 )|234 ,|800 test|235 .|802 monteCarloP|214 (|800 d|234 ,|800 sampleSize1|234 ,|800 sampleSize2|234 ,|800 strict|234 ,|800 MONTE_CARLO_ITERATIONS|234 ,|800 rng|215 )|234 ,|800 tol|215 )|-1
final|39 double|800 tol|204 =|34 NUMBER_CONSTANT|227 ;|-1
final|39 double|800 tol|204 =|34 NUMBER_CONSTANT|227 ;|-1
Cartesian3D|800 p|-1
rings|204 =|304 new|801 ChineseRings|214 (|304 new|801 Cartesian3D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|-1
try|218 {|800 FieldVector3D|235 .|802 angle|214 (|800 v1|234 ,|40 Cartesian3D.ZERO|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|331 catch|214 (|801 MathArithmeticException|800 mae|215 )|220 {}|-1
final|801 Cartesian2D|800 point|-1
final|801 Cartesian2D|800 location|-1
final|800 Cartesian2D|235 .|235 .|235 .|800 vertices|-1
final|800 Cartesian2D|235 .|235 .|235 .|800 vertices|-1
final|801 Cartesian3D|800 p|-1
final|39 double|800 angle|204 =|800 Cartesian3D|235 .|800 angle|214 (|800 direction|234 ,|40 line.direction|215 )|227 ;|-1
final|801 Cartesian3D|800 point|-1
Cartesian3D|800 v|-1
{|304 new|801 Cartesian3D|214 (|304 new|39 double|85 []|218 {|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|219 }|215 )|227 ;|219 }|-1
Space|800 space|204 =|304 new|801 Cartesian3D|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|235 .|802 getSpace|216 ()|227 ;|-1
final|800 Collection|230 <|800 Cartesian2D|231 >|800 points|-1
final|800 Collection|230 <|800 Cartesian2D|231 >|800 points|-1
final|800 Collection|230 <|800 Cartesian2D|231 >|800 points|-1
ConvexHull2D|800 hull|204 =|800 generator|235 .|802 generate|214 (|800 Collections|235 .|230 <|800 Cartesian2D|231 >|802 emptyList|216 ()|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|214 (|214 (|800 Cartesian1D|215 )|800 set|235 .|802 getBarycenter|216 ()|215 )|235 .|802 getX|216 ()|234 ,|40 Precision.EPSILON|215 )|227 ;|-1
final|39 double|800 x|204 =|214 (|214 (|800 Cartesian1D|215 )|800 point|215 )|235 .|802 getX|216 ()|227 ;|-1
for|214 (|801 Cartesian2D|800 p|226 :|800 factory|235 .|802 generate|214 (|800 numPoints|215 )|215 )|218 {|800 circle|235 .|802 addPoint|214 (|800 p|235 .|802 getX|216 ()|234 ,|800 p|235 .|802 getY|216 ()|215 )|227 ;|219 }|-1
for|214 (|801 Cartesian2D|800 p|226 :|800 factory|235 .|802 generate|214 (|800 numPoints|215 )|215 )|218 {|800 circle|235 .|802 addPoint|214 (|800 p|235 .|802 getX|216 ()|234 ,|800 p|235 .|802 getY|216 ()|215 )|227 ;|219 }|-1
final|801 Cartesian3D|800 v1|-1
final|801 Cartesian3D|800 v2|-1
final|801 Cartesian3D|800 v1|-1
final|801 Cartesian3D|800 v2|-1
final|801 Cartesian3D|800 v1|-1
final|801 Cartesian3D|800 v2|-1
final|801 Cartesian3D|800 v1|-1
final|801 Cartesian3D|800 v2|-1
final|801 Cartesian3D|800 v1|-1
final|801 Cartesian3D|800 v2|-1
final|801 Cartesian3D|800 v1|-1
final|801 Cartesian3D|800 v2|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 v1|-1
final|801 Cartesian3D|800 v2|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 v|-1
final|801 Cartesian3D|800 u|-1
final|801 Cartesian2D|85 []|800 vertices|-1
if|214 (|800 x|252 <=|34 NUMBER_CONSTANT|215 )|218 {|800 ret|204 =|34 NUMBER_CONSTANT|227 ;|219 }|322 else|218 {|800 ret|204 =|40 RegularizedGamma.P|235 .|802 value|214 (|800 shape|234 ,|800 x|203 /|800 scale|215 )|227 ;|219 }|-1
LogGamma|235 .|802 value|214 (|800 z|200 +|34 NUMBER_CONSTANT|215 )|201 -|214 (|800 z|200 +|34 NUMBER_CONSTANT|215 )|202 *|800 FastMath|235 .|802 log|214 (|800 z|215 )|200 +|800 z|201 -|800 HALF_LOG_2_PI|-1
final|39 double|800 expected|204 =|800 LogGamma|235 .|802 value|214 (|800 i|200 +|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|329 return|40 RegularizedGamma.P|235 .|802 value|214 (|800 mu|234 ,|800 mu|202 *|800 x|202 *|800 x|203 /|800 omega|215 )|227 ;|219 }|-1
NUMBER_CONSTANT|202 *|800 FastMath|235 .|802 pow|214 (|800 mu|234 ,|800 mu|215 )|203 /|214 (|800 Gamma|235 .|802 value|214 (|800 mu|215 )|202 *|800 FastMath|235 .|802 pow|214 (|800 omega|234 ,|800 mu|215 )|215 )|-1
Assert|235 .|802 assertEquals|214 (|34 NUMBER_CONSTANT|234 ,|800 Gamma|235 .|802 value|214 (|800 t|215 )|203 /|800 s|234 ,|800 tol|215 )|227 ;|-1
(|800 sc|202 *|800 sc|215 )|202 *|800 FastMath|235 .|802 exp|214 (|800 LogGamma|235 .|802 value|214 (|34 NUMBER_CONSTANT|200 +|214 (|34 NUMBER_CONSTANT|203 /|800 sh|215 )|215 )|215 )|-1
return|800 sc|202 *|800 FastMath|235 .|802 exp|214 (|800 LogGamma|235 .|802 value|214 (|34 NUMBER_CONSTANT|200 +|214 (|34 NUMBER_CONSTANT|203 /|800 sh|215 )|215 )|215 )|227 ;|-1
return|800 LogGamma|235 .|802 value|214 (|800 n|200 +|34 NUMBER_CONSTANT|215 )|227 ;|-1
{|800 ret|204 =|800 RegularizedBeta|235 .|802 value|214 (|800 probabilityOfSuccess|234 ,|800 numberOfSuccesses|234 ,|800 x|200 +|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
LogBeta|235 .|802 value|214 (|800 nhalf|234 ,|800 mhalf|215 )|-1
{|800 ret|204 =|34 NUMBER_CONSTANT|201 -|800 RegularizedBeta|235 .|802 value|214 (|800 probabilityOfSuccess|234 ,|800 x|200 +|34 NUMBER_CONSTANT|234 ,|800 numberOfTrials|201 -|800 x|215 )|227 ;|219 }|-1
if|214 (|800 x|251 >=|34 NUMBER_CONSTANT|215 )|218 {|329 return|34 NUMBER_CONSTANT|227 ;|219 }|322 else|218 {|329 return|800 RegularizedBeta|235 .|802 value|214 (|800 x|234 ,|800 alpha|234 ,|800 beta|215 )|227 ;|219 }|-1
return|34 NUMBER_CONSTANT|202 *|800 ErfDifference|235 .|802 value|214 (|800 v0|234 ,|800 v1|215 )|227 ;|-1
return|34 NUMBER_CONSTANT|200 +|34 NUMBER_CONSTANT|202 *|800 Erf|235 .|802 value|214 (|800 dev|203 /|214 (|800 shape|202 *|800 SQRT2|215 )|215 )|227 ;|-1
final|39 double|800 t|204 =|800 InverseErfc|235 .|802 value|214 (|800 p|215 )|227 ;|-1
return|34 NUMBER_CONSTANT|202 *|800 ErfDifference|235 .|802 value|214 (|800 v0|234 ,|800 v1|215 )|227 ;|-1
return|800 mean|200 +|800 standardDeviation|202 *|800 SQRT2|202 *|800 InverseErf|235 .|802 value|214 (|34 NUMBER_CONSTANT|202 *|800 p|201 -|34 NUMBER_CONSTANT|215 )|227 ;|-1
return|34 NUMBER_CONSTANT|202 *|800 Erfc|235 .|802 value|214 (|201 -|800 dev|203 /|214 (|800 standardDeviation|202 *|800 SQRT2|215 )|215 )|227 ;|-1
{|800 term|239 *=|800 FastMath|235 .|802 pow|214 (|801 delta|221 [|800 k|222 ]|234 ,|801 orders|221 [|800 k|222 ]|215 )|203 /|800 FACTORIAL|235 .|802 value|214 (|801 orders|221 [|800 k|222 ]|215 )|227 ;|219 }|-1
double|800 refDer|204 =|201 -|800 Factorial|235 .|802 value|214 (|800 n|201 -|34 NUMBER_CONSTANT|215 )|203 /|800 FastMath|235 .|802 pow|214 (|201 -|800 x|234 ,|800 n|215 )|227 ;|-1
ArithmeticUtils|235 .|802 pow|214 (|201 -|34 NUMBER_CONSTANT|234 ,|800 i|215 )|202 *|800 Factorial|235 .|802 value|214 (|800 i|215 )|203 /|800 FastMath|235 .|802 pow|214 (|800 x|234 ,|800 i|200 +|34 NUMBER_CONSTANT|215 )|-1
BinomialCoefficientDouble|235 .|802 value|214 (|800 n|200 +|800 m|234 ,|800 m|215 )|-1
double|800 binomial|204 =|800 BinomialCoefficient|235 .|802 value|214 (|800 v|200 +|800 i|234 ,|800 i|215 )|227 ;|-1
final|39 int|800 numCombinations|204 =|214 (|39 int|215 )|800 BinomialCoefficient|235 .|802 value|214 (|800 arraySize|234 ,|800 numberOfTrueValues|215 )|227 ;|-1
long|800 expected|204 =|800 BinomialCoefficient|235 .|802 value|214 (|800 i|200 +|800 j|234 ,|800 i|215 )|227 ;|-1
{|801 coeff|221 [|800 i|222 ]|221 [|800 j|222 ]|204 =|214 (|39 int|215 )|800 BinomialCoefficient|235 .|802 value|214 (|800 i|234 ,|800 j|215 )|227 ;|219 }|-1
Assert|235 .|802 assertEquals|214 (|800 BinomialCoefficient|235 .|802 value|214 (|800 n|234 ,|34 NUMBER_CONSTANT|215 )|234 ,|800 CombinatoricsUtils|235 .|802 stirlingS2|214 (|800 n|234 ,|800 n|201 -|34 NUMBER_CONSTANT|215 )|215 )|227 ;|-1
return|800 LinearCombination|235 .|802 value|214 (|800 x1|234 ,|800 y1|234 ,|201 -|800 x2|234 ,|800 y2|215 )|227 ;|-1
{|83 final|800 Cartesian2D|800 v2|204 =|214 (|800 Cartesian2D|215 )|800 v|227 ;|329 return|800 LinearCombination|235 .|802 value|214 (|800 x|234 ,|40 v2.x|234 ,|800 y|234 ,|40 v2.y|215 )|227 ;|219 }|-1
final|39 double|800 n|204 =|800 FastMath|235 .|802 abs|214 (|800 LinearCombination|235 .|802 value|214 (|40 v1.x|234 ,|40 v2.y|234 ,|201 -|40 v1.y|234 ,|40 v2.x|215 )|215 )|227 ;|-1
out.value|204 =|800 LinearCombination|235 .|802 value|214 (|800 a1|234 ,|40 b1.value|234 ,|800 a2|234 ,|40 b2.value|234 ,|800 a3|234 ,|40 b3.value|215 )|227 ;|-1
out.value|204 =|800 LinearCombination|235 .|802 value|214 (|40 a1.value|234 ,|40 b1.value|234 ,|40 a2.value|234 ,|40 b2.value|234 ,|40 a3.value|234 ,|40 b3.value|215 )|227 ;|-1
out.value|204 =|800 LinearCombination|235 .|802 value|214 (|800 a1|234 ,|40 b1.value|234 ,|800 a2|234 ,|40 b2.value|215 )|227 ;|-1
out.value|204 =|800 LinearCombination|235 .|802 value|214 (|40 a1.value|234 ,|40 b1.value|234 ,|40 a2.value|234 ,|40 b2.value|215 )|227 ;|-1
out.value|204 =|800 LinearCombination|235 .|802 value|214 (|800 a|234 ,|800 bDouble|215 )|227 ;|-1
out.value|204 =|800 LinearCombination|235 .|802 value|214 (|800 aDouble|234 ,|800 bDouble|215 )|227 ;|-1
{|329 return|800 FastMath|235 .|802 abs|214 (|800 LinearCombination|235 .|802 value|214 (|800 sin|234 ,|40 line.cos|234 ,|201 -|800 cos|234 ,|40 line.sin|215 )|215 )|230 <|800 tolerance|227 ;|219 }|-1
return|800 LinearCombination|235 .|802 value|214 (|800 sin|234 ,|40 otherL.sin|234 ,|800 cos|234 ,|40 otherL.cos|215 )|251 >=|34 NUMBER_CONSTANT|227 ;|-1
{|329 return|800 originOffset|200 +|214 (|800 LinearCombination|235 .|802 value|214 (|800 cos|234 ,|40 line.cos|234 ,|800 sin|234 ,|40 line.sin|215 )|231 >|34 NUMBER_CONSTANT|233 ?|201 -|40 line.originOffset|226 :|40 line.originOffset|215 )|227 ;|219 }|-1
final|39 double|800 accurateValue|204 =|800 LinearCombination|235 .|802 value|214 (|800 a|234 ,|800 bDouble|215 )|227 ;|-1
final|39 double|800 accurateValue|204 =|800 LinearCombination|235 .|802 value|214 (|800 aDouble|234 ,|800 bDouble|215 )|227 ;|-1
{|329 return|304 new|801 Decimal64|214 (|800 LinearCombination|235 .|802 value|214 (|800 a1|234 ,|40 b1.value|234 ,|800 a2|234 ,|40 b2.value|234 ,|800 a3|234 ,|40 b3.value|215 )|215 )|227 ;|219 }|-1
{|329 return|304 new|801 Decimal64|214 (|800 LinearCombination|235 .|802 value|214 (|40 a1.value|234 ,|40 b1.value|234 ,|40 a2.value|234 ,|40 b2.value|234 ,|40 a3.value|234 ,|40 b3.value|215 )|215 )|227 ;|219 }|-1
{|329 return|304 new|801 Decimal64|214 (|800 LinearCombination|235 .|802 value|214 (|800 a1|234 ,|40 b1.value|234 ,|800 a2|234 ,|40 b2.value|215 )|215 )|227 ;|219 }|-1
{|329 return|304 new|801 Decimal64|214 (|800 LinearCombination|235 .|802 value|214 (|40 a1.value|234 ,|40 b1.value|234 ,|40 a2.value|234 ,|40 b2.value|215 )|215 )|227 ;|219 }|-1
return|304 new|801 Decimal64|214 (|800 LinearCombination|235 .|802 value|214 (|800 a|234 ,|800 bDouble|215 )|215 )|227 ;|-1
return|304 new|801 Decimal64|214 (|800 LinearCombination|235 .|802 value|214 (|800 aDouble|234 ,|800 bDouble|215 )|215 )|227 ;|-1
final|39 double|800 r|204 =|800 LinearCombination|235 .|802 value|214 (|801 coeff|221 [|800 i|222 ]|234 ,|800 pY|215 )|227 ;|-1
packed|221 [|800 i|200 +|34 NUMBER_CONSTANT|222 ]|204 =|800 LinearCombination|235 .|802 value|214 (|800 dv|234 ,|800 partials|215 )|227 ;|-1
final|39 double|800 cos|204 =|800 CosAngle|235 .|802 value|214 (|800 n|234 ,|800 sampleDirection|215 )|227 ;|-1
final|39 double|800 diffNorm|204 =|800 SafeNorm|235 .|802 value|214 (|800 diff|215 )|227 ;|-1
checkRelative|214 (|800 LinearCombination|235 .|802 value|214 (|800 aD|234 ,|800 bD|215 )|234 ,|800 bF|221 [|34 NUMBER_CONSTANT|222 ]|235 .|802 linearCombination|214 (|800 aD|234 ,|800 bF|215 )|215 )|227 ;|-1
checkRelative|214 (|800 LinearCombination|235 .|802 value|214 (|800 aD|234 ,|800 bD|215 )|234 ,|800 aF|221 [|34 NUMBER_CONSTANT|222 ]|235 .|802 linearCombination|214 (|800 aF|234 ,|800 bF|215 )|215 )|227 ;|-1
{|315 this|214 (|800 PlaneAngleRadians|235 .|802 normalizeBetweenZeroAndTwoPi|214 (|800 alpha|215 )|234 ,|304 new|801 Cartesian2D|214 (|800 FastMath|235 .|802 cos|214 (|800 alpha|215 )|234 ,|800 FastMath|235 .|802 sin|214 (|800 alpha|215 )|215 )|215 )|227 ;|219 }|-1
{|800 Assert|235 .|802 assertEquals|214 (|800 a1|235 .|802 getReal|216 ()|234 ,|800 PlaneAngleRadians|235 .|802 normalize|214 (|800 a2|234 ,|800 a1|235 .|802 getReal|216 ()|215 )|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
final|39 double|800 arcRelativeStart|204 =|800 PlaneAngleRadians|235 .|802 normalize|214 (|800 arc|235 .|802 getInf|216 ()|234 ,|800 edgeStart|200 +|40 FastMath.PI|215 )|201 -|800 edgeStart|227 ;|-1
Assert|235 .|802 assertEquals|214 (|800 p|234 ,|800 PlaneAngleRadians|235 .|802 normalize|214 (|801 fitted|221 [|34 NUMBER_CONSTANT|222 ]|234 ,|800 p|215 )|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|800 p|234 ,|800 PlaneAngleRadians|235 .|802 normalize|214 (|801 fitted|221 [|34 NUMBER_CONSTANT|222 ]|234 ,|800 p|215 )|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|800 p|234 ,|800 PlaneAngleRadians|235 .|802 normalize|214 (|801 fitted|221 [|34 NUMBER_CONSTANT|222 ]|234 ,|800 p|215 )|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Assert|235 .|802 assertEquals|214 (|800 p|234 ,|800 PlaneAngleRadians|235 .|802 normalize|214 (|801 fitted|221 [|34 NUMBER_CONSTANT|222 ]|234 ,|800 p|215 )|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|39 double|800 lB|204 =|800 PlaneAngleRadians|235 .|802 normalize|214 (|800 limits|235 .|802 get|214 (|800 j|215 )|234 ,|800 lA|215 )|227 ;|-1
final|39 double|800 syncedStart|204 =|800 PlaneAngleRadians|235 .|802 normalize|214 (|801 a|221 [|34 NUMBER_CONSTANT|222 ]|234 ,|800 reference|215 )|201 -|800 arc|235 .|802 getInf|216 ()|227 ;|-1
final|39 double|800 normalizedLower|204 =|800 PlaneAngleRadians|235 .|802 normalizeBetweenZeroAndTwoPi|214 (|800 lower|215 )|227 ;|-1
{|800 Assert|235 .|802 assertEquals|214 (|800 a1|235 .|802 getReal|216 ()|234 ,|800 PlaneAngleRadians|235 .|802 normalize|214 (|800 a2|234 ,|800 a1|235 .|802 getReal|216 ()|215 )|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
this|235 .|800 angle|204 =|800 PlaneAngleRadians|235 .|802 normalizeBetweenZeroAndTwoPi|214 (|800 angle|215 )|227 ;|-1
this|235 .|800 angle|204 =|800 PlaneAngleRadians|235 .|802 normalizeBetweenZeroAndTwoPi|214 (|800 alpha|215 )|227 ;|-1
angle|204 =|800 PlaneAngleRadians|235 .|802 normalizeBetweenZeroAndTwoPi|214 (|40 line.angle|215 )|227 ;|-1
final|39 double|800 normalizedPoint|204 =|800 PlaneAngleRadians|235 .|802 normalize|214 (|800 point|234 ,|800 middle|215 )|227 ;|-1
this|235 .|800 lower|204 =|800 PlaneAngleRadians|235 .|802 normalizeBetweenZeroAndTwoPi|214 (|800 lower|215 )|227 ;|-1
if|214 (|40 knots.length|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 NumberIsTooSmallException|214 (|40 LocalizedFormats.NOT_ENOUGH_POINTS_IN_SPLINE_PARTITION|234 ,|40 knots.length|234 ,|34 NUMBER_CONSTANT|234 ,|9 true|215 )|227 ;|219 }|-1
if|214 (|40 knots.length|230 <|34 NUMBER_CONSTANT|215 )|218 {|320 throw|304 new|801 NumberIsTooSmallException|214 (|40 LocalizedFormats.NOT_ENOUGH_POINTS_IN_SPLINE_PARTITION|234 ,|40 knots.length|234 ,|34 NUMBER_CONSTANT|234 ,|9 true|215 )|227 ;|219 }|-1
UnitSphereSampler|800 g|204 =|304 new|801 UnitSphereSampler|214 (|34 NUMBER_CONSTANT|234 ,|800 random|215 )|227 ;|-1
UnitSphereSampler|800 g|204 =|304 new|801 UnitSphereSampler|214 (|34 NUMBER_CONSTANT|234 ,|800 random|215 )|227 ;|-1
UnitSphereSampler|800 g|204 =|304 new|801 UnitSphereSampler|214 (|34 NUMBER_CONSTANT|234 ,|800 random|215 )|227 ;|-1
UnitSphereSampler|800 g|204 =|304 new|801 UnitSphereSampler|214 (|34 NUMBER_CONSTANT|234 ,|800 random|215 )|227 ;|-1
UnitSphereSampler|800 rand|-1
this|214 (|304 new|801 InterpolatingMicrosphere|214 (|800 dimension|234 ,|800 elements|234 ,|800 maxDarkFraction|234 ,|800 darkThreshold|234 ,|800 background|234 ,|304 new|801 UnitSphereSampler|214 (|800 dimension|234 ,|800 RandomSource|235 .|802 create|214 (|40 RandomSource.MT_64|215 )|215 )|215 )|234 ,|800 exponent|234 ,|800 sharedSphere|234 ,|800 noInterpolationTolerance|215 )|227 ;|-1
UnitSphereSampler|800 sphRandom|204 =|304 new|801 UnitSphereSampler|214 (|34 NUMBER_CONSTANT|234 ,|800 random|215 )|227 ;|-1
{|800 sampler|204 =|304 new|801 MarsagliaNormalizedGaussianSampler|214 (|800 generator|215 )|227 ;|219 }|-1
private|83 final|801 ContinuousSampler|800 sampler|204 =|304 new|801 LogNormalSampler|214 (|304 new|801 ZigguratNormalizedGaussianSampler|214 (|800 rng|215 )|234 ,|800 scale|234 ,|800 shape|215 )|227 ;|-1
final|40 ContinuousDistribution.Sampler|800 random|-1
{|329 return|802 randomize|214 (|304 new|801 UniformContinuousDistribution|214 (|800 min|234 ,|800 max|215 )|235 .|802 createSampler|214 (|800 rng|215 )|234 ,|802 function|214 (|304 new|801 Constant|214 (|34 NUMBER_CONSTANT|215 )|234 ,|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|215 )|227 ;|219 }|-1
DiscreteDistribution.Sampler|800 sampler|-1
final|801 ContinuousDistribution|800 expectedDistribution|-1
final|801 NormalDistribution|800 normalDistribution|204 =|304 new|801 NormalDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 NormalDistribution|800 normalDistribution|204 =|304 new|801 NormalDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
final|801 NormalDistribution|800 normalDistribution|204 =|304 new|801 NormalDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
ContinuousDistribution|800 distribution|-1
ContinuousDistribution|800 distribution|-1
ContinuousDistribution|800 distribution|-1
ContinuousDistribution|800 distribution|-1
ContinuousDistribution.Sampler|800 sampler|-1
this|235 .|800 random|204 =|304 new|801 NormalDistribution|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|235 .|802 createSampler|214 (|800 rng|215 )|227 ;|-1
final|801 ContinuousDistribution|800 kernel|204 =|802 findKernel|214 (|800 lower|234 ,|800 upper|215 )|227 ;|-1
final|801 ContinuousDistribution|800 kernel|204 =|802 findKernel|214 (|800 lower|234 ,|800 upper|215 )|227 ;|-1
x|204 =|304 new|801 UniformContinuousDistribution|214 (|800 lo|234 ,|800 hi|215 )|235 .|802 createSampler|214 (|800 rng|215 )|227 ;|-1
tP|204 =|304 new|801 UniformContinuousDistribution|214 (|34 NUMBER_CONSTANT|234 ,|40 MathUtils.TWO_PI|215 )|235 .|802 createSampler|214 (|800 rng|215 )|227 ;|-1
@|800 Override|83 public|39 double|802 getMean|216 ()|218 {|329 return|34 NUMBER_CONSTANT|227 ;|219 }|-1
final|39 double|800 offset|204 =|800 plane|235 .|802 getOffset|214 (|800 point|215 )|227 ;|-1
{|800 Assert|235 .|802 assertEquals|214 (|800 x|234 ,|800 v|235 .|802 getX|216 ()|234 ,|800 TEST_TOLERANCE|215 )|227 ;|219 }|-1
Assert|235 .|802 assertFalse|214 (|800 pt|235 .|802 isDirect|216 ()|215 )|227 ;|-1
Assert|235 .|802 assertTrue|214 (|800 copy|235 .|802 isDirect|216 ()|215 )|227 ;|-1
Assert|235 .|802 assertTrue|214 (|800 pt|235 .|802 isDirect|216 ()|215 )|227 ;|-1
assertContains|214 (|800 result|234 ,|800 expected|234 ,|800 tolerance|215 )|227 ;|-1
TestUtils|235 .|802 assertContains|214 (|800 result|234 ,|800 expected|234 ,|800 tolerance|215 )|227 ;|-1
y|221 [|800 i|222 ]|204 =|800 Complex|235 .|802 ofCartesian|214 (|800 yr|234 ,|800 yi|215 )|227 ;|-1
data|221 [|800 i|222 ]|204 =|800 Complex|235 .|802 ofCartesian|214 (|800 re|234 ,|800 im|215 )|227 ;|-1
for|214 (|800 Complex|800 cc|226 :|800 c|215 )|218 {|800 TestUtils|235 .|802 assertEquals|214 (|800 Complex|235 .|802 ofCartesian|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|234 ,|800 cc|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|219 }|-1
Object|800 expected|204 =|800 Complex|235 .|802 ofCartesian|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Complex|800 expected|204 =|800 Complex|235 .|802 ofCartesian|214 (|40 Double.NEGATIVE_INFINITY|234 ,|40 Double.NEGATIVE_INFINITY|215 )|227 ;|-1
Complex|800 expected|204 =|800 Complex|235 .|802 ofCartesian|214 (|40 Double.POSITIVE_INFINITY|234 ,|40 Double.POSITIVE_INFINITY|215 )|227 ;|-1
Complex|800 expected|204 =|800 Complex|235 .|802 ofCartesian|214 (|40 Double.NaN|234 ,|40 Double.NaN|215 )|227 ;|-1
Complex|800 expected|204 =|800 Complex|235 .|802 ofCartesian|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Complex|800 expected|204 =|800 Complex|235 .|802 ofCartesian|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Complex|800 expected|204 =|800 Complex|235 .|802 ofCartesian|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Complex|800 c|204 =|800 Complex|235 .|802 ofCartesian|214 (|40 Double.NEGATIVE_INFINITY|234 ,|40 Double.NEGATIVE_INFINITY|215 )|227 ;|-1
Complex|800 c|204 =|800 Complex|235 .|802 ofCartesian|214 (|40 Double.POSITIVE_INFINITY|234 ,|40 Double.POSITIVE_INFINITY|215 )|227 ;|-1
Complex|800 c|204 =|800 Complex|235 .|802 ofCartesian|214 (|40 Double.NaN|234 ,|40 Double.NaN|215 )|227 ;|-1
Complex|800 c|204 =|800 Complex|235 .|802 ofCartesian|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Complex|800 c|204 =|800 Complex|235 .|802 ofCartesian|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Complex|800 c|204 =|800 Complex|235 .|802 ofCartesian|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Complex|800 c|204 =|800 Complex|235 .|802 ofCartesian|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
Complex|800 c|204 =|800 Complex|235 .|802 ofCartesian|214 (|34 NUMBER_CONSTANT|234 ,|34 NUMBER_CONSTANT|215 )|227 ;|-1
for|214 (|39 float|800 d|226 :|800 imaginary|215 )|218 {|801 c|221 [|800 index|222 ]|204 =|800 Complex|235 .|802 ofCartesian|214 (|34 NUMBER_CONSTANT|234 ,|800 d|215 )|227 ;|800 index|247 ++|227 ;|219 }|-1
for|214 (|39 double|800 d|226 :|800 imaginary|215 )|218 {|801 c|221 [|800 index|222 ]|204 =|800 Complex|235 .|802 ofCartesian|214 (|34 NUMBER_CONSTANT|234 ,|800 d|215 )|227 ;|800 index|247 ++|227 ;|219 }|-1
for|214 (|39 float|800 d|226 :|800 real|215 )|218 {|801 c|221 [|800 index|222 ]|204 =|800 Complex|235 .|802 ofCartesian|214 (|800 d|215 )|227 ;|800 index|247 ++|227 ;|219 }|-1
for|214 (|39 double|800 d|226 :|800 real|215 )|218 {|801 c|221 [|800 index|222 ]|204 =|800 Complex|235 .|802 ofCartesian|214 (|800 d|215 )|227 ;|800 index|247 ++|227 ;|219 }|-1
{|329 return|800 Complex|235 .|802 ofCartesian|214 (|34 NUMBER_CONSTANT|234 ,|801 imaginary|221 [|800 index|222 ]|215 )|227 ;|219 }|-1
{|329 return|800 Complex|235 .|802 ofCartesian|214 (|34 NUMBER_CONSTANT|234 ,|801 imaginary|221 [|800 index|222 ]|215 )|227 ;|219 }|-1
{|329 return|800 Complex|235 .|802 ofCartesian|214 (|801 real|221 [|800 index|222 ]|215 )|227 ;|219 }|-1
{|329 return|800 Complex|235 .|802 ofCartesian|214 (|801 real|221 [|800 index|222 ]|215 )|227 ;|219 }|-1
for|214 (|39 float|800 d|226 :|800 real|215 )|218 {|801 c|221 [|800 index|222 ]|204 =|800 Complex|235 .|802 ofReal|214 (|800 d|215 )|227 ;|800 index|247 ++|227 ;|219 }|-1
for|214 (|39 double|800 d|226 :|800 real|215 )|218 {|801 c|221 [|800 index|222 ]|204 =|800 Complex|235 .|802 ofReal|214 (|800 d|215 )|227 ;|800 index|247 ++|227 ;|219 }|-1
{|329 return|800 Complex|235 .|802 ofReal|214 (|801 real|221 [|800 index|222 ]|215 )|227 ;|219 }|-1
{|329 return|800 Complex|235 .|802 ofReal|214 (|801 real|221 [|800 index|222 ]|215 )|227 ;|219 }|-1
x|221 [|800 i|222 ]|204 =|800 Complex|235 .|802 ofReal|214 (|800 f|235 .|802 value|214 (|800 t|215 )|215 )|227 ;|-1
{|83 final|39 int|800 value|204 =|800 count|227 ;|800 count|237 +=|800 increment|227 ;|329 return|800 value|227 ;|219 }|-1
{|304 new|801 SimpsonIntegrator|214 (|34 NUMBER_CONSTANT|234 ,|40 SimpsonIntegrator.SIMPSON_MAX_ITERATIONS_COUNT|200 +|34 NUMBER_CONSTANT|215 )|227 ;|800 Assert|235 .|802 fail|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
public|801 RealMatrix|802 copy|216 ()|218 {|320 throw|304 new|801 UnsupportedOperationException|214 (|45 STRING_CONSTANT|215 )|227 ;|219 }|-1
