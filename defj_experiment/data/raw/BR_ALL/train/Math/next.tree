(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getCumPct}) (214{val=(}) (32 (800{val=Character}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=v}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getCumFreq}) (214{val=(}) (32 (800{val=Character}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=v}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getPct}) (214{val=(}) (32 (800{val=Character}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=v}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getCount}) (214{val=(}) (32 (800{val=Character}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=v}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=IntegratorException}) (214{val=(}) (44 (83{val=final}) (43 (801{val=Throwable})) (800{val=cause})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=cause}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=double}) (800{val=initialStepSize})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=SecondOrderDifferentialEquations})) (800{val=equations})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=DerivativeException}) (214{val=(}) (44 (83{val=final}) (43 (801{val=Throwable})) (800{val=cause})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=cause}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (800{val=METHOD_NAME}) (234{val=,}) (800{val=minStep}) (234{val=,}) (800{val=maxStep}) (234{val=,}) (800{val=vecAbsoluteTolerance}) (234{val=,}) (800{val=vecRelativeTolerance}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (800{val=METHOD_NAME}) (234{val=,}) (800{val=minStep}) (234{val=,}) (800{val=maxStep}) (234{val=,}) (800{val=scalAbsoluteTolerance}) (234{val=,}) (800{val=scalRelativeTolerance}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=c}) (234{val=,}) (800{val=a}) (234{val=,}) (800{val=b}) (234{val=,}) (14 (304{val=new}) (43 (801{val=GillStepInterpolator})) (216{val=()})) (234{val=,}) (800{val=step}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=c}) (234{val=,}) (800{val=a}) (234{val=,}) (800{val=b}) (234{val=,}) (14 (304{val=new}) (43 (801{val=MidpointStepInterpolator})) (216{val=()})) (234{val=,}) (800{val=step}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=c}) (234{val=,}) (800{val=a}) (234{val=,}) (800{val=b}) (234{val=,}) (14 (304{val=new}) (43 (801{val=EulerStepInterpolator})) (216{val=()})) (234{val=,}) (800{val=step}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=c}) (234{val=,}) (800{val=a}) (234{val=,}) (800{val=b}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ThreeEighthesStepInterpolator})) (216{val=()})) (234{val=,}) (800{val=step}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=c}) (234{val=,}) (800{val=a}) (234{val=,}) (800{val=b}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ClassicalRungeKuttaStepInterpolator})) (216{val=()})) (234{val=,}) (800{val=step}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (14 (304{val=new}) (43 (801{val=KeplerHandler})) (214{val=(}) (800{val=pb}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (14 (304{val=new}) (43 (801{val=VariableHandler})) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (14 (304{val=new}) (43 (801{val=KeplerHandler})) (214{val=(}) (800{val=pb}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (14 (304{val=new}) (43 (801{val=KeplerHandler})) (214{val=(}) (800{val=pb}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=cm}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (14 (304{val=new}) (43 (801{val=KeplerStepHandler})) (214{val=(}) (800{val=pb}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (14 (304{val=new}) (43 (801{val=VariableStepHandler})) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (14 (304{val=new}) (43 (801{val=KeplerStepHandler})) (214{val=(}) (800{val=pb}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integrator}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (14 (304{val=new}) (43 (801{val=VariableHandler})) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (14 (304{val=new}) (43 (801{val=KeplerHandler})) (214{val=(}) (800{val=pb}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (14 (304{val=new}) (43 (801{val=KeplerHandler})) (214{val=(}) (800{val=pb}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=stepHandlers}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (230{val=<}) (43 (800{val=StepHandler})) (231{val=>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=ODEIntegrator})) (800{val=integrator})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=createRegression}) (216{val=()})) (235{val=.}) (802{val=newSampleData}) (214{val=(}) (800{val=y}) (234{val=,}) (800{val=x}) (234{val=,}) (800{val=omega}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=createRegression}) (216{val=()})) (235{val=.}) (802{val=newSampleData}) (214{val=(}) (800{val=y}) (234{val=,}) (800{val=x}) (234{val=,}) (800{val=omega}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=CombinedEventsManager})) (59 (800{val=manager}) (204{val==}) (32 (802{val=addEndTimeChecker}) (214{val=(}) (800{val=t0}) (234{val=,}) (800{val=t}) (234{val=,}) (800{val=eventsHandlersManager}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=CombinedEventsManager})) (59 (800{val=manager}) (204{val==}) (32 (802{val=addEndTimeChecker}) (214{val=(}) (800{val=t0}) (234{val=,}) (800{val=t}) (234{val=,}) (800{val=eventsHandlersManager}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=maxValueError}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (21 (7 (800{val=maxTimeError}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (21 (7 (800{val=lastError}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (21 (7 (800{val=expectedStepStart}) (204{val==}) (40{val=Double.NaN})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=CompositeFormat})) (59 (800{val=cf}) (204{val==}) (14 (304{val=new}) (43 (801{val=ComplexFormat})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=CompositeFormat})) (59 (800{val=cf}) (204{val==}) (32 (800{val=ComplexFormat}) (235{val=.}) (802{val=getInstance}) (214{val=(}) (32 (802{val=getLocale}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=step})) (204{val==}) (32 (800{val=Math}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=step}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=stepSize}) (204{val==}) (16 (800{val=forward}) (233{val=?}) (800{val=step}) (226{val=:}) (38 (201{val=-}) (800{val=step})))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=step})) (204{val==}) (32 (800{val=Math}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=step}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=stepSize}) (204{val==}) (16 (800{val=forward}) (233{val=?}) (800{val=step}) (226{val=:}) (38 (201{val=-}) (800{val=step})))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=step})) (204{val==}) (32 (800{val=Math}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=step}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=qrt}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalStateException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=System}) (235{val=.}) (802{val=arraycopy}) (214{val=(}) (2 (801{val=b}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (2 (32 (800{val=root}) (235{val=.}) (802{val=getDataRef}) (216{val=()})) (221{val=[}) (2 (801{val=index}) (221{val=[}) (800{val=i}) (222{val=]})) (222{val=]})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=rank}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (14 (304{val=new}) (43 (801{val=QRDecompositionImpl})) (216{val=()})) (235{val=.}) (802{val=isNonSingular}) (216{val=()})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isNonSingular}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isNonSingular}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (800{val=cachedQT}) (236{val===}) (500{val=null})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=sse}) (204{val==}) (32 (32 (32 (800{val=u}) (235{val=.}) (802{val=transpose}) (216{val=()})) (235{val=.}) (802{val=multiply}) (214{val=(}) (32 (802{val=getOmegaInverse}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=multiply}) (214{val=(}) (800{val=u}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=RealMatrix})) (59 (800{val=XTX}) (204{val==}) (32 (32 (800{val=X}) (235{val=.}) (802{val=transpose}) (216{val=()})) (235{val=.}) (802{val=multiply}) (214{val=(}) (800{val=X}) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=LUDecompositionImpl})) (214{val=(}) (800{val=XTX}) (215{val=)})) (235{val=.}) (802{val=getInverse}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isNonSingular}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=RankDeficientMatrixException})) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isNonSingular}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=RankDeficientMatrixException})) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=Object})) (221{val=[})) (34{val=NUMBER_CONSTANT}) (222{val=]})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=MatrixIndexException})) (59 (800{val=ex}) (204{val==}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (800{val=msg}) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=Object})) (221{val=[})) (34{val=NUMBER_CONSTANT}) (222{val=]})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=singular}) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=SingularMatrixException})) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=singular}) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=SingularMatrixException})) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=singular}) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=SingularMatrixException})) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=matrix}) (235{val=.}) (802{val=isSquare}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NonSquareMatrixException})) (214{val=(}) (32 (800{val=matrix}) (235{val=.}) (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (800{val=matrix}) (235{val=.}) (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=matrix}) (235{val=.}) (802{val=isSquare}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NonSquareMatrixException})) (214{val=(}) (32 (800{val=matrix}) (235{val=.}) (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (800{val=matrix}) (235{val=.}) (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isSquare}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NonSquareMatrixException})) (214{val=(}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=checkIndex}) (214{val=(}) (800{val=index}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=Object})) (221{val=[})) (34{val=NUMBER_CONSTANT}) (222{val=]})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathRuntimeException})) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=Object})) (221{val=[})) (34{val=NUMBER_CONSTANT}) (222{val=]})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathRuntimeException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=arguments}) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=pattern})) (204{val==}) (500{val=null})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=arguments})) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=arguments}) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=MatrixIndexException})) (59 (800{val=ex}) (204{val==}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (800{val=msg}) (234{val=,}) (500{val=null}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=InvalidMatrixException})) (59 (800{val=ex}) (204{val==}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (800{val=msg}) (234{val=,}) (500{val=null}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (32 (800{val=ex}) (235{val=.}) (802{val=getMessage}) (214{val=(}) (40{val=Locale.FRENCH}) (215{val=)})) (235{val=.}) (802{val=length}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (32 (800{val=ex}) (235{val=.}) (802{val=getMessage}) (214{val=(}) (40{val=Locale.FRENCH}) (215{val=)})) (235{val=.}) (802{val=length}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=InvalidMatrixException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=EstimationException})) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathRuntimeException})) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Double})) (802{val=getZ}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathRuntimeException})) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=norm}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=InvalidMatrixException})) (800{val=ime})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=EstimationException})) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=normProduct}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=threshold}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=s}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=norm}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=norm}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=o}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathException})) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=pattern})) (204{val==}) (500{val=null})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=arguments})) (204{val==}) (3 (304{val=new}) (5 (43 (801{val=Object})) (221{val=[})) (34{val=NUMBER_CONSTANT}) (222{val=]}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=setInterpolatedTime}) (214{val=(}) (800{val=t}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=DerivativeException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIOException}) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIOException}) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIOException}) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIOException}) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=finalizeStep}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=DerivativeException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIOException}) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=setInterpolatedTime}) (214{val=(}) (800{val=t}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=DerivativeException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIOException}) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IOException})) (800{val=ioe})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (32 (800{val=ioe}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (235{val=.}) (802{val=length}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IOException})) (800{val=ioe})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (32 (800{val=ioe}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (235{val=.}) (802{val=length}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=setInterpolatedTime}) (214{val=(}) (800{val=t}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=DerivativeException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIOException}) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=finalizeStep}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=DerivativeException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIOException}) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=setInterpolatedTime}) (214{val=(}) (800{val=t}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=DerivativeException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIOException}) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=qrt}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=resultComputed}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=iterationCount}) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=resultComputed}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=result}) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=lu}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=resultComputed}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=iterationCount}) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=resultComputed}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=result}) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (800{val=loaded})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=incMoment}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=moment}) (235{val=.}) (802{val=increment}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (32 (800{val=vTv}) (235{val=.}) (802{val=subtract}) (214{val=(}) (800{val=id}) (215{val=)})) (235{val=.}) (802{val=getNorm}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=norm}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertEquals}) (214{val=(}) (2 (801{val=refValues}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (2 (801{val=eigenValues}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=transformer}) (204{val==}) (500{val=null})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ds}) (204{val==}) (500{val=null})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ds}) (204{val==}) (500{val=null})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=copyIn}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (21 (7 (800{val=ds}) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=ds}) (204{val==}) (500{val=null})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (5 (39{val=int}) (85{val=[]})) (802{val=getPivot}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=IllegalStateException})) (8 (218{val={}) (41 (329{val=return}) (800{val=pivot}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (2 (801{val=eigenvalues}) (221{val=[}) (800{val=i}) (222{val=]})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (5 (39{val=double}) (85{val=[]})) (802{val=getEigenvalues}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=InvalidMatrixException})) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=eigenvalues}) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=DecompositionSolver})) (214{val=(}) (800{val=distinct}) (215{val=)})) (235{val=.}) (802{val=eigenDecompose}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=DecompositionSolver})) (214{val=(}) (800{val=repeated}) (215{val=)})) (235{val=.}) (802{val=eigenDecompose}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=v}) (204{val==}) (32 (32 (14 (304{val=new}) (43 (801{val=DecompositionSolver})) (214{val=(}) (800{val=matrix}) (215{val=)})) (235{val=.}) (802{val=eigenDecompose}) (216{val=()})) (235{val=.}) (802{val=getV}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=DecompositionSolver})) (214{val=(}) (800{val=matrix}) (215{val=)})) (235{val=.}) (802{val=eigenDecompose}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=DecompositionSolver})) (214{val=(}) (800{val=matrix}) (215{val=)})) (235{val=.}) (802{val=eigenDecompose}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=DecompositionSolver})) (214{val=(}) (800{val=matrix}) (215{val=)})) (235{val=.}) (802{val=eigenDecompose}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=DecompositionSolver})) (214{val=(}) (800{val=matrix}) (215{val=)})) (235{val=.}) (802{val=eigenDecompose}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecompositionImpl})) (214{val=(}) (32 (800{val=t}) (235{val=.}) (802{val=getMainDiagonalRef}) (216{val=()})) (234{val=,}) (32 (800{val=t}) (235{val=.}) (802{val=getSecondaryDiagonalRef}) (216{val=()})) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=DecompositionSolver})) (214{val=(}) (800{val=matrix}) (215{val=)})) (235{val=.}) (802{val=eigenDecompose}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=DecompositionSolver})) (214{val=(}) (800{val=matrix}) (215{val=)})) (235{val=.}) (802{val=eigenDecompose}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=DecompositionSolver})) (214{val=(}) (800{val=matrix}) (215{val=)})) (235{val=.}) (802{val=eigenDecompose}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=DecompositionSolver})) (214{val=(}) (800{val=matrix}) (215{val=)})) (235{val=.}) (802{val=eigenDecompose}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=DecompositionSolver})) (214{val=(}) (800{val=matrix}) (215{val=)})) (235{val=.}) (802{val=eigenDecompose}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=double}) (802{val=getNorm}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=InvalidMatrixException})) (8 (218{val={}) (41 (329{val=return}) (2 (801{val=singularValues}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (5 (39{val=double}) (85{val=[]})) (802{val=getSingularValues}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=InvalidMatrixException})) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=singularValues}) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=lu}) (204{val==}) (500{val=null})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=lu}) (204{val==}) (500{val=null})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=copyIn}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (21 (7 (800{val=lu}) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=lu}) (204{val==}) (500{val=null})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecompositionImpl})) (214{val=(}) (800{val=distinct}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecompositionImpl})) (214{val=(}) (800{val=repeated}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecompositionImpl})) (214{val=(}) (800{val=m}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=v}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=EigenDecompositionImpl})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)})) (235{val=.}) (802{val=getV}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecompositionImpl})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecompositionImpl})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecompositionImpl})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecompositionImpl})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecompositionImpl})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecompositionImpl})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecompositionImpl})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecompositionImpl})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecompositionImpl})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=DescriptiveStatistics}) (214{val=(}) (44 (39{val=int}) (800{val=window})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=setWindowSize}) (214{val=(}) (800{val=window}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=stat}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (32 (800{val=eDA}) (235{val=.}) (802{val=getInternalValues}) (216{val=()})) (234{val=,}) (32 (800{val=eDA}) (235{val=.}) (802{val=start}) (216{val=()})) (234{val=,}) (32 (800{val=eDA}) (235{val=.}) (802{val=getNumElements}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (5 (39{val=double}) (85{val=[]}) (85{val=[]})) (800{val=in})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=RealVectorImpl})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=RealMatrixImpl})) (800{val=m})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=RealMatrixImpl})) (800{val=m})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=RealMatrixImpl})) (800{val=m})))
(AST_ROOT_SC2NF (44 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (800{val=v})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setup}) (214{val=(}) (800{val=f}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (32 (800{val=factory}) (235{val=.}) (802{val=newDefaultSolver}) (216{val=()})) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=f}) (234{val=,}) (800{val=x0}) (234{val=,}) (800{val=x1}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateRealSolver})) (59 (800{val=solver}) (204{val==}) (32 (800{val=factory}) (235{val=.}) (802{val=newSecantSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateRealSolver})) (59 (800{val=solver}) (204{val==}) (32 (800{val=factory}) (235{val=.}) (802{val=newBrentSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateRealSolver})) (59 (800{val=solver}) (204{val==}) (32 (800{val=factory}) (235{val=.}) (802{val=newNewtonSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateRealSolver})) (59 (800{val=solver}) (204{val==}) (32 (800{val=factory}) (235{val=.}) (802{val=newBisectionSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=iterator}) (235{val=.}) (802{val=advance}) (216{val=()})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ConcurrentModificationException})) (800{val=cme})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=m_outerProduct}) (204{val==}) (32 (800{val=v1}) (235{val=.}) (802{val=outerProduct}) (214{val=(}) (800{val=v2}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=cachedV}) (204{val==}) (32 (32 (800{val=transformer}) (235{val=.}) (802{val=getV}) (216{val=()})) (235{val=.}) (802{val=multiply}) (214{val=(}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=iData}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=cachedU}) (204{val==}) (32 (32 (800{val=transformer}) (235{val=.}) (802{val=getU}) (216{val=()})) (235{val=.}) (802{val=multiply}) (214{val=(}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=iData}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=covRM}) (204{val==}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=cov}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=bp}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=dData}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=data}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=xData}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=X})) (204{val==}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=Y})) (204{val==}) (14 (304{val=new}) (43 (801{val=RealVectorImpl})) (214{val=(}) (800{val=y}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=matrix}) (204{val==}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=testSquare}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=Omega})) (204{val==}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=omega}) (215{val=)}))) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=OmegaInverse})) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=matrix}) (204{val==}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=matrix}) (204{val==}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=matrix}) (204{val==}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=matrix}) (204{val==}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=invData}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=bp}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=X})) (204{val==}) (14 (304{val=new}) (43 (801{val=DenseRealMatrix})) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})) (21 (7 (800{val=qr}) (204{val==}) (14 (304{val=new}) (43 (801{val=QRDecompositionImpl})) (214{val=(}) (800{val=X}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=ArrayIndexOutOfBoundsException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertFalse}) (214{val=(}) (32 (800{val=solver}) (235{val=.}) (802{val=isNonSingular}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=b}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=solver})) (204{val==}) (32 (800{val=decomposition}) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=X})) (204{val==}) (14 (304{val=new}) (43 (801{val=RealMatrixImpl})) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})) (21 (7 (800{val=qr}) (204{val==}) (14 (304{val=new}) (43 (801{val=QRDecompositionImpl})) (214{val=(}) (800{val=X}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=Omega})) (204{val==}) (14 (304{val=new}) (43 (801{val=RealMatrixImpl})) (214{val=(}) (800{val=omega}) (215{val=)}))) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=OmegaInverse})) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=X})) (204{val==}) (14 (304{val=new}) (43 (801{val=RealMatrixImpl})) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=Y})) (204{val==}) (14 (304{val=new}) (43 (801{val=RealMatrixImpl})) (214{val=(}) (800{val=y}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=IllegalArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=RealMatrixImpl})) (214{val=(}) (800{val=data}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=isSingular}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=data}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=solver})) (204{val==}) (32 (800{val=decomposition}) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=eigenvectors}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (802{val=findEigenvector}) (214{val=(}) (2 (801{val=realEigenvalues}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (800{val=d}) (234{val=,}) (800{val=l}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=realEigenvalues}) (221{val=[}) (800{val=index}) (222{val=]})) (204{val==}) (2 (801{val=main}) (221{val=[}) (800{val=index}) (222{val=]}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=eigenvectors}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=findEigenVectors}) (216{val=()})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Solver})) (214{val=(}) (800{val=realEigenvalues}) (234{val=,}) (800{val=eigenvectors}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=determinant}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (70 (303{val=for}) (214{val=(}) (44 (39{val=double}) (800{val=lambda})) (226{val=:}) (800{val=realEigenvalues}) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=determinant}) (239{val=*=}) (800{val=lambda})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (800{val=determinant}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=cachedD}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=cachedD}) (204{val==}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealDiagonalMatrix}) (214{val=(}) (800{val=realEigenvalues}) (215{val=)}))) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (800{val=cachedD}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=observed}) (204{val==}) (32 (800{val=ed}) (235{val=.}) (802{val=getRealEigenvalues}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=lambda}) (204{val==}) (32 (800{val=ed}) (235{val=.}) (802{val=getRealEigenvalue}) (214{val=(}) (800{val=i}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=eigenValues}) (204{val==}) (32 (800{val=ed}) (235{val=.}) (802{val=getRealEigenvalues}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=eigenValues}) (204{val==}) (32 (800{val=ed}) (235{val=.}) (802{val=getRealEigenvalues}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=eigenValues}) (204{val==}) (32 (800{val=ed}) (235{val=.}) (802{val=getRealEigenvalues}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=ed}) (235{val=.}) (802{val=getRealEigenvalue}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=singularValues}) (204{val==}) (32 (800{val=eigenDecomposition}) (235{val=.}) (802{val=getRealEigenvalues}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=eigenvectors}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=findEigenVectors}) (216{val=()})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Solver})) (214{val=(}) (800{val=realEigenvalues}) (234{val=,}) (800{val=imagEigenvalues}) (234{val=,}) (800{val=eigenvectors}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastFourierTransformer}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (32 (802{val=fht}) (214{val=(}) (800{val=f}) (215{val=)})) (234{val=,}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (40{val=f.length})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=OpenIntToDoubleHashMap})) (59 (800{val=map}) (204{val==}) (14 (304{val=new}) (43 (801{val=OpenIntToDoubleHashMap})) (216{val=()}))) (227{val=;})) (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (32 (800{val=map}) (235{val=.}) (802{val=remove}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=entries})) (204{val==}) (14 (304{val=new}) (43 (801{val=OpenIntToDoubleHashMap})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=previous}) (204{val==}) (800{val=missingEntries})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (2 (801{val=values}) (221{val=[}) (800{val=index}) (222{val=]})) (204{val==}) (800{val=missingEntries})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (32 (14 (304{val=new}) (43 (801{val=LUDecompositionImpl})) (214{val=(}) (800{val=XTX}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()})) (235{val=.}) (802{val=getInverse}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (14 (304{val=new}) (43 (801{val=DenseRealMatrix})) (214{val=(}) (800{val=reference}) (215{val=)})) (234{val=,}) (14 (304{val=new}) (43 (801{val=DenseRealMatrix})) (214{val=(}) (800{val=sub}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (14 (304{val=new}) (43 (801{val=DenseRealMatrix})) (214{val=(}) (800{val=reference}) (215{val=)})) (234{val=,}) (14 (304{val=new}) (43 (801{val=DenseRealMatrix})) (214{val=(}) (800{val=sub}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (43 (801{val=DenseRealMatrix})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (14 (304{val=new}) (43 (801{val=DenseRealMatrix})) (214{val=(}) (800{val=reference}) (215{val=)})) (234{val=,}) (800{val=sub}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (14 (304{val=new}) (43 (801{val=DenseRealMatrix})) (214{val=(}) (800{val=reference}) (215{val=)})) (234{val=,}) (800{val=sub}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (43 (801{val=DenseRealMatrix})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=rDiag}) (204{val==}) (3 (304{val=new}) (5 (39{val=double}) (221{val=[})) (32 (800{val=Math}) (235{val=.}) (802{val=min}) (214{val=(}) (800{val=m}) (234{val=,}) (800{val=n}) (215{val=)})) (222{val=]}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (32 (14 (304{val=new}) (43 (801{val=LUDecompositionImpl})) (214{val=(}) (800{val=XTOIX}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()})) (235{val=.}) (802{val=getInverse}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=lu}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=lu}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=LUDecompositionImpl})) (214{val=(}) (315{val=this}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=lu}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=lu}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=LUDecompositionImpl})) (214{val=(}) (315{val=this}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=lu}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=lu}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=LUDecompositionImpl})) (214{val=(}) (315{val=this}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=lu}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=lu}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=LUDecompositionImpl})) (214{val=(}) (315{val=this}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=lu}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=lu}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=LUDecompositionImpl})) (214{val=(}) (315{val=this}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=private}) (39{val=double}) (802{val=getDeterminant}) (214{val=(}) (44 (43 (801{val=RealMatrix})) (800{val=m})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=LUDecompositionImpl})) (214{val=(}) (800{val=m}) (215{val=)})) (235{val=.}) (802{val=getDeterminant}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=clearResult}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (32 (802{val=localMin}) (214{val=(}) (800{val=min}) (234{val=,}) (800{val=max}) (234{val=,}) (800{val=relativeAccuracy}) (234{val=,}) (800{val=absoluteAccuracy}) (234{val=,}) (800{val=f}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=TestUtils}) (235{val=.}) (802{val=assertSame}) (214{val=(}) (40{val=Float.NaN}) (234{val=,}) (32 (800{val=MathUtils}) (235{val=.}) (802{val=sign}) (214{val=(}) (40{val=Float.NaN}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=vals}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (2 (801{val=values}) (221{val=[}) (800{val=i}) (222{val=]})) (235{val=.}) (802{val=doubleValue}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=roots}) (235{val=.}) (802{val=computeOmega}) (214{val=(}) (38 (201{val=-}) (40{val=f.length})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=roots}) (235{val=.}) (802{val=computeOmega}) (214{val=(}) (38 (201{val=-}) (40{val=f.length})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=roots}) (235{val=.}) (802{val=computeOmega}) (214{val=(}) (40{val=f.length}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=roots}) (235{val=.}) (802{val=computeOmega}) (214{val=(}) (40{val=f.length}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (802{val=fft}) (214{val=(}) (800{val=f}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (24 (303{val=for}) (214{val=(}) (58 (39{val=int}) (59 (800{val=i}) (204{val==}) (34{val=NUMBER_CONSTANT}))) (227{val=;}) (27 (800{val=i}) (230{val=<}) (800{val=virtualSize})) (227{val=;}) (37 (800{val=i}) (247{val=++})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=setEntry}) (214{val=(}) (800{val=i}) (234{val=,}) (800{val=value}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setEntry}) (214{val=(}) (800{val=i}) (234{val=,}) (32 (800{val=Math}) (235{val=.}) (802{val=log}) (214{val=(}) (32 (802{val=getEntry}) (214{val=(}) (800{val=i}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setEntry}) (214{val=(}) (800{val=i}) (234{val=,}) (32 (800{val=Math}) (235{val=.}) (802{val=log10}) (214{val=(}) (32 (802{val=getEntry}) (214{val=(}) (800{val=i}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setEntry}) (214{val=(}) (800{val=i}) (234{val=,}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (32 (802{val=getEntry}) (214{val=(}) (800{val=i}) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setEntry}) (214{val=(}) (800{val=i}) (234{val=,}) (27 (32 (802{val=getEntry}) (214{val=(}) (800{val=i}) (215{val=)})) (200{val=+}) (800{val=d})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setEntry}) (214{val=(}) (800{val=i}) (234{val=,}) (32 (800{val=Math}) (235{val=.}) (802{val=acos}) (214{val=(}) (32 (802{val=getEntry}) (214{val=(}) (800{val=i}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=res}) (235{val=.}) (802{val=setEntry}) (214{val=(}) (27 (800{val=i}) (200{val=+}) (800{val=virtualSize})) (234{val=,}) (2 (801{val=a}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=RealVector})) (59 (800{val=res}) (204{val==}) (14 (304{val=new}) (43 (801{val=SparseRealVector})) (214{val=(}) (315{val=this}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=res}) (235{val=.}) (802{val=setEntry}) (214{val=(}) (800{val=virtualSize}) (234{val=,}) (800{val=d}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=res}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setSubVector}) (214{val=(}) (800{val=index}) (234{val=,}) (40{val=v.data}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=w}) (235{val=.}) (802{val=setEntry}) (214{val=(}) (800{val=i}) (234{val=,}) (27 (32 (800{val=w}) (235{val=.}) (802{val=getEntry}) (214{val=(}) (800{val=i}) (215{val=)})) (203{val=/}) (800{val=si})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=TestUtils}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=m3}) (235{val=.}) (802{val=multiply}) (214{val=(}) (800{val=m4}) (215{val=)})) (234{val=,}) (800{val=m5}) (234{val=,}) (800{val=entryTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=MatrixIndexException})) (59 (800{val=ex}) (204{val==}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (800{val=msg}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=expansionMode}) (242{val=!=}) (800{val=MULTIPLICATIVE_MODE})) (249{val=&&}) (27 (800{val=expansionMode}) (242{val=!=}) (800{val=ADDITIVE_MODE}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=expansionMode}) (234{val=,}) (800{val=MULTIPLICATIVE_MODE}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=ADDITIVE_MODE}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=numElements}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArrayIndexOutOfBoundsException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Double})) (802{val=getZ}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathRuntimeException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (800{val=Object})) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=parts})))
(AST_ROOT_SC2NF (60 (43 (801{val=FunctionEvaluationException})) (59 (800{val=ex}) (204{val==}) (14 (304{val=new}) (43 (801{val=FunctionEvaluationException})) (214{val=(}) (800{val=cause}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FunctionEvaluationException})) (59 (800{val=ex}) (204{val==}) (14 (304{val=new}) (43 (801{val=FunctionEvaluationException})) (214{val=(}) (800{val=cause}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=pattern}) (234{val=,}) (800{val=arguments}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isZero}) (214{val=(}) (800{val=norm}) (215{val=)})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=rows}) (234{val=,}) (800{val=columns}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ClassCastException})) (800{val=cce})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=resultComputed}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=result}) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (44 (43 (800{val=Object})) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=arguments})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=DimensionMismatchException})) (800{val=dme})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathRuntimeException})) (214{val=(}) (800{val=dme}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=InvalidMatrixException})) (800{val=ime})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=EstimationException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (800{val=Object})) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=parts})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=incMoment}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=moment}) (235{val=.}) (802{val=increment}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (800{val=resultComputed})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (44 (43 (800{val=Object})) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=arguments})))
(AST_ROOT_SC2NF (44 (43 (800{val=Object})) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=parts})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=norm}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=covarianceMatrix}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=InvalidMatrixException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=EstimationException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=omegaCount}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (800{val=isForward}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=norm}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=norm}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (800{val=Object})) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=arguments})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=buildMessage}) (214{val=(}) (800{val=locale}) (234{val=,}) (800{val=pattern}) (234{val=,}) (800{val=arguments}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (800{val=resultComputed})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=f}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (36 (214{val=(}) (62 (800{val=f}) (328{val=instanceof}) (43 (800{val=PolynomialFunction}))) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (62 (800{val=f}) (328{val=instanceof}) (43 (800{val=PolynomialFunction}))) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=p}) (204{val==}) (11 (214{val=(}) (43 (800{val=PolynomialFunction})) (215{val=)}) (800{val=f}))) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (800{val=Object})) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=arguments})))
(AST_ROOT_SC2NF (60 (43 (801{val=MathException})) (59 (800{val=ex}) (204{val==}) (14 (304{val=new}) (43 (801{val=MathException})) (214{val=(}) (800{val=cause}) (234{val=,}) (800{val=pattern}) (234{val=,}) (800{val=arguments}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (16 (800{val=isCardan}) (233{val=?}) (45{val=STRING_CONSTANT}) (226{val=:}) (45{val=STRING_CONSTANT})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=MathConfigurationException})) (59 (800{val=ex}) (204{val==}) (14 (304{val=new}) (43 (801{val=MathConfigurationException})) (214{val=(}) (800{val=cause}) (234{val=,}) (800{val=pattern}) (234{val=,}) (800{val=arguments}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (800{val=Object})) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=arguments})))
(AST_ROOT_SC2NF (60 (43 (801{val=ConvergenceException})) (59 (800{val=ex}) (204{val==}) (14 (304{val=new}) (43 (801{val=ConvergenceException})) (214{val=(}) (800{val=cause}) (234{val=,}) (800{val=pattern}) (234{val=,}) (800{val=arguments}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=buildMessage}) (214{val=(}) (800{val=locale}) (234{val=,}) (800{val=pattern}) (234{val=,}) (800{val=arguments}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (800{val=Object})) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=parts})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (800{val=Object})) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=arguments})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=normProduct}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=threshold}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=s}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (800{val=Object})) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=parts})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=b.length}) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=b.length}) (234{val=,}) (800{val=nRows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=v.length}) (234{val=,}) (800{val=nRows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isSquare}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NonSquareMatrixException})) (214{val=(}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=DerivativeException})) (800{val=de})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathRuntimeException})) (214{val=(}) (800{val=de}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (61 (350{val=while}) (214{val=(}) (32 (800{val=iter}) (235{val=.}) (802{val=hasNext}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=iter}) (235{val=.}) (802{val=advance}) (216{val=()})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (32 (800{val=iter}) (235{val=.}) (802{val=value}) (216{val=()})) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (61 (350{val=while}) (214{val=(}) (32 (800{val=iter}) (235{val=.}) (802{val=hasNext}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=iter}) (235{val=.}) (802{val=advance}) (216{val=()})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=isInfinite}) (214{val=(}) (32 (800{val=iter}) (235{val=.}) (802{val=value}) (216{val=()})) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=delta}) (231{val=>}) (800{val=max})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=max}) (204{val==}) (800{val=delta})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=DEFAULT_ZERO_TOLERANCE}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (40{val=data.length}) (242{val=!=}) (800{val=n})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=data.length}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=d.length}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=epsilon}) (204{val==}) (32 (800{val=v}) (235{val=.}) (802{val=getEpsilon}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setConvergenceChecker}) (214{val=(}) (44 (43 (801{val=ScalarConvergenceChecker})) (800{val=checker})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setConvergenceChecker}) (214{val=(}) (800{val=checker}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=ScalarOptimizer})) (800{val=optimizer})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Comparator})) (230{val=<}) (43 (800{val=ScalarPointValuePair})) (231{val=>})) (800{val=comparator})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setConvergenceChecker}) (214{val=(}) (44 (43 (801{val=ScalarConvergenceChecker})) (800{val=checker})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=checker})) (204{val==}) (800{val=checker})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=VectorialObjectiveFunction})) (800{val=function})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=VectorialObjectiveFunction})) (800{val=function})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=VectorialObjectiveFunction})) (800{val=function})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=startParams}) (234{val=,}) (800{val=theoreticalMinCost}) (234{val=,}) (800{val=theoreticalMinParams}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=startParams}) (234{val=,}) (800{val=theoreticalMinCost}) (234{val=,}) (800{val=theoreticalMinParams}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=m}) (234{val=,}) (32 (802{val=buildArray}) (214{val=(}) (800{val=m}) (234{val=,}) (800{val=factor}) (215{val=)})) (234{val=,}) (800{val=theoreticalMinCost}) (234{val=,}) (800{val=theoreticalMinParams}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=m}) (234{val=,}) (32 (802{val=buildChebyquadArray}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=factor}) (215{val=)})) (234{val=,}) (800{val=theoreticalMinCost}) (234{val=,}) (800{val=theoreticalMinParams}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=m}) (234{val=,}) (800{val=startParams}) (234{val=,}) (800{val=theoreticalMinCost}) (234{val=,}) (800{val=theoreticalMinParams}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=m}) (234{val=,}) (800{val=startParams}) (234{val=,}) (800{val=theoreticalMinCost}) (234{val=,}) (800{val=theoreticalMinParams}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (802{val=buildArray}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=x0}) (215{val=)})) (234{val=,}) (800{val=theoreticalMinCost}) (234{val=,}) (800{val=theoreticalMinParams}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=startParams}) (234{val=,}) (800{val=theoreticalMinCost}) (234{val=,}) (800{val=theoreticalMinParams}) (215{val=)}) (227{val=;})) (25 (313{val=if}) (214{val=(}) (27 (800{val=theoreticalStartCost}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=setCostAccuracy}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setParamsAccuracy}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=startParams}) (234{val=,}) (800{val=theoreticalMinCost}) (234{val=,}) (800{val=theoreticalMinParams}) (215{val=)}) (227{val=;})) (25 (313{val=if}) (214{val=(}) (27 (800{val=theoreticalStartCost}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=setCostAccuracy}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setParamsAccuracy}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (802{val=buildArray}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=x0}) (215{val=)})) (234{val=,}) (800{val=theoreticalMinCost}) (234{val=,}) (800{val=theoreticalMinParams}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=startParams}) (234{val=,}) (800{val=theoreticalMinCost}) (234{val=,}) (800{val=theoreticalMinParams}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=startParams}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (802{val=buildArray}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=startParams}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (802{val=buildArray}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=m}) (234{val=,}) (32 (802{val=buildArray}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=x0}) (215{val=)})) (234{val=,}) (800{val=theoreticalMinCost}) (234{val=,}) (500{val=null}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=residual}) (204{val==}) (2 (801{val=residuals}) (221{val=[}) (800{val=i}) (222{val=]}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxIterations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxIterations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxIterations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxIterations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxIterations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxIterations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxIterations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxIterations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxIterations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxIterations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxIterations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxIterations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxIterations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxIterations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxIterations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxIterations}) (214{val=(}) (800{val=maxCostEval}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (38 (247{val=++}) (800{val=jacobianEvaluations})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setConvergenceChecker}) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorialValueChecker})) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=setMaxIterations}) (214{val=(}) (800{val=DEFAULT_MAX_ITERATIONS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=cause}) (234{val=,}) (800{val=pattern}) (234{val=,}) (800{val=arguments}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=argument})) (204{val==}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (800{val=argument}) (219{val=}})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=cause}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=argument})) (204{val==}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (800{val=argument}) (219{val=}})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=pattern}) (234{val=,}) (800{val=arguments}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=argument})) (204{val==}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (800{val=argument}) (219{val=}})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (2 (32 (800{val=ex}) (235{val=.}) (802{val=getArgument}) (216{val=()})) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (40{val=Math.PI}) (234{val=,}) (2 (32 (800{val=ex}) (235{val=.}) (802{val=getArgument}) (216{val=()})) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=MultivariateVectorialFunction})) (800{val=function})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setConvergenceChecker}) (214{val=(}) (44 (43 (801{val=RealConvergenceChecker})) (800{val=checker})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=checker})) (204{val==}) (800{val=checker})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=fe})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertTrue}) (214{val=(}) (800{val=exceptionExpected}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=numerator}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=ZERO}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=BigFraction})) (214{val=(}) (800{val=numerator}) (234{val=,}) (800{val=denominator}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=format}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=wholeFormat})) (204{val==}) (800{val=format})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=FractionFormat}) (216{val=()}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=subtract}) (214{val=(}) (32 (800{val=BigInteger}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=l}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=subtract}) (214{val=(}) (32 (800{val=BigInteger}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=i}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=multiply}) (214{val=(}) (32 (800{val=BigInteger}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=l}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=multiply}) (214{val=(}) (32 (800{val=BigInteger}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=i}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=add}) (214{val=(}) (32 (800{val=BigInteger}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=l}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=add}) (214{val=(}) (32 (800{val=BigInteger}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=i}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=BigFraction})) (231{val=>})) (800{val=coefficients})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=ci}) (234{val=,}) (2 (801{val=l40}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (27 (32 (800{val=Math}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=ci}) (215{val=)})) (202{val=*}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (14 (304{val=new}) (43 (801{val=BigFraction})) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=longBitsToDouble}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getNumeratorAsLong}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=Locale})) (802{val=getLocale}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (40{val=Locale.US}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=Locale})) (802{val=getLocale}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (40{val=Locale.FRENCH}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=String})) (802{val=getResourceName}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (45{val=STRING_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=String})) (802{val=getResourceName}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (45{val=STRING_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=Locale})) (802{val=getLocale}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (40{val=Locale.US}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=Locale})) (802{val=getLocale}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (40{val=Locale.FRENCH}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=Locale})) (802{val=getLocale}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (40{val=Locale.FRENCH}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=Locale})) (802{val=getLocale}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (40{val=Locale.US}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateRealSolver})) (59 (800{val=solver}) (204{val==}) (32 (40{val=LazyHolder.FACTORY}) (235{val=.}) (802{val=newDefaultSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setup}) (214{val=(}) (800{val=f}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (32 (40{val=LazyHolder.FACTORY}) (235{val=.}) (802{val=newDefaultSolver}) (216{val=()})) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=f}) (234{val=,}) (800{val=x0}) (234{val=,}) (800{val=x1}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=logSum}) (237{val=+=}) (32 (800{val=Math}) (235{val=.}) (802{val=log}) (214{val=(}) (800{val=i}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=n0}) (204{val==}) (800{val=n})) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=n0}) (204{val==}) (800{val=n})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=meanImpl}) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=geoMeanImpl}) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=sumLogImpl}) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=maxImpl}) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=minImpl}) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=sumSqImpl}) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=sumImpl}) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=degreesOfFreedom}) (204{val==}) (36 (214{val=(}) (27 (27 (800{val=n1}) (200{val=+}) (800{val=n2})) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (36 (214{val=(}) (27 (800{val=sumY}) (201{val=-}) (27 (800{val=slope}) (202{val=*}) (800{val=sumX}))) (215{val=)})) (203{val=/}) (36 (214{val=(}) (800{val=n}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=Math}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (32 (802{val=getMeanSquareError}) (216{val=()})) (202{val=*}) (36 (214{val=(}) (27 (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (800{val=n})) (215{val=)})) (200{val=+}) (27 (36 (214{val=(}) (27 (800{val=xbar}) (202{val=*}) (800{val=xbar})) (215{val=)})) (203{val=/}) (800{val=sumXX}))) (215{val=)}))) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=Double.NaN}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (27 (32 (802{val=getSumSquaredErrors}) (216{val=()})) (203{val=/}) (36 (214{val=(}) (27 (800{val=n}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=optima}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=optima}) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=optima}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=optima}) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=n}) (204{val==}) (800{val=length})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (40{val=dest.variance}) (204{val==}) (32 (40{val=source.variance}) (235{val=.}) (802{val=copy}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=optima}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=optima}) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (40{val=dest.incMoment}) (204{val==}) (40{val=source.incMoment})) (227{val=;})) (21 (7 (40{val=dest.moment}) (204{val==}) (32 (40{val=source.moment}) (235{val=.}) (802{val=copy}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=sampleSize}) (204{val==}) (800{val=length})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (40{val=dest.moment}) (204{val==}) (32 (40{val=source.moment}) (235{val=.}) (802{val=copy}) (216{val=()}))) (227{val=;})) (21 (7 (40{val=dest.incMoment}) (204{val==}) (40{val=source.incMoment})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=map}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=key}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=sumDifference}) (214{val=(}) (800{val=sample1}) (234{val=,}) (800{val=sample2}) (215{val=)})) (203{val=/}) (40{val=sample1.length})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (40{val=dest.sumOfLogs}) (204{val==}) (32 (40{val=source.sumOfLogs}) (235{val=.}) (802{val=copy}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Math}) (235{val=.}) (802{val=exp}) (214{val=(}) (27 (32 (800{val=sumOfLogs}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})) (203{val=/}) (800{val=length})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Math}) (235{val=.}) (802{val=exp}) (214{val=(}) (27 (32 (800{val=sumOfLogs}) (235{val=.}) (802{val=getResult}) (216{val=()})) (203{val=/}) (32 (800{val=sumOfLogs}) (235{val=.}) (802{val=getN}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=result}) (221{val=[}) (27 (800{val=i}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (222{val=]})) (204{val==}) (27 (800{val=i}) (202{val=*}) (2 (801{val=coefficients}) (221{val=[}) (800{val=i}) (222{val=]})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=n0}) (204{val==}) (800{val=n})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (40{val=dest.moment}) (204{val==}) (14 (304{val=new}) (43 (800{val=ThirdMoment})) (214{val=(}) (32 (40{val=source.moment}) (235{val=.}) (802{val=copy}) (216{val=()})) (215{val=)}))) (227{val=;})) (21 (7 (40{val=dest.incMoment}) (204{val==}) (40{val=source.incMoment})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=contents}) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (40{val=dest.moment}) (204{val==}) (32 (40{val=source.moment}) (235{val=.}) (802{val=copy}) (216{val=()}))) (227{val=;})) (21 (7 (40{val=dest.isBiasCorrected}) (204{val==}) (40{val=source.isBiasCorrected})) (227{val=;})) (21 (7 (40{val=dest.incMoment}) (204{val==}) (40{val=source.incMoment})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=len}) (204{val==}) (800{val=length})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=problem}) (215{val=)}) (227{val=;})) (21 (7 (800{val=y}) (204{val==}) (32 (40{val=problem.y}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=Math}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (800{val=sum}) (203{val=/}) (40{val=v.length})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=problem}) (215{val=)}) (227{val=;})) (21 (7 (800{val=e}) (204{val==}) (40{val=problem.e})) (227{val=;})) (21 (7 (800{val=y}) (204{val==}) (32 (40{val=problem.y}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=problem}) (215{val=)}) (227{val=;})) (21 (7 (800{val=y}) (204{val==}) (32 (40{val=problem.y}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=dY}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (2 (801{val=y}) (221{val=[}) (800{val=i}) (222{val=]}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=dX}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=preMultiply}) (214{val=(}) (32 (802{val=asBigDecimal}) (214{val=(}) (800{val=testVector}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (800{val=m}) (235{val=.}) (802{val=getTrace}) (216{val=()})) (235{val=.}) (802{val=doubleValue}) (216{val=()})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NonSquareMatrixException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=InvalidMatrixException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=m2}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=problem}) (215{val=)}) (227{val=;})) (21 (7 (800{val=a}) (204{val==}) (40{val=problem.a})) (227{val=;})) (21 (7 (800{val=y}) (204{val==}) (32 (40{val=problem.y}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (800{val=sum}) (203{val=/}) (40{val=v.length})) (227{val=;})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=randomData}) (235{val=.}) (802{val=nextExponential}) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=randomData}) (235{val=.}) (802{val=nextSecureInt}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=randomData}) (235{val=.}) (802{val=nextSecureLong}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=randomData}) (235{val=.}) (802{val=nextLong}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=randomData}) (235{val=.}) (802{val=nextInt}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=preMultiply}) (214{val=(}) (32 (802{val=createSparseMatrix}) (214{val=(}) (800{val=bigSingular}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=preMultiply}) (214{val=(}) (800{val=testVector}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=operate}) (214{val=(}) (800{val=testVector}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=getTrace}) (216{val=()})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NonSquareMatrixException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=multiply}) (214{val=(}) (32 (802{val=createSparseMatrix}) (214{val=(}) (800{val=bigSingular}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=subtract}) (214{val=(}) (32 (802{val=createSparseMatrix}) (214{val=(}) (800{val=testData2}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=m2}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (60 (43 (801{val=SimplexTableau})) (59 (800{val=tableau}) (204{val==}) (14 (304{val=new}) (43 (801{val=SimplexTableau})) (214{val=(}) (800{val=f}) (234{val=,}) (800{val=constraints}) (234{val=,}) (40{val=GoalType.MAXIMIZE}) (234{val=,}) (9{val=false}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SimplexTableau})) (59 (800{val=tableau}) (204{val==}) (14 (304{val=new}) (43 (801{val=SimplexTableau})) (214{val=(}) (800{val=f}) (234{val=,}) (800{val=constraints}) (234{val=,}) (40{val=GoalType.MAXIMIZE}) (234{val=,}) (9{val=false}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=SimplexTableau})) (59 (800{val=tableau}) (204{val==}) (14 (304{val=new}) (43 (801{val=SimplexTableau})) (214{val=(}) (800{val=f}) (234{val=,}) (800{val=constraints}) (234{val=,}) (800{val=goalType}) (234{val=,}) (800{val=restrictToNonNegative}) (234{val=,}) (800{val=epsilon}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (36 (214{val=(}) (27 (800{val=sumY}) (201{val=-}) (27 (800{val=slope}) (202{val=*}) (800{val=sumX}))) (215{val=)})) (203{val=/}) (800{val=n})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=Math}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (32 (802{val=getMeanSquareError}) (216{val=()})) (202{val=*}) (36 (214{val=(}) (27 (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (11 (214{val=(}) (39{val=double}) (215{val=)}) (800{val=n}))) (215{val=)})) (200{val=+}) (27 (36 (214{val=(}) (27 (800{val=xbar}) (202{val=*}) (800{val=xbar})) (215{val=)})) (203{val=/}) (800{val=sumXX}))) (215{val=)}))) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=Math}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (36 (214{val=(}) (27 (800{val=accum}) (201{val=-}) (36 (214{val=(}) (27 (32 (800{val=Math}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=accum2}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (203{val=/}) (800{val=length})) (215{val=)}))) (215{val=)})) (203{val=/}) (36 (214{val=(}) (27 (800{val=length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=degreesOfFreedom}) (204{val==}) (27 (27 (800{val=n1}) (200{val=+}) (800{val=n2})) (201{val=-}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkSufficientData}) (214{val=(}) (800{val=matrix}) (215{val=)})) (227{val=;})) (21 (7 (800{val=nObs}) (204{val==}) (32 (800{val=matrix}) (235{val=.}) (802{val=getRowDimension}) (216{val=()}))) (227{val=;})) (21 (7 (800{val=correlationMatrix}) (204{val==}) (32 (802{val=computeCorrelationMatrix}) (214{val=(}) (800{val=matrix}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkSufficientData}) (214{val=(}) (800{val=matrix}) (215{val=)})) (227{val=;})) (21 (7 (800{val=n}) (204{val==}) (32 (800{val=matrix}) (235{val=.}) (802{val=getRowDimension}) (216{val=()}))) (227{val=;})) (21 (7 (800{val=covarianceMatrix}) (204{val==}) (32 (802{val=computeCovarianceMatrix}) (214{val=(}) (800{val=matrix}) (234{val=,}) (800{val=biasCorrected}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=preMultiply}) (214{val=(}) (800{val=testVector}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=operate}) (214{val=(}) (800{val=testVector}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=getTrace}) (216{val=()})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NonSquareMatrixException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=m2}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=testGenerator}) (235{val=.}) (802{val=nextInt}) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=regression}) (235{val=.}) (802{val=getSlopeConfidenceInterval}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalStateException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=vs}) (235{val=.}) (802{val=getNext}) (216{val=()})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalStateException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=preMultiply}) (214{val=(}) (800{val=testVector}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=operate}) (214{val=(}) (800{val=testVector}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=getTrace}) (216{val=()})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NonSquareMatrixException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=m2}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Iterator})) (230{val=<}) (76{val=?}) (231{val=>})) (59 (800{val=it}) (204{val==}) (32 (800{val=f}) (235{val=.}) (802{val=valuesIterator}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=nCols}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=nCols}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=nRows}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=nRows}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=nRows}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=nCols}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]}) (85{val=[]})) (59 (800{val=data}) (204{val==}) (32 (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]}) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=nRows}) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=nCols}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=nRows}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=data}) (204{val==}) (32 (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (40{val=subMatrix.length}) (234{val=,}) (800{val=nCols}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]}) (85{val=[]})) (59 (800{val=outData}) (204{val==}) (32 (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=nRows}) (234{val=,}) (800{val=nCols}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]}) (85{val=[]})) (59 (800{val=outData}) (204{val==}) (32 (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=rowCount}) (234{val=,}) (800{val=columnCount}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]}) (85{val=[]})) (59 (800{val=outData}) (204{val==}) (32 (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=rowCount}) (234{val=,}) (800{val=columnCount}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (74 (43 (800{val=FieldVectorImpl})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (215{val=)}) (32 (802{val=subtract}) (214{val=(}) (40{val=v.data}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (74 (43 (800{val=FieldVectorImpl})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (215{val=)}) (32 (802{val=add}) (214{val=(}) (40{val=v.data}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (32 (802{val=extractField}) (214{val=(}) (800{val=v}) (215{val=)})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (32 (802{val=extractField}) (214{val=(}) (800{val=d}) (215{val=)})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (32 (802{val=extractField}) (214{val=(}) (800{val=d}) (215{val=)})) (215{val=)}) (227{val=;})) (21 (32 (802{val=copyIn}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=nextAction}) (204{val==}) (32 (800{val=handler}) (235{val=.}) (802{val=eventOccurred}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=y}) (234{val=,}) (38 (207{val=!}) (36 (214{val=(}) (27 (800{val=increasing}) (212{val=^}) (800{val=forward})) (215{val=)}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=f}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=f}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=c.length}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (800{val=res}) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=Double}) (235{val=.}) (802{val=doubleToLongBits}) (214{val=(}) (800{val=test}) (215{val=)})) (242{val=!=}) (32 (800{val=Double}) (235{val=.}) (802{val=doubleToLongBits}) (214{val=(}) (32 (802{val=getEntry}) (214{val=(}) (32 (800{val=iter}) (235{val=.}) (802{val=key}) (216{val=()})) (215{val=)})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=hatResiduals}) (204{val==}) (32 (32 (32 (800{val=I}) (235{val=.}) (802{val=subtract}) (214{val=(}) (800{val=hat}) (215{val=)})) (235{val=.}) (802{val=operate}) (214{val=(}) (40{val=model.Y}) (215{val=)})) (235{val=.}) (802{val=getData}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubMatrixIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=startRow}) (234{val=,}) (800{val=endRow}) (234{val=,}) (800{val=startColumn}) (234{val=,}) (800{val=endColumn}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubMatrixIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=startRow}) (234{val=,}) (800{val=endRow}) (234{val=,}) (800{val=startColumn}) (234{val=,}) (800{val=endColumn}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubMatrixIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=startRow}) (234{val=,}) (800{val=endRow}) (234{val=,}) (800{val=startColumn}) (234{val=,}) (800{val=endColumn}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubMatrixIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=startRow}) (234{val=,}) (800{val=endRow}) (234{val=,}) (800{val=startColumn}) (234{val=,}) (800{val=endColumn}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkColumnIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=column}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkColumnIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=column}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkRowIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=row}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkRowIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=row}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkColumnIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=column}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkRowIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=row}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkColumnIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=column}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkColumnIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=column}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkRowIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=row}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkRowIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=row}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubMatrixIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=endRow}) (234{val=,}) (800{val=column}) (234{val=,}) (800{val=endColumn}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubMatrixIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=startRow}) (234{val=,}) (800{val=endRow}) (234{val=,}) (800{val=startColumn}) (234{val=,}) (800{val=endColumn}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkMultiplicationCompatible}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkMultiplicationCompatible}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubtractionCompatible}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubtractionCompatible}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkAdditionCompatible}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkAdditionCompatible}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=Y})) (204{val==}) (14 (304{val=new}) (43 (801{val=RealVectorImpl})) (214{val=(}) (800{val=y}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=values}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (32 (802{val=incrementAll}) (214{val=(}) (800{val=values}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=values.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=values}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=values.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=alpha}) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=alpha}) (252{val=<=}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=alpha}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=degreesOfFreedom}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=degreesOfFreedom}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=denominatorDegreesOfFreedom})) (204{val==}) (800{val=degreesOfFreedom})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=degreesOfFreedom}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=degreesOfFreedom}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=numeratorDegreesOfFreedom})) (204{val==}) (800{val=degreesOfFreedom})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=n}) (242{val=!=}) (40{val=sample2.length}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=n}) (234{val=,}) (40{val=sample2.length}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=windowSize}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=windowSize}) (242{val=!=}) (800{val=INFINITE_WINDOW})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=windowSize}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=p}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=mean}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=mean}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mean})) (204{val==}) (800{val=mean})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubMatrixIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=startRow}) (234{val=,}) (800{val=endRow}) (234{val=,}) (800{val=startColumn}) (234{val=,}) (800{val=endColumn}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubMatrixIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=startRow}) (234{val=,}) (800{val=endRow}) (234{val=,}) (800{val=startColumn}) (234{val=,}) (800{val=endColumn}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubMatrixIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=startRow}) (234{val=,}) (800{val=endRow}) (234{val=,}) (800{val=startColumn}) (234{val=,}) (800{val=endColumn}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubMatrixIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=startRow}) (234{val=,}) (800{val=endRow}) (234{val=,}) (800{val=startColumn}) (234{val=,}) (800{val=endColumn}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkMultiplicationCompatible}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubtractionCompatible}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkAdditionCompatible}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=beta}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=beta}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=beta})) (204{val==}) (800{val=beta})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=alpha}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=alpha}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=alpha})) (204{val==}) (800{val=alpha})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=p}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=size}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=size}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (800{val=sampleSize}) (204{val==}) (800{val=size})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=size}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=size}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (800{val=populationSize}) (204{val==}) (800{val=size})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=num}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=num}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (800{val=numberOfSuccesses}) (204{val==}) (800{val=num})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=beta}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=beta}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=beta})) (204{val==}) (800{val=beta})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=alpha}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=alpha}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=alpha})) (204{val==}) (800{val=alpha})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkMultiplicationCompatible}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkMultiplicationCompatible}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkAdditionCompatible}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkAdditionCompatible}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkColumnIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=col}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkColumnIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=col}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkRowIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=row}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkRowIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=row}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkColumnIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=column}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkRowIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=row}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=r}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=r}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ClassCastException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (32 (800{val=v}) (235{val=.}) (802{val=getClass}) (216{val=()})) (235{val=.}) (802{val=getName}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (32 (800{val=v}) (235{val=.}) (802{val=getClass}) (216{val=()})) (235{val=.}) (802{val=getName}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubMatrixIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=startRow}) (234{val=,}) (800{val=endRow}) (234{val=,}) (800{val=startColumn}) (234{val=,}) (800{val=endColumn}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubMatrixIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=startRow}) (234{val=,}) (800{val=endRow}) (234{val=,}) (800{val=startColumn}) (234{val=,}) (800{val=endColumn}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubMatrixIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=startRow}) (234{val=,}) (800{val=endRow}) (234{val=,}) (800{val=startColumn}) (234{val=,}) (800{val=endColumn}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubMatrixIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=startRow}) (234{val=,}) (800{val=endRow}) (234{val=,}) (800{val=startColumn}) (234{val=,}) (800{val=endColumn}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkColumnIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=column}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkColumnIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=column}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkRowIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=row}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkRowIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=row}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkColumnIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=column}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkRowIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=row}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkColumnIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=column}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkColumnIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=column}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkRowIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=row}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkRowIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=row}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubMatrixIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=selectedRows}) (234{val=,}) (800{val=selectedColumns}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubMatrixIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=startRow}) (234{val=,}) (800{val=endRow}) (234{val=,}) (800{val=startColumn}) (234{val=,}) (800{val=endColumn}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubMatrixIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=selectedRows}) (234{val=,}) (800{val=selectedColumns}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubMatrixIndex}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=startRow}) (234{val=,}) (800{val=endRow}) (234{val=,}) (800{val=startColumn}) (234{val=,}) (800{val=endColumn}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkMultiplicationCompatible}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkSubtractionCompatible}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=checkAdditionCompatible}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=p}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=p}) (231{val=>}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=p}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=successes}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=successes}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (800{val=numberOfSuccesses}) (204{val==}) (800{val=successes})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=values}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=values.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (32 (800{val=obj}) (235{val=.}) (802{val=getClass}) (216{val=()})) (235{val=.}) (802{val=getName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=degreesOfFreedom}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=degreesOfFreedom}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=degreesOfFreedom})) (204{val==}) (800{val=degreesOfFreedom})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=p}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=p}) (231{val=>}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=p}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=x0}) (231{val=>}) (800{val=x1})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=x0}) (234{val=,}) (800{val=x1}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=x0}) (231{val=>}) (800{val=x1})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=x0}) (234{val=,}) (800{val=x1}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=mean.length}) (242{val=!=}) (40{val=standardDeviation.length})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=mean.length}) (234{val=,}) (40{val=standardDeviation.length}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=p}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=p}) (231{val=>}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=p}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=trials}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=trials}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (800{val=numberOfTrials}) (204{val==}) (800{val=trials})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=realFormat}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=realFormat})) (204{val==}) (800{val=realFormat})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=imaginaryFormat}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=imaginaryFormat})) (204{val==}) (800{val=imaginaryFormat})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=imaginaryCharacter}) (236{val===}) (500{val=null})) (250{val=||}) (27 (32 (800{val=imaginaryCharacter}) (235{val=.}) (802{val=length}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (32 (800{val=obj}) (235{val=.}) (802{val=getClass}) (216{val=()})) (235{val=.}) (802{val=getName}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=p}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=p}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (32 (800{val=obj}) (235{val=.}) (802{val=getClass}) (216{val=()})) (235{val=.}) (802{val=getName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=p}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=p}) (231{val=>}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=p}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=sd}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=sd}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (800{val=standardDeviation}) (204{val==}) (800{val=sd})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=normProduct}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=s}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=s}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (800{val=scale}) (204{val==}) (800{val=s})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=p}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=fraction}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=fraction}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=fraction}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=x0}) (231{val=>}) (800{val=x1})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=x0}) (234{val=,}) (800{val=x1}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=lower}) (251{val=>=}) (800{val=upper})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=upper}) (234{val=,}) (800{val=lower}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=mean}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=mean}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=sigma}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=sigma}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=mean}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=mean}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=lower}) (251{val=>=}) (800{val=upper})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=upper}) (234{val=,}) (800{val=lower}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=lower}) (251{val=>=}) (800{val=upper})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=upper}) (234{val=,}) (800{val=lower}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=len}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=len}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=lower}) (251{val=>=}) (800{val=upper})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=upper}) (234{val=,}) (800{val=lower}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=lower}) (251{val=>=}) (800{val=upper})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=upper}) (234{val=,}) (800{val=lower}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=len}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=len}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=p}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=p}) (231{val=>}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=p}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (27 (800{val=p}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (800{val=p}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=p}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=alpha}) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=alpha}) (252{val=<=}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=alpha}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (27 (800{val=alpha}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (800{val=alpha}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=alpha}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (27 (800{val=alpha}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (800{val=alpha}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=alpha}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (27 (800{val=alpha}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (800{val=alpha}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=alpha}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (27 (800{val=alpha}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (800{val=alpha}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=alpha}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Comparable})) (230{val=<}) (76{val=?}) (231{val=>})) (59 (800{val=obj1}) (204{val==}) (500{val=null})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=OpenMapRealVector})) (59 (800{val=v1}) (204{val==}) (14 (304{val=new}) (43 (801{val=OpenMapRealVector})) (214{val=(}) (800{val=vec1}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=OpenMapRealVector})) (214{val=(}) (800{val=out}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertEquals}) (214{val=(}) (2 (801{val=expected}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (2 (801{val=observed}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (800{val=tolerance}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=dimension}) (204{val==}) (16 (36 (214{val=(}) (27 (800{val=currentState}) (236{val===}) (500{val=null})) (215{val=)})) (233{val=?}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (226{val=:}) (40{val=currentState.length}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=dimension}) (204{val==}) (16 (36 (214{val=(}) (27 (800{val=currentState}) (236{val===}) (500{val=null})) (215{val=)})) (233{val=?}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (226{val=:}) (40{val=currentState.length}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=StepInterpolator})) (800{val=prototype})))
(AST_ROOT_SC2NF (21 (7 (800{val=integrator}) (204{val==}) (500{val=null})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=integrator}) (204{val==}) (500{val=null})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (7 (800{val=yDotK}) (204{val==}) (500{val=null})) (227{val=;})) (21 (7 (800{val=integrator}) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=interpolator}) (235{val=.}) (802{val=reinitialize}) (214{val=(}) (14 (304{val=new}) (43 (801{val=DummyIntegrator})) (214{val=(}) (800{val=interpolator}) (215{val=)})) (234{val=,}) (800{val=y}) (234{val=,}) (800{val=yDot}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=interpolator}) (235{val=.}) (802{val=reinitialize}) (214{val=(}) (14 (304{val=new}) (43 (801{val=DummyIntegrator})) (214{val=(}) (800{val=interpolator}) (215{val=)})) (234{val=,}) (800{val=y}) (234{val=,}) (800{val=yDot}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=interpolator}) (235{val=.}) (802{val=reinitialize}) (214{val=(}) (14 (304{val=new}) (43 (801{val=DummyIntegrator})) (214{val=(}) (800{val=interpolator}) (215{val=)})) (234{val=,}) (800{val=y}) (234{val=,}) (800{val=yDot}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=computeDerivatives}) (214{val=(}) (27 (800{val=t0}) (200{val=+}) (800{val=h})) (234{val=,}) (800{val=y1}) (234{val=,}) (800{val=yDot1}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=factors})) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=factors}) (215{val=)}))) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=target})) (204{val==}) (800{val=target})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=factors})) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=factors}) (215{val=)}))) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=target})) (204{val==}) (800{val=target})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createColumnRealMatrix}) (214{val=(}) (800{val=col}) (215{val=)})) (234{val=,}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=colMatrix}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRowRealMatrix}) (214{val=(}) (800{val=row}) (215{val=)})) (234{val=,}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=rowMatrix}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=testData}) (215{val=)})) (234{val=,}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=testData}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=mA}) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=a}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=result}) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=dimension}) (234{val=,}) (800{val=dimension}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=matrixData}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertClose}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=m}) (235{val=.}) (802{val=multiply}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=testDataInv}) (215{val=)})) (215{val=)})) (234{val=,}) (800{val=identity}) (234{val=,}) (800{val=entryTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=BlockRealMatrix})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=testData}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=m}) (234{val=,}) (32 (800{val=TestUtils}) (235{val=.}) (802{val=serializeAndRecover}) (214{val=(}) (800{val=m}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=reference}) (215{val=)})) (234{val=,}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=sub}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=reference}) (215{val=)})) (234{val=,}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=sub}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=reference}) (215{val=)})) (234{val=,}) (800{val=sub}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=reference}) (215{val=)})) (234{val=,}) (800{val=sub}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=factors})) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=factors}) (215{val=)}))) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=target})) (204{val==}) (800{val=target})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=computeCorrelationMatrix}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=data}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=outMatrix}) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=nVars}) (234{val=,}) (800{val=nVars}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=computeCorrelationMatrix}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=data}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=outMatrix}) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=nVars}) (234{val=,}) (800{val=nVars}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=out}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=out}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=data}) (215{val=)})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=reference}) (215{val=)})) (234{val=,}) (800{val=sub}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=reference}) (215{val=)})) (234{val=,}) (800{val=sub}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=computeCovarianceMatrix}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=data}) (215{val=)})) (234{val=,}) (800{val=biasCorrected}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=outMatrix}) (204{val==}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=dimension}) (234{val=,}) (800{val=dimension}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=data}) (215{val=)})) (234{val=,}) (800{val=biasCorrected}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=matrix}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=matrix}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=matrix}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setColumn}) (214{val=(}) (800{val=column}) (234{val=,}) (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=ArrayRealVector})) (215{val=)}) (800{val=vector})) (215{val=)})) (235{val=.}) (802{val=getDataRef}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=outData}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setRow}) (214{val=(}) (800{val=row}) (234{val=,}) (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=ArrayRealVector})) (215{val=)}) (800{val=vector})) (215{val=)})) (235{val=.}) (802{val=getDataRef}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=outData}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (32 (802{val=getColumn}) (214{val=(}) (800{val=column}) (215{val=)})) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (32 (802{val=getRow}) (214{val=(}) (800{val=row}) (215{val=)})) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=eigenvectors}) (204{val==}) (3 (304{val=new}) (5 (43 (801{val=ArrayRealVector})) (221{val=[})) (800{val=m}) (222{val=]}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=ArrayRealVector})) (59 (800{val=v}) (204{val==}) (2 (801{val=eigenvectors}) (221{val=[}) (800{val=i}) (222{val=]}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=ArrayRealVector})) (59 (800{val=v}) (204{val==}) (2 (801{val=eigenvectors}) (221{val=[}) (800{val=i}) (222{val=]}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (5 (43 (801{val=ArrayRealVector})) (85{val=[]})) (800{val=eigenvectors})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=X})) (204{val==}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=Y})) (204{val==}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=y}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=data}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=setColumnVector}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=TestUtils}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=m}) (235{val=.}) (802{val=preMultiply}) (214{val=(}) (32 (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=testVector}) (215{val=)})) (235{val=.}) (802{val=getData}) (216{val=()})) (215{val=)})) (234{val=,}) (800{val=preMultTest}) (234{val=,}) (800{val=normTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=TestUtils}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=testVector}) (234{val=,}) (32 (32 (800{val=m}) (235{val=.}) (802{val=operate}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=testVector}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getData}) (216{val=()})) (234{val=,}) (800{val=entryTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=argument}) (215{val=)})) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=argument})) (204{val==}) (32 (800{val=argument}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=out}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=data}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=reference}) (215{val=)})) (234{val=,}) (800{val=sub}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=reference}) (215{val=)})) (234{val=,}) (800{val=sub}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=coefficients}) (215{val=)})) (234{val=,}) (800{val=constantTerm}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=coefficients})) (204{val==}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=sub}) (234{val=,}) (9{val=false}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=coefficients}) (215{val=)})) (234{val=,}) (800{val=relationship}) (234{val=,}) (800{val=value}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=matrixData}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=repeatedColumns}) (204{val==}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (14 (304{val=new}) (43 (40{val=ArrayRealVectorTest.RealVectorTestImpl})) (214{val=(}) (32 (800{val=b}) (235{val=.}) (802{val=getColumn}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=tableau})) (204{val==}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=matrix}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=tableau})) (204{val==}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (32 (802{val=createTableau}) (214{val=(}) (27 (800{val=goalType}) (236{val===}) (40{val=GoalType.MAXIMIZE})) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=nordsieck}) (204{val==}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=nData}) (234{val=,}) (9{val=false}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setColumn}) (214{val=(}) (800{val=column}) (234{val=,}) (32 (36 (214{val=(}) (11 (214{val=(}) (74 (43 (800{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (215{val=)}) (800{val=vector})) (215{val=)})) (235{val=.}) (802{val=getDataRef}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=outData}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setRow}) (214{val=(}) (800{val=row}) (234{val=,}) (32 (36 (214{val=(}) (11 (214{val=(}) (74 (43 (800{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (215{val=)}) (800{val=vector})) (215{val=)})) (235{val=.}) (802{val=getDataRef}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=outData}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=x}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=X})) (204{val==}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})) (21 (7 (800{val=qr}) (204{val==}) (14 (304{val=new}) (43 (801{val=QRDecompositionImpl})) (214{val=(}) (800{val=X}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Array2DRowRealMatrix})) (59 (800{val=augI}) (204{val==}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=BigFraction})) (231{val=>})) (214{val=(}) (800{val=pData}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=BigFraction})) (231{val=>})) (59 (800{val=bigMSupdate}) (204{val==}) (32 (800{val=bigMStoN}) (235{val=.}) (802{val=multiply}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=BigFraction})) (231{val=>})) (214{val=(}) (800{val=shiftedP}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (40{val=coefficients.msToN}) (235{val=.}) (802{val=multiply}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=multistep}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (14 (304{val=new}) (43 (40{val=ArrayRealVectorTest.RealVectorTestImpl})) (214{val=(}) (32 (800{val=b}) (235{val=.}) (802{val=getColumn}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (14 (304{val=new}) (43 (40{val=ArrayRealVectorTest.RealVectorTestImpl})) (214{val=(}) (32 (800{val=b}) (235{val=.}) (802{val=getColumn}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=x}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=Omega})) (204{val==}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=omega}) (215{val=)}))) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=OmegaInverse})) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (32 (802{val=getColumn}) (214{val=(}) (800{val=column}) (215{val=)})) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (32 (802{val=getRow}) (214{val=(}) (800{val=row}) (215{val=)})) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=data}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertClose}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=m}) (235{val=.}) (802{val=preMultiply}) (214{val=(}) (32 (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=testVector}) (215{val=)})) (235{val=.}) (802{val=getData}) (216{val=()})) (215{val=)})) (234{val=,}) (800{val=preMultTest}) (234{val=,}) (800{val=normTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertClose}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=testVector}) (234{val=,}) (32 (32 (800{val=m}) (235{val=.}) (802{val=operate}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=testVector}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getData}) (216{val=()})) (234{val=,}) (800{val=entryTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealVector})) (59 (800{val=lhs}) (204{val==}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=numCoefficients}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealMatrix})) (59 (800{val=matrix}) (204{val==}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=data}) (234{val=,}) (9{val=false}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealVector})) (59 (800{val=vector}) (204{val==}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=data}) (234{val=,}) (9{val=false}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=RealMatrix})) (802{val=getConvertedMatrix}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=data}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (43 (801{val=RealMatrix})) (802{val=getConvertedMatrix}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=data}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=data}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=data}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=d}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=data}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=rows}) (234{val=,}) (800{val=columns}) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=es}) (235{val=.}) (802{val=solve}) (214{val=(}) (14 (304{val=new}) (43 (40{val=ArrayRealVectorTest.RealVectorTestImpl})) (214{val=(}) (32 (800{val=b}) (235{val=.}) (802{val=getColumn}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=decompMatrix}) (204{val==}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=decomp}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=triangularMatrix}) (204{val==}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=lowerTriangularMatrix}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=triangularMatrix}) (204{val==}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=lowerTriangularMatrix}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=m3}) (215{val=)})) (234{val=,}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (219{val=}}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=solver}) (235{val=.}) (802{val=decompose}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=m7}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=data}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertClose}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=m}) (235{val=.}) (802{val=preMultiply}) (214{val=(}) (32 (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=testVector}) (215{val=)})) (235{val=.}) (802{val=getData}) (216{val=()})) (215{val=)})) (234{val=,}) (800{val=preMultTest}) (234{val=,}) (800{val=normTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertClose}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=testVector}) (234{val=,}) (32 (32 (800{val=m}) (235{val=.}) (802{val=operate}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=testVector}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getData}) (216{val=()})) (234{val=,}) (800{val=entryTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertClose}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=m}) (235{val=.}) (802{val=multiply}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=testDataInv}) (215{val=)})) (215{val=)})) (234{val=,}) (800{val=identity}) (234{val=,}) (800{val=entryTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=bp}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (14 (304{val=new}) (43 (40{val=ArrayRealVectorTest.RealVectorTestImpl})) (214{val=(}) (32 (800{val=b}) (235{val=.}) (802{val=getColumn}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (14 (304{val=new}) (43 (40{val=ArrayRealVectorTest.RealVectorTestImpl})) (214{val=(}) (32 (800{val=b}) (235{val=.}) (802{val=getColumn}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=BigFraction})) (231{val=>})) (214{val=(}) (800{val=pData}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=BigFraction})) (231{val=>})) (59 (800{val=bigMSupdate}) (204{val==}) (32 (800{val=bigMStoN}) (235{val=.}) (802{val=multiply}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=BigFraction})) (231{val=>})) (214{val=(}) (800{val=shiftedP}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (40{val=coefficients.msToN}) (235{val=.}) (802{val=multiply}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=multistep}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=identity}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=m}) (234{val=,}) (800{val=m}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=bp}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=cachedP}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=m}) (234{val=,}) (800{val=m}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=cachedU}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=m}) (234{val=,}) (800{val=m}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=cachedL}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=m}) (234{val=,}) (800{val=m}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (242{val=!=}) (40{val=startConfiguration.length})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=n}) (234{val=,}) (40{val=startConfiguration.length}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Arrays}) (235{val=.}) (802{val=fill}) (214{val=(}) (800{val=after}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=f}) (235{val=.}) (802{val=set}) (214{val=(}) (315{val=this}) (234{val=,}) (32 (800{val=NordsieckTransformer}) (235{val=.}) (802{val=getInstance}) (214{val=(}) (27 (800{val=nSteps}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=nSteps}) (234{val=,}) (800{val=nSteps}) (234{val=,}) (800{val=minStep}) (234{val=,}) (800{val=maxStep}) (234{val=,}) (800{val=vecAbsoluteTolerance}) (234{val=,}) (800{val=vecRelativeTolerance}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=nSteps}) (234{val=,}) (800{val=nSteps}) (234{val=,}) (800{val=minStep}) (234{val=,}) (800{val=maxStep}) (234{val=,}) (800{val=scalAbsoluteTolerance}) (234{val=,}) (800{val=scalRelativeTolerance}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Array2DRowRealMatrix})) (800{val=nordsieck})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=interpolator.nordsieck}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=nordsieck}) (204{val==}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (32 (40{val=interpolator.nordsieck}) (235{val=.}) (802{val=getDataRef}) (216{val=()})) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=nordsieck}) (204{val==}) (32 (802{val=initializeHighOrderDerivatives}) (214{val=(}) (800{val=scaled}) (234{val=,}) (800{val=multistep}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=TestProblem1})) (59 (800{val=pb2}) (204{val==}) (32 (800{val=pb1}) (235{val=.}) (802{val=copy}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (62 (800{val=v}) (328{val=instanceof}) (74 (43 (800{val=SparseFieldVector})) (230{val=<}) (76{val=?}) (231{val=>}))))
(AST_ROOT_SC2NF (62 (800{val=v}) (328{val=instanceof}) (74 (43 (800{val=SparseFieldVector})) (230{val=<}) (76{val=?}) (231{val=>}))))
(AST_ROOT_SC2NF (62 (800{val=v}) (328{val=instanceof}) (74 (43 (800{val=SparseFieldVector})) (230{val=<}) (76{val=?}) (231{val=>}))))
(AST_ROOT_SC2NF (62 (800{val=v}) (328{val=instanceof}) (74 (43 (800{val=SparseFieldVector})) (230{val=<}) (76{val=?}) (231{val=>}))))
(AST_ROOT_SC2NF (38 (207{val=!}) (36 (214{val=(}) (62 (800{val=original}) (328{val=instanceof}) (74 (43 (800{val=RandomKey})) (230{val=<}) (76{val=?}) (231{val=>}))) (215{val=)}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (36 (214{val=(}) (62 (800{val=another}) (328{val=instanceof}) (74 (43 (800{val=RandomKey})) (230{val=<}) (76{val=?}) (231{val=>}))) (215{val=)}))) (215{val=)}) (41 (329{val=return}) (9{val=false}) (227{val=;}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=addMeasurement}) (214{val=(}) (14 (304{val=new}) (43 (801{val=LocalMeasurement})) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=x}) (234{val=,}) (800{val=y}) (234{val=,}) (800{val=w}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=measurements}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (14 (304{val=new}) (43 (801{val=MinpackMeasurement})) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=i}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Comparable})) (230{val=<}) (76{val=?}) (231{val=>})) (800{val=v})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Comparable})) (230{val=<}) (76{val=?}) (231{val=>})) (800{val=v})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Comparable})) (230{val=<}) (76{val=?}) (231{val=>})) (800{val=v})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=curN}) (204{val==}) (32 (800{val=current}) (235{val=.}) (802{val=getN}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=StatisticalSummary})) (800{val=observed})))
(AST_ROOT_SC2NF (60 (43 (801{val=StatisticalSummary})) (59 (800{val=aggregatedStats}) (204{val==}) (32 (800{val=AggregateSummaryStatistics}) (235{val=.}) (802{val=aggregate}) (214{val=(}) (802{val=aggregate}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setConvergenceChecker}) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleRealPointChecker})) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setConvergenceChecker}) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorialPointChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=DescriptiveStatistics})) (59 (800{val=dstat}) (204{val==}) (32 (802{val=createDescriptiveStatistics}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DescriptiveStatistics})) (59 (800{val=stats}) (204{val==}) (32 (802{val=createDescriptiveStatistics}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DescriptiveStatistics})) (59 (800{val=stats}) (204{val==}) (32 (802{val=createDescriptiveStatistics}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=MultivariateSummaryStatistics})) (59 (800{val=u}) (204{val==}) (32 (802{val=createMultivariateSummaryStatistics}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=MultivariateSummaryStatistics})) (59 (800{val=u}) (204{val==}) (32 (802{val=createMultivariateSummaryStatistics}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=MultivariateSummaryStatistics})) (59 (800{val=u}) (204{val==}) (32 (802{val=createMultivariateSummaryStatistics}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=MultivariateSummaryStatistics})) (59 (800{val=u}) (204{val==}) (32 (802{val=createMultivariateSummaryStatistics}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=MultivariateSummaryStatistics})) (59 (800{val=u}) (204{val==}) (32 (802{val=createMultivariateSummaryStatistics}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=MultivariateSummaryStatistics})) (59 (800{val=u}) (204{val==}) (32 (802{val=createMultivariateSummaryStatistics}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=m}) (234{val=,}) (800{val=startParams}) (234{val=,}) (800{val=theoreticalMinCost}) (234{val=,}) (800{val=theoreticalMinParams}) (215{val=)}) (227{val=;})) (21 (32 (802{val=setCostAccuracy}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (800{val=OpenMapRealVector})) (59 (800{val=res}) (204{val==}) (32 (802{val=copy}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=OpenMapRealVector})) (59 (800{val=res}) (204{val==}) (32 (802{val=copy}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=constraints})) (204{val==}) (32 (802{val=normalizeConstraints}) (214{val=(}) (800{val=constraints}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (2 (801{val=FACTORIALS}) (221{val=[}) (800{val=n}) (222{val=]})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=STATIC_C}) (234{val=,}) (800{val=STATIC_A}) (234{val=,}) (800{val=STATIC_B}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ThreeEighthesStepInterpolator})) (216{val=()})) (234{val=,}) (800{val=step}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=STATIC_C}) (234{val=,}) (800{val=STATIC_A}) (234{val=,}) (800{val=STATIC_B}) (234{val=,}) (14 (304{val=new}) (43 (801{val=EulerStepInterpolator})) (216{val=()})) (234{val=,}) (800{val=step}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=static}) (43 (801{val=DummyStepHandler})) (802{val=getInstance}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=INSTANCE}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=STATIC_C}) (234{val=,}) (800{val=STATIC_A}) (234{val=,}) (800{val=STATIC_B}) (234{val=,}) (14 (304{val=new}) (43 (801{val=MidpointStepInterpolator})) (216{val=()})) (234{val=,}) (800{val=step}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=PERCENTILE}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (234{val=,}) (800{val=p}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=PERCENTILE}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=p}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=MIN}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=MIN}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=MAX}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=MAX}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=VARIANCE}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=mean}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=VARIANCE}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=mean}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=VARIANCE}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=VARIANCE}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=GEOMETRIC_MEAN}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=GEOMETRIC_MEAN}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=MEAN}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=MEAN}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=SUM_OF_LOGS}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=SUM_OF_LOGS}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=PRODUCT}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=PRODUCT}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=SUM_OF_SQUARES}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=SUM_OF_SQUARES}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=SUM}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=SUM}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=STATIC_C}) (234{val=,}) (800{val=STATIC_A}) (234{val=,}) (800{val=STATIC_B}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ClassicalRungeKuttaStepInterpolator})) (216{val=()})) (234{val=,}) (800{val=step}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (5 (43 (801{val=Object})) (85{val=[]}) (85{val=[]})) (802{val=getContents}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=CONTENTS}) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=STATIC_C}) (234{val=,}) (800{val=STATIC_A}) (234{val=,}) (800{val=STATIC_B}) (234{val=,}) (14 (304{val=new}) (43 (801{val=GillStepInterpolator})) (216{val=()})) (234{val=,}) (800{val=step}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (7 (800{val=alg}) (204{val==}) (32 (800{val=MessageDigest}) (235{val=.}) (802{val=getInstance}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NoSuchAlgorithmException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createInternalError}) (214{val=(}) (800{val=ex}) (215{val=)})) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (27 (800{val=row}) (202{val=*}) (800{val=columns})) (200{val=+}) (800{val=column})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=int}) (802{val=getRowDimension}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=rows}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=int}) (802{val=getColumnDimension}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=columns}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (27 (800{val=row}) (202{val=*}) (800{val=columns})) (200{val=+}) (800{val=column})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=int}) (802{val=getRowDimension}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=rows}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=int}) (802{val=getColumnDimension}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=columns}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=SimplexTableau})) (59 (800{val=tableau}) (204{val==}) (14 (304{val=new}) (43 (801{val=SimplexTableau})) (214{val=(}) (800{val=function}) (234{val=,}) (800{val=linearConstraints}) (234{val=,}) (800{val=goal}) (234{val=,}) (800{val=nonNegative}) (234{val=,}) (800{val=epsilon}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=beta}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=beta}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=scale})) (204{val==}) (800{val=beta})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=alpha}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=alpha}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=shape})) (204{val==}) (800{val=alpha})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (39{val=double}) (59 (800{val=residual}) (204{val==}) (2 (801{val=residuals}) (221{val=[}) (800{val=i}) (222{val=]}))) (227{val=;})) (21 (7 (800{val=chiSquare}) (237{val=+=}) (27 (27 (800{val=residual}) (202{val=*}) (800{val=residual})) (203{val=/}) (2 (801{val=residualsWeights}) (221{val=[}) (800{val=i}) (222{val=]})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (39{val=double}) (59 (800{val=residual}) (204{val==}) (2 (801{val=residuals}) (221{val=[}) (800{val=i}) (222{val=]}))) (227{val=;})) (21 (7 (800{val=criterion}) (237{val=+=}) (27 (2 (801{val=residualsWeights}) (221{val=[}) (800{val=i}) (222{val=]})) (202{val=*}) (800{val=residual}) (202{val=*}) (800{val=residual}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=factor}) (204{val==}) (38 (201{val=-}) (32 (800{val=Math}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (2 (801{val=residualsWeights}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NumberFormatException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathException})) (214{val=(}) (800{val=e}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (43 (801{val=UnivariateMatrixFunction})) (802{val=derivative}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=UnivariateRealFunction})) (802{val=derivative}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getMean}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getExponent}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=int}) (802{val=getNumberOfElements}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=isNaN}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=UnivariateVectorialFunction})) (802{val=derivative}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=long}) (802{val=getN}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=int}) (802{val=getDimension}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=fitness}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=int}) (802{val=getDimension}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=int}) (802{val=getDimension}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=int}) (802{val=getSampleSize}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=int}) (802{val=getPopulationSize}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=int}) (802{val=getNumberOfSuccesses}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getSum}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=long}) (802{val=getN}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getMin}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getMax}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getCurrentTime}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getPreviousTime}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=resetRelativeAccuracy}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getRelativeAccuracy}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=resetAbsoluteAccuracy}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getAbsoluteAccuracy}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=int}) (802{val=getMaximalIterationCount}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=reset}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=static}) (43 (801{val=DummyStepHandler})) (802{val=getInstance}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (40{val=LazyHolder.INSTANCE}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=randomData})) (204{val==}) (800{val=randomData})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=RandomGenerator})) (800{val=generator})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (802{val=anovaPValue}) (214{val=(}) (800{val=categoryData}) (215{val=)})) (230{val=<}) (800{val=alpha})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (800{val=internalArray}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (800{val=internalArray}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=synchronized}) (39{val=int}) (802{val=getInternalLength}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (40{val=internalArray.length}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=dx}) (204{val==}) (27 (800{val=x2}) (201{val=-}) (800{val=x1}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (800{val=isForward}) (233{val=?}) (2 (801{val=omegaImaginaryForward}) (221{val=[}) (800{val=k}) (222{val=]})) (226{val=:}) (2 (801{val=omegaImaginaryInverse}) (221{val=[}) (800{val=k}) (222{val=]}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=isForward}) (204{val==}) (27 (800{val=n}) (231{val=>}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (800{val=stdDev}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkSignificanceLevel}) (214{val=(}) (800{val=alpha}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (27 (32 (802{val=tTest}) (214{val=(}) (800{val=sampleStats1}) (234{val=,}) (800{val=sampleStats2}) (215{val=)})) (230{val=<}) (800{val=alpha})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkSignificanceLevel}) (214{val=(}) (800{val=alpha}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (27 (32 (802{val=homoscedasticTTest}) (214{val=(}) (800{val=sample1}) (234{val=,}) (800{val=sample2}) (215{val=)})) (230{val=<}) (800{val=alpha})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkSignificanceLevel}) (214{val=(}) (800{val=alpha}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (27 (32 (802{val=tTest}) (214{val=(}) (800{val=sample1}) (234{val=,}) (800{val=sample2}) (215{val=)})) (230{val=<}) (800{val=alpha})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkSignificanceLevel}) (214{val=(}) (800{val=alpha}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (27 (32 (802{val=tTest}) (214{val=(}) (800{val=mu}) (234{val=,}) (800{val=sampleStats}) (215{val=)})) (230{val=<}) (800{val=alpha})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkSignificanceLevel}) (214{val=(}) (800{val=alpha}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (27 (32 (802{val=tTest}) (214{val=(}) (800{val=mu}) (234{val=,}) (800{val=sample}) (215{val=)})) (230{val=<}) (800{val=alpha})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkSignificanceLevel}) (214{val=(}) (800{val=alpha}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (27 (32 (802{val=pairedTTest}) (214{val=(}) (800{val=sample1}) (234{val=,}) (800{val=sample2}) (215{val=)})) (230{val=<}) (800{val=alpha})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=isSquare}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=getColumnDimension}) (216{val=()})) (236{val===}) (32 (802{val=getRowDimension}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=g0Positive}) (204{val==}) (27 (800{val=g0}) (251{val=>=}) (34{val=NUMBER_CONSTANT}))) (227{val=;})) (21 (7 (800{val=nextAction}) (204{val==}) (40{val=EventHandler.CONTINUE})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=increasing}) (204{val==}) (27 (800{val=gb}) (251{val=>=}) (800{val=ga}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=t0}) (204{val==}) (800{val=tStart})) (227{val=;})) (21 (7 (800{val=g0}) (204{val==}) (32 (800{val=handler}) (235{val=.}) (802{val=g}) (214{val=(}) (800{val=tStart}) (234{val=,}) (800{val=yStart}) (215{val=)}))) (227{val=;})) (21 (7 (800{val=g0Positive}) (204{val==}) (27 (800{val=g0}) (251{val=>=}) (34{val=NUMBER_CONSTANT}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=boolean}) (59 (800{val=forward}) (204{val==}) (27 (800{val=t}) (231{val=>}) (800{val=t0}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=boolean}) (59 (800{val=forward}) (204{val==}) (27 (800{val=t}) (231{val=>}) (800{val=t0}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=sum}) (237{val=+=}) (27 (2 (801{val=values}) (221{val=[}) (800{val=i}) (222{val=]})) (202{val=*}) (2 (801{val=weights}) (221{val=[}) (800{val=i}) (222{val=]})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=boolean}) (59 (800{val=forward}) (204{val==}) (27 (800{val=t}) (231{val=>}) (800{val=t0}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=o1}) (235{val=.}) (802{val=compareTo}) (214{val=(}) (11 (214{val=(}) (43 (800{val=T})) (215{val=)}) (800{val=o2})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (802{val=chiSquareTestDataSetsComparison}) (214{val=(}) (800{val=observed1}) (234{val=,}) (800{val=observed2}) (215{val=)})) (230{val=<}) (800{val=alpha})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=unequalCounts}) (204{val==}) (27 (800{val=countSum1}) (242{val=!=}) (800{val=countSum2}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (802{val=chiSquareTest}) (214{val=(}) (800{val=counts}) (215{val=)})) (230{val=<}) (800{val=alpha})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (802{val=chiSquareTest}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=observed}) (215{val=)})) (230{val=<}) (800{val=alpha})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (800{val=stdDev}) (227{val=;})))
(AST_ROOT_SC2NF (27 (800{val=i}) (230{val=<}) (32 (802{val=getRowDimension}) (216{val=()}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=correction}) (237{val=+=}) (27 (2 (801{val=values}) (221{val=[}) (800{val=i}) (222{val=]})) (201{val=-}) (800{val=xbar}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=isSquare}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=getColumnDimension}) (216{val=()})) (236{val===}) (32 (802{val=getRowDimension}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (48 (349{val=super}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=stat}) (215{val=)})) (249{val=&&}) (32 (800{val=aggregateStatistics}) (235{val=.}) (802{val=equals}) (214{val=(}) (40{val=stat.aggregateStatistics}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=boolean}) (59 (800{val=forward}) (204{val==}) (27 (800{val=t}) (231{val=>}) (800{val=t0}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=forward}) (204{val==}) (27 (32 (800{val=interpolator}) (235{val=.}) (802{val=getCurrentTime}) (216{val=()})) (251{val=>=}) (800{val=lastTime}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=boolean}) (59 (800{val=forward}) (204{val==}) (27 (800{val=t}) (231{val=>}) (800{val=t0}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Complex})) (59 (800{val=N1}) (204{val==}) (14 (304{val=new}) (43 (801{val=Complex})) (214{val=(}) (27 (800{val=n}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=solution}) (235{val=.}) (802{val=getValue}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=solution}) (235{val=.}) (802{val=getValue}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=solution}) (235{val=.}) (802{val=getValue}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (61 (350{val=while}) (214{val=(}) (38 (207{val=!}) (32 (800{val=tableau}) (235{val=.}) (802{val=isOptimal}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=doIteration}) (214{val=(}) (800{val=tableau}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (61 (350{val=while}) (214{val=(}) (38 (207{val=!}) (32 (800{val=tableau}) (235{val=.}) (802{val=isOptimal}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=doIteration}) (214{val=(}) (800{val=tableau}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Integer})) (59 (800{val=pivotRow}) (204{val==}) (32 (802{val=getPivotRow}) (214{val=(}) (800{val=tableau}) (234{val=,}) (800{val=pivotCol}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=tableau}) (235{val=.}) (802{val=dropPhase1Objective}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (27 (800{val=fitResidualSum}) (230{val=<}) (800{val=noisyResidualSum})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=bounds}) (204{val==}) (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=EmpiricalDistributionImpl})) (215{val=)}) (800{val=empiricalDistribution2})) (215{val=)})) (235{val=.}) (802{val=getGeneratorUpperBounds}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (40{val=xval.length}) (236{val===}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (2 (801{val=xval}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (236{val===}) (500{val=null}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=microsphereElements}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=microsphereElements}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=microsphereElements})) (204{val==}) (800{val=microsphereElements})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=brightnessExponent}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=brightnessExponent}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=brightnessExponent})) (204{val==}) (800{val=brightnessExponent})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (800{val=rootCause}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (800{val=rootCause}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IOException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathRuntimeException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=Math}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (40{val=MathUtils.TWO_PI}) (202{val=*}) (800{val=x})) (215{val=)})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=f}) (204{val==}) (27 (36 (214{val=(}) (27 (40{val=MathUtils.TWO_PI}) (202{val=*}) (800{val=x}) (202{val=*}) (36 (214{val=(}) (27 (800{val=n}) (201{val=-}) (800{val=x})) (215{val=)}))) (215{val=)})) (203{val=/}) (800{val=n}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=d}) (204{val==}) (27 (800{val=x}) (201{val=-}) (800{val=mu}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (802{val=flipAllIfWarranted}) (214{val=(}) (800{val=deflatedEnd}) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (802{val=flipEveryOtherIfWarranted}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=norm}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=VECTOR_LENGTHS_MISMATCH}) (234{val=,}) (40{val=v.length}) (234{val=,}) (800{val=nRows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=nCols})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=VECTOR_LENGTHS_MISMATCH}) (234{val=,}) (40{val=v.length}) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (800{val=NO_ENTRY_MESSAGE}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (800{val=NO_ENTRY_MESSAGE}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (800{val=NO_ENTRY_MESSAGE}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (800{val=NO_ENTRY_MESSAGE}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=fraction}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=NULL_FRACTION}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=fraction}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=NULL_FRACTION}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=fraction}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=NULL_FRACTION}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=numerator}) (236{val===}) (40{val=Integer.MIN_VALUE})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (800{val=OVERFLOW_MESSAGE}) (234{val=,}) (800{val=numerator}) (234{val=,}) (800{val=denominator}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Fraction})) (214{val=(}) (38 (201{val=-}) (800{val=numerator})) (234{val=,}) (800{val=denominator}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (40{val=BigInteger.ZERO}) (235{val=.}) (802{val=equals}) (214{val=(}) (40{val=fraction.numerator}) (215{val=)})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (800{val=FORBIDDEN_ZERO_DENOMINATOR}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (802{val=multiply}) (214{val=(}) (32 (800{val=fraction}) (235{val=.}) (802{val=reciprocal}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (40{val=BigInteger.ZERO}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=bg}) (215{val=)})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (800{val=FORBIDDEN_ZERO_DENOMINATOR}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (40{val=BigInteger.ZERO}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=den}) (215{val=)})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (800{val=FORBIDDEN_ZERO_DENOMINATOR}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=negativeVarColumn}) (204{val==}) (32 (800{val=columnLabels}) (235{val=.}) (802{val=indexOf}) (214{val=(}) (800{val=NEGATIVE_VAR_COLUMN_LABEL}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (800{val=restrictToNonNegative})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=columnLabels}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=NEGATIVE_VAR_COLUMN_LABEL}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=degreesOfFreedom}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=NON_POSITIVE_DEGREES_OF_FREEDOM_MESSAGE}) (234{val=,}) (800{val=degreesOfFreedom}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=denominatorDegreesOfFreedom})) (204{val==}) (800{val=degreesOfFreedom})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=degreesOfFreedom}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=NON_POSITIVE_DEGREES_OF_FREEDOM_MESSAGE}) (234{val=,}) (800{val=degreesOfFreedom}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=numeratorDegreesOfFreedom})) (204{val==}) (800{val=degreesOfFreedom})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=FAILED_EVALUATION_MESSAGE}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=argument}) (215{val=)})) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=argument})) (204{val==}) (32 (800{val=argument}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=FAILED_EVALUATION_MESSAGE}) (234{val=,}) (800{val=argument}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=argument})) (204{val==}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (800{val=argument}) (219{val=}})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (242{val=!=}) (40{val=startConfiguration.length})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=DIMENSION_MISMATCH_MESSAGE}) (234{val=,}) (800{val=n}) (234{val=,}) (40{val=startConfiguration.length}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (2 (801{val=steps}) (221{val=[}) (800{val=j}) (222{val=]})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=EQUAL_VERTICES_MESSAGE}) (234{val=,}) (800{val=j}) (234{val=,}) (27 (800{val=j}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=EMPTY_ARRAY_MESSAGE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=EMPTY_ARRAY_MESSAGE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=c.length}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=EMPTY_ARRAY_MESSAGE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=NON_POSITIVE_DEGREE_MESSAGE}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=NON_POSITIVE_DEGREE_MESSAGE}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (36 (214{val=(}) (62 (800{val=f}) (328{val=instanceof}) (43 (800{val=PolynomialFunction}))) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=NON_POLYNOMIAL_FUNCTION_MESSAGE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (62 (800{val=f}) (328{val=instanceof}) (43 (800{val=PolynomialFunction}))) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=p}) (204{val==}) (11 (214{val=(}) (43 (800{val=PolynomialFunction})) (215{val=)}) (800{val=f}))) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=NON_POLYNOMIAL_FUNCTION_MESSAGE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=VECTOR_LENGTHS_MISMATCH}) (234{val=,}) (40{val=v.length}) (234{val=,}) (800{val=nRows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=nCols})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=VECTOR_LENGTHS_MISMATCH}) (234{val=,}) (40{val=v.length}) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (800{val=NO_ENTRY_MESSAGE}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (800{val=NO_ENTRY_MESSAGE}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (800{val=NO_ENTRY_MESSAGE}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (800{val=NO_ENTRY_MESSAGE}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=b}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (242{val=!=}) (800{val=m})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=VECTOR_LENGTH_MISMATCH_MESSAGE}) (234{val=,}) (32 (800{val=b}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=b.length}) (242{val=!=}) (800{val=m})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=VECTOR_LENGTH_MISMATCH_MESSAGE}) (234{val=,}) (40{val=b.length}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=p}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=p}) (231{val=>}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=OUT_OF_RANGE_POINT}) (234{val=,}) (800{val=p}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=x0}) (231{val=>}) (800{val=x1})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=WRONG_ORDER_ENDPOINTS_MESSAGE}) (234{val=,}) (800{val=x0}) (234{val=,}) (800{val=x1}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=x0}) (231{val=>}) (800{val=x1})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=WRONG_ORDER_ENDPOINTS_MESSAGE}) (234{val=,}) (800{val=x0}) (234{val=,}) (800{val=x1}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=f}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=NULL_FUNCTION_MESSAGE}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=function}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=NULL_FUNCTION_MESSAGE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=d.length}) (230{val=<}) (27 (800{val=pos}) (200{val=+}) (800{val=size}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=NON_FITTING_POSITION_AND_SIZE_MESSAGE}) (234{val=,}) (800{val=pos}) (234{val=,}) (800{val=size}) (234{val=,}) (40{val=d.length}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=d.length}) (230{val=<}) (27 (800{val=pos}) (200{val=+}) (800{val=size}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=NON_FITTING_POSITION_AND_SIZE_MESSAGE}) (234{val=,}) (800{val=pos}) (234{val=,}) (800{val=size}) (234{val=,}) (40{val=d.length}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=omegaCount}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (800{val=MISSING_ROOTS_OF_UNITY_MESSAGE}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (800{val=isForward}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isPowerOf2}) (214{val=(}) (40{val=o.length}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=NOT_POWER_OF_TWO_MESSAGE}) (234{val=,}) (40{val=o.length}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isPowerOf2}) (214{val=(}) (40{val=d.length}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=NOT_POWER_OF_TWO_MESSAGE}) (234{val=,}) (40{val=d.length}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=value}) (204{val==}) (32 (800{val=decoded}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=i}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=mapDivide}) (214{val=(}) (800{val=norm}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (801{val=ArrayRealVector}) (214{val=(}) (44 (43 (801{val=ArrayRealVector})) (800{val=v})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=v}) (234{val=,}) (9{val=true}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isDefaultValue}) (214{val=(}) (800{val=norm}) (215{val=)})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (802{val=isDefaultValue}) (214{val=(}) (800{val=value}) (215{val=)}))))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=DEFAULT_ZERO_TOLERANCE}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=OpenMapRealVector}) (214{val=(}) (44 (39{val=int}) (800{val=dimension})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=dimension}) (234{val=,}) (800{val=DEFAULT_ZERO_TOLERANCE}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=DEFAULT_ZERO_TOLERANCE}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setEntry}) (214{val=(}) (44 (39{val=int}) (800{val=index})) (234{val=,}) (44 (39{val=double}) (800{val=value})) (215{val=)}) (301{val=throws}) (43 (800{val=MatrixIndexException})) (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=index}) (222{val=]})) (204{val==}) (800{val=value})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.ULP}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.TANH}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.TAN}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.SQRT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.SINH}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.SIN}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.SIGNUM}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.RINT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.ASIN}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.LOG10}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.LOG}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.FLOOR}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.EXPM1}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.EXP}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.COSH}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.COS}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.CEIL}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.CBRT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.ATAN}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.ASIN}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.ACOS}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.ABS}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.LOG1P}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FunctionEvaluationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Iterator})) (230{val=<}) (43 (800{val=Entry})) (231{val=>})) (59 (800{val=it}) (204{val==}) (32 (802{val=iterator}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=epsilon}) (204{val==}) (800{val=DEFAULT_ZERO_TOLERANCE})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=DEFAULT_ZERO_TOLERANCE}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=epsilon})) (204{val==}) (800{val=epsilon})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=OpenMapRealVector}) (214{val=(}) (44 (39{val=int}) (800{val=dimension})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=dimension}) (234{val=,}) (800{val=DEFAULT_ZERO_TOLERANCE}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=DEFAULT_ZERO_TOLERANCE}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=BigReal})) (214{val=(}) (32 (800{val=d}) (235{val=.}) (802{val=divide}) (214{val=(}) (40{val=a.d}) (234{val=,}) (800{val=scale}) (234{val=,}) (800{val=roundingMode}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=lcm}) (236{val===}) (40{val=Integer.MIN_VALUE})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=a}) (234{val=,}) (800{val=b}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Solver})) (214{val=(}) (800{val=singularValues}) (234{val=,}) (32 (802{val=getUT}) (216{val=()})) (234{val=,}) (32 (802{val=getV}) (216{val=()})) (234{val=,}) (27 (32 (802{val=getRank}) (216{val=()})) (236{val===}) (32 (800{val=Math}) (235{val=.}) (802{val=max}) (214{val=(}) (800{val=m}) (234{val=,}) (800{val=n}) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=getNorm}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (32 (802{val=unsupported}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=getL1Norm}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (32 (802{val=unsupported}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=getLInfNorm}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (32 (802{val=unsupported}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=getNorm}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (32 (802{val=unsupported}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=getL1Norm}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (32 (802{val=unsupported}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=getLInfNorm}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (32 (802{val=unsupported}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (40{val=dest.n}) (204{val==}) (40{val=source.n})) (227{val=;})) (21 (7 (40{val=dest.m1}) (204{val==}) (40{val=source.m1})) (227{val=;})) (21 (7 (40{val=dest.dev}) (204{val==}) (40{val=source.dev})) (227{val=;})) (21 (7 (40{val=dest.nDev}) (204{val==}) (40{val=source.nDev})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (14 (304{val=new}) (43 (801{val=LoessInterpolator})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (14 (304{val=new}) (43 (801{val=LoessInterpolator})) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (800{val=NON_BRACKETING_MESSAGE}) (234{val=,}) (800{val=min}) (234{val=,}) (800{val=max}) (234{val=,}) (800{val=yMin}) (234{val=,}) (800{val=yMax}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (32 (800{val=solution}) (235{val=.}) (802{val=subtract}) (214{val=(}) (800{val=xRef}) (215{val=)})) (235{val=.}) (802{val=getNorm}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=DummyStepInterpolator})) (214{val=(}) (800{val=yTmp}) (234{val=,}) (2 (801{val=yDotK}) (221{val=[}) (27 (800{val=stages}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (222{val=]})) (234{val=,}) (800{val=forward}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=interpolator}) (215{val=)}) (227{val=;})) (21 (7 (800{val=currentDerivative}) (204{val==}) (32 (40{val=interpolator.currentDerivative}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (7 (800{val=currentDerivative}) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=BadStepInterpolator}) (214{val=(}) (44 (5 (39{val=double}) (85{val=[]})) (800{val=y})) (234{val=,}) (44 (39{val=boolean}) (800{val=forward})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=y}) (234{val=,}) (3 (304{val=new}) (5 (39{val=double}) (221{val=[})) (40{val=y.length}) (222{val=]})) (234{val=,}) (800{val=forward}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=DummyStepInterpolator})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=DummyStepInterpolator})) (214{val=(}) (800{val=y}) (234{val=,}) (3 (304{val=new}) (5 (39{val=double}) (221{val=[})) (40{val=y.length}) (222{val=]})) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=DummyStepInterpolator})) (214{val=(}) (800{val=yTmp}) (234{val=,}) (2 (801{val=yDotK}) (221{val=[}) (27 (800{val=stages}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (222{val=]})) (234{val=,}) (800{val=forward}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=DummyStepInterpolator})) (214{val=(}) (800{val=y}) (234{val=,}) (800{val=yDot1}) (234{val=,}) (800{val=forward}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=handler}) (235{val=.}) (802{val=handleStep}) (214{val=(}) (14 (304{val=new}) (43 (801{val=StepInterpolatorWrapper})) (214{val=(}) (800{val=interpolator}) (234{val=,}) (800{val=n}) (234{val=,}) (800{val=k}) (215{val=)})) (234{val=,}) (800{val=isLast}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=ODEWithJacobians})) (800{val=ode})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=mean}) (234{val=,}) (800{val=sd}) (234{val=,}) (800{val=DEFAULT_INVERSE_ABSOLUTE_ACCURACY}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (32 (802{val=setTolerance}) (214{val=(}) (800{val=defaultTolerance}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=f}) (234{val=,}) (800{val=DEFAULT_MAXIMUM_ITERATIONS}) (234{val=,}) (800{val=DEFAULT_ABSOLUTE_ACCURACY}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=p}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=mean}) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (40{val=Double.MAX_VALUE}) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (27 (38 (201{val=-}) (800{val=mean})) (202{val=*}) (32 (800{val=Math}) (235{val=.}) (802{val=log}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (201{val=-}) (800{val=p})) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (201{val=-}) (32 (800{val=Math}) (235{val=.}) (802{val=exp}) (214{val=(}) (27 (38 (201{val=-}) (800{val=x})) (203{val=/}) (800{val=mean})) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=ExponentialDistributionImpl}) (214{val=(}) (44 (39{val=double}) (800{val=mean})) (215{val=)}) (8 (218{val={}) (500{val=super();}) (21 (32 (802{val=setMeanInternal}) (214{val=(}) (800{val=mean}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getUpperDomain}) (214{val=(}) (800{val=sampleSize}) (234{val=,}) (800{val=numberOfSuccesses}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getLowerDomain}) (214{val=(}) (800{val=populationSize}) (234{val=,}) (800{val=numberOfSuccesses}) (234{val=,}) (800{val=sampleSize}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (32 (800{val=Beta}) (235{val=.}) (802{val=regularizedBeta}) (214{val=(}) (800{val=probabilityOfSuccess}) (234{val=,}) (800{val=numberOfSuccesses}) (234{val=,}) (27 (800{val=x}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (32 (802{val=setNumberOfSuccessesInternal}) (214{val=(}) (800{val=r}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setProbabilityOfSuccessInternal}) (214{val=(}) (800{val=p}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=p}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (27 (800{val=alpha}) (202{val=*}) (800{val=beta}))) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (40{val=Double.MAX_VALUE})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (32 (800{val=Gamma}) (235{val=.}) (802{val=regularizedGammaP}) (214{val=(}) (800{val=alpha}) (234{val=,}) (27 (800{val=x}) (203{val=/}) (800{val=beta})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (32 (802{val=setAlphaInternal}) (214{val=(}) (800{val=alpha}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setBetaInternal}) (214{val=(}) (800{val=beta}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (201{val=-}) (32 (800{val=Math}) (235{val=.}) (802{val=exp}) (214{val=(}) (38 (201{val=-}) (32 (800{val=Math}) (235{val=.}) (802{val=pow}) (214{val=(}) (27 (800{val=x}) (203{val=/}) (800{val=scale})) (234{val=,}) (800{val=shape}) (215{val=)}))) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (32 (802{val=setShapeInternal}) (214{val=(}) (800{val=alpha}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setScaleInternal}) (214{val=(}) (800{val=beta}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=TDistributionImpl}) (214{val=(}) (44 (39{val=double}) (800{val=degreesOfFreedom})) (215{val=)}) (8 (218{val={}) (500{val=super();}) (21 (32 (802{val=setDegreesOfFreedomInternal}) (214{val=(}) (800{val=degreesOfFreedom}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (40{val=Double.MIN_VALUE}) (202{val=*}) (32 (800{val=gamma}) (235{val=.}) (802{val=getBeta}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=gamma}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (800{val=x}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=x}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})) (322{val=else}) (25 (313{val=if}) (214{val=(}) (27 (800{val=x}) (251{val=>=}) (800{val=numberOfElements})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=x}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=x}) (231{val=>}) (800{val=numberOfElements}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setNumberOfElementsInternal}) (214{val=(}) (800{val=numberOfElements}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setExponentInternal}) (214{val=(}) (800{val=exponent}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=d}) (204{val==}) (800{val=denominatorDegreesOfFreedom})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (32 (802{val=setNumeratorDegreesOfFreedomInternal}) (214{val=(}) (800{val=numeratorDegreesOfFreedom}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setDenominatorDegreesOfFreedomInternal}) (214{val=(}) (800{val=denominatorDegreesOfFreedom}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (27 (800{val=x}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=x}) (231{val=>}) (800{val=numberOfTrials}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (800{val=numberOfTrials}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (32 (802{val=setNumberOfTrialsInternal}) (214{val=(}) (800{val=trials}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setProbabilityOfSuccessInternal}) (214{val=(}) (800{val=p}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=p}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (800{val=mean})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (40{val=Double.MAX_VALUE})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=p}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (38 (201{val=-}) (40{val=Double.MAX_VALUE}))) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (800{val=mean})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=p}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (800{val=median})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (40{val=Double.MAX_VALUE})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=p}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (38 (201{val=-}) (40{val=Double.MAX_VALUE}))) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (800{val=median})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (32 (802{val=setMedianInternal}) (214{val=(}) (800{val=median}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setScaleInternal}) (214{val=(}) (800{val=s}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=LaguerreSolver}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}) (227{val=;})) (21 (7 (800{val=p}) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=protected}) (39{val=void}) (802{val=setDistribution}) (214{val=(}) (44 (43 (801{val=AbstractContinuousDistribution})) (800{val=distribution})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=distribution})) (204{val==}) (800{val=distribution})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=TDistributionImpl}) (214{val=(}) (44 (39{val=double}) (800{val=degreesOfFreedom})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=degreesOfFreedom}) (234{val=,}) (800{val=DEFAULT_INVERSE_ABSOLUTE_ACCURACY}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=numeratorDegreesOfFreedom}) (234{val=,}) (800{val=denominatorDegreesOfFreedom}) (234{val=,}) (800{val=DEFAULT_INVERSE_ABSOLUTE_ACCURACY}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=alpha}) (234{val=,}) (800{val=beta}) (234{val=,}) (800{val=DEFAULT_INVERSE_ABSOLUTE_ACCURACY}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=alpha}) (234{val=,}) (800{val=beta}) (234{val=,}) (800{val=DEFAULT_INVERSE_ABSOLUTE_ACCURACY}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=ExponentialDistributionImpl}) (214{val=(}) (44 (39{val=double}) (800{val=mean})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=mean}) (234{val=,}) (800{val=DEFAULT_INVERSE_ABSOLUTE_ACCURACY}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=median}) (234{val=,}) (800{val=s}) (234{val=,}) (800{val=DEFAULT_INVERSE_ABSOLUTE_ACCURACY}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=row}) (204{val==}) (2 (801{val=AINV}) (221{val=[}) (800{val=i}) (222{val=]}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=p}) (204{val==}) (32 (800{val=interpolator}) (235{val=.}) (802{val=interpolate}) (214{val=(}) (800{val=xval}) (234{val=,}) (800{val=wyval}) (234{val=,}) (800{val=wzval}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=length}) (204{val==}) (32 (800{val=TestUtils}) (235{val=.}) (802{val=eliminateZeroMassPoints}) (214{val=(}) (800{val=densityPoints}) (234{val=,}) (800{val=densityValues}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=length}) (204{val==}) (32 (800{val=TestUtils}) (235{val=.}) (802{val=eliminateZeroMassPoints}) (214{val=(}) (800{val=densityPoints}) (234{val=,}) (800{val=densityValues}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=length}) (204{val==}) (32 (800{val=TestUtils}) (235{val=.}) (802{val=eliminateZeroMassPoints}) (214{val=(}) (800{val=densityPoints}) (234{val=,}) (800{val=densityValues}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=length}) (204{val==}) (32 (800{val=TestUtils}) (235{val=.}) (802{val=eliminateZeroMassPoints}) (214{val=(}) (800{val=densityPoints}) (234{val=,}) (800{val=densityValues}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=ak2}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=rank}) (204{val==}) (800{val=k})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=ak2}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=rank}) (204{val==}) (800{val=k})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=ak2}) (252{val=<=}) (800{val=qrRankingThreshold})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=rank}) (204{val==}) (800{val=k})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertFalse}) (214{val=(}) (32 (800{val=MathUtils}) (235{val=.}) (802{val=equals}) (214{val=(}) (40{val=Double.NaN}) (234{val=,}) (40{val=Double.NaN}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (27 (800{val=alpha}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (800{val=alpha}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL}) (234{val=,}) (800{val=alpha}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=residuals.length}) (242{val=!=}) (40{val=observations.length})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=FunctionEvaluationException})) (214{val=(}) (800{val=point}) (234{val=,}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}) (234{val=,}) (40{val=residuals.length}) (234{val=,}) (40{val=observations.length}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=observations.length}) (242{val=!=}) (32 (800{val=scale}) (235{val=.}) (802{val=getColumnDimension}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}) (234{val=,}) (40{val=observations.length}) (234{val=,}) (32 (800{val=scale}) (235{val=.}) (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=observations.length}) (242{val=!=}) (40{val=weights.length})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}) (234{val=,}) (40{val=observations.length}) (234{val=,}) (40{val=weights.length}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=dimension}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.TOO_LARGE_CUTOFF_SINGULAR_VALUE}) (234{val=,}) (800{val=minSingularValue}) (234{val=,}) (2 (801{val=singularValues}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=DuplicateSampleAbscissaException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=FunctionEvaluationException})) (214{val=(}) (800{val=e}) (234{val=,}) (800{val=z}) (234{val=,}) (32 (800{val=e}) (235{val=.}) (802{val=getLocalizablePattern}) (216{val=()})) (234{val=,}) (32 (800{val=e}) (235{val=.}) (802{val=getArguments}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (27 (40{val=xval.length}) (236{val===}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (40{val=yval.length}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (250{val=||}) (27 (40{val=fval.length}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NO_DATA}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (40{val=LocalizedFormats.FRACTION_CONVERSION_OVERFLOW}) (234{val=,}) (800{val=value}) (234{val=,}) (800{val=p}) (234{val=,}) (800{val=q}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (40{val=LocalizedFormats.FAILED_FRACTION_CONVERSION}) (234{val=,}) (800{val=value}) (234{val=,}) (800{val=maxIterations}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=format}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NULL_WHOLE_FORMAT}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=wholeFormat})) (204{val==}) (800{val=format})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Localizable})) (800{val=specifier})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=sampleStats}) (235{val=.}) (802{val=getN}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createEOFException}) (214{val=(}) (40{val=LocalizedFormats.URL_CONTAINS_NO_DATA}) (234{val=,}) (800{val=url}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=r}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NEGATIVE_COMPLEX_MODULE}) (234{val=,}) (800{val=r}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=b.length}) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=b.length}) (234{val=,}) (800{val=nRows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=v.length}) (234{val=,}) (800{val=nRows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (32 (802{val=getColumnDimension}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=v.length}) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (40{val=LocalizedFormats.NO_SUCH_MATRIX_ENTRY}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (27 (40{val=xval.length}) (236{val===}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (40{val=yval.length}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (250{val=||}) (27 (40{val=zval.length}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NO_DATA}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (2 (801{val=optima}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=OptimizationException})) (214{val=(}) (40{val=LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT}) (234{val=,}) (800{val=starts}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=optima}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (40{val=LocalizedFormats.NO_OPTIMUM_COMPUTED_YET}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=optima}) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=rows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=v.length}) (234{val=,}) (800{val=rows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=columns})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=v.length}) (234{val=,}) (800{val=columns}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (40{val=LocalizedFormats.NO_SUCH_MATRIX_ENTRY}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (40{val=LocalizedFormats.NO_SUCH_MATRIX_ENTRY}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (40{val=LocalizedFormats.NO_SUCH_MATRIX_ENTRY}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (40{val=LocalizedFormats.NO_SUCH_MATRIX_ENTRY}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=array.length}) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_2x2}) (234{val=,}) (40{val=array.length}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=nRows}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=array.length}) (242{val=!=}) (800{val=nCols})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_2x2}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=array.length}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=length}) (242{val=!=}) (800{val=columns})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.DIFFERENT_ROWS_LENGTHS}) (234{val=,}) (800{val=columns}) (234{val=,}) (800{val=length}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=values}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NULL_INPUT_ARRAY}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=values.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (27 (40{val=xval.length}) (236{val===}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (40{val=yval.length}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (250{val=||}) (27 (40{val=fval.length}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NO_DATA}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (14 (304{val=new}) (43 (801{val=DummyLocalizable})) (214{val=(}) (800{val=pattern}) (215{val=)})) (234{val=,}) (800{val=arguments}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (43 (801{val=Localizable})) (800{val=specifier})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=v.length}) (234{val=,}) (800{val=nRows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=nCols})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=v.length}) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (40{val=LocalizedFormats.NO_SUCH_MATRIX_ENTRY}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (40{val=LocalizedFormats.NO_SUCH_MATRIX_ENTRY}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (40{val=LocalizedFormats.NO_SUCH_MATRIX_ENTRY}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (40{val=LocalizedFormats.NO_SUCH_MATRIX_ENTRY}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=newDegreesOfFreedom}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_DEGREES_OF_FREEDOM}) (234{val=,}) (800{val=newDegreesOfFreedom}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=degreesOfFreedom})) (204{val==}) (800{val=newDegreesOfFreedom})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=v.length}) (234{val=,}) (800{val=nRows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=nCols})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=v.length}) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (40{val=LocalizedFormats.NO_SUCH_MATRIX_ENTRY}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=sampleSize}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_SAMPLE_SIZE}) (234{val=,}) (800{val=sampleSize}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathRuntimeException})) (214{val=(}) (14 (304{val=new}) (43 (801{val=UnsupportedOperationException})) (216{val=()})) (234{val=,}) (40{val=LocalizedFormats.NO_DENSITY_FOR_THIS_DISTRIBUTION}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=p}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=p}) (231{val=>}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.OUT_OF_RANGE_SIMPLE}) (234{val=,}) (800{val=p}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=successes}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NEGATIVE_NUMBER_OF_SUCCESSES}) (234{val=,}) (800{val=successes}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (800{val=numberOfSuccesses}) (204{val==}) (800{val=successes})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=b}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (242{val=!=}) (800{val=m})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (32 (800{val=b}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=b.length}) (242{val=!=}) (800{val=m})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=b.length}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=values}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NULL_INPUT_ARRAY}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=values.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=beta}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_SCALE}) (234{val=,}) (800{val=beta}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=scale})) (204{val==}) (800{val=beta})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=alpha}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_SHAPE}) (234{val=,}) (800{val=alpha}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=shape})) (204{val==}) (800{val=alpha})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.OUT_OF_RANGE_SIMPLE}) (234{val=,}) (800{val=p}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Double})) (802{val=getZ}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathRuntimeException})) (214{val=(}) (40{val=LocalizedFormats.SIMPLE_MESSAGE}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_UPPER_BOUND}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=observations.length}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=OptimizationException})) (214{val=(}) (40{val=LocalizedFormats.INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE}) (234{val=,}) (40{val=observations.length}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=e}) (235{val=.}) (802{val=compareTo}) (214{val=(}) (40{val=BigInteger.ZERO}) (215{val=)})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.POWER_NEGATIVE_PARAMETERS}) (234{val=,}) (800{val=k}) (234{val=,}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=e}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.POWER_NEGATIVE_PARAMETERS}) (234{val=,}) (800{val=k}) (234{val=,}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=e}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.POWER_NEGATIVE_PARAMETERS}) (234{val=,}) (800{val=k}) (234{val=,}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=k}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=e}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.POWER_NEGATIVE_PARAMETERS}) (234{val=,}) (800{val=k}) (234{val=,}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=e}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.POWER_NEGATIVE_PARAMETERS}) (234{val=,}) (800{val=k}) (234{val=,}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=e}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.POWER_NEGATIVE_PARAMETERS}) (234{val=,}) (800{val=k}) (234{val=,}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=e}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.POWER_NEGATIVE_PARAMETERS}) (234{val=,}) (800{val=k}) (234{val=,}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=lcm}) (236{val===}) (40{val=Long.MIN_VALUE})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (40{val=LocalizedFormats.LCM_OVERFLOW_64_BITS}) (234{val=,}) (800{val=a}) (234{val=,}) (800{val=b}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=lcm}) (236{val===}) (40{val=Integer.MIN_VALUE})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (40{val=LocalizedFormats.LCM_OVERFLOW_32_BITS}) (234{val=,}) (800{val=a}) (234{val=,}) (800{val=b}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NON_POSITIVE_POLYNOMIAL_DEGREE}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NON_POSITIVE_POLYNOMIAL_DEGREE}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (36 (214{val=(}) (62 (800{val=f}) (328{val=instanceof}) (43 (800{val=PolynomialFunction}))) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.FUNCTION_NOT_POLYNOMIAL}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (62 (800{val=f}) (328{val=instanceof}) (43 (800{val=PolynomialFunction}))) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=p}) (204{val==}) (11 (214{val=(}) (43 (800{val=PolynomialFunction})) (215{val=)}) (800{val=f}))) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.FUNCTION_NOT_POLYNOMIAL}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=nRows}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=nCols}) (230{val=<}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.INSUFFICIENT_ROWS_AND_COLUMNS}) (234{val=,}) (800{val=nRows}) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=covarianceMatrix}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NULL_COVARIANCE_MATRIX}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=offset}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=EventException})) (214{val=(}) (40{val=LocalizedFormats.EVALUATION_FAILED}) (234{val=,}) (800{val=t}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=DerivativeException})) (214{val=(}) (40{val=LocalizedFormats.SIMPLE_MESSAGE}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (27 (27 (800{val=c1}) (203{val=/}) (800{val=c2})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (27 (800{val=c2}) (203{val=/}) (800{val=c3})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=OptimizationException})) (214{val=(}) (40{val=LocalizedFormats.UNABLE_TO_FIRST_GUESS_HARMONIC_COEFFICIENTS}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (40{val=LocalizedFormats.EVALUATION_FAILED}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=argument}) (215{val=)})) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=argument})) (204{val==}) (32 (800{val=argument}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (40{val=LocalizedFormats.EVALUATION_FAILED}) (234{val=,}) (800{val=argument}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=argument})) (204{val==}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (800{val=argument}) (219{val=}})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=cause}) (234{val=,}) (14 (304{val=new}) (43 (801{val=DummyLocalizable})) (214{val=(}) (800{val=pattern}) (215{val=)})) (234{val=,}) (800{val=arguments}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (14 (304{val=new}) (43 (801{val=DummyLocalizable})) (214{val=(}) (800{val=pattern}) (215{val=)})) (234{val=,}) (800{val=arguments}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=incMoment}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=moment}) (235{val=.}) (802{val=increment}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (40{val=LocalizedFormats.CANNOT_INCREMENT_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=target.length}) (242{val=!=}) (40{val=weights.length})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=OptimizationException})) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}) (234{val=,}) (40{val=target.length}) (234{val=,}) (40{val=weights.length}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=rows}) (252{val=<=}) (800{val=cols})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=OptimizationException})) (214{val=(}) (40{val=LocalizedFormats.NO_DEGREES_OF_FREEDOM}) (234{val=,}) (800{val=rows}) (234{val=,}) (800{val=cols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=InvalidMatrixException})) (800{val=ime})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=OptimizationException})) (214{val=(}) (40{val=LocalizedFormats.UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=objective.length}) (242{val=!=}) (800{val=rows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=FunctionEvaluationException})) (214{val=(}) (800{val=point}) (234{val=,}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}) (234{val=,}) (40{val=objective.length}) (234{val=,}) (800{val=rows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=jacobian.length}) (242{val=!=}) (800{val=rows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=FunctionEvaluationException})) (214{val=(}) (800{val=point}) (234{val=,}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}) (234{val=,}) (40{val=jacobian.length}) (234{val=,}) (800{val=rows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (40{val=data.length}) (242{val=!=}) (800{val=n})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=data.length}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=d.length}) (230{val=<}) (27 (800{val=pos}) (200{val=+}) (800{val=size}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.POSITION_SIZE_MISMATCH_INPUT_ARRAY}) (234{val=,}) (800{val=pos}) (234{val=,}) (800{val=size}) (234{val=,}) (40{val=d.length}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (40{val=LocalizedFormats.DUPLICATED_ABSCISSA}) (234{val=,}) (800{val=abscissa}) (234{val=,}) (800{val=i1}) (234{val=,}) (800{val=i2}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (2 (801{val=optima}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=OptimizationException})) (214{val=(}) (40{val=LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT}) (234{val=,}) (800{val=starts}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=optima}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (40{val=LocalizedFormats.NO_OPTIMUM_COMPUTED_YET}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=optima}) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=nRows}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=nCols}) (230{val=<}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.INSUFFICIENT_ROWS_AND_COLUMNS}) (234{val=,}) (800{val=nRows}) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=d}) (204{val==}) (32 (802{val=getDimension}) (216{val=()}))) (227{val=;})) (25 (313{val=if}) (214{val=(}) (27 (800{val=d}) (242{val=!=}) (800{val=n})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (800{val=d}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (800{val=resultComputed})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (40{val=LocalizedFormats.NO_RESULT_AVAILABLE}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (14 (304{val=new}) (43 (801{val=DummyLocalizable})) (214{val=(}) (800{val=pattern}) (215{val=)})) (234{val=,}) (800{val=arguments}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NO_DATA}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (27 (800{val=minimalIterationCount}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (800{val=maximalIterationCount}) (252{val=<=}) (800{val=minimalIterationCount})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.INVALID_ITERATIONS_LIMITS}) (234{val=,}) (800{val=minimalIterationCount}) (234{val=,}) (800{val=maximalIterationCount}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=resultComputed}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=result}) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (40{val=LocalizedFormats.NO_RESULT_AVAILABLE}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=f}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NULL_FUNCTION}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IntegratorException})) (214{val=(}) (40{val=LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION}) (234{val=,}) (800{val=minStep}) (234{val=,}) (32 (800{val=Math}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=h}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=c.length}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=FastFourierTransformer}) (235{val=.}) (802{val=isPowerOf2}) (214{val=(}) (800{val=n}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POWER_OF_TWO}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=FastFourierTransformer}) (235{val=.}) (802{val=isPowerOf2}) (214{val=(}) (800{val=n}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POWER_OF_TWO}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (40{val=data.length}) (242{val=!=}) (800{val=n})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=data.length}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=norm}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (40{val=LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=norm}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (40{val=LocalizedFormats.ZERO_NORM}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=d.length}) (230{val=<}) (27 (800{val=pos}) (200{val=+}) (800{val=size}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.POSITION_SIZE_MISMATCH_INPUT_ARRAY}) (234{val=,}) (800{val=pos}) (234{val=,}) (800{val=size}) (234{val=,}) (40{val=d.length}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=d.length}) (230{val=<}) (27 (800{val=pos}) (200{val=+}) (800{val=size}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.POSITION_SIZE_MISMATCH_INPUT_ARRAY}) (234{val=,}) (800{val=pos}) (234{val=,}) (800{val=size}) (234{val=,}) (40{val=d.length}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=d.length}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=verifyIterationCount}) (216{val=()})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (27 (800{val=maximalIterationCount}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.INVALID_ITERATIONS_LIMITS}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.SAME_SIGN_AT_ENDPOINTS}) (234{val=,}) (800{val=min}) (234{val=,}) (800{val=max}) (234{val=,}) (800{val=yMin}) (234{val=,}) (800{val=yMax}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.OUT_OF_RANGE_SIMPLE}) (234{val=,}) (800{val=p}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=newMean}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_MEAN}) (234{val=,}) (800{val=newMean}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mean})) (204{val==}) (800{val=newMean})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isDefaultValue}) (214{val=(}) (800{val=norm}) (215{val=)})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (40{val=LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=p}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=p}) (231{val=>}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE}) (234{val=,}) (800{val=p}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (800{val=quantile}) (204{val==}) (800{val=p})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (27 (800{val=p}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (800{val=p}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE}) (234{val=,}) (800{val=p}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=getDimension}) (216{val=()})) (242{val=!=}) (800{val=n})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (32 (802{val=getDimension}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=omegaCount}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (40{val=LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=omegaCount}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (40{val=LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.CANNOT_COMPUTE_0TH_ROOT_OF_UNITY}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=omegaCount}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (40{val=LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (800{val=isForward}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isPowerOf2}) (214{val=(}) (40{val=o.length}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING}) (234{val=,}) (40{val=o.length}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isPowerOf2}) (214{val=(}) (40{val=d.length}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING}) (234{val=,}) (40{val=d.length}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_NUMBER_OF_SAMPLES}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=verifyIterationCount}) (216{val=()})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (27 (800{val=maximalIterationCount}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.INVALID_ITERATIONS_LIMITS}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=s}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_EXPONENT}) (234{val=,}) (800{val=s}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=exponent})) (204{val==}) (800{val=s})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.INSUFFICIENT_DIMENSION}) (234{val=,}) (800{val=n}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=numberOfElements})) (204{val==}) (800{val=n})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=i}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.INDEX_NOT_POSITIVE}) (234{val=,}) (800{val=i}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.INITIAL_CAPACITY_NOT_POSITIVE}) (234{val=,}) (800{val=initialCapacity}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=expansionMode}) (242{val=!=}) (800{val=MULTIPLICATIVE_MODE})) (249{val=&&}) (27 (800{val=expansionMode}) (242{val=!=}) (800{val=ADDITIVE_MODE}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.UNSUPPORTED_EXPANSION_MODE}) (234{val=,}) (800{val=expansionMode}) (234{val=,}) (800{val=MULTIPLICATIVE_MODE}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=ADDITIVE_MODE}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=index}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArrayIndexOutOfBoundsException}) (214{val=(}) (40{val=LocalizedFormats.CANNOT_SET_AT_NEGATIVE_INDEX}) (234{val=,}) (800{val=index}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=expansion}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.EXPANSION_FACTOR_SMALLER_THAN_ONE}) (234{val=,}) (800{val=expansion}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=numElements}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArrayIndexOutOfBoundsException}) (214{val=(}) (40{val=LocalizedFormats.CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=format}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NULL_NUMERATOR_FORMAT}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=numeratorFormat})) (204{val==}) (800{val=format})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=format}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NULL_DENOMINATOR_FORMAT}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=denominatorFormat})) (204{val==}) (800{val=format})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=nSteps}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.INTEGRATION_METHOD_NEEDS_AT_LEAST_ONE_PREVIOUS_POINT}) (234{val=,}) (800{val=name}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=normProduct}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (40{val=LocalizedFormats.ZERO_NORM}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=threshold}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (40{val=LocalizedFormats.ZERO_NORM}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=s}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (40{val=LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=Double}) (235{val=.}) (802{val=isInfinite}) (214{val=(}) (800{val=norm2}) (215{val=)})) (250{val=||}) (32 (800{val=Double}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (800{val=norm2}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=OptimizationException})) (214{val=(}) (40{val=LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN}) (234{val=,}) (800{val=rows}) (234{val=,}) (800{val=cols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=CardanEulerSingularityException}) (214{val=(}) (44 (39{val=boolean}) (800{val=isCardan})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (16 (800{val=isCardan}) (233{val=?}) (40{val=LocalizedFormats.CARDAN_ANGLES_SINGULARITY}) (226{val=:}) (40{val=LocalizedFormats.EULER_ANGLES_SINGULARITY})) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=arrayDimension}) (242{val=!=}) (800{val=expected})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}) (234{val=,}) (800{val=arrayDimension}) (234{val=,}) (800{val=expected}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (242{val=!=}) (40{val=startConfiguration.length})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}) (234{val=,}) (800{val=n}) (234{val=,}) (40{val=startConfiguration.length}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (2 (801{val=steps}) (221{val=[}) (800{val=j}) (222{val=]})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.EQUAL_VERTICES_IN_SIMPLEX}) (234{val=,}) (800{val=j}) (234{val=,}) (27 (800{val=j}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=microsphereElements}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NON_POSITIVE_MICROSPHERE_ELEMENTS}) (234{val=,}) (800{val=microsphereElements}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=microsphereElements})) (204{val==}) (800{val=elements})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=brightnessExponent}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NEGATIVE_BRIGHTNESS_EXPONENT}) (234{val=,}) (800{val=brightnessExponent}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=brightnessExponent})) (204{val==}) (800{val=brightnessExponent})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=alpha}) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=alpha}) (252{val=<=}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL}) (234{val=,}) (800{val=alpha}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=OptimizationException})) (214{val=(}) (40{val=LocalizedFormats.UNABLE_TO_BRACKET_OPTIMUM_IN_LINE_SEARCH}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=nRows}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.AT_LEAST_ONE_ROW}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=nCols}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.AT_LEAST_ONE_COLUMN}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=lower}) (251{val=>=}) (800{val=upper})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND}) (234{val=,}) (800{val=upper}) (234{val=,}) (800{val=lower}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=mean}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_MEAN}) (234{val=,}) (800{val=mean}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=sigma}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION}) (234{val=,}) (800{val=sigma}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=mean}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_POISSON_MEAN}) (234{val=,}) (800{val=mean}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=lower}) (251{val=>=}) (800{val=upper})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND}) (234{val=,}) (800{val=upper}) (234{val=,}) (800{val=lower}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=lower}) (251{val=>=}) (800{val=upper})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND}) (234{val=,}) (800{val=upper}) (234{val=,}) (800{val=lower}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=len}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_LENGTH}) (234{val=,}) (800{val=len}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=lower}) (251{val=>=}) (800{val=upper})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND}) (234{val=,}) (800{val=upper}) (234{val=,}) (800{val=lower}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=lower}) (251{val=>=}) (800{val=upper})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND}) (234{val=,}) (800{val=upper}) (234{val=,}) (800{val=lower}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=len}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_LENGTH}) (234{val=,}) (800{val=len}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=b}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (242{val=!=}) (800{val=m})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (32 (800{val=b}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=b.length}) (242{val=!=}) (800{val=m})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=b.length}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=Double}) (235{val=.}) (802{val=isInfinite}) (214{val=(}) (800{val=norm2}) (215{val=)})) (250{val=||}) (32 (800{val=Double}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (800{val=norm2}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=EstimationException})) (214{val=(}) (40{val=LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN}) (234{val=,}) (800{val=rows}) (234{val=,}) (800{val=cols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=sd}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION}) (234{val=,}) (800{val=sd}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (800{val=standardDeviation}) (204{val==}) (800{val=sd})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (7 (800{val=str}) (204{val==}) (32 (800{val=filePointer}) (235{val=.}) (802{val=readLine}) (216{val=()}))) (215{val=)})) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createEOFException}) (214{val=(}) (40{val=LocalizedFormats.URL_CONTAINS_NO_DATA}) (234{val=,}) (800{val=valuesFileURL}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (27 (800{val=empiricalDistribution}) (236{val===}) (500{val=null})) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (32 (32 (800{val=empiricalDistribution}) (235{val=.}) (802{val=getBinStats}) (216{val=()})) (235{val=.}) (802{val=size}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (40{val=LocalizedFormats.DIGEST_NOT_INITIALIZED}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=newBeta}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_BETA}) (234{val=,}) (800{val=newBeta}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=beta})) (204{val==}) (800{val=newBeta})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=newAlpha}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_ALPHA}) (234{val=,}) (800{val=newAlpha}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=alpha})) (204{val==}) (800{val=newAlpha})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=degreesOfFreedom}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_DEGREES_OF_FREEDOM}) (234{val=,}) (800{val=degreesOfFreedom}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=denominatorDegreesOfFreedom})) (204{val==}) (800{val=degreesOfFreedom})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=degreesOfFreedom}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_DEGREES_OF_FREEDOM}) (234{val=,}) (800{val=degreesOfFreedom}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=numeratorDegreesOfFreedom})) (204{val==}) (800{val=degreesOfFreedom})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=getN}) (216{val=()})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (40{val=LocalizedFormats.VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC}) (234{val=,}) (32 (802{val=getN}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=InvalidMatrixException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=EstimationException})) (214{val=(}) (40{val=LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=v}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (32 (800{val=v}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (234{val=,}) (800{val=nRows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=v.length}) (234{val=,}) (800{val=nRows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=v}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (242{val=!=}) (800{val=nCols})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (32 (800{val=v}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=nCols})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=v.length}) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=array.length}) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_2x2}) (234{val=,}) (40{val=array.length}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=nRows}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=array.length}) (242{val=!=}) (800{val=nCols})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_2x2}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=array.length}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=vector}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_2x2}) (234{val=,}) (32 (800{val=vector}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=nRows}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=vector}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (242{val=!=}) (800{val=nCols})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_2x2}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=vector}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=verifyIterationCount}) (216{val=()})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (27 (800{val=maximalIterationCount}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.INVALID_ITERATIONS_LIMITS}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=FastFourierTransformer}) (235{val=.}) (802{val=isPowerOf2}) (214{val=(}) (800{val=n}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POWER_OF_TWO_PLUS_ONE}) (234{val=,}) (40{val=f.length}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=size}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_SAMPLE_SIZE}) (234{val=,}) (800{val=size}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (800{val=sampleSize}) (204{val==}) (800{val=size})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=size}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_POPULATION_SIZE}) (234{val=,}) (800{val=size}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (800{val=populationSize}) (204{val==}) (800{val=size})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=num}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NEGATIVE_NUMBER_OF_SUCCESSES}) (234{val=,}) (800{val=num}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (800{val=numberOfSuccesses}) (204{val==}) (800{val=num})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Localizable})) (800{val=pattern})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=xval.length}) (242{val=!=}) (40{val=yval.length})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathException})) (214{val=(}) (40{val=LocalizedFormats.MISMATCHED_LOESS_ABSCISSA_ORDINATE_ARRAYS}) (234{val=,}) (40{val=xval.length}) (234{val=,}) (40{val=yval.length}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=s}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_SCALE}) (234{val=,}) (800{val=s}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (800{val=scale}) (204{val==}) (800{val=s})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.OUT_OF_RANGE_SIMPLE}) (234{val=,}) (800{val=p}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (2 (801{val=optima}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=OptimizationException})) (214{val=(}) (40{val=LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT}) (234{val=,}) (800{val=starts}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=optima}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (40{val=LocalizedFormats.NO_OPTIMUM_COMPUTED_YET}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=optima}) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (43 (801{val=Localizable})) (800{val=pattern})))
(AST_ROOT_SC2NF (44 (43 (801{val=Localizable})) (800{val=pattern})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=x0}) (231{val=>}) (800{val=x1})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT}) (234{val=,}) (800{val=x0}) (234{val=,}) (800{val=x1}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR}) (234{val=,}) (32 (32 (800{val=obj}) (235{val=.}) (802{val=getClass}) (216{val=()})) (235{val=.}) (802{val=getName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ClassCastException})) (800{val=cce})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.FUNCTION_NOT_DIFFERENTIABLE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=b.length}) (242{val=!=}) (800{val=m})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=b.length}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=v}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (32 (800{val=v}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (234{val=,}) (800{val=nRows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=v.length}) (234{val=,}) (800{val=nRows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=v}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (242{val=!=}) (800{val=nCols})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (32 (800{val=v}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=nCols})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=v.length}) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=array.length}) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_2x2}) (234{val=,}) (40{val=array.length}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=nRows}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=array.length}) (242{val=!=}) (800{val=nCols})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_2x2}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=array.length}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=vector}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_2x2}) (234{val=,}) (32 (800{val=vector}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=nRows}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=vector}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (242{val=!=}) (800{val=nCols})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_2x2}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=vector}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (40{val=d.length}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.AT_LEAST_ONE_ROW}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (2 (801{val=d}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (235{val=.}) (802{val=getField}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=v.length}) (234{val=,}) (800{val=nRows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=nCols})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=v.length}) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (40{val=LocalizedFormats.NO_SUCH_MATRIX_ENTRY}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=b}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (242{val=!=}) (800{val=m})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (32 (800{val=b}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=b.length}) (242{val=!=}) (800{val=m})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=b.length}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (40{val=LocalizedFormats.ASSYMETRIC_EIGEN_NOT_SUPPORTED}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NO_DATA}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=p}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_POISSON_MEAN}) (234{val=,}) (800{val=p}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NotARotationMatrixException})) (214{val=(}) (40{val=LocalizedFormats.UNABLE_TO_ORTHOGONOLIZE_MATRIX}) (234{val=,}) (27 (800{val=i}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=normProduct}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=norm}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (40{val=LocalizedFormats.ZERO_NORM_FOR_ROTATION_AXIS}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (40{val=BigInteger.ZERO}) (235{val=.}) (802{val=equals}) (214{val=(}) (40{val=fraction.numerator}) (215{val=)})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (40{val=LocalizedFormats.ZERO_DENOMINATOR}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (802{val=multiply}) (214{val=(}) (32 (800{val=fraction}) (235{val=.}) (802{val=reciprocal}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (40{val=BigInteger.ZERO}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=bg}) (215{val=)})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (40{val=LocalizedFormats.ZERO_DENOMINATOR}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (27 (800{val=alpha}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (800{val=alpha}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL}) (234{val=,}) (800{val=alpha}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=y0}) (202{val=*}) (800{val=y1})) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.SAME_SIGN_AT_ENDPOINTS}) (234{val=,}) (800{val=min}) (234{val=,}) (800{val=max}) (234{val=,}) (800{val=y0}) (234{val=,}) (800{val=y1}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=values}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NULL_INPUT_ARRAY}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (32 (802{val=incrementAll}) (214{val=(}) (800{val=values}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=values.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=values}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NULL_INPUT_ARRAY}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=values.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.CANNOT_FORMAT_OBJECT_TO_FRACTION}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=format}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NULL_WHOLE_FORMAT}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=wholeFormat})) (204{val==}) (800{val=format})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}) (234{val=,}) (800{val=dimension1}) (234{val=,}) (800{val=dimension2}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=dimension1})) (204{val==}) (800{val=dimension1})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=dimension2})) (204{val==}) (800{val=dimension2})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=f}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NULL_FUNCTION}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=p}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=p}) (231{val=>}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.OUT_OF_RANGE_SIMPLE}) (234{val=,}) (800{val=p}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=trials}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NEGATIVE_NUMBER_OF_TRIALS}) (234{val=,}) (800{val=trials}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (800{val=numberOfTrials}) (204{val==}) (800{val=trials})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=isSequence}) (214{val=(}) (800{val=lower}) (234{val=,}) (800{val=initial}) (234{val=,}) (800{val=upper}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.INVALID_INTERVAL_INITIAL_VALUE_PARAMETERS}) (234{val=,}) (800{val=lower}) (234{val=,}) (800{val=initial}) (234{val=,}) (800{val=upper}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (800{val=resultComputed})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (40{val=LocalizedFormats.NO_RESULT_AVAILABLE}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=f}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NULL_FUNCTION}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (2 (801{val=f}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (242{val=!=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.FIRST_ELEMENT_NOT_ZERO}) (234{val=,}) (2 (801{val=f}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=realFormat}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NULL_REAL_FORMAT}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=realFormat})) (204{val==}) (800{val=realFormat})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=imaginaryFormat}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NULL_IMAGINARY_FORMAT}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=imaginaryFormat})) (204{val==}) (800{val=imaginaryFormat})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=imaginaryCharacter}) (236{val===}) (500{val=null})) (250{val=||}) (27 (32 (800{val=imaginaryCharacter}) (235{val=.}) (802{val=length}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.EMPTY_STRING_FOR_IMAGINARY_CHARACTER}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX}) (234{val=,}) (32 (32 (800{val=obj}) (235{val=.}) (802{val=getClass}) (216{val=()})) (235{val=.}) (802{val=getName}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ClassCastException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.INSTANCES_NOT_COMPARABLE_TO_EXISTING_VALUES}) (234{val=,}) (32 (32 (800{val=v}) (235{val=.}) (802{val=getClass}) (216{val=()})) (235{val=.}) (802{val=getName}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.CLASS_DOESNT_IMPLEMENT_COMPARABLE}) (234{val=,}) (32 (32 (800{val=v}) (235{val=.}) (802{val=getClass}) (216{val=()})) (235{val=.}) (802{val=getName}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=fraction}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NULL_FRACTION}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=numerator}) (236{val===}) (40{val=Integer.MIN_VALUE})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (40{val=LocalizedFormats.OVERFLOW_IN_FRACTION}) (234{val=,}) (800{val=numerator}) (234{val=,}) (800{val=denominator}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Fraction})) (214{val=(}) (38 (201{val=-}) (800{val=numerator})) (234{val=,}) (800{val=denominator}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (40{val=LocalizedFormats.NON_SQUARE_MATRIX}) (234{val=,}) (800{val=rows}) (234{val=,}) (800{val=columns}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Localizable})) (800{val=specifier})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=m}) (252{val=<=}) (800{val=p})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=EstimationException})) (214{val=(}) (40{val=LocalizedFormats.NO_DEGREES_OF_FREEDOM}) (234{val=,}) (800{val=m}) (234{val=,}) (800{val=p}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=InvalidMatrixException})) (800{val=ime})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=EstimationException})) (214{val=(}) (40{val=LocalizedFormats.UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (247{val=++}) (800{val=costEvaluations})) (231{val=>}) (800{val=maxCostEval})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=EstimationException})) (214{val=(}) (40{val=LocalizedFormats.MAX_EVALUATIONS_EXCEEDED}) (234{val=,}) (800{val=maxCostEval}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (2 (801{val=in}) (221{val=[}) (800{val=i}) (222{val=]})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX}) (234{val=,}) (800{val=i}) (234{val=,}) (2 (801{val=in}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (2 (801{val=in}) (221{val=[}) (800{val=i}) (222{val=]})) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_ELEMENT_AT_INDEX}) (234{val=,}) (800{val=i}) (234{val=,}) (2 (801{val=in}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (27 (800{val=alpha}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (800{val=alpha}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL}) (234{val=,}) (800{val=alpha}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (27 (800{val=alpha}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (800{val=alpha}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL}) (234{val=,}) (800{val=alpha}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (27 (800{val=alpha}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (800{val=alpha}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL}) (234{val=,}) (800{val=alpha}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NO_DATA}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_REAL_VECTOR}) (234{val=,}) (32 (32 (800{val=obj}) (235{val=.}) (802{val=getClass}) (216{val=()})) (235{val=.}) (802{val=getName}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (2 (801{val=optima}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (215{val=)})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=OptimizationException})) (214{val=(}) (40{val=LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT}) (234{val=,}) (800{val=starts}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=optimaValues}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (40{val=LocalizedFormats.NO_OPTIMUM_COMPUTED_YET}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=optimaValues}) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=optima}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalStateException}) (214{val=(}) (40{val=LocalizedFormats.NO_OPTIMUM_COMPUTED_YET}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=optima}) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=rows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=v.length}) (234{val=,}) (800{val=rows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=columns})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=v.length}) (234{val=,}) (800{val=columns}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (40{val=LocalizedFormats.NO_SUCH_MATRIX_ENTRY}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (40{val=LocalizedFormats.NO_SUCH_MATRIX_ENTRY}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (40{val=LocalizedFormats.NO_SUCH_MATRIX_ENTRY}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArrayIndexOutOfBoundsException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (40{val=LocalizedFormats.NO_SUCH_MATRIX_ENTRY}) (234{val=,}) (800{val=row}) (234{val=,}) (800{val=column}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=array.length}) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_2x2}) (234{val=,}) (40{val=array.length}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=nRows}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=array.length}) (242{val=!=}) (800{val=nCols})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidMatrixException})) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_2x2}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=array.length}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=length}) (242{val=!=}) (800{val=columns})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.DIFFERENT_ROWS_LENGTHS}) (234{val=,}) (800{val=columns}) (234{val=,}) (800{val=length}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=InvalidMatrixException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=OptimizationException})) (214{val=(}) (40{val=LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=b}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (242{val=!=}) (800{val=m})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (32 (800{val=b}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=b.length}) (242{val=!=}) (800{val=m})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.VECTOR_LENGTH_MISMATCH}) (234{val=,}) (40{val=b.length}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (40{val=xval.length}) (236{val===}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (2 (801{val=xval}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (236{val===}) (500{val=null}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NO_DATA}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=sampleSize}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_SAMPLE_SIZE}) (234{val=,}) (800{val=sampleSize}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=p}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=p}) (231{val=>}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.OUT_OF_RANGE_SIMPLE}) (234{val=,}) (800{val=p}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=x0}) (231{val=>}) (800{val=x1})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT}) (234{val=,}) (800{val=x0}) (234{val=,}) (800{val=x1}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=x0}) (231{val=>}) (800{val=x1})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT}) (234{val=,}) (800{val=x0}) (234{val=,}) (800{val=x1}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalAccessException})) (800{val=e2})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.PERCENTILE_IMPLEMENTATION_CANNOT_ACCESS_METHOD}) (234{val=,}) (800{val=SET_QUANTILE_METHOD_NAME}) (234{val=,}) (32 (32 (800{val=percentileImpl}) (235{val=.}) (802{val=getClass}) (216{val=()})) (235{val=.}) (802{val=getName}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=windowSize}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=windowSize}) (242{val=!=}) (800{val=INFINITE_WINDOW})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_WINDOW_SIZE}) (234{val=,}) (800{val=windowSize}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_UPPER_BOUND}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=mean.length}) (242{val=!=}) (40{val=standardDeviation.length})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}) (234{val=,}) (40{val=mean.length}) (234{val=,}) (40{val=standardDeviation.length}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (40{val=LocalizedFormats.IDENTICAL_ABSCISSAS_DIVISION_BY_ZERO}) (234{val=,}) (800{val=i}) (234{val=,}) (800{val=k}) (234{val=,}) (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.RANDOMKEY_MUTATION_WRONG_CLASS}) (234{val=,}) (32 (32 (800{val=original}) (235{val=.}) (802{val=getClass}) (216{val=()})) (235{val=.}) (802{val=getSimpleName}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED}) (234{val=,}) (800{val=n}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=sum}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (40{val=LocalizedFormats.ARRAY_SUMS_TO_ZERO}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=lower}) (251{val=>=}) (800{val=upper})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.ENDPOINTS_NOT_AN_INTERVAL}) (234{val=,}) (800{val=lower}) (234{val=,}) (800{val=upper}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.OUT_OF_RANGE_ROOT_OF_UNITY_INDEX}) (234{val=,}) (800{val=k}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (800{val=omegaCount}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.OUT_OF_RANGE_ROOT_OF_UNITY_INDEX}) (234{val=,}) (800{val=k}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (800{val=omegaCount}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=lower}) (251{val=>=}) (800{val=upper})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.ENDPOINTS_NOT_AN_INTERVAL}) (234{val=,}) (800{val=lower}) (234{val=,}) (800{val=upper}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=parsePosition}) (235{val=.}) (802{val=getIndex}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createParseException}) (214{val=(}) (32 (800{val=parsePosition}) (235{val=.}) (802{val=getErrorIndex}) (216{val=()})) (234{val=,}) (40{val=LocalizedFormats.UNPARSEABLE_FRACTION_NUMBER}) (234{val=,}) (800{val=source}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=parsePosition}) (235{val=.}) (802{val=getIndex}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createParseException}) (214{val=(}) (32 (800{val=parsePosition}) (235{val=.}) (802{val=getErrorIndex}) (216{val=()})) (234{val=,}) (40{val=LocalizedFormats.UNPARSEABLE_FRACTION_NUMBER}) (234{val=,}) (800{val=source}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=parsePosition}) (235{val=.}) (802{val=getIndex}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createParseException}) (214{val=(}) (32 (800{val=parsePosition}) (235{val=.}) (802{val=getErrorIndex}) (216{val=()})) (234{val=,}) (40{val=LocalizedFormats.UNPARSEABLE_COMPLEX_NUMBER}) (234{val=,}) (800{val=source}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=lower}) (251{val=>=}) (800{val=upper})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.ENDPOINTS_NOT_AN_INTERVAL}) (234{val=,}) (800{val=lower}) (234{val=,}) (800{val=upper}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=parsePosition}) (235{val=.}) (802{val=getIndex}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createParseException}) (214{val=(}) (32 (800{val=parsePosition}) (235{val=.}) (802{val=getErrorIndex}) (216{val=()})) (234{val=,}) (40{val=LocalizedFormats.UNPARSEABLE_REAL_VECTOR}) (234{val=,}) (800{val=source}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NoSuchMethodException})) (800{val=e1})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.PERCENTILE_IMPLEMENTATION_UNSUPPORTED_METHOD}) (234{val=,}) (32 (32 (800{val=percentileImpl}) (235{val=.}) (802{val=getClass}) (216{val=()})) (235{val=.}) (802{val=getName}) (216{val=()})) (234{val=,}) (800{val=SET_QUANTILE_METHOD_NAME}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=parsePosition}) (235{val=.}) (802{val=getIndex}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createParseException}) (214{val=(}) (32 (800{val=parsePosition}) (235{val=.}) (802{val=getErrorIndex}) (216{val=()})) (234{val=,}) (40{val=LocalizedFormats.UNPARSEABLE_3D_VECTOR}) (234{val=,}) (800{val=source}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=NotStrictlyPositiveException}) (214{val=(}) (44 (43 (801{val=Number})) (800{val=value})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=value}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (9{val=false}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=NotPositiveException}) (214{val=(}) (44 (43 (801{val=Number})) (800{val=value})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=value}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (9{val=true}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (27 (40{val=xval.length}) (236{val===}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (40{val=yval.length}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (250{val=||}) (27 (40{val=fval.length}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NoDataException})) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=x.length}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NumberIsTooSmallException})) (214{val=(}) (40{val=LocalizedFormats.NUMBER_OF_POINTS}) (234{val=,}) (40{val=x.length}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=x.length}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NumberIsTooSmallException})) (214{val=(}) (40{val=LocalizedFormats.NUMBER_OF_POINTS}) (234{val=,}) (40{val=x.length}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=mean.length}) (242{val=!=}) (40{val=standardDeviation.length})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=DimensionMismatchException})) (214{val=(}) (40{val=mean.length}) (234{val=,}) (40{val=standardDeviation.length}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NotStrictlyPositiveException})) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (36 (214{val=(}) (16 (27 (800{val=value}) (236{val===}) (500{val=null})) (233{val=?}) (500{val=null}) (226{val=:}) (32 (800{val=value}) (235{val=.}) (802{val=clone}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (36 (214{val=(}) (16 (27 (800{val=point}) (236{val===}) (500{val=null})) (233{val=?}) (500{val=null}) (226{val=:}) (32 (800{val=point}) (235{val=.}) (802{val=clone}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (36 (214{val=(}) (16 (27 (800{val=point}) (236{val===}) (500{val=null})) (233{val=?}) (500{val=null}) (226{val=:}) (32 (800{val=point}) (235{val=.}) (802{val=clone}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=scale}) (204{val==}) (3 (304{val=new}) (5 (39{val=double}) (221{val=[})) (800{val=mainSetDimension}) (222{val=]}))) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NoDataException})) (800{val=ise})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=specific}) (234{val=,}) (40{val=LocalizedFormats.NO_DATA}) (234{val=,}) (11 (214{val=(}) (5 (43 (801{val=Object})) (85{val=[]})) (215{val=)}) (500{val=null})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (7 (2 (2 (2 (801{val=a}) (221{val=[}) (800{val=i}) (222{val=]})) (221{val=[}) (800{val=j}) (222{val=]})) (221{val=[}) (800{val=k}) (222{val=]})) (204{val==}) (2 (801{val=aV}) (221{val=[}) (27 (800{val=i}) (200{val=+}) (27 (800{val=N}) (202{val=*}) (36 (214{val=(}) (27 (800{val=j}) (200{val=+}) (27 (800{val=N}) (202{val=*}) (800{val=k}))) (215{val=)})))) (222{val=]}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (36 (214{val=(}) (27 (800{val=value}) (236{val===}) (500{val=null})) (215{val=)})) (233{val=?}) (500{val=null}) (226{val=:}) (32 (800{val=value}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (36 (214{val=(}) (27 (800{val=point}) (236{val===}) (500{val=null})) (215{val=)})) (233{val=?}) (500{val=null}) (226{val=:}) (32 (800{val=point}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (800{val=specific}) (234{val=,}) (16 (800{val=boundIsAllowed}) (233{val=?}) (40{val=LocalizedFormats.NUMBER_TOO_SMALL}) (226{val=:}) (40{val=LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED})) (234{val=,}) (800{val=wrong}) (234{val=,}) (800{val=min}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (27 (36 (214{val=(}) (27 (800{val=startConfiguration}) (236{val===}) (500{val=null})) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (40{val=startConfiguration.length}) (242{val=!=}) (40{val=startPoint.length})) (215{val=)}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (36 (214{val=(}) (27 (800{val=point}) (236{val===}) (500{val=null})) (215{val=)})) (233{val=?}) (500{val=null}) (226{val=:}) (32 (800{val=point}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=GoalType})) (802{val=getGoalType}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=optimizationGoal}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (40{val=LocalizedFormats.COLUMN_INDEX_OUT_OF_RANGE}) (234{val=,}) (800{val=column}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (32 (802{val=getColumnDimension}) (216{val=()})) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (40{val=LocalizedFormats.ROW_INDEX_OUT_OF_RANGE}) (234{val=,}) (800{val=row}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (32 (802{val=getRowDimension}) (216{val=()})) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (40{val=LocalizedFormats.INDEX_OUT_OF_RANGE}) (234{val=,}) (800{val=index}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (32 (802{val=getDimension}) (216{val=()})) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (40{val=LocalizedFormats.INDEX_OUT_OF_RANGE}) (234{val=,}) (800{val=index}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (32 (802{val=getDimension}) (216{val=()})) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MatrixIndexException})) (214{val=(}) (40{val=LocalizedFormats.INDEX_OUT_OF_RANGE}) (234{val=,}) (800{val=index}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (32 (802{val=getDimension}) (216{val=()})) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=remove}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createUnsupportedOperationException}) (214{val=(}) (40{val=LocalizedFormats.UNSUPPORTED_OPERATION}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=METHOD_NAME}) (234{val=,}) (800{val=nSteps}) (234{val=,}) (27 (800{val=nSteps}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (800{val=minStep}) (234{val=,}) (800{val=maxStep}) (234{val=,}) (800{val=vecAbsoluteTolerance}) (234{val=,}) (800{val=vecRelativeTolerance}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=METHOD_NAME}) (234{val=,}) (800{val=nSteps}) (234{val=,}) (27 (800{val=nSteps}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (800{val=minStep}) (234{val=,}) (800{val=maxStep}) (234{val=,}) (800{val=scalAbsoluteTolerance}) (234{val=,}) (800{val=scalRelativeTolerance}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=METHOD_NAME}) (234{val=,}) (800{val=nSteps}) (234{val=,}) (800{val=nSteps}) (234{val=,}) (800{val=minStep}) (234{val=,}) (800{val=maxStep}) (234{val=,}) (800{val=vecAbsoluteTolerance}) (234{val=,}) (800{val=vecRelativeTolerance}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=METHOD_NAME}) (234{val=,}) (800{val=nSteps}) (234{val=,}) (800{val=nSteps}) (234{val=,}) (800{val=minStep}) (234{val=,}) (800{val=maxStep}) (234{val=,}) (800{val=scalAbsoluteTolerance}) (234{val=,}) (800{val=scalRelativeTolerance}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=populationLimit}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NotPositiveException})) (214{val=(}) (40{val=LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE}) (234{val=,}) (800{val=populationLimit}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (32 (802{val=addAndCheck}) (214{val=(}) (800{val=a}) (234{val=,}) (38 (201{val=-}) (800{val=b})) (234{val=,}) (40{val=LocalizedFormats.OVERFLOW_IN_ADDITION}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=s}) (230{val=<}) (40{val=Integer.MIN_VALUE})) (250{val=||}) (27 (800{val=s}) (231{val=>}) (40{val=Integer.MAX_VALUE}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (40{val=LocalizedFormats.OVERFLOW_IN_SUBTRACTION}) (234{val=,}) (800{val=x}) (234{val=,}) (800{val=y}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=addAndCheck}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=b}) (234{val=,}) (40{val=LocalizedFormats.OVERFLOW_IN_ADDITION}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=s}) (230{val=<}) (40{val=Integer.MIN_VALUE})) (250{val=||}) (27 (800{val=s}) (231{val=>}) (40{val=Integer.MAX_VALUE}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createArithmeticException}) (214{val=(}) (40{val=LocalizedFormats.OVERFLOW_IN_ADDITION}) (234{val=,}) (800{val=x}) (234{val=,}) (800{val=y}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ArithmeticException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (32 (32 (800{val=ex}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (235{val=.}) (802{val=length}) (216{val=()})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkOrder}) (214{val=(}) (800{val=val}) (234{val=,}) (40{val=OrderDirection.INCREASING}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=wrong}) (234{val=,}) (800{val=previous}) (234{val=,}) (800{val=index}) (234{val=,}) (40{val=MathUtils.OrderDirection.INCREASING}) (234{val=,}) (9{val=true}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=t}) (236{val===}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=i}) (251{val=>=}) (800{val=j}))) (215{val=)}) (500{val=continue;})))
(AST_ROOT_SC2NF (21 (7 (800{val=arguments}) (204{val==}) (32 (800{val=ArgUtils}) (235{val=.}) (802{val=flatten}) (214{val=(}) (800{val=args}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=remove}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathUnsupportedOperationException})) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=idxStep}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=ZeroException})) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=idxStep}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=ZeroException})) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=observations}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NullArgumentException})) (214{val=(}) (40{val=LocalizedFormats.INPUT_ARRAY}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=f}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NullArgumentException})) (214{val=(}) (40{val=LocalizedFormats.FUNCTION}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=values}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NullArgumentException})) (214{val=(}) (40{val=LocalizedFormats.INPUT_ARRAY}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=values.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=d}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=ZeroException})) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=d}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=ZeroException})) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=fraction}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NullArgumentException})) (214{val=(}) (40{val=LocalizedFormats.FRACTION}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=fraction}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NullArgumentException})) (214{val=(}) (40{val=LocalizedFormats.FRACTION}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=fraction}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NullArgumentException})) (214{val=(}) (40{val=LocalizedFormats.FRACTION}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=f}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NullArgumentException})) (214{val=(}) (40{val=LocalizedFormats.FUNCTION}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=ZeroException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=DimensionMismatchException})) (214{val=(}) (40{val=xArray.length}) (234{val=,}) (40{val=yArray.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=covarianceMatrix}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NullArgumentException})) (214{val=(}) (40{val=LocalizedFormats.COVARIANCE_MATRIX}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=f}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NullArgumentException})) (214{val=(}) (40{val=LocalizedFormats.FUNCTION}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=function}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NullArgumentException})) (214{val=(}) (40{val=LocalizedFormats.FUNCTION}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=values}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NullArgumentException})) (214{val=(}) (40{val=LocalizedFormats.INPUT_ARRAY}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=values.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=values}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NullArgumentException})) (214{val=(}) (40{val=LocalizedFormats.INPUT_ARRAY}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (32 (802{val=incrementAll}) (214{val=(}) (800{val=values}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=values.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=values}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NullArgumentException})) (214{val=(}) (40{val=LocalizedFormats.INPUT_ARRAY}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=values.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=grad}) (204{val==}) (2 (801{val=weightedResidualJacobian}) (221{val=[}) (800{val=i}) (222{val=]}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=cause}) (234{val=,}) (800{val=argument}) (234{val=,}) (14 (304{val=new}) (43 (801{val=DummyLocalizable})) (214{val=(}) (800{val=pattern}) (215{val=)})) (234{val=,}) (800{val=arguments}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=cause}) (234{val=,}) (800{val=argument}) (234{val=,}) (14 (304{val=new}) (43 (801{val=DummyLocalizable})) (214{val=(}) (800{val=pattern}) (215{val=)})) (234{val=,}) (800{val=arguments}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=argument}) (234{val=,}) (14 (304{val=new}) (43 (801{val=DummyLocalizable})) (214{val=(}) (800{val=pattern}) (215{val=)})) (234{val=,}) (800{val=arguments}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=argument}) (234{val=,}) (14 (304{val=new}) (43 (801{val=DummyLocalizable})) (214{val=(}) (800{val=pattern}) (215{val=)})) (234{val=,}) (800{val=arguments}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (7 (800{val=step}) (239{val=*=}) (32 (800{val=FastMath}) (235{val=.}) (802{val=max}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (800{val=yA}) (203{val=/}) (800{val=yB})) (215{val=)}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (800{val=sum}) (203{val=/}) (40{val=v.length})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (32 (802{val=getChiSquare}) (216{val=()})) (203{val=/}) (800{val=rows})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=wi}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (2 (801{val=residualsWeights}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=h})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=h}) (215{val=)}))) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=handler})) (204{val==}) (800{val=handler})) (227{val=;})) (21 (32 (802{val=reset}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=invR3}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (36 (214{val=(}) (27 (800{val=r2}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=r2}) (215{val=)}))) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=expected}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=random}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=expected}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=random}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=sum2}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=pEnd}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=min}) (214{val=(}) (27 (800{val=pStart}) (200{val=+}) (800{val=BLOCK_SIZE})) (234{val=,}) (800{val=rows}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=pEnd}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=min}) (214{val=(}) (27 (800{val=pStart}) (200{val=+}) (800{val=BLOCK_SIZE})) (234{val=,}) (800{val=rows}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=step}) (204{val==}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (32 (800{val=pb}) (235{val=.}) (802{val=getFinalTime}) (216{val=()})) (201{val=-}) (32 (800{val=pb}) (235{val=.}) (802{val=getInitialTime}) (216{val=()}))) (215{val=)})) (202{val=*}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=t}) (204{val==}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (32 (800{val=rValues}) (235{val=.}) (802{val=getEntry}) (214{val=(}) (800{val=i}) (234{val=,}) (800{val=j}) (215{val=)})) (215{val=)})) (203{val=/}) (32 (800{val=stdErrors}) (235{val=.}) (802{val=getEntry}) (214{val=(}) (800{val=i}) (234{val=,}) (800{val=j}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (27 (800{val=n}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=degree}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=i})) (234{val=,}) (800{val=reference}) (234{val=,}) (800{val=result}) (234{val=,}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (200{val=+}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=reference}) (215{val=)}))) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (200{val=+}) (32 (800{val=Erf}) (235{val=.}) (802{val=erf}) (214{val=(}) (27 (36 (214{val=(}) (27 (800{val=x}) (201{val=-}) (800{val=mean})) (215{val=)})) (203{val=/}) (36 (214{val=(}) (27 (800{val=standardDeviation}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (215{val=)}))) (215{val=)}))) (215{val=)}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (27 (800{val=dx}) (202{val=*}) (800{val=dx})) (200{val=+}) (27 (800{val=dy}) (202{val=*}) (800{val=dy}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (40{val=m.length}) (215{val=)})) (202{val=*}) (32 (800{val=estimator}) (235{val=.}) (802{val=getRMS}) (214{val=(}) (800{val=problem}) (215{val=)}))) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (2 (801{val=result}) (221{val=[}) (800{val=i}) (222{val=]})) (201{val=-}) (2 (801{val=y}) (221{val=[}) (800{val=i}) (222{val=]}))) (215{val=)})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (2 (801{val=result}) (221{val=[}) (800{val=i}) (222{val=]})) (201{val=-}) (2 (801{val=y}) (221{val=[}) (800{val=i}) (222{val=]}))) (215{val=)})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (40{val=problem.target.length}) (215{val=)})) (202{val=*}) (32 (800{val=optimizer}) (235{val=.}) (802{val=getRMS}) (216{val=()}))) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=sumLog}) (237{val=+=}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log}) (214{val=(}) (2 (801{val=values}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=value}) (237{val=+=}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log}) (214{val=(}) (800{val=d}) (215{val=)}))) (227{val=;})) (21 (37 (800{val=n}) (247{val=++})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (27 (38 (201{val=-}) (800{val=mean})) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (201{val=-}) (800{val=p})) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (201{val=-}) (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (27 (38 (201{val=-}) (800{val=x})) (203{val=/}) (800{val=mean})) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=x}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (27 (38 (201{val=-}) (800{val=x})) (203{val=/}) (800{val=mean})) (215{val=)})) (203{val=/}) (800{val=mean})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=sum}) (237{val=+=}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (2 (801{val=p1}) (221{val=[}) (800{val=i}) (222{val=]})) (201{val=-}) (2 (801{val=p2}) (221{val=[}) (800{val=i}) (222{val=]}))) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (36 (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (800{val=x}) (215{val=)})) (201{val=-}) (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (38 (201{val=-}) (800{val=x})) (215{val=)}))) (215{val=)})) (203{val=/}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=float}) (59 (800{val=factor}) (204{val==}) (27 (11 (214{val=(}) (39{val=float}) (215{val=)}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=scale}) (215{val=)}))) (202{val=*}) (800{val=sign}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=log}) (214{val=(}) (800{val=x}) (215{val=)})) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log}) (214{val=(}) (800{val=base}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=u}) (215{val=)})) (200{val=+}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=v}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=u}) (215{val=)})) (200{val=+}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=v}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=boolean}) (59 (800{val=isEqual}) (204{val==}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (800{val=xInt}) (201{val=-}) (800{val=yInt})) (215{val=)})) (252{val=<=}) (800{val=maxUlps}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=equalsIncludingNaN}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (800{val=y}) (201{val=-}) (800{val=x})) (215{val=)})) (252{val=<=}) (800{val=eps})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=equals}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (250{val=||}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (800{val=y}) (201{val=-}) (800{val=x})) (215{val=)})) (252{val=<=}) (800{val=eps}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (36 (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (800{val=x}) (215{val=)})) (200{val=+}) (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (38 (201{val=-}) (800{val=x})) (215{val=)}))) (215{val=)})) (203{val=/}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=floor}) (214{val=(}) (27 (800{val=result}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=sigma}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (200{val=+}) (32 (800{val=FastMath}) (235{val=.}) (802{val=random}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=mu}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=random}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=x}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=x}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=x}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=x}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=scaling_coefficient}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (40{val=f.length}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=scaling_coefficient}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=n}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=scaling_coefficient}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (40{val=f.length}) (215{val=)})))) (227{val=;})) (41 (329{val=return}) (32 (802{val=scaleArray}) (214{val=(}) (32 (802{val=fft}) (214{val=(}) (800{val=f}) (234{val=,}) (9{val=true}) (215{val=)})) (234{val=,}) (800{val=scaling_coefficient}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=scaling_coefficient}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (40{val=f.length}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=scaling_coefficient}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=n}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=scaling_coefficient}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (40{val=f.length}) (215{val=)})))) (227{val=;})) (41 (329{val=return}) (32 (802{val=scaleArray}) (214{val=(}) (32 (802{val=fft}) (214{val=(}) (800{val=f}) (234{val=,}) (9{val=false}) (215{val=)})) (234{val=,}) (800{val=scaling_coefficient}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=atan2}) (214{val=(}) (32 (802{val=getImaginary}) (216{val=()})) (234{val=,}) (32 (802{val=getReal}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=c}) (215{val=)})) (230{val=<}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=d}) (215{val=)}))))
(AST_ROOT_SC2NF (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=dt}) (215{val=)})) (252{val=<=}) (32 (800{val=FastMath}) (235{val=.}) (802{val=ulp}) (214{val=(}) (800{val=stepStart}) (215{val=)}))))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=scalAbsoluteTolerance}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=i}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (40{val=FastMath.PI}) (234{val=,}) (800{val=x}) (234{val=,}) (800{val=accuracy}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=x}) (204{val==}) (32 (800{val=UnivariateRealSolverUtils}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=sin}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (40{val=FastMath.PI}) (234{val=,}) (800{val=x}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=expected}) (234{val=,}) (800{val=result}) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=ulp}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=expected}) (234{val=,}) (800{val=result}) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=ulp}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=singularValues}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (2 (801{val=singularValues}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=result}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (800{val=sigma}) (202{val=*}) (2 (2 (801{val=betaVariance}) (221{val=[}) (800{val=i}) (222{val=]})) (221{val=[}) (800{val=i}) (222{val=]}))) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=fpos}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=floor}) (214{val=(}) (800{val=pos}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=dist}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (800{val=z}) (201{val=-}) (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setMaxGrowth}) (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (38 (201{val=-}) (800{val=exp})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setMaxGrowth}) (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (38 (201{val=-}) (800{val=exp})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=FastFourierTransformer}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (800{val=x}) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (40{val=x.length}) (203{val=/}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=step}) (204{val==}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (32 (800{val=pb}) (235{val=.}) (802{val=getFinalTime}) (216{val=()})) (201{val=-}) (32 (800{val=pb}) (235{val=.}) (802{val=getInitialTime}) (216{val=()}))) (215{val=)})) (202{val=*}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=tolerance}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=max}) (214{val=(}) (27 (800{val=relativeAccuracy}) (202{val=*}) (32 (800{val=z}) (235{val=.}) (802{val=abs}) (216{val=()}))) (234{val=,}) (800{val=absoluteAccuracy}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=sqrt}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (800{val=sqrt}) (214{val=(}) (2 (2 (801{val=c}) (221{val=[}) (800{val=ir}) (222{val=]})) (221{val=[}) (800{val=ir}) (222{val=]})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (58 (39{val=int}) (59 (800{val=k}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=max}) (214{val=(}) (800{val=N}) (234{val=,}) (40{val=seed.length}) (215{val=)})))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=values}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (2 (801{val=values}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (800{val=d}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=t}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (32 (800{val=t}) (214{val=(}) (800{val=m}) (234{val=,}) (800{val=mu}) (234{val=,}) (800{val=v}) (234{val=,}) (800{val=n}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (36 (214{val=(}) (27 (800{val=m}) (201{val=-}) (800{val=mu})) (215{val=)})) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (800{val=v}) (203{val=/}) (800{val=n})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=stepStart}) (204{val==}) (40{val=Double.NaN})) (227{val=;})) (21 (7 (800{val=stepSize}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (800{val=minStep}) (202{val=*}) (800{val=maxStep})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=msg}) (234{val=,}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (800{val=tolerance}) (202{val=*}) (800{val=actual})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=Gamma}) (235{val=.}) (802{val=digamma}) (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (38 (201{val=-}) (800{val=n})) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=step}) (204{val==}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (32 (800{val=pb}) (235{val=.}) (802{val=getFinalTime}) (216{val=()})) (201{val=-}) (32 (800{val=pb}) (235{val=.}) (802{val=getInitialTime}) (216{val=()}))) (215{val=)})) (202{val=*}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=range}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (32 (800{val=pb}) (235{val=.}) (802{val=getFinalTime}) (216{val=()})) (201{val=-}) (32 (800{val=pb}) (235{val=.}) (802{val=getInitialTime}) (216{val=()}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=range}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (32 (800{val=pb}) (235{val=.}) (802{val=getFinalTime}) (216{val=()})) (201{val=-}) (32 (800{val=pb}) (235{val=.}) (802{val=getInitialTime}) (216{val=()}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=scalAbsoluteTolerance}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=i}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=absAi}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (2 (801{val=coefficients}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (27 (800{val=median}) (200{val=+}) (27 (800{val=scale}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=tan}) (214{val=(}) (27 (40{val=FastMath.PI}) (202{val=*}) (36 (214{val=(}) (27 (800{val=p}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)}))))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (40{val=FastMath.PI})) (215{val=)})) (202{val=*}) (36 (214{val=(}) (27 (800{val=scale}) (203{val=/}) (36 (214{val=(}) (27 (27 (800{val=dev}) (202{val=*}) (800{val=dev})) (200{val=+}) (27 (800{val=scale}) (202{val=*}) (800{val=scale}))) (215{val=)}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Double})) (59 (800{val=pi}) (204{val==}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (40{val=FastMath.PI}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=pEnd}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=min}) (214{val=(}) (27 (800{val=pStart}) (200{val=+}) (800{val=BLOCK_SIZE})) (234{val=,}) (800{val=rows}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=pEnd}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=min}) (214{val=(}) (27 (800{val=pStart}) (200{val=+}) (800{val=BLOCK_SIZE})) (234{val=,}) (800{val=rows}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=stdDev}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (32 (800{val=matrix}) (235{val=.}) (802{val=getEntry}) (214{val=(}) (800{val=i}) (234{val=,}) (800{val=i}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (27 (11 (214{val=(}) (39{val=int}) (215{val=)}) (36 (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=x})) (200{val=+}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=y}))) (215{val=)})) (215{val=)}))) (211{val=%}) (34{val=NUMBER_CONSTANT})) (236{val===}) (34{val=NUMBER_CONSTANT})))
(AST_ROOT_SC2NF (27 (27 (11 (214{val=(}) (39{val=int}) (215{val=)}) (36 (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=x})) (200{val=+}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=y}))) (215{val=)})) (215{val=)}))) (211{val=%}) (34{val=NUMBER_CONSTANT})) (236{val===}) (34{val=NUMBER_CONSTANT})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=walk}) (215{val=)})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=walk}) (215{val=)})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=walk}) (215{val=)})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (215{val=)}))) (234{val=,}) (32 (800{val=sample}) (235{val=.}) (802{val=getStandardDeviation}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (215{val=)}))) (234{val=,}) (32 (800{val=sample}) (235{val=.}) (802{val=getStandardDeviation}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=value}) (242{val=!=}) (800{val=i})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=res}) (237{val=+=}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (800{val=value}) (201{val=-}) (800{val=i})) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=value}) (237{val=+=}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=k}) (234{val=,}) (800{val=m}) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=exponent}) (215{val=)}))) (215{val=)})) (203{val=/}) (32 (802{val=generalizedHarmonic}) (214{val=(}) (800{val=numberOfElements}) (234{val=,}) (800{val=exponent}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=widthSufficient}) (204{val==}) (27 (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=min}) (214{val=(}) (800{val=lowerBinMass}) (234{val=,}) (800{val=upperBinMass}) (215{val=)})) (202{val=*}) (800{val=sampleSize})) (251{val=>=}) (800{val=minExpectedCount}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (800{val=criterion}) (203{val=/}) (40{val=wm.length})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=factor}) (204{val==}) (38 (201{val=-}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (32 (800{val=wm}) (235{val=.}) (802{val=getWeight}) (216{val=()})) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (800{val=value}) (201{val=-}) (800{val=expected})) (215{val=)})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=double}) (802{val=end}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=sum}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=atan2}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=accum3}) (240{val=/=}) (27 (800{val=variance}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=variance}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (27 (36 (214{val=(}) (27 (800{val=n0}) (202{val=*}) (40{val=moment.m3})) (215{val=)})) (203{val=/}) (36 (214{val=(}) (27 (36 (214{val=(}) (27 (800{val=n0}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (202{val=*}) (36 (214{val=(}) (27 (800{val=n0}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=variance}) (215{val=)})) (202{val=*}) (800{val=variance})) (215{val=)}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=u}) (235{val=.}) (802{val=getGeometricMean}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=asin}) (214{val=(}) (27 (800{val=z}) (203{val=/}) (32 (802{val=getNorm}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=atan2}) (214{val=(}) (800{val=y}) (234{val=,}) (800{val=x}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=x}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=random}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (2 (801{val=generated}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=HarmonicFunction})) (214{val=(}) (27 (800{val=a}) (202{val=*}) (800{val=omega})) (234{val=,}) (800{val=omega}) (234{val=,}) (27 (800{val=phi}) (200{val=+}) (27 (40{val=FastMath.PI}) (203{val=/}) (34{val=NUMBER_CONSTANT}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (800{val=a}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=cos}) (214{val=(}) (27 (27 (800{val=omega}) (202{val=*}) (800{val=x})) (200{val=+}) (800{val=phi})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Complex})) (59 (800{val=sqrtz}) (204{val==}) (32 (800{val=ComplexUtils}) (235{val=.}) (802{val=polar2Complex}) (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=r}) (215{val=)})) (234{val=,}) (27 (800{val=theta}) (203{val=/}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=TestUtils}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Complex})) (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=acos}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (32 (40{val=Complex.ZERO}) (235{val=.}) (802{val=acos}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (800{val=value}) (201{val=-}) (800{val=reference})) (215{val=)})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=long}) (59 (800{val=index}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=round}) (214{val=(}) (27 (36 (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=random}) (216{val=()})) (215{val=)})) (202{val=*}) (40{val=testArray.length})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=length}) (204{val==}) (27 (32 (800{val=list}) (235{val=.}) (802{val=size}) (216{val=()})) (201{val=-}) (32 (800{val=FastMath}) (235{val=.}) (802{val=max}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (32 (800{val=list}) (235{val=.}) (802{val=size}) (216{val=()})) (201{val=-}) (800{val=windowSize})) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=c}) (204{val==}) (27 (800{val=t2}) (200{val=+}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (36 (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (27 (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (202{val=*}) (800{val=t2})) (215{val=)})) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=t}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (40{val=FastMath.PI}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=t}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (40{val=FastMath.PI}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=e1}) (235{val=.}) (802{val=distanceFrom}) (214{val=(}) (800{val=e2}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=error}) (204{val==}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (800{val=error}) (203{val=/}) (40{val=scale.length})) (215{val=)})) (202{val=*}) (2 (801{val=errfac}) (221{val=[}) (27 (800{val=currentDegree}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (222{val=]})))) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=log}) (214{val=(}) (800{val=x}) (215{val=)})) (201{val=-}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (800{val=x}))))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=expected}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=random}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=expected}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=random}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=power}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=normalizedAbscissa}) (234{val=,}) (800{val=order}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=Vector3D}) (235{val=.}) (802{val=distance}) (214{val=(}) (800{val=v1}) (234{val=,}) (800{val=v2}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (32 (14 (304{val=new}) (43 (801{val=Vector3D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=getNorm}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (27 (32 (800{val=sumOfLogs}) (235{val=.}) (802{val=getResult}) (216{val=()})) (203{val=/}) (32 (800{val=sumOfLogs}) (235{val=.}) (802{val=getN}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=x}) (215{val=)})) (234{val=,}) (32 (800{val=f}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=x}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=convergence})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=convergence}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=capacity}) (204{val==}) (11 (214{val=(}) (39{val=int}) (215{val=)}) (32 (800{val=FastMath}) (235{val=.}) (802{val=ceil}) (214{val=(}) (27 (800{val=expectedSize}) (203{val=/}) (800{val=LOAD_FACTOR})) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=fl}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=floor}) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=cumulativeProbability}) (214{val=(}) (11 (214{val=(}) (39{val=int}) (215{val=)}) (32 (800{val=FastMath}) (235{val=.}) (802{val=floor}) (214{val=(}) (800{val=x}) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (800{val=value}) (201{val=-}) (800{val=reference})) (215{val=)})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=absError}) (204{val==}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=expected}) (215{val=)})) (202{val=*}) (800{val=relativeError}))) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (800{val=msg}) (234{val=,}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (800{val=absError}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (38 (201{val=-}) (800{val=mean})) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log}) (214{val=(}) (800{val=unif}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=sigma}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=mean}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (800{val=x1}) (201{val=-}) (800{val=x0})) (215{val=)})) (252{val=<=}) (800{val=absoluteAccuracy})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=setResult}) (214{val=(}) (800{val=x1}) (234{val=,}) (800{val=i}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=x1}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=delta}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (32 (802{val=getEntry}) (214{val=(}) (800{val=i}) (215{val=)})) (201{val=-}) (2 (801{val=v}) (221{val=[}) (800{val=i}) (222{val=]}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=delta}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (32 (802{val=getEntry}) (214{val=(}) (800{val=i}) (215{val=)})) (201{val=-}) (2 (801{val=v}) (221{val=[}) (800{val=i}) (222{val=]}))) (215{val=)}))) (227{val=;})) (21 (7 (800{val=max}) (237{val=+=}) (800{val=delta})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=res}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=res}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=value}) (215{val=)})) (230{val=<}) (800{val=epsilon})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=step}) (204{val==}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (32 (800{val=pb}) (235{val=.}) (802{val=getFinalTime}) (216{val=()})) (201{val=-}) (32 (800{val=pb}) (235{val=.}) (802{val=getInitialTime}) (216{val=()}))) (215{val=)})) (202{val=*}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (800{val=value}) (201{val=-}) (800{val=expected})) (215{val=)})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=Fraction})) (214{val=(}) (40{val=FastMath.PI}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (14 (304{val=new}) (43 (801{val=Fraction})) (214{val=(}) (27 (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (200{val=+}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (215{val=)})) (203{val=/}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=max}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (800{val=max}) (214{val=(}) (800{val=max}) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=delta}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=max}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (800{val=max}) (214{val=(}) (800{val=max}) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=delta}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (39{val=double}) (59 (800{val=delta}) (204{val==}) (27 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (201{val=-}) (2 (801{val=v}) (221{val=[}) (800{val=i}) (222{val=]})))) (227{val=;})) (21 (7 (800{val=sum}) (237{val=+=}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=delta}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=sum}) (237{val=+=}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=delta}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=sum}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=sum}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (39{val=double}) (800{val=a})) (226{val=:}) (800{val=data}) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=max}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (800{val=max}) (214{val=(}) (800{val=max}) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=a}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (39{val=double}) (800{val=a})) (226{val=:}) (800{val=data}) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=sum}) (237{val=+=}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=a}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=sum}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=ulp}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=signum}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=rint}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=floor}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=ceil}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=cbrt}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=atan}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=asin}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=acos}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=tan}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sin}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=cos}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=tanh}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sinh}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=cosh}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log1p}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log10}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=expm1}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (800{val=d}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (800{val=i}) (230{val=<}) (32 (800{val=FastMath}) (235{val=.}) (802{val=min}) (214{val=(}) (800{val=rows}) (234{val=,}) (800{val=columns}) (215{val=)}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=inv}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=norm2}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (800{val=value}) (201{val=-}) (2 (801{val=searchArray}) (221{val=[}) (800{val=i}) (222{val=]}))) (215{val=)})) (230{val=<}) (800{val=tolerance})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=found}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}}))) (21 (37 (800{val=i}) (247{val=++})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=dt}) (215{val=)})) (252{val=<=}) (32 (800{val=FastMath}) (235{val=.}) (802{val=ulp}) (214{val=(}) (800{val=stepStart}) (215{val=)}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=step})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=step}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=p}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=min}) (214{val=(}) (800{val=m}) (234{val=,}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=range}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (32 (800{val=pb}) (235{val=.}) (802{val=getFinalTime}) (216{val=()})) (201{val=-}) (32 (800{val=pb}) (235{val=.}) (802{val=getInitialTime}) (216{val=()}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=range}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (32 (800{val=pb}) (235{val=.}) (802{val=getFinalTime}) (216{val=()})) (201{val=-}) (32 (800{val=pb}) (235{val=.}) (802{val=getInitialTime}) (216{val=()}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=scalAbsoluteTolerance}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=i}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (39{val=int}) (215{val=)}) (32 (800{val=FastMath}) (235{val=.}) (802{val=min}) (214{val=(}) (32 (800{val=randomData}) (235{val=.}) (802{val=nextPoisson}) (214{val=(}) (800{val=mean}) (215{val=)})) (234{val=,}) (40{val=Integer.MAX_VALUE}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=normal}) (235{val=.}) (802{val=setStandardDeviation}) (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=p}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=unequalCounts}) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=weight}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (11 (214{val=(}) (39{val=double}) (215{val=)}) (800{val=countSum1})) (203{val=/}) (11 (214{val=(}) (39{val=double}) (215{val=)}) (800{val=countSum2}))) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (800{val=sumExpected}) (201{val=-}) (800{val=sumObserved})) (215{val=)})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=ratio}) (204{val==}) (27 (800{val=sumObserved}) (203{val=/}) (800{val=sumExpected}))) (227{val=;})) (21 (7 (800{val=rescale}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=s17}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=scalAbsoluteTolerance}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=i}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=norm}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=max}) (214{val=(}) (800{val=norm}) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (32 (800{val=e}) (235{val=.}) (802{val=getValue}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=norm}) (237{val=+=}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (32 (800{val=e}) (235{val=.}) (802{val=getValue}) (216{val=()})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=sum}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (27 (800{val=dx}) (202{val=*}) (800{val=dx})) (200{val=+}) (27 (800{val=dy}) (202{val=*}) (800{val=dy}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (32 (800{val=circle}) (235{val=.}) (802{val=getM}) (216{val=()})) (215{val=)})) (202{val=*}) (800{val=rms})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (800{val=a}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=cos}) (214{val=(}) (27 (27 (800{val=omega}) (202{val=*}) (800{val=x})) (200{val=+}) (800{val=phi})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=f}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=normSq}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=getN}) (216{val=()})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=stdDev}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (32 (802{val=getVariance}) (216{val=()})) (215{val=)}))) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (7 (800{val=stdDev}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=scalAbsoluteTolerance}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=i}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=h}) (215{val=)})) (230{val=<}) (800{val=minStep})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=maxStep}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (32 (800{val=pb}) (235{val=.}) (802{val=getFinalTime}) (216{val=()})) (201{val=-}) (32 (800{val=pb}) (235{val=.}) (802{val=getInitialTime}) (216{val=()}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=getN}) (216{val=()})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=stdDev}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (32 (802{val=getVariance}) (216{val=()})) (215{val=)}))) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (7 (800{val=stdDev}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=y0}) (204{val==}) (4 (218{val={}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sin}) (214{val=(}) (800{val=a}) (215{val=)})) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=cos}) (214{val=(}) (800{val=a}) (215{val=)})) (219{val=}}))) (227{val=;})))
(AST_ROOT_SC2NF (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (38 (201{val=-}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (219{val=}}))))
(AST_ROOT_SC2NF (4 (218{val={}) (14 (304{val=new}) (43 (801{val=BigReal})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (40{val=BigReal.ONE}) (234{val=,}) (40{val=BigReal.ZERO}) (234{val=,}) (14 (304{val=new}) (43 (801{val=BigReal})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (14 (304{val=new}) (43 (801{val=BigReal})) (214{val=(}) (40{val=FastMath.PI}) (215{val=)})) (234{val=,}) (14 (304{val=new}) (43 (801{val=BigReal})) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=deltaNorm}) (231{val=>}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=max}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=initialNorm}) (215{val=)})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (40{val=FastMath.PI}) (234{val=,}) (32 (800{val=MathUtils}) (235{val=.}) (802{val=scalb}) (214{val=(}) (40{val=FastMath.PI}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=MathUtils}) (235{val=.}) (802{val=hash}) (214{val=(}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (32 (800{val=FastMath}) (235{val=.}) (802{val=nextAfter}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (219{val=}}))) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (27 (800{val=i}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log}) (214{val=(}) (32 (802{val=factorial}) (214{val=(}) (800{val=i}) (215{val=)})) (215{val=)})) (234{val=,}) (32 (800{val=MathUtils}) (235{val=.}) (802{val=factorialLog}) (214{val=(}) (800{val=i}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (32 (800{val=FastMath}) (235{val=.}) (802{val=nextAfter}) (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=nextAfter}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=MathUtils}) (235{val=.}) (802{val=equals}) (214{val=(}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (34{val=NUMBER_CONSTANT}) (219{val=}}))) (234{val=,}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (32 (800{val=FastMath}) (235{val=.}) (802{val=nextAfter}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (219{val=}}))) (215{val=)})))
(AST_ROOT_SC2NF (21 (7 (800{val=ret}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (27 (27 (800{val=p1}) (200{val=+}) (800{val=p2})) (201{val=-}) (800{val=p3})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=min}) (214{val=(}) (800{val=k}) (234{val=,}) (800{val=m}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=max}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (800{val=m}) (201{val=-}) (36 (214{val=(}) (27 (800{val=n}) (201{val=-}) (800{val=k})) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (201{val=-}) (32 (800{val=distribution}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (32 (802{val=getSlope}) (216{val=()})) (215{val=)})) (203{val=/}) (32 (802{val=getSlopeStdErr}) (216{val=()}))) (215{val=)}))) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (32 (802{val=getMeanSquareError}) (216{val=()})) (203{val=/}) (800{val=sumXX})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=result}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (32 (802{val=getRSquare}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=sumXX}) (215{val=)})) (230{val=<}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (40{val=Double.MIN_VALUE}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=Double.NaN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=ulp}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=signum}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=rint}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=cosh}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=acos}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=cos}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log10}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=floor}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=ceil}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=cbrt}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=tanh}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=tan}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=atan}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=asin}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=expm1}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sinh}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sin}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=BigFraction})) (214{val=(}) (40{val=FastMath.PI}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (14 (304{val=new}) (43 (801{val=BigFraction})) (214{val=(}) (27 (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (200{val=+}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (215{val=)})) (203{val=/}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=step}) (204{val==}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (32 (800{val=pb}) (235{val=.}) (802{val=getFinalTime}) (216{val=()})) (201{val=-}) (32 (800{val=pb}) (235{val=.}) (802{val=getInitialTime}) (216{val=()}))) (215{val=)})) (202{val=*}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=FastFourierTransformer}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (800{val=x}) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (36 (214{val=(}) (27 (40{val=x.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=c}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (27 (800{val=t0}) (201{val=-}) (800{val=t})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (32 (800{val=circle}) (235{val=.}) (802{val=getN}) (216{val=()})) (215{val=)})) (202{val=*}) (32 (800{val=optimizer}) (235{val=.}) (802{val=getRMS}) (216{val=()}))) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=product}) (239{val=*=}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (2 (801{val=values}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (2 (801{val=weights}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=FastFourierTransformer}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (800{val=x2}) (234{val=,}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (40{val=x2.length}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertNotSame}) (214{val=(}) (800{val=v}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (34{val=NUMBER_CONSTANT}) (200{val=+}) (32 (800{val=FastMath}) (235{val=.}) (802{val=ulp}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (219{val=}}))) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=scaling_coefficient}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (36 (214{val=(}) (27 (800{val=n}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=scaling_coefficient}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (36 (214{val=(}) (27 (40{val=f.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (800{val=fn1}) (201{val=-}) (800{val=fn})) (215{val=)})) (252{val=<=}) (800{val=threshold})) (215{val=)}) (41 (329{val=return}) (800{val=o}) (227{val=;}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertNotSame}) (214{val=(}) (800{val=v}) (234{val=,}) (14 (304{val=new}) (43 (801{val=OpenMapRealVector})) (214{val=(}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (34{val=NUMBER_CONSTANT}) (200{val=+}) (32 (800{val=FastMath}) (235{val=.}) (802{val=ulp}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (219{val=}}))) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=sin}) (214{val=(}) (27 (27 (800{val=i}) (202{val=*}) (40{val=FastMath.PI})) (203{val=/}) (800{val=n})) (215{val=)})) (202{val=*}) (36 (214{val=(}) (27 (2 (801{val=f}) (221{val=[}) (800{val=i}) (222{val=]})) (200{val=+}) (2 (801{val=f}) (221{val=[}) (27 (800{val=n}) (201{val=-}) (800{val=i})) (222{val=]}))) (215{val=)}))))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=scaling_coefficient}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (800{val=n})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=scaling_coefficient}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (40{val=f.length})) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (32 (800{val=FastFourierTransformer}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (32 (802{val=fst}) (214{val=(}) (800{val=f}) (215{val=)})) (234{val=,}) (800{val=scaling_coefficient}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=tmp2}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (800{val=tmp1}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=tmp2}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=tmpSquare}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=absTolerance}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=i}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (800{val=max}) (201{val=-}) (800{val=min})) (215{val=)})) (252{val=<=}) (800{val=absoluteAccuracy})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=ci}) (234{val=,}) (2 (801{val=l40}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=ci}) (215{val=)})) (202{val=*}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (32 (800{val=Tk}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=x}) (215{val=)})) (215{val=)})) (230{val=<}) (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)}))))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=tmp2}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (800{val=tmp1}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=tmp2}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=tmpSquare}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=mi}) (234{val=,}) (800{val=vi}) (234{val=,}) (27 (800{val=paramsAccuracy}) (202{val=*}) (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (200{val=+}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=mi}) (215{val=)}))) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=theoreticalMinCost}) (234{val=,}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=m}) (215{val=)})) (202{val=*}) (800{val=rms})) (234{val=,}) (800{val=threshold}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (2 (801{val=result}) (221{val=[}) (800{val=i}) (222{val=]})) (201{val=-}) (2 (801{val=y}) (221{val=[}) (800{val=i}) (222{val=]}))) (215{val=)})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=capacity}) (204{val==}) (11 (214{val=(}) (39{val=int}) (215{val=)}) (32 (800{val=FastMath}) (235{val=.}) (802{val=ceil}) (214{val=(}) (27 (800{val=expectedSize}) (203{val=/}) (800{val=LOAD_FACTOR})) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (32 (800{val=variance}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=mean}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (32 (800{val=variance}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=mean}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (32 (800{val=variance}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (32 (800{val=variance}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=getResult}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (32 (800{val=variance}) (235{val=.}) (802{val=getResult}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (800{val=minor}) (230{val=<}) (32 (800{val=FastMath}) (235{val=.}) (802{val=min}) (214{val=(}) (800{val=m}) (234{val=,}) (800{val=n}) (215{val=)}))))
(AST_ROOT_SC2NF (27 (800{val=j}) (230{val=<}) (32 (800{val=FastMath}) (235{val=.}) (802{val=min}) (214{val=(}) (27 (800{val=i}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (800{val=n}) (215{val=)}))))
(AST_ROOT_SC2NF (58 (39{val=int}) (59 (800{val=row}) (204{val==}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=min}) (214{val=(}) (800{val=m}) (234{val=,}) (800{val=n}) (215{val=)})) (201{val=-}) (34{val=NUMBER_CONSTANT})))))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxEvaluations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxEvaluations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxEvaluations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxEvaluations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxEvaluations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxEvaluations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxEvaluations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxEvaluations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxEvaluations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxEvaluations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxEvaluations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxEvaluations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ConvergenceException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (36 (214{val=(}) (38 (207{val=!}) (800{val=solvable})) (215{val=)})) (249{val=&&}) (36 (214{val=(}) (27 (800{val=degree}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=RealPointValuePair})) (231{val=>})) (800{val=convergenceChecker})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=GoalType})) (802{val=getGoalType}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=goal}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxEvaluations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxEvaluations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=setMaxEvaluations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ConvergenceException})) (800{val=ee})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=sum}) (235{val=.}) (802{val=getResult}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=clear}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=value}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (21 (7 (800{val=n}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=SumOfSquares}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=n}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (21 (7 (800{val=value}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=sumSq}) (235{val=.}) (802{val=getResult}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=clear}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=value}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (21 (7 (800{val=n}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Sum}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=n}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (21 (7 (800{val=value}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=checkClearValue}) (214{val=(}) (800{val=statistic}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkClearValue}) (214{val=(}) (800{val=statistic}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=clear}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=value}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (21 (7 (800{val=n}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Product}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=n}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (21 (7 (800{val=value}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=product}) (235{val=.}) (802{val=getResult}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (34{val=NUMBER_CONSTANT}) (200{val=+}) (36 (214{val=(}) (27 (800{val=sign}) (230{val=<}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (200{val=+}) (36 (214{val=(}) (27 (800{val=nans}) (230{val=<}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (200{val=+}) (800{val=exp}) (200{val=+}) (32 (800{val=Arrays}) (235{val=.}) (802{val=hashCode}) (214{val=(}) (800{val=mant}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=int}) (802{val=getNumberOfRegressors}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (22 (2 (801{val=x}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (235{val=.}) (800{val=length})) (200{val=+}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=int}) (802{val=getNumberOfRegressors}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (22 (2 (801{val=x}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (235{val=.}) (800{val=length})) (200{val=+}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=boolean}) (59 (800{val=isMinim}) (204{val==}) (27 (32 (802{val=getGoalType}) (216{val=()})) (236{val===}) (40{val=GoalType.MINIMIZE}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Well44497b}) (214{val=(}) (44 (39{val=long}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=M1}) (234{val=,}) (800{val=M2}) (234{val=,}) (800{val=M3}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=M1}) (234{val=,}) (800{val=M2}) (234{val=,}) (800{val=M3}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Well44497b}) (214{val=(}) (44 (39{val=int}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=M1}) (234{val=,}) (800{val=M2}) (234{val=,}) (800{val=M3}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Well44497b}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=M1}) (234{val=,}) (800{val=M2}) (234{val=,}) (800{val=M3}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Well19937c}) (214{val=(}) (44 (39{val=long}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=M1}) (234{val=,}) (800{val=M2}) (234{val=,}) (800{val=M3}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=M1}) (234{val=,}) (800{val=M2}) (234{val=,}) (800{val=M3}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Well19937c}) (214{val=(}) (44 (39{val=int}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=M1}) (234{val=,}) (800{val=M2}) (234{val=,}) (800{val=M3}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Well19937c}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=M1}) (234{val=,}) (800{val=M2}) (234{val=,}) (800{val=M3}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (2 (801{val=v}) (221{val=[}) (800{val=indexRm2}) (222{val=]})) (243{val=&=}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (2 (801{val=v}) (221{val=[}) (800{val=indexRm2}) (222{val=]})) (243{val=&=}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (2 (801{val=v}) (221{val=[}) (800{val=indexRm2}) (222{val=]})) (243{val=&=}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (2 (801{val=v}) (221{val=[}) (800{val=indexRm2}) (222{val=]})) (243{val=&=}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=rows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=DimensionMismatchException})) (214{val=(}) (40{val=v.length}) (234{val=,}) (800{val=rows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=columns})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=DimensionMismatchException})) (214{val=(}) (40{val=v.length}) (234{val=,}) (800{val=columns}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=length}) (242{val=!=}) (800{val=columns})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=DimensionMismatchException})) (214{val=(}) (800{val=columns}) (234{val=,}) (800{val=length}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}) (234{val=,}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH}) (234{val=,}) (800{val=wrong}) (234{val=,}) (800{val=expected}) (215{val=)}) (227{val=;})) (21 (7 (800{val=dimension}) (204{val==}) (800{val=expected})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=rows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=DimensionMismatchException})) (214{val=(}) (40{val=v.length}) (234{val=,}) (800{val=rows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=columns})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=DimensionMismatchException})) (214{val=(}) (40{val=v.length}) (234{val=,}) (800{val=columns}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=length}) (242{val=!=}) (800{val=columns})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=DimensionMismatchException})) (214{val=(}) (800{val=columns}) (234{val=,}) (800{val=length}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=v}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=DimensionMismatchException})) (214{val=(}) (32 (800{val=v}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (234{val=,}) (800{val=nRows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=DimensionMismatchException})) (214{val=(}) (40{val=v.length}) (234{val=,}) (800{val=nRows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=v}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (242{val=!=}) (800{val=nCols})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=DimensionMismatchException})) (214{val=(}) (32 (800{val=v}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=nCols})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=DimensionMismatchException})) (214{val=(}) (40{val=v.length}) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=dist}) (204{val==}) (14 (304{val=new}) (43 (801{val=PoissonDistributionImpl})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=p}) (234{val=,}) (800{val=DEFAULT_EPSILON}) (234{val=,}) (800{val=DEFAULT_MAX_ITERATIONS}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=ChiSquaredDistributionImpl})) (214{val=(}) (800{val=df}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=ChiSquaredDistributionImpl})) (214{val=(}) (27 (40{val=expected.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (27 (34{val=NUMBER_CONSTANT}) (201{val=-}) (32 (800{val=distribution}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (32 (802{val=chiSquare}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=observed}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=density}) (214{val=(}) (44 (39{val=double}) (800{val=x})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (36 (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=max}) (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=mij}) (215{val=)})) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=mji}) (215{val=)})) (215{val=)})) (202{val=*}) (800{val=eps})) (215{val=)})))
(AST_ROOT_SC2NF (31 (83{val=protected}) (802{val=AbstractContinuousDistribution}) (216{val=()}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=FDistributionImpl})) (59 (800{val=fd}) (204{val==}) (14 (304{val=new}) (43 (801{val=FDistributionImpl})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=alpha}) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=alpha}) (252{val=<=}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=OutOfRangeException})) (214{val=(}) (40{val=LocalizedFormats.SIGNIFICANCE_LEVEL}) (234{val=,}) (800{val=alpha}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=TDistributionImpl})) (214{val=(}) (27 (800{val=n}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=TDistributionImpl})) (214{val=(}) (27 (800{val=n}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (79 (208{val=@}) (802{val=SuppressWarnings}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (83{val=private}) (802{val=RandomAdaptor}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=randomGenerator}) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=a}) (235{val=.}) (802{val=dotrap}) (214{val=(}) (40{val=DfpField.FLAG_INVALID}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=a}) (234{val=,}) (32 (800{val=a}) (235{val=.}) (802{val=newInstance}) (214{val=(}) (11 (214{val=(}) (39{val=byte}) (215{val=)}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (40{val=Dfp.QNAN}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=ia}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=a}) (235{val=.}) (802{val=newInstance}) (214{val=(}) (11 (214{val=(}) (39{val=byte}) (215{val=)}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (40{val=Dfp.INFINITE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=protected}) (802{val=AbstractIntegerDistribution}) (216{val=()}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (5 (39{val=int}) (85{val=[]})) (802{val=getSizes}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=copyOf}) (214{val=(}) (800{val=size}) (234{val=,}) (800{val=dimension}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=size})) (204{val==}) (32 (802{val=copyOf}) (214{val=(}) (800{val=size}) (234{val=,}) (800{val=dimension}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (5 (39{val=int}) (85{val=[]})) (802{val=getCounts}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=copyOf}) (214{val=(}) (800{val=counter}) (234{val=,}) (800{val=dimension}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=d}) (204{val==}) (32 (802{val=copyOf}) (214{val=(}) (2 (801{val=direc}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=AbstractMultipleLinearRegression})) (59 (800{val=regression}) (204{val==}) (32 (802{val=createRegression}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (14 (304{val=new}) (43 (801{val=ExponentialDistributionImpl})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NotStrictlyPositiveException})) (800{val=e})) (215{val=)}) (8 (220{val={}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=realVectorFormat}) (235{val=.}) (802{val=parseObject}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealIdentityMatrix}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealIdentityMatrix}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealIdentityMatrix}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=UnivariateRealSolverUtils}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=sin}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=zb}) (237{val=+=}) (27 (800{val=za}) (201{val=-}) (800{val=temp2}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=v}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=DimensionMismatchException})) (214{val=(}) (32 (800{val=v}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (234{val=,}) (800{val=nRows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=nRows})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=DimensionMismatchException})) (214{val=(}) (40{val=v.length}) (234{val=,}) (800{val=nRows}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=v}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (242{val=!=}) (800{val=nCols})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=DimensionMismatchException})) (214{val=(}) (32 (800{val=v}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=v.length}) (242{val=!=}) (800{val=nCols})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=DimensionMismatchException})) (214{val=(}) (40{val=v.length}) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setQuantile}) (214{val=(}) (800{val=p}) (215{val=)})) (227{val=;})) (21 (7 (800{val=cachedPivots}) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isDefaultValue}) (214{val=(}) (800{val=norm}) (215{val=)})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathArithmeticException})) (214{val=(}) (40{val=LocalizedFormats.ZERO_NORM}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=n}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=MultiDirectionalSimplex}) (214{val=(}) (44 (83{val=final}) (39{val=int}) (800{val=n})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=n}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=DimensionMismatchException})) (800{val=ee})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertTrue}) (214{val=(}) (800{val=shouldFail}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=es}) (235{val=.}) (802{val=getInverse}) (216{val=()})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=SingularMatrixException})) (800{val=ime})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=DimensionMismatchException})) (800{val=oe})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}) (234{val=,}) (800{val=wrong}) (234{val=,}) (800{val=expected}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=SingularMatrixException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=ConvergenceException})) (214{val=(}) (40{val=LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NonPositiveDefiniteMatrixException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NonPositiveDefiniteMatrixException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NonSymmetricMatrixException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NonSquareMatrixException})) (800{val=ime})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NonSquareMatrixException})) (800{val=ime})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NonPositiveDefiniteMatrixException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=LaguerreSolver}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=MessageFactory}) (235{val=.}) (802{val=buildMessage}) (214{val=(}) (800{val=locale}) (234{val=,}) (800{val=specific}) (234{val=,}) (800{val=general}) (234{val=,}) (800{val=arguments}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=pattern}) (234{val=,}) (32 (800{val=ex}) (235{val=.}) (802{val=getGeneralPattern}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=pattern}) (234{val=,}) (32 (800{val=ex}) (235{val=.}) (802{val=getGeneralPattern}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=pattern}) (234{val=,}) (32 (800{val=ex}) (235{val=.}) (802{val=getGeneralPattern}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=pattern}) (234{val=,}) (32 (800{val=ex}) (235{val=.}) (802{val=getGeneralPattern}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=pattern}) (234{val=,}) (32 (800{val=ex}) (235{val=.}) (802{val=getGeneralPattern}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=pattern}) (234{val=,}) (32 (800{val=ex}) (235{val=.}) (802{val=getGeneralPattern}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=de})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=de})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=de})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=fe})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertTrue}) (214{val=(}) (800{val=exceptionExpected}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=finalizeStep}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIOException}) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=finalizeStep}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIOException}) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=de})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=de})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=de})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=de})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=de})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=de})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.ULP}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.TANH}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.TAN}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.SQRT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.SINH}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.SIN}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.SIGNUM}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.RINT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (32 (40{val=BinaryFunction.POW}) (235{val=.}) (802{val=fix2ndArgument}) (214{val=(}) (800{val=d}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (32 (40{val=BinaryFunction.MULTIPLY}) (235{val=.}) (802{val=fix1stArgument}) (214{val=(}) (800{val=d}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.LOG1P}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.LOG10}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.LOG}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.INVERT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.FLOOR}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.EXPM1}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.EXP}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (32 (40{val=BinaryFunction.DIVIDE}) (235{val=.}) (802{val=fix2ndArgument}) (214{val=(}) (800{val=d}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.COSH}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.COS}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.CEIL}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.CBRT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.ATAN}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.ASIN}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.ACOS}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (40{val=ComposableFunction.ABS}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=de})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=de})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=de})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathUserException})) (800{val=de})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=f}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=CircleVectorial})) (59 (800{val=circle}) (204{val==}) (14 (304{val=new}) (43 (801{val=CircleVectorial})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=CircleVectorial})) (59 (800{val=circle}) (204{val==}) (14 (304{val=new}) (43 (801{val=CircleVectorial})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=CircleVectorial})) (59 (800{val=circle}) (204{val==}) (14 (304{val=new}) (43 (801{val=CircleVectorial})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=NumberIsTooLargeException})) (800{val=ex})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=handler}) (235{val=.}) (802{val=getMaximalValueError}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=RealVector})) (802{val=mapPowToSelf}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Power})) (214{val=(}) (800{val=d}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=d}) (242{val=!=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mapToSelf}) (214{val=(}) (32 (800{val=FunctionUtils}) (235{val=.}) (802{val=fix2ndArgument}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Add})) (216{val=()})) (234{val=,}) (800{val=d}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (38 (247{val=++}) (800{val=iterations})) (231{val=>}) (800{val=maxIterations})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=OptimizationException})) (214{val=(}) (14 (304{val=new}) (43 (801{val=MaxCountExceededException})) (214{val=(}) (800{val=maxIterations}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MaxCountExceededException})) (214{val=(}) (800{val=maximalIterationCount}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MaxCountExceededException})) (214{val=(}) (800{val=maxIterations}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (251{val=>=}) (800{val=maxIterations})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MaxCountExceededException})) (214{val=(}) (40{val=LocalizedFormats.NON_CONVERGENT_CONTINUED_FRACTION}) (234{val=,}) (800{val=maxIterations}) (234{val=,}) (800{val=x}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=dimension}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NumberIsTooLargeException})) (214{val=(}) (40{val=LocalizedFormats.TOO_LARGE_CUTOFF_SINGULAR_VALUE}) (234{val=,}) (800{val=minSingularValue}) (234{val=,}) (2 (801{val=singularValues}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=solve}) (214{val=(}) (800{val=DEFAULT_MAX_EVALUATIONS}) (234{val=,}) (800{val=f}) (234{val=,}) (800{val=startValue}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (43 (801{val=StringBuilder})) (800{val=buffer})))
(AST_ROOT_SC2NF (60 (43 (801{val=StringBuilder})) (59 (800{val=outBuffer}) (204{val==}) (14 (304{val=new}) (43 (801{val=StringBuilder})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=StringBuilder})) (59 (800{val=msgBuffer}) (204{val==}) (14 (304{val=new}) (43 (801{val=StringBuilder})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=StringBuilder})) (59 (800{val=out}) (204{val==}) (14 (304{val=new}) (43 (801{val=StringBuilder})) (214{val=(}) (800{val=msg}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=StringBuilder})) (59 (800{val=messageBuffer}) (204{val==}) (14 (304{val=new}) (43 (801{val=StringBuilder})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=StringBuilder})) (59 (800{val=s}) (204{val==}) (14 (304{val=new}) (43 (801{val=StringBuilder})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=StringBuilder})) (59 (800{val=buff}) (204{val==}) (14 (304{val=new}) (43 (801{val=StringBuilder})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=StringBuilder})) (59 (800{val=msgBuffer}) (204{val==}) (14 (304{val=new}) (43 (801{val=StringBuilder})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=StringBuilder})) (59 (800{val=sb}) (204{val==}) (14 (304{val=new}) (43 (801{val=StringBuilder})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=StringBuilder})) (59 (800{val=outBuffer}) (204{val==}) (14 (304{val=new}) (43 (801{val=StringBuilder})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=StringBuilder})) (59 (800{val=outBuffer}) (204{val==}) (14 (304{val=new}) (43 (801{val=StringBuilder})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=StringBuilder})) (59 (800{val=outBuffer}) (204{val==}) (14 (304{val=new}) (43 (801{val=StringBuilder})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=StringBuilder})) (59 (800{val=outBuffer}) (204{val==}) (14 (304{val=new}) (43 (801{val=StringBuilder})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=StringBuilder})) (59 (800{val=outBuffer}) (204{val==}) (14 (304{val=new}) (43 (801{val=StringBuilder})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (40{val=FastMath.PI}) (234{val=,}) (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=f}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=solver}) (235{val=.}) (802{val=getAbsoluteAccuracy}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=result}) (204{val==}) (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=f}) (234{val=,}) (800{val=min}) (234{val=,}) (800{val=max}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorialValueChecker})) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleScalarValueChecker})) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=MathIllegalArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=MathIllegalArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=MathIllegalArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=MathIllegalArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=operate}) (214{val=(}) (800{val=testVector}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=p}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=p}) (231{val=>}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=OutOfRangeException})) (214{val=(}) (40{val=LocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE}) (234{val=,}) (800{val=p}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (27 (800{val=p}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (800{val=p}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=OutOfRangeException})) (214{val=(}) (40{val=LocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE}) (234{val=,}) (800{val=p}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=x1}) (230{val=<}) (800{val=x0})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NumberIsTooSmallException})) (214{val=(}) (40{val=LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT}) (234{val=,}) (800{val=x1}) (234{val=,}) (800{val=x0}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=x1}) (230{val=<}) (800{val=x0})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NumberIsTooSmallException})) (214{val=(}) (40{val=LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT}) (234{val=,}) (800{val=x1}) (234{val=,}) (800{val=x0}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NullArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NullArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NullArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=preMultiply}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=bigSingular}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=operate}) (214{val=(}) (800{val=testVector}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=multiply}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=bigSingular}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=subtract}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BlockRealMatrix})) (214{val=(}) (800{val=testData2}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=a}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (27 (800{val=a}) (201{val=-}) (800{val=b}))) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathArithmeticException})) (214{val=(}) (800{val=msg}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=optimizer}) (235{val=.}) (802{val=getOptima}) (216{val=()})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalStateException})) (800{val=ise})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=numerator}) (236{val===}) (40{val=Integer.MIN_VALUE})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathArithmeticException})) (214{val=(}) (40{val=LocalizedFormats.OVERFLOW_IN_FRACTION}) (234{val=,}) (800{val=numerator}) (234{val=,}) (800{val=denominator}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Fraction})) (214{val=(}) (38 (201{val=-}) (800{val=numerator})) (234{val=,}) (800{val=denominator}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=operate}) (214{val=(}) (800{val=testVector}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=preMultiply}) (214{val=(}) (32 (802{val=createSparseMatrix}) (214{val=(}) (800{val=bigSingular}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=operate}) (214{val=(}) (800{val=testVector}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=multiply}) (214{val=(}) (32 (802{val=createSparseMatrix}) (214{val=(}) (800{val=bigSingular}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=subtract}) (214{val=(}) (32 (802{val=createSparseMatrix}) (214{val=(}) (800{val=testData2}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=UnivariateRealSolverUtils}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=sin}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=UnivariateRealSolverUtils}) (235{val=.}) (802{val=solve}) (214{val=(}) (500{val=null}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))) (219{val=}})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=preMultiply}) (214{val=(}) (32 (802{val=createSparseMatrix}) (214{val=(}) (800{val=bigSingular}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=operate}) (214{val=(}) (800{val=testVector}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=multiply}) (214{val=(}) (32 (802{val=createSparseMatrix}) (214{val=(}) (800{val=bigSingular}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=subtract}) (214{val=(}) (32 (802{val=createSparseMatrix}) (214{val=(}) (800{val=testData2}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=begin}) (200{val=+}) (800{val=length})) (231{val=>}) (40{val=values.length})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NumberIsTooLargeException})) (214{val=(}) (40{val=LocalizedFormats.SUBARRAY_ENDS_AFTER_ARRAY_END}) (234{val=,}) (27 (800{val=begin}) (200{val=+}) (800{val=length})) (234{val=,}) (40{val=values.length}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=preMultiply}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=bigSingular}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=operate}) (214{val=(}) (800{val=testVector}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=multiply}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=bigSingular}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=subtract}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Array2DRowRealMatrix})) (214{val=(}) (800{val=testData2}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=StatUtils}) (235{val=.}) (802{val=min}) (214{val=(}) (800{val=x}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=StatUtils}) (235{val=.}) (802{val=max}) (214{val=(}) (800{val=x}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=StatUtils}) (235{val=.}) (802{val=variance}) (214{val=(}) (800{val=x}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=StatUtils}) (235{val=.}) (802{val=mean}) (214{val=(}) (800{val=x}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=NumberFormat})) (59 (800{val=f}) (204{val==}) (32 (800{val=CompositeFormat}) (235{val=.}) (802{val=getDefaultNumberFormat}) (214{val=(}) (800{val=locale}) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ComplexFormat})) (214{val=(}) (800{val=f}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=ComplexFormat}) (214{val=(}) (44 (43 (801{val=String})) (800{val=imaginaryCharacter})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=imaginaryCharacter}) (234{val=,}) (32 (800{val=CompositeFormat}) (235{val=.}) (802{val=getDefaultNumberFormat}) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Vector3DFormat})) (214{val=(}) (32 (800{val=CompositeFormat}) (235{val=.}) (802{val=getDefaultNumberFormat}) (214{val=(}) (800{val=locale}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=prefix}) (234{val=,}) (800{val=suffix}) (234{val=,}) (800{val=separator}) (234{val=,}) (32 (800{val=CompositeFormat}) (235{val=.}) (802{val=getDefaultNumberFormat}) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (800{val=found})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (27 (800{val=msg}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (32 (36 (214{val=(}) (14 (304{val=new}) (43 (800{val=ComplexFormat})) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=format}) (214{val=(}) (800{val=z}) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=CompositeFormat}) (235{val=.}) (802{val=formatDouble}) (214{val=(}) (32 (800{val=vector}) (235{val=.}) (802{val=getEntry}) (214{val=(}) (800{val=i}) (215{val=)})) (234{val=,}) (800{val=format}) (234{val=,}) (800{val=toAppendTo}) (234{val=,}) (800{val=pos}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=RealVectorFormat})) (214{val=(}) (32 (800{val=CompositeFormat}) (235{val=.}) (802{val=getDefaultNumberFormat}) (214{val=(}) (800{val=locale}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=prefix}) (234{val=,}) (800{val=suffix}) (234{val=,}) (800{val=separator}) (234{val=,}) (32 (800{val=CompositeFormat}) (235{val=.}) (802{val=getDefaultNumberFormat}) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Class})) (230{val=<}) (76{val=?}) (231{val=>})) (800{val=type})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=imaginaryCharacter}) (234{val=,}) (800{val=format}) (234{val=,}) (800{val=format}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=normProduct}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathArithmeticException})) (214{val=(}) (40{val=LocalizedFormats.ZERO_NORM}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=threshold}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathArithmeticException})) (214{val=(}) (40{val=LocalizedFormats.ZERO_NORM}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=s}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathArithmeticException})) (214{val=(}) (40{val=LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathInternalError})) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathInternalError})) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (7 (800{val=alg}) (204{val==}) (32 (800{val=MessageDigest}) (235{val=.}) (802{val=getInstance}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NoSuchAlgorithmException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathInternalError})) (214{val=(}) (800{val=ex}) (215{val=)})) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (21 (7 (800{val=denseOutput}) (204{val==}) (27 (32 (802{val=requiresDenseOutput}) (216{val=()})) (250{val=||}) (36 (214{val=(}) (38 (207{val=!}) (32 (800{val=eventsStates}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (800{val=handler}) (215{val=)})) (227{val=;})) (21 (7 (800{val=denseOutput}) (204{val==}) (27 (32 (802{val=requiresDenseOutput}) (216{val=()})) (250{val=||}) (36 (214{val=(}) (38 (207{val=!}) (32 (800{val=eventsStates}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (215{val=)})))) (227{val=;})) (21 (32 (802{val=initializeArrays}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=denseOutput}) (204{val==}) (27 (32 (802{val=requiresDenseOutput}) (216{val=()})) (250{val=||}) (36 (214{val=(}) (38 (207{val=!}) (32 (800{val=eventsStates}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=denseOutput}) (204{val==}) (27 (32 (802{val=requiresDenseOutput}) (216{val=()})) (250{val=||}) (36 (214{val=(}) (38 (207{val=!}) (32 (800{val=eventsStates}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=stepStart}) (204{val==}) (32 (802{val=acceptStep}) (214{val=(}) (800{val=interpolator}) (234{val=,}) (800{val=y}) (234{val=,}) (800{val=yDot}) (234{val=,}) (800{val=t}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=stepStart}) (204{val==}) (32 (802{val=acceptStep}) (214{val=(}) (800{val=interpolator}) (234{val=,}) (800{val=y}) (234{val=,}) (800{val=yDot}) (234{val=,}) (800{val=t}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=temp}) (204{val==}) (27 (800{val=sinEpsA}) (202{val=*}) (800{val=HEX_40000000}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=tmp}) (204{val==}) (27 (2 (801{val=hiPrec}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (202{val=*}) (800{val=HEX_40000000}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=x}) (251{val=>=}) (800{val=TWO_POWER_52})) (250{val=||}) (27 (800{val=x}) (252{val=<=}) (38 (201{val=-}) (800{val=TWO_POWER_52})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=x}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=y}) (251{val=>=}) (800{val=TWO_POWER_52})) (250{val=||}) (27 (800{val=y}) (252{val=<=}) (38 (201{val=-}) (800{val=TWO_POWER_52})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=pow}) (214{val=(}) (38 (201{val=-}) (800{val=x})) (234{val=,}) (800{val=y}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=epsilon}) (204{val==}) (27 (800{val=xa}) (201{val=-}) (2 (801{val=EIGHTHS}) (221{val=[}) (800{val=idx}) (222{val=]})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=epsilon}) (204{val==}) (27 (800{val=xa}) (201{val=-}) (2 (801{val=EIGHTHS}) (221{val=[}) (800{val=idx}) (222{val=]})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=boolean}) (59 (800{val=fatal}) (204{val==}) (9{val=true})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=boolean}) (59 (800{val=fatal}) (204{val==}) (9{val=false})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=invx}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=x}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=y}) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=copySign}) (214{val=(}) (40{val=Math.PI}) (234{val=,}) (800{val=y}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=xa}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (16 (800{val=leftPlane}) (233{val=?}) (32 (802{val=copySign}) (214{val=(}) (40{val=Math.PI}) (234{val=,}) (800{val=xa}) (215{val=)})) (226{val=:}) (800{val=xa})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (78 (208{val=@}) (800{val=Ignore})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (39{val=int}) (215{val=)}) (32 (802{val=floor}) (214{val=(}) (27 (800{val=x}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=d}) (204{val==}) (32 (800{val=MathUtils}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (2 (801{val=direc}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (5 (39{val=int}) (85{val=[]})) (802{val=getSizes}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=MathUtils}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=size}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=size})) (204{val==}) (32 (800{val=MathUtils}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=size}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (5 (39{val=int}) (85{val=[]})) (802{val=getCounts}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=MathUtils}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=counter}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=ONE_WAY_ANANOVA}) (235{val=.}) (802{val=anovaTest}) (214{val=(}) (800{val=categoryData}) (234{val=,}) (800{val=alpha}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=ONE_WAY_ANANOVA}) (235{val=.}) (802{val=anovaPValue}) (214{val=(}) (800{val=categoryData}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=ONE_WAY_ANANOVA}) (235{val=.}) (802{val=anovaFValue}) (214{val=(}) (800{val=categoryData}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=UNKNOWN_DISTRIBUTION_CHI_SQUARE_TEST}) (235{val=.}) (802{val=chiSquareTestDataSetsComparison}) (214{val=(}) (800{val=observed1}) (234{val=,}) (800{val=observed2}) (234{val=,}) (800{val=alpha}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=UNKNOWN_DISTRIBUTION_CHI_SQUARE_TEST}) (235{val=.}) (802{val=chiSquareTestDataSetsComparison}) (214{val=(}) (800{val=observed1}) (234{val=,}) (800{val=observed2}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=UNKNOWN_DISTRIBUTION_CHI_SQUARE_TEST}) (235{val=.}) (802{val=chiSquareDataSetsComparison}) (214{val=(}) (800{val=observed1}) (234{val=,}) (800{val=observed2}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=CHI_SQUARE_TEST}) (235{val=.}) (800{val=chiSquareTest}) (214{val=(}) (800{val=counts}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=CHI_SQUARE_TEST}) (235{val=.}) (800{val=chiSquareTest}) (214{val=(}) (800{val=counts}) (234{val=,}) (800{val=alpha}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=CHI_SQUARE_TEST}) (235{val=.}) (800{val=chiSquareTest}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=observed}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=CHI_SQUARE_TEST}) (235{val=.}) (800{val=chiSquareTest}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=observed}) (234{val=,}) (800{val=alpha}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=CHI_SQUARE_TEST}) (235{val=.}) (802{val=chiSquare}) (214{val=(}) (800{val=counts}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=CHI_SQUARE_TEST}) (235{val=.}) (802{val=chiSquare}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=observed}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=T_TEST}) (235{val=.}) (800{val=tTest}) (214{val=(}) (800{val=sampleStats1}) (234{val=,}) (800{val=sampleStats2}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=T_TEST}) (235{val=.}) (800{val=tTest}) (214{val=(}) (800{val=sampleStats1}) (234{val=,}) (800{val=sampleStats2}) (234{val=,}) (800{val=alpha}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=T_TEST}) (235{val=.}) (800{val=tTest}) (214{val=(}) (800{val=sample1}) (234{val=,}) (800{val=sample2}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=T_TEST}) (235{val=.}) (800{val=tTest}) (214{val=(}) (800{val=sample1}) (234{val=,}) (800{val=sample2}) (234{val=,}) (800{val=alpha}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=T_TEST}) (235{val=.}) (800{val=tTest}) (214{val=(}) (800{val=mu}) (234{val=,}) (800{val=sampleStats}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=T_TEST}) (235{val=.}) (800{val=tTest}) (214{val=(}) (800{val=mu}) (234{val=,}) (800{val=sampleStats}) (234{val=,}) (800{val=alpha}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=T_TEST}) (235{val=.}) (800{val=tTest}) (214{val=(}) (800{val=mu}) (234{val=,}) (800{val=sample}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=T_TEST}) (235{val=.}) (800{val=tTest}) (214{val=(}) (800{val=mu}) (234{val=,}) (800{val=sample}) (234{val=,}) (800{val=alpha}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=T_TEST}) (235{val=.}) (802{val=t}) (214{val=(}) (800{val=sampleStats1}) (234{val=,}) (800{val=sampleStats2}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=T_TEST}) (235{val=.}) (802{val=t}) (214{val=(}) (800{val=sample1}) (234{val=,}) (800{val=sample2}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=T_TEST}) (235{val=.}) (802{val=t}) (214{val=(}) (800{val=mu}) (234{val=,}) (800{val=sampleStats}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=T_TEST}) (235{val=.}) (802{val=t}) (214{val=(}) (800{val=mu}) (234{val=,}) (800{val=observed}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=T_TEST}) (235{val=.}) (802{val=pairedTTest}) (214{val=(}) (800{val=sample1}) (234{val=,}) (800{val=sample2}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=T_TEST}) (235{val=.}) (802{val=pairedTTest}) (214{val=(}) (800{val=sample1}) (234{val=,}) (800{val=sample2}) (234{val=,}) (800{val=alpha}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=T_TEST}) (235{val=.}) (802{val=pairedT}) (214{val=(}) (800{val=sample1}) (234{val=,}) (800{val=sample2}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=T_TEST}) (235{val=.}) (802{val=homoscedasticTTest}) (214{val=(}) (800{val=sampleStats1}) (234{val=,}) (800{val=sampleStats2}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=T_TEST}) (235{val=.}) (802{val=homoscedasticTTest}) (214{val=(}) (800{val=sample1}) (234{val=,}) (800{val=sample2}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=T_TEST}) (235{val=.}) (802{val=homoscedasticTTest}) (214{val=(}) (800{val=sample1}) (234{val=,}) (800{val=sample2}) (234{val=,}) (800{val=alpha}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=T_TEST}) (235{val=.}) (802{val=homoscedasticT}) (214{val=(}) (800{val=sampleStats1}) (234{val=,}) (800{val=sampleStats2}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=T_TEST}) (235{val=.}) (802{val=homoscedasticT}) (214{val=(}) (800{val=sample1}) (234{val=,}) (800{val=sample2}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=private}) (802{val=TestUtils}) (216{val=()}) (8 (218{val={}) (500{val=super();}) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (800{val=y}) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=arzneg}) (204{val==}) (32 (802{val=selectColumns}) (214{val=(}) (800{val=arz}) (234{val=,}) (32 (800{val=MathUtils}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=arReverseIndex}) (234{val=,}) (800{val=mu}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=numer}) (204{val==}) (27 (800{val=bits}) (213{val=&}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setStateInitialized}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setStateInitialized}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setStateInitialized}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setStateInitialized}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setStateInitialized}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ParametricUnivariateRealFunction})) (59 (800{val=sif}) (204{val==}) (14 (304{val=new}) (43 (801{val=SimpleInverseFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ParametricUnivariateRealFunction})) (59 (800{val=sif}) (204{val==}) (14 (304{val=new}) (43 (801{val=SimpleInverseFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=ParametricUnivariateRealFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=ParametricUnivariateRealFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=ParametricUnivariateRealFunction})) (800{val=f})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=g}) (204{val==}) (32 (800{val=Gaussian}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=diff}) (234{val=,}) (800{val=norm}) (234{val=,}) (800{val=i2s2}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=optimizer}) (215{val=)}) (227{val=;})) (227{val=;}) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=boolean}) (59 (800{val=fatal}) (204{val==}) (9{val=true})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=specific}) (234{val=,}) (40{val=LocalizedFormats.ILLEGAL_STATE}) (234{val=,}) (800{val=args}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (500{val=null}) (234{val=,}) (800{val=specific}) (234{val=,}) (800{val=general}) (234{val=,}) (800{val=args}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (500{val=null}) (234{val=,}) (500{val=null}) (234{val=,}) (40{val=LocalizedFormats.CANNOT_PARSE}) (234{val=,}) (800{val=wrong}) (234{val=,}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=position}) (215{val=)})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (800{val=reference}) (234{val=,}) (32 (800{val=p}) (235{val=.}) (802{val=toString}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (800{val=reference}) (234{val=,}) (32 (800{val=p}) (235{val=.}) (802{val=toString}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (800{val=reference}) (234{val=,}) (32 (32 (800{val=p}) (235{val=.}) (802{val=multiply}) (214{val=(}) (800{val=q}) (215{val=)})) (235{val=.}) (802{val=toString}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=oneOverN}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (800{val=n}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (800{val=_isMinimize}) (233{val=?}) (800{val=penalty}) (226{val=:}) (38 (201{val=-}) (800{val=penalty}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=_boundaries}) (236{val===}) (500{val=null})) (215{val=)}) (41 (329{val=return}) (9{val=true}) (227{val=;}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (800{val=isMinimize}) (233{val=?}) (800{val=penalty}) (226{val=:}) (38 (201{val=-}) (800{val=penalty}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=boundaries}) (236{val===}) (500{val=null})) (215{val=)}) (41 (329{val=return}) (9{val=true}) (227{val=;}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=FitnessFunction})) (59 (800{val=fitfun}) (204{val==}) (14 (304{val=new}) (43 (801{val=FitnessFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=result}) (236{val===}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathArithmeticException})) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IOException})) (800{val=ioe})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (800{val=specific}) (234{val=,}) (800{val=lo}) (234{val=,}) (800{val=hi}) (234{val=,}) (800{val=fLo}) (234{val=,}) (800{val=fHi}) (234{val=,}) (800{val=args}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (40{val=LocalizedFormats.SAME_SIGN_AT_ENDPOINTS}) (234{val=,}) (800{val=lo}) (234{val=,}) (800{val=hi}) (234{val=,}) (800{val=fLo}) (234{val=,}) (800{val=fHi}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=specific}) (234{val=,}) (500{val=null}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (800{val=specific}) (234{val=,}) (800{val=wrong}) (234{val=,}) (800{val=max}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (16 (800{val=boundIsAllowed}) (233{val=?}) (40{val=LocalizedFormats.NUMBER_TOO_LARGE}) (226{val=:}) (40{val=LocalizedFormats.NUMBER_TOO_LARGE_BOUND_EXCLUDED})) (234{val=,}) (800{val=wrong}) (234{val=,}) (800{val=max}) (234{val=,}) (800{val=boundIsAllowed}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=specific}) (234{val=,}) (800{val=wrong}) (234{val=,}) (800{val=lo}) (234{val=,}) (800{val=hi}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=lo})) (204{val==}) (800{val=lo})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=hi})) (204{val==}) (800{val=hi})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (40{val=LocalizedFormats.OUT_OF_RANGE_SIMPLE}) (234{val=,}) (800{val=wrong}) (234{val=,}) (800{val=lo}) (234{val=,}) (800{val=hi}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (800{val=specific}) (234{val=,}) (800{val=wrong}) (234{val=,}) (800{val=expected}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (40{val=LocalizedFormats.DIMENSIONS_MISMATCH}) (234{val=,}) (800{val=wrong}) (234{val=,}) (800{val=expected}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=cause}) (215{val=)}) (227{val=;})) (21 (32 (802{val=addMessage}) (214{val=(}) (40{val=LocalizedFormats.USER_EXCEPTION}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=specific}) (234{val=,}) (800{val=wrong}) (234{val=,}) (800{val=expected}) (215{val=)}) (227{val=;})) (21 (7 (800{val=dimension}) (204{val==}) (800{val=expected})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=ZeroException}) (214{val=(}) (44 (43 (801{val=Localizable})) (800{val=specific})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=specific}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (800{val=specific}) (234{val=,}) (800{val=wrong}) (234{val=,}) (800{val=min}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (16 (800{val=boundIsAllowed}) (233{val=?}) (40{val=LocalizedFormats.NUMBER_TOO_SMALL}) (226{val=:}) (40{val=LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED})) (234{val=,}) (800{val=wrong}) (234{val=,}) (800{val=min}) (234{val=,}) (800{val=boundIsAllowed}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=specific}) (234{val=,}) (800{val=wrong}) (234{val=,}) (800{val=args}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (40{val=LocalizedFormats.NOT_FINITE_NUMBER}) (234{val=,}) (800{val=wrong}) (234{val=,}) (800{val=args}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=specific}) (234{val=,}) (800{val=max}) (234{val=,}) (800{val=args}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=max})) (204{val==}) (800{val=max})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=MaxCountExceededException}) (214{val=(}) (44 (43 (801{val=Number})) (800{val=max})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (40{val=LocalizedFormats.MAX_COUNT_EXCEEDED}) (234{val=,}) (800{val=max}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=MathInternalError}) (214{val=(}) (44 (83{val=final}) (43 (801{val=Throwable})) (800{val=cause})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=cause}) (234{val=,}) (40{val=LocalizedFormats.INTERNAL_ERROR}) (234{val=,}) (800{val=REPORT_URL}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=addMessage}) (214{val=(}) (40{val=LocalizedFormats.CANNOT_PARSE}) (234{val=,}) (800{val=wrong}) (234{val=,}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=position}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (38 (247{val=++}) (800{val=count})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (27 (800{val=i}) (200{val=+}) (27 (800{val=j}) (203{val=/}) (34{val=NUMBER_CONSTANT}))) (234{val=,}) (800{val=value}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (38 (247{val=++}) (800{val=count})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (27 (800{val=i}) (200{val=+}) (27 (800{val=j}) (203{val=/}) (34{val=NUMBER_CONSTANT}))) (234{val=,}) (800{val=value}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=norm}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=l}) (235{val=.}) (802{val=getEntry}) (214{val=(}) (800{val=i}) (234{val=,}) (800{val=j}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=norm}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=m}) (235{val=.}) (802{val=getEntry}) (214{val=(}) (800{val=i}) (234{val=,}) (800{val=j}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=norm}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=norm}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=doFinalize}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=MathUserException})) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (800{val=MathUserException})) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=doFinalize}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=MathUserException})) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (800{val=MathUserException})) (214{val=(}) (40{val=LocalizedFormats.SIMPLE_MESSAGE}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IOException})) (800{val=ioe})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (32 (800{val=ioe}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (235{val=.}) (802{val=length}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=cause}) (215{val=)}) (227{val=;})) (21 (32 (802{val=addMessage}) (214{val=(}) (40{val=LocalizedFormats.USER_EXCEPTION}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=private}) (802{val=Erf}) (216{val=()}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (31 (83{val=private}) (802{val=Beta}) (216{val=()}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (31 (83{val=private}) (802{val=Gamma}) (216{val=()}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=s}) (235{val=.}) (802{val=getN}) (216{val=()})) (234{val=,}) (32 (800{val=u}) (235{val=.}) (802{val=getN}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (78 (208{val=@}) (800{val=Before})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (800{val=a1}) (234{val=,}) (32 (800{val=MathUtils}) (235{val=.}) (802{val=normalizeAngle}) (214{val=(}) (800{val=a2}) (234{val=,}) (800{val=a1}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=After})) (83{val=public}) (39{val=void}) (802{val=tearDown}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=refValues}) (204{val==}) (500{val=null})) (227{val=;})) (21 (7 (800{val=matrix}) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (78 (208{val=@}) (800{val=Before})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (32 (802{val=isIncludedColumn}) (214{val=(}) (800{val=eigenVector}) (234{val=,}) (32 (800{val=ed}) (235{val=.}) (802{val=getV}) (216{val=()})) (234{val=,}) (800{val=tolerance}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (78 (208{val=@}) (800{val=Before})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Before})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Frequency})) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=After})) (83{val=public}) (39{val=void}) (802{val=tearDown}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=pb}) (204{val==}) (500{val=null})) (227{val=;})) (21 (7 (800{val=integ}) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (78 (208{val=@}) (800{val=Before})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=bestFinal}) (235{val=.}) (802{val=compareTo}) (214{val=(}) (800{val=bestInitial}) (215{val=)})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=norm}) (234{val=,}) (800{val=normTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=checkClearValue}) (214{val=(}) (44 (43 (801{val=StorelessUnivariateStatistic})) (800{val=statistic})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=statistic}) (235{val=.}) (802{val=getResult}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=protected}) (39{val=void}) (802{val=checkClearValue}) (214{val=(}) (44 (43 (801{val=StorelessUnivariateStatistic})) (800{val=statistic})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (32 (800{val=statistic}) (235{val=.}) (802{val=getResult}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=variance}) (204{val==}) (32 (800{val=regression}) (235{val=.}) (802{val=estimateRegressandVariance}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (27 (800{val=variance}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (5 (39{val=double}) (85{val=[]}) (85{val=[]})) (59 (800{val=variance}) (204{val==}) (32 (800{val=regression}) (235{val=.}) (802{val=estimateRegressionParametersVariance}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (32 (802{val=getNumberOfRegressors}) (216{val=()})) (234{val=,}) (40{val=variance.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=e}) (204{val==}) (32 (800{val=regression}) (235{val=.}) (802{val=estimateResiduals}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (32 (802{val=getSampleSize}) (216{val=()})) (234{val=,}) (40{val=e.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=beta}) (204{val==}) (32 (800{val=regression}) (235{val=.}) (802{val=estimateRegressionParameters}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (32 (802{val=getNumberOfRegressors}) (216{val=()})) (234{val=,}) (40{val=beta.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=FractionField})) (59 (800{val=field}) (204{val==}) (32 (800{val=FractionField}) (235{val=.}) (802{val=getInstance}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (27 (800{val=field}) (236{val===}) (32 (800{val=TestUtils}) (235{val=.}) (802{val=serializeAndRecover}) (214{val=(}) (800{val=field}) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Test})) (83{val=public}) (39{val=void}) (802{val=testOne}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (40{val=Fraction.ONE}) (234{val=,}) (32 (32 (800{val=FractionField}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (235{val=.}) (802{val=getOne}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Test})) (83{val=public}) (39{val=void}) (802{val=testZero}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (40{val=Fraction.ZERO}) (234{val=,}) (32 (32 (800{val=FractionField}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (235{val=.}) (802{val=getZero}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (27 (800{val=fitnessCalls}) (252{val=<=}) (800{val=neededCalls})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=numDifferent}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (14 (304{val=new}) (43 (801{val=DummyBinaryChromosome})) (214{val=(}) (800{val=repr}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=e})) (215{val=)}) (8 (220{val={}})))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (800{val=c3}) (234{val=,}) (32 (800{val=population}) (235{val=.}) (802{val=getFittestChromosome}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (500{val=null}) (234{val=,}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (800{val=delta}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=BigRealField})) (59 (800{val=field}) (204{val==}) (32 (800{val=BigRealField}) (235{val=.}) (802{val=getInstance}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (27 (800{val=field}) (236{val===}) (32 (800{val=TestUtils}) (235{val=.}) (802{val=serializeAndRecover}) (214{val=(}) (800{val=field}) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Test})) (83{val=public}) (39{val=void}) (802{val=testOne}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (40{val=BigReal.ONE}) (234{val=,}) (32 (32 (800{val=BigRealField}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (235{val=.}) (802{val=getOne}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Test})) (83{val=public}) (39{val=void}) (802{val=testZero}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (40{val=BigReal.ZERO}) (234{val=,}) (32 (32 (800{val=BigRealField}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (235{val=.}) (802{val=getZero}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (800{val=uniquePointIsCenter}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (800{val=p}) (234{val=,}) (32 (800{val=TestUtils}) (235{val=.}) (802{val=serializeAndRecover}) (214{val=(}) (800{val=p}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=s}) (235{val=.}) (802{val=getN}) (216{val=()})) (234{val=,}) (32 (800{val=u}) (235{val=.}) (802{val=getN}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (32 (800{val=expected}) (235{val=.}) (802{val=getN}) (216{val=()})) (234{val=,}) (32 (800{val=observed}) (235{val=.}) (802{val=getN}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (14 (304{val=new}) (43 (801{val=Fraction})) (214{val=(}) (800{val=a}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ConvergenceException})) (800{val=ce})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (2 (801{val=y}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (2 (801{val=iResult}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=h}) (215{val=)})) (230{val=<}) (800{val=minStep})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FractionConversionException})) (800{val=fce})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (32 (800{val=fce}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=FractionConversionException})) (800{val=fce})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (32 (800{val=fce}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=DummyRandomKey})) (59 (800{val=drk}) (204{val==}) (14 (304{val=new}) (43 (801{val=DummyRandomKey})) (214{val=(}) (32 (800{val=RandomKey}) (235{val=.}) (802{val=randomPermutation}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertNotNull}) (214{val=(}) (800{val=drk}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=nextGeneration}) (235{val=.}) (802{val=getPopulationSize}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=checkClearValue}) (214{val=(}) (44 (43 (801{val=StorelessUnivariateStatistic})) (800{val=statistic})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=statistic}) (235{val=.}) (802{val=getResult}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=p})) (234{val=,}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=x})) (234{val=,}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=checkClearValue}) (214{val=(}) (44 (43 (801{val=StorelessUnivariateStatistic})) (800{val=statistic})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=statistic}) (235{val=.}) (802{val=getResult}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=After})) (83{val=public}) (39{val=void}) (802{val=tearDown}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=pb}) (204{val==}) (500{val=null})) (227{val=;})) (21 (7 (800{val=integ}) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (78 (208{val=@}) (800{val=Before})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=BigFractionField})) (59 (800{val=field}) (204{val==}) (32 (800{val=BigFractionField}) (235{val=.}) (802{val=getInstance}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (27 (800{val=field}) (236{val===}) (32 (800{val=TestUtils}) (235{val=.}) (802{val=serializeAndRecover}) (214{val=(}) (800{val=field}) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Test})) (83{val=public}) (39{val=void}) (802{val=testOne}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (40{val=BigFraction.ONE}) (234{val=,}) (32 (32 (800{val=BigFractionField}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (235{val=.}) (802{val=getOne}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Test})) (83{val=public}) (39{val=void}) (802{val=testZero}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (40{val=BigFraction.ZERO}) (234{val=,}) (32 (32 (800{val=BigFractionField}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (235{val=.}) (802{val=getZero}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (39{val=void}) (802{val=checkClearValue}) (214{val=(}) (44 (43 (801{val=StorelessUnivariateStatistic})) (800{val=statistic})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=statistic}) (235{val=.}) (802{val=getResult}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (800{val=approYDot}) (234{val=,}) (2 (801{val=yDot}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (800{val=threshold}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=ComplexField})) (59 (800{val=field}) (204{val==}) (32 (800{val=ComplexField}) (235{val=.}) (802{val=getInstance}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (27 (800{val=field}) (236{val===}) (32 (800{val=TestUtils}) (235{val=.}) (802{val=serializeAndRecover}) (214{val=(}) (800{val=field}) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Test})) (83{val=public}) (39{val=void}) (802{val=testOne}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (40{val=Complex.ONE}) (234{val=,}) (32 (32 (800{val=ComplexField}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (235{val=.}) (802{val=getOne}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Test})) (83{val=public}) (39{val=void}) (802{val=testZero}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (40{val=Complex.ZERO}) (234{val=,}) (32 (32 (800{val=ComplexField}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (235{val=.}) (802{val=getZero}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=isLast}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (27 (800{val=maxError}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Before})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=tooShortStats}) (204{val==}) (14 (304{val=new}) (43 (801{val=SummaryStatistics})) (216{val=()}))) (227{val=;})) (21 (32 (800{val=tooShortStats}) (235{val=.}) (802{val=addValue}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (27 (800{val=maxError}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=isLast}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (27 (800{val=maxError}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=isLast}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (27 (800{val=maxError}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=changes}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=column}) (231{val=>}) (800{val=row})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=value}) (234{val=,}) (800{val=entryTolerance}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=column}) (230{val=<}) (800{val=row})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=value}) (234{val=,}) (800{val=entryTolerance}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=norm}) (234{val=,}) (800{val=normTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=norm}) (234{val=,}) (800{val=normTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=walk}) (215{val=)})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=walk}) (215{val=)})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=walk}) (215{val=)})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=NoDataException}) (214{val=(}) (44 (43 (801{val=Localizable})) (800{val=specific})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=specific}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (39{val=double}) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=param})))
(AST_ROOT_SC2NF (44 (39{val=double}) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=param})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=double}) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=parameters})))
(AST_ROOT_SC2NF (44 (39{val=double}) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=parameters})))
(AST_ROOT_SC2NF (44 (39{val=double}) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=param})))
(AST_ROOT_SC2NF (44 (39{val=double}) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=param})))
(AST_ROOT_SC2NF (44 (39{val=double}) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=param})))
(AST_ROOT_SC2NF (44 (39{val=double}) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=param})))
(AST_ROOT_SC2NF (44 (39{val=double}) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=param})))
(AST_ROOT_SC2NF (44 (39{val=double}) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=param})))
(AST_ROOT_SC2NF (44 (39{val=double}) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=doubles})))
(AST_ROOT_SC2NF (44 (39{val=double}) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=parameters})))
(AST_ROOT_SC2NF (44 (39{val=double}) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=param})))
(AST_ROOT_SC2NF (44 (39{val=double}) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=param})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateRealIntegratorImpl})) (59 (800{val=integrator}) (204{val==}) (14 (304{val=new}) (43 (801{val=LegendreGaussIntegrator})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setMinimalIterationCount}) (214{val=(}) (44 (83{val=final}) (39{val=int}) (800{val=count})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=minimalIterationCount}) (204{val==}) (800{val=count})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (74 (43 (800{val=Set})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (802{val=getContextKeys}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=UnsupportedOperationException})) (214{val=(}) (800{val=DEPRECATION_MESSAGE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Object})) (802{val=getContext}) (214{val=(}) (44 (43 (801{val=String})) (800{val=key})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=UnsupportedOperationException})) (214{val=(}) (800{val=DEPRECATION_MESSAGE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=UnsupportedOperationException})) (214{val=(}) (800{val=DEPRECATION_MESSAGE}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=UnsupportedOperationException})) (214{val=(}) (800{val=DEPRECATION_MESSAGE}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=z}) (204{val==}) (32 (802{val=concatenateSamples}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getRelativeAccuracy}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getAbsoluteAccuracy}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=int}) (802{val=getMaximalIterationCount}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (74 (43 (800{val=Set})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (802{val=getContextKeys}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=UnsupportedOperationException})) (214{val=(}) (800{val=DEPRECATION_MESSAGE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Object})) (802{val=getContext}) (214{val=(}) (44 (43 (801{val=String})) (800{val=key})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=UnsupportedOperationException})) (214{val=(}) (800{val=DEPRECATION_MESSAGE}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=UnsupportedOperationException})) (214{val=(}) (800{val=DEPRECATION_MESSAGE}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=UnsupportedOperationException})) (214{val=(}) (800{val=DEPRECATION_MESSAGE}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (32 (800{val=PearsonsCorrelation}) (235{val=.}) (802{val=correlation}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (215{val=)})) (234{val=,}) (32 (32 (800{val=corrInstance}) (235{val=.}) (802{val=getCorrelationMatrix}) (216{val=()})) (235{val=.}) (802{val=getEntry}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (40{val=Double.MIN_VALUE}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=PearsonsCorrelation}) (235{val=.}) (802{val=correlation}) (214{val=(}) (800{val=one}) (234{val=,}) (800{val=two}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (32 (800{val=PearsonsCorrelation}) (235{val=.}) (802{val=correlation}) (214{val=(}) (800{val=noVariance}) (234{val=,}) (800{val=values}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (32 (14 (304{val=new}) (43 (800{val=PearsonsCorrelation})) (216{val=()})) (235{val=.}) (802{val=correlation}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (215{val=)})) (234{val=,}) (32 (32 (800{val=corrInstance}) (235{val=.}) (802{val=getCorrelationMatrix}) (216{val=()})) (235{val=.}) (802{val=getEntry}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (40{val=Double.MIN_VALUE}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (14 (304{val=new}) (43 (800{val=PearsonsCorrelation})) (216{val=()})) (235{val=.}) (802{val=correlation}) (214{val=(}) (800{val=one}) (234{val=,}) (800{val=two}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (32 (14 (304{val=new}) (43 (800{val=PearsonsCorrelation})) (216{val=()})) (235{val=.}) (802{val=correlation}) (214{val=(}) (800{val=noVariance}) (234{val=,}) (800{val=values}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=normps}) (204{val==}) (32 (800{val=ps}) (235{val=.}) (802{val=getFrobeniusNorm}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=normps}) (204{val==}) (32 (800{val=ps}) (235{val=.}) (802{val=getFrobeniusNorm}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (40{val=LocalizedFormats.MAX_COUNT_EXCEEDED}) (234{val=,}) (800{val=max}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=max})) (204{val==}) (800{val=max})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=SimplexTableau})) (59 (800{val=tableau}) (204{val==}) (14 (304{val=new}) (43 (801{val=SimplexTableau})) (214{val=(}) (800{val=function}) (234{val=,}) (800{val=linearConstraints}) (234{val=,}) (800{val=goal}) (234{val=,}) (800{val=nonNegative}) (234{val=,}) (800{val=epsilon}) (234{val=,}) (800{val=maxUlps}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=MathUtils}) (235{val=.}) (802{val=compareTo}) (214{val=(}) (800{val=entry}) (234{val=,}) (800{val=minValue}) (234{val=,}) (800{val=maxUlps}) (215{val=)})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=minValue}) (204{val==}) (800{val=entry})) (227{val=;})) (21 (7 (800{val=minPos}) (204{val==}) (800{val=i})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=MathUtils}) (235{val=.}) (802{val=compareTo}) (214{val=(}) (800{val=entry}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=maxUlps}) (215{val=)})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=columnsToDrop}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=i}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=context}) (235{val=.}) (802{val=addMessage}) (214{val=(}) (800{val=pattern}) (234{val=,}) (800{val=args}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (802{val=getContext}) (216{val=()})) (235{val=.}) (802{val=addMessage}) (214{val=(}) (40{val=LocalizedFormats.CANNOT_PARSE}) (234{val=,}) (800{val=wrong}) (234{val=,}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=position}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (40{val=LocalizedFormats.MAX_COUNT_EXCEEDED}) (234{val=,}) (800{val=max}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=cause}) (215{val=)}) (227{val=;})) (21 (32 (800{val=context}) (235{val=.}) (802{val=addMessage}) (214{val=(}) (800{val=pattern}) (234{val=,}) (800{val=arguments}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=context}) (235{val=.}) (802{val=addMessage}) (214{val=(}) (800{val=pattern}) (234{val=,}) (800{val=arguments}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=cause}) (215{val=)}) (227{val=;})) (21 (32 (800{val=context}) (235{val=.}) (802{val=addMessage}) (214{val=(}) (40{val=LocalizedFormats.USER_EXCEPTION}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=context}) (235{val=.}) (802{val=addMessage}) (214{val=(}) (800{val=pattern}) (234{val=,}) (800{val=args}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=cause}) (215{val=)}) (227{val=;})) (21 (32 (800{val=context}) (235{val=.}) (802{val=addMessage}) (214{val=(}) (800{val=pattern}) (234{val=,}) (800{val=args}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=context}) (235{val=.}) (802{val=addMessage}) (214{val=(}) (800{val=pattern}) (234{val=,}) (800{val=args}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (802{val=getContext}) (216{val=()})) (235{val=.}) (802{val=addMessage}) (214{val=(}) (800{val=pattern}) (234{val=,}) (800{val=args}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=context}) (235{val=.}) (802{val=addMessage}) (214{val=(}) (800{val=pattern}) (234{val=,}) (800{val=args}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=max}) (215{val=)}) (227{val=;})) (21 (32 (32 (802{val=getContext}) (216{val=()})) (235{val=.}) (802{val=addMessage}) (214{val=(}) (40{val=LocalizedFormats.EVALUATIONS}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=field})) (204{val==}) (800{val=field})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=outData}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (32 (802{val=extractField}) (214{val=(}) (800{val=d}) (215{val=)})) (234{val=,}) (800{val=d}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=matrix}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (32 (800{val=FractionField}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=matrix}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (32 (800{val=FractionField}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=matrix}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (32 (800{val=FractionField}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=matrix}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (32 (800{val=FractionField}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=outData}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=outData}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertClose}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=m}) (235{val=.}) (802{val=multiply}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (32 (800{val=FractionField}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (800{val=testDataInv}) (215{val=)})) (215{val=)})) (234{val=,}) (800{val=identity}) (234{val=,}) (800{val=entryTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=BigFraction})) (231{val=>})) (214{val=(}) (32 (800{val=BigFractionField}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (800{val=Hdata}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=bp}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=bp}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=projection}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=v}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=d}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (32 (800{val=FractionField}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (800{val=fractionColMatrix}) (215{val=)})) (234{val=,}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createFieldMatrix}) (214{val=(}) (800{val=fractionColMatrix}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=outData}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=outData}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=String})) (800{val=source})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=prefix}) (234{val=,}) (800{val=suffix}) (234{val=,}) (800{val=separator}) (234{val=,}) (32 (800{val=CompositeFormat}) (235{val=.}) (802{val=getDefaultNumberFormat}) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Vector3DFormat}) (214{val=(}) (44 (83{val=final}) (43 (801{val=NumberFormat})) (800{val=format})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=DEFAULT_PREFIX}) (234{val=,}) (800{val=DEFAULT_SUFFIX}) (234{val=,}) (800{val=DEFAULT_SEPARATOR}) (234{val=,}) (800{val=format}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Vector3DFormat}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=DEFAULT_PREFIX}) (234{val=,}) (800{val=DEFAULT_SUFFIX}) (234{val=,}) (800{val=DEFAULT_SEPARATOR}) (234{val=,}) (32 (800{val=CompositeFormat}) (235{val=.}) (802{val=getDefaultNumberFormat}) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=BSPTreeVisitor})) (230{val=<}) (43 (800{val=S})) (231{val=>})) (800{val=visitor})))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=visitLeafNode}) (214{val=(}) (44 (74 (43 (800{val=BSPTree})) (230{val=<}) (43 (800{val=S})) (231{val=>})) (800{val=node})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=BSPTree})) (230{val=<}) (43 (800{val=S})) (231{val=>})) (800{val=node})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=BSPTree})) (230{val=<}) (43 (800{val=S})) (231{val=>})) (800{val=node})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Hyperplane})) (230{val=<}) (43 (800{val=S})) (231{val=>})) (800{val=other})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Vector})) (230{val=<}) (43 (800{val=S})) (231{val=>})) (800{val=point})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Hyperplane})) (230{val=<}) (43 (800{val=Euclidean1D})) (231{val=>})) (800{val=other})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Vector2D})) (800{val=p})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Hyperplane})) (230{val=<}) (43 (800{val=Euclidean2D})) (231{val=>})) (800{val=other})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Vector2D})) (800{val=p})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Vector2D})) (59 (800{val=tmp}) (204{val==}) (2 (801{val=loop}) (221{val=[}) (800{val=min}) (222{val=]}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (5 (43 (801{val=Vector2D})) (85{val=[]})) (800{val=bLoop})))
(AST_ROOT_SC2NF (60 (43 (801{val=Vector3D})) (59 (800{val=point}) (204{val==}) (32 (800{val=p}) (235{val=.}) (802{val=intersection}) (214{val=(}) (800{val=l}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Order})) (802{val=visitOrder}) (214{val=(}) (44 (83{val=final}) (74 (43 (800{val=BSPTree})) (230{val=<}) (43 (800{val=Euclidean3D})) (231{val=>})) (800{val=node})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=Order.MINUS_SUB_PLUS}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=BoundaryProjector}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=projected}) (204{val==}) (14 (304{val=new}) (43 (801{val=PolygonsSet})) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=BSPTree})) (230{val=<}) (43 (800{val=Euclidean2D})) (231{val=>})) (214{val=(}) (40{val=Boolean.FALSE}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=BSPTree})) (230{val=<}) (43 (800{val=Euclidean1D})) (231{val=>})) (800{val=tree})))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=Vector3D})) (85{val=[]})) (800{val=points})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=BSPTree})) (230{val=<}) (43 (800{val=Euclidean2D})) (231{val=>})) (800{val=tree})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Order})) (802{val=visitOrder}) (214{val=(}) (44 (83{val=final}) (74 (43 (800{val=BSPTree})) (230{val=<}) (43 (800{val=Euclidean2D})) (231{val=>})) (800{val=node})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=Order.MINUS_SUB_PLUS}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Hyperplane})) (230{val=<}) (43 (800{val=Euclidean3D})) (231{val=>})) (800{val=other})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Vector})) (230{val=<}) (43 (800{val=Euclidean3D})) (231{val=>})) (800{val=point})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Vector3D})) (800{val=p})))
(AST_ROOT_SC2NF (21 (7 (800{val=origin}) (204{val==}) (14 (304{val=new}) (43 (801{val=Vector3D})) (214{val=(}) (38 (201{val=-}) (800{val=originOffset})) (234{val=,}) (800{val=w}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Order})) (802{val=visitOrder}) (214{val=(}) (44 (83{val=final}) (74 (43 (800{val=BSPTree})) (230{val=<}) (43 (800{val=Euclidean3D})) (231{val=>})) (800{val=node})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=Order.MINUS_SUB_PLUS}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=BSPTree})) (230{val=<}) (43 (800{val=Euclidean3D})) (231{val=>})) (800{val=tree})))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=abstract}) (74 (43 (800{val=SplitSubHyperplane})) (230{val=<}) (43 (800{val=S})) (231{val=>})) (802{val=split}) (214{val=(}) (44 (74 (43 (800{val=Hyperplane})) (230{val=<}) (43 (800{val=S})) (231{val=>})) (800{val=hyper})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=abstract}) (43 (801{val=Side})) (802{val=side}) (214{val=(}) (44 (74 (43 (800{val=Hyperplane})) (230{val=<}) (43 (800{val=S})) (231{val=>})) (800{val=hyper})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (2 (801{val=in}) (221{val=[}) (800{val=i}) (222{val=]})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalArgumentException})) (214{val=(}) (40{val=LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX}) (234{val=,}) (800{val=i}) (234{val=,}) (2 (801{val=in}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=val}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=val}) (231{val=>}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidRepresentationException})) (214{val=(}) (40{val=LocalizedFormats.OUT_OF_RANGE_SIMPLE}) (234{val=,}) (800{val=val}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (39{val=int}) (800{val=i})) (226{val=:}) (800{val=chromosomeRepresentation}) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=i}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=i}) (231{val=>}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidRepresentationException})) (214{val=(}) (40{val=LocalizedFormats.INVALID_BINARY_DIGIT}) (234{val=,}) (800{val=i}) (215{val=)})) (227{val=;}))) (219{val=}}))))
(AST_ROOT_SC2NF (59 (800{val=clusters}) (204{val==}) (32 (800{val=transformer}) (235{val=.}) (802{val=cluster}) (214{val=(}) (32 (800{val=Arrays}) (235{val=.}) (802{val=asList}) (214{val=(}) (800{val=points}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=RealVector})) (802{val=getInitialStateEstimate}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=initialStateEstimateVector}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=t}) (236{val===}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=i}) (251{val=>=}) (800{val=j}))) (215{val=)}) (8 (218{val={}) (500{val=continue;}) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=maxGenerations}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=maxGenerations})) (204{val==}) (800{val=maxGenerations})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (800{val=forward})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=h}) (204{val==}) (38 (201{val=-}) (800{val=h}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=remA}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (500{val=break;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=remA}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (500{val=break;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=remA}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (500{val=break;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=x}) (202{val=*}) (800{val=x})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=Double.NaN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Chromosome})) (800{val=anotherChr})) (226{val=:}) (800{val=population}) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isSame}) (214{val=(}) (800{val=anotherChr}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=anotherChr}) (227{val=;})) (219{val=}}))) (219{val=}}))) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=y}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=py}) (215{val=)})) (215{val=)}) (8 (218{val={}) (500{val=break;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=x}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=boundaries}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=x}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=boundaries}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=x}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=negccov}) (231{val=>}) (800{val=negcovMax})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=negccov}) (204{val==}) (800{val=negcovMax})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=numElements}) (238{val=-=}) (800{val=i})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (800{val=front}) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=startIndex}) (237{val=+=}) (800{val=i})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=relativeAccuracy}) (234{val=,}) (800{val=absoluteAccuracy}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=SecantSolver}) (214{val=(}) (44 (83{val=final}) (39{val=double}) (800{val=absoluteAccuracy})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=absoluteAccuracy}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=allowed})) (204{val==}) (800{val=allowedSolutions})) (227{val=;})) (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=maxEval}) (234{val=,}) (800{val=f}) (234{val=,}) (800{val=min}) (234{val=,}) (800{val=max}) (234{val=,}) (800{val=startValue}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=relativeAccuracy}) (234{val=,}) (800{val=absoluteAccuracy}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=allowed})) (204{val==}) (40{val=AllowedSolutions.ANY_SIDE})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=method})) (204{val==}) (800{val=method})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=absoluteAccuracy}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=allowed})) (204{val==}) (40{val=AllowedSolutions.ANY_SIDE})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=method})) (204{val==}) (800{val=method})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=se}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=var}) (215{val=)}))) (227{val=;})) (500{val=continue;}) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=Double}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (800{val=var}) (215{val=)}))) (249{val=&&}) (27 (800{val=var}) (231{val=>}) (40{val=Double.MIN_VALUE}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=var}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=isNaN}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=isNaN}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=isNaN}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=isNaN}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=isNaN}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=isNaN}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (802{val=createComplex}) (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log}) (214{val=(}) (32 (802{val=abs}) (216{val=()})) (215{val=)})) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=atan2}) (214{val=(}) (800{val=imaginary}) (234{val=,}) (800{val=real}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=isNaN}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=isNaN}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=isNaN}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=isNaN}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=isNaN}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=isNaN}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=isNaN}) (250{val=||}) (40{val=rhs.isNaN})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=isNaN}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (802{val=createComplex}) (214{val=(}) (38 (201{val=-}) (800{val=real})) (234{val=,}) (38 (201{val=-}) (800{val=imaginary})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=isNaN}) (250{val=||}) (32 (800{val=Double}) (235{val=.}) (800{val=isNaN}) (214{val=(}) (800{val=rhs}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=isNaN}) (250{val=||}) (40{val=rhs.isNaN})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=isNaN}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=isNaN}) (250{val=||}) (40{val=rhs.isNaN})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=isNaN}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (802{val=createComplex}) (214{val=(}) (800{val=real}) (234{val=,}) (38 (201{val=-}) (800{val=imaginary})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=isNaN}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=Double.NaN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=rng}) (235{val=.}) (802{val=nextBoolean}) (216{val=()})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalStateException})) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (32 (800{val=w}) (235{val=.}) (802{val=getReal}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=include}) (214{val=(}) (32 (800{val=MathUtils}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=x}) (234{val=,}) (40{val=x.length}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=y}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=index}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=index}) (251{val=>=}) (22 (22 (315{val=this}) (235{val=.}) (800{val=parameters})) (235{val=.}) (800{val=length})))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IndexOutOfBoundsException})) (214{val=(}) (800{val=indexOutOfBound}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=index}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=index}) (251{val=>=}) (22 (22 (315{val=this}) (235{val=.}) (800{val=parameters})) (235{val=.}) (800{val=length})))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IndexOutOfBoundsException})) (214{val=(}) (800{val=indexOutOfBound}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=outerProduct}) (214{val=(}) (22 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=ArrayRealVector})) (215{val=)}) (800{val=v})) (215{val=)})) (235{val=.}) (800{val=data})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getLInfDistance}) (214{val=(}) (22 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=ArrayRealVector})) (215{val=)}) (800{val=v})) (215{val=)})) (235{val=.}) (800{val=data})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getL1Distance}) (214{val=(}) (22 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=ArrayRealVector})) (215{val=)}) (800{val=v})) (215{val=)})) (235{val=.}) (800{val=data})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getDistance}) (214{val=(}) (22 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=ArrayRealVector})) (215{val=)}) (800{val=v})) (215{val=)})) (235{val=.}) (800{val=data})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=dotProduct}) (214{val=(}) (22 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=ArrayRealVector})) (215{val=)}) (800{val=v})) (215{val=)})) (235{val=.}) (800{val=data})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=ebeDivide}) (214{val=(}) (22 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=ArrayRealVector})) (215{val=)}) (800{val=v})) (215{val=)})) (235{val=.}) (800{val=data})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=ebeMultiply}) (214{val=(}) (22 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=ArrayRealVector})) (215{val=)}) (800{val=v})) (215{val=)})) (235{val=.}) (800{val=data})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=subtract}) (214{val=(}) (22 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=ArrayRealVector})) (215{val=)}) (800{val=v})) (215{val=)})) (235{val=.}) (800{val=data})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=add}) (214{val=(}) (22 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=ArrayRealVector})) (215{val=)}) (800{val=v})) (215{val=)})) (235{val=.}) (800{val=data})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=relativeAccuracy}) (234{val=,}) (800{val=absoluteAccuracy}) (234{val=,}) (800{val=functionValueAccuracy}) (234{val=,}) (40{val=Method.REGULA_FALSI}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertSame}) (214{val=(}) (40{val=Complex.NaN}) (234{val=,}) (800{val=z}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (800{val=node}) (235{val=.}) (802{val=getElement}) (216{val=()})) (235{val=.}) (802{val=intValue}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=numberOfVariables}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=ModelSpecificationException})) (214{val=(}) (40{val=LocalizedFormats.NO_REGRESSORS}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=addEventHandler}) (214{val=(}) (800{val=handler}) (234{val=,}) (800{val=maxCheckInterval}) (234{val=,}) (800{val=convergence}) (234{val=,}) (800{val=maxIterationCount}) (234{val=,}) (14 (304{val=new}) (43 (801{val=BracketingNthOrderBrentSolver})) (214{val=(}) (800{val=convergence}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=solution}) (204{val==}) (32 (802{val=getSolution}) (214{val=(}) (800{val=solver}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=f}) (234{val=,}) (800{val=left}) (234{val=,}) (800{val=right}) (234{val=,}) (40{val=AllowedSolution.ABOVE_SIDE}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=solution}) (204{val==}) (32 (802{val=getSolution}) (214{val=(}) (800{val=solver}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=f}) (234{val=,}) (800{val=left}) (234{val=,}) (800{val=right}) (234{val=,}) (40{val=AllowedSolution.BELOW_SIDE}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=solution}) (204{val==}) (32 (802{val=getSolution}) (214{val=(}) (800{val=solver}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=f}) (234{val=,}) (800{val=left}) (234{val=,}) (800{val=right}) (234{val=,}) (40{val=AllowedSolution.RIGHT_SIDE}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=solution}) (204{val==}) (32 (802{val=getSolution}) (214{val=(}) (800{val=solver}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=f}) (234{val=,}) (800{val=left}) (234{val=,}) (800{val=right}) (234{val=,}) (40{val=AllowedSolution.LEFT_SIDE}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=allowed})) (204{val==}) (40{val=AllowedSolution.ANY_SIDE})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=allowed})) (204{val==}) (40{val=AllowedSolution.ANY_SIDE})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=allowed})) (204{val==}) (40{val=AllowedSolution.ANY_SIDE})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=solve}) (214{val=(}) (800{val=maxEval}) (234{val=,}) (800{val=f}) (234{val=,}) (800{val=min}) (234{val=,}) (800{val=max}) (234{val=,}) (800{val=startValue}) (234{val=,}) (40{val=AllowedSolution.ANY_SIDE}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=relativeAccuracy}) (234{val=,}) (800{val=absoluteAccuracy}) (234{val=,}) (800{val=functionValueAccuracy}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=allowed})) (204{val==}) (40{val=AllowedSolution.ANY_SIDE})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=method})) (204{val==}) (800{val=method})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=relativeAccuracy}) (234{val=,}) (800{val=absoluteAccuracy}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=allowed})) (204{val==}) (40{val=AllowedSolution.ANY_SIDE})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=method})) (204{val==}) (800{val=method})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=absoluteAccuracy}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=allowed})) (204{val==}) (40{val=AllowedSolution.ANY_SIDE})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=method})) (204{val==}) (800{val=method})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=x}) (204{val==}) (32 (800{val=randomData}) (235{val=.}) (802{val=nextUniform}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=dot}) (204{val==}) (32 (800{val=v1}) (235{val=.}) (802{val=dotProduct}) (214{val=(}) (800{val=v2}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Solver})) (214{val=(}) (800{val=singularValues}) (234{val=,}) (32 (802{val=getUT}) (216{val=()})) (234{val=,}) (32 (802{val=getV}) (216{val=()})) (234{val=,}) (27 (32 (802{val=getRank}) (216{val=()})) (236{val===}) (800{val=m})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=tol}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=max}) (214{val=(}) (27 (800{val=m}) (202{val=*}) (2 (801{val=singularValues}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (202{val=*}) (800{val=EPS})) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (40{val=MathUtils.SAFE_MIN}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setEntry}) (214{val=(}) (27 (800{val=row}) (201{val=-}) (800{val=INDEX_OFFSET})) (234{val=,}) (27 (800{val=col}) (201{val=-}) (800{val=INDEX_OFFSET})) (234{val=,}) (800{val=value}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setEntry}) (214{val=(}) (27 (800{val=index}) (201{val=-}) (800{val=INDEX_OFFSET})) (234{val=,}) (800{val=value}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=fsave}) (204{val==}) (32 (800{val=fval}) (235{val=.}) (802{val=getEntry}) (214{val=(}) (800{val=INDEX_OFFSET}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=crossP}) (235{val=.}) (802{val=dotProduct}) (214{val=(}) (32 (800{val=otherPlane}) (235{val=.}) (802{val=getNormal}) (216{val=()})) (215{val=)})) (230{val=<}) (34{val=NUMBER_CONSTANT})))
(AST_ROOT_SC2NF (27 (32 (800{val=crossP}) (235{val=.}) (802{val=dotProduct}) (214{val=(}) (32 (800{val=otherPlane}) (235{val=.}) (802{val=getNormal}) (216{val=()})) (215{val=)})) (230{val=<}) (34{val=NUMBER_CONSTANT})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=scaled}) (204{val==}) (27 (800{val=area}) (202{val=*}) (32 (800{val=facetB}) (235{val=.}) (802{val=dotProduct}) (214{val=(}) (32 (800{val=plane}) (235{val=.}) (802{val=getNormal}) (216{val=()})) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (800{val=Vector3D})) (59 (800{val=n}) (204{val==}) (14 (304{val=new}) (43 (800{val=Vector3D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=d}) (234{val=,}) (38 (201{val=-}) (32 (800{val=d}) (235{val=.}) (802{val=dotProduct}) (214{val=(}) (800{val=direction}) (215{val=)}))) (234{val=,}) (800{val=direction}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=point}) (235{val=.}) (802{val=dotProduct}) (214{val=(}) (800{val=w}) (215{val=)})) (200{val=+}) (800{val=originOffset})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setNormal}) (214{val=(}) (800{val=normal}) (215{val=)})) (227{val=;})) (21 (7 (800{val=originOffset}) (204{val==}) (38 (201{val=-}) (32 (800{val=p}) (235{val=.}) (802{val=dotProduct}) (214{val=(}) (800{val=w}) (215{val=)})))) (227{val=;})) (21 (32 (802{val=setFrame}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Line})) (802{val=revert}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Line})) (214{val=(}) (800{val=zero}) (234{val=,}) (32 (800{val=zero}) (235{val=.}) (802{val=subtract}) (214{val=(}) (800{val=direction}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=nRows}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=nCols}) (230{val=<}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalArgumentException})) (214{val=(}) (40{val=LocalizedFormats.INSUFFICIENT_ROWS_AND_COLUMNS}) (234{val=,}) (800{val=nRows}) (234{val=,}) (800{val=nCols}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (800{val=t}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (27 (800{val=delta}) (252{val=<=}) (800{val=rLimit})) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (800{val=delta}) (252{val=<=}) (800{val=absoluteAccuracy})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=s}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (27 (800{val=delta}) (252{val=<=}) (800{val=rLimit})) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (800{val=delta}) (252{val=<=}) (800{val=absoluteAccuracy})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=t}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (800{val=RealVector})) (59 (800{val=v}) (204{val==}) (32 (800{val=RealVector}) (235{val=.}) (802{val=unmodifiableRealVector}) (214{val=(}) (32 (800{val=u}) (235{val=.}) (802{val=copy}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=RealVector})) (59 (800{val=v}) (204{val==}) (32 (800{val=RealVector}) (235{val=.}) (802{val=unmodifiableRealVector}) (214{val=(}) (32 (800{val=u}) (235{val=.}) (802{val=copy}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=RealVector})) (59 (800{val=v}) (204{val==}) (32 (800{val=RealVector}) (235{val=.}) (802{val=unmodifiableRealVector}) (214{val=(}) (800{val=u}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=RealVector})) (59 (800{val=v}) (204{val==}) (32 (800{val=RealVector}) (235{val=.}) (802{val=unmodifiableRealVector}) (214{val=(}) (800{val=u}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=RealVector})) (59 (800{val=v}) (204{val==}) (32 (800{val=RealVector}) (235{val=.}) (802{val=unmodifiableRealVector}) (214{val=(}) (800{val=u}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=RealVector})) (59 (800{val=v}) (204{val==}) (32 (800{val=RealVector}) (235{val=.}) (802{val=unmodifiableRealVector}) (214{val=(}) (800{val=u}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=ArrayRealVector})) (59 (800{val=x}) (204{val==}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=dim}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=ArrayRealVector})) (59 (800{val=x}) (204{val==}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=dim}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=actual}) (204{val==}) (32 (800{val=x}) (235{val=.}) (802{val=toArray}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=actual}) (204{val==}) (32 (800{val=z}) (235{val=.}) (802{val=toArray}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=d2}) (204{val==}) (32 (800{val=w}) (235{val=.}) (802{val=toArray}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=coefficients}) (235{val=.}) (802{val=dotProduct}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=point}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (200{val=+}) (800{val=constantTerm})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=dist}) (204{val==}) (14 (304{val=new}) (43 (801{val=EmpiricalDistributionImpl})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (11 (214{val=(}) (43 (800{val=RandomGenerator})) (215{val=)}) (500{val=null})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=EmpiricalDistributionImpl}) (214{val=(}) (44 (39{val=int}) (800{val=binCount})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=binCount}) (234{val=,}) (14 (304{val=new}) (43 (801{val=RandomDataImpl})) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=empiricalDistribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=EmpiricalDistributionImpl})) (214{val=(}) (800{val=binCount}) (234{val=,}) (800{val=randomData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (200{val=+}) (32 (800{val=Erf}) (235{val=.}) (802{val=erf}) (214{val=(}) (27 (800{val=dev}) (203{val=/}) (36 (214{val=(}) (27 (800{val=standardDeviation}) (202{val=*}) (800{val=SQRT2})) (215{val=)}))) (215{val=)}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleScalarValueChecker})) (214{val=(}) (800{val=rel}) (234{val=,}) (800{val=abs}) (215{val=)})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=ConvergenceException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (32 (800{val=b}) (235{val=.}) (802{val=getColumnVector}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (32 (800{val=b}) (235{val=.}) (802{val=getColumnVector}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=es}) (235{val=.}) (802{val=solve}) (214{val=(}) (32 (800{val=b}) (235{val=.}) (802{val=getColumnVector}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (32 (800{val=b}) (235{val=.}) (802{val=getColumnVector}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (800{val=z}) (234{val=,}) (40{val=Complex.INF}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (800{val=z}) (234{val=,}) (40{val=Complex.NaN}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=ExceptionContext})) (59 (800{val=cOut}) (204{val==}) (14 (304{val=new}) (43 (801{val=ExceptionContext})) (214{val=(}) (14 (304{val=new}) (43 (801{val=Exception})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=ExceptionContext})) (59 (800{val=cOut}) (204{val==}) (14 (304{val=new}) (43 (801{val=ExceptionContext})) (214{val=(}) (14 (304{val=new}) (43 (801{val=Exception})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=ExceptionContext})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=ExceptionContext})) (214{val=(}) (14 (304{val=new}) (43 (801{val=Exception})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=ExceptionContext})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=ExceptionContext})) (214{val=(}) (14 (304{val=new}) (43 (801{val=Exception})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=ExceptionContext})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=ExceptionContext})) (214{val=(}) (14 (304{val=new}) (43 (801{val=Exception})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=MaxCountExceededException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=MaxCountExceededException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (44 (43 (801{val=Exception})) (800{val=e})))
(AST_ROOT_SC2NF (44 (43 (801{val=Exception})) (800{val=e})))
(AST_ROOT_SC2NF (58 (39{val=int}) (59 (800{val=i}) (204{val==}) (27 (800{val=FACT_LEN}) (201{val=-}) (34{val=NUMBER_CONSTANT})))))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=x}) (204{val==}) (32 (800{val=b}) (235{val=.}) (802{val=toArray}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertClose}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=m}) (235{val=.}) (802{val=preMultiply}) (214{val=(}) (32 (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=testVector}) (215{val=)})) (235{val=.}) (802{val=toArray}) (216{val=()})) (215{val=)})) (234{val=,}) (800{val=preMultTest}) (234{val=,}) (800{val=normTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertClose}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=testVector}) (234{val=,}) (32 (32 (800{val=m}) (235{val=.}) (802{val=operate}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=testVector}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=toArray}) (216{val=()})) (234{val=,}) (800{val=entryTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=hatResiduals}) (204{val==}) (32 (32 (32 (800{val=I}) (235{val=.}) (802{val=subtract}) (214{val=(}) (800{val=hat}) (215{val=)})) (235{val=.}) (802{val=operate}) (214{val=(}) (40{val=model.Y}) (215{val=)})) (235{val=.}) (802{val=toArray}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=objectiveValue}) (204{val==}) (32 (802{val=computeObjectiveValue}) (214{val=(}) (32 (800{val=currentBest}) (235{val=.}) (802{val=toArray}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=f}) (204{val==}) (32 (802{val=computeObjectiveValue}) (214{val=(}) (32 (800{val=currentBest}) (235{val=.}) (802{val=toArray}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=actual}) (204{val==}) (32 (800{val=x}) (235{val=.}) (802{val=toArray}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=actual}) (204{val==}) (32 (800{val=x}) (235{val=.}) (802{val=toArray}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=actual}) (204{val==}) (32 (32 (800{val=x}) (235{val=.}) (802{val=combine}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=b}) (234{val=,}) (800{val=y}) (215{val=)})) (235{val=.}) (802{val=toArray}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=actual}) (204{val==}) (32 (32 (800{val=x}) (235{val=.}) (802{val=combine}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=b}) (234{val=,}) (800{val=y}) (215{val=)})) (235{val=.}) (802{val=toArray}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertNotSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=v1.data}) (234{val=,}) (32 (800{val=v_copy}) (235{val=.}) (802{val=toArray}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=sum}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (70 (303{val=for}) (214{val=(}) (44 (39{val=double}) (800{val=coefficient})) (226{val=:}) (32 (800{val=coefficients}) (235{val=.}) (802{val=toArray}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=sum}) (238{val=-=}) (800{val=coefficient})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (800{val=sum}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertClose}) (214{val=(}) (32 (800{val=m}) (235{val=.}) (802{val=preMultiply}) (214{val=(}) (32 (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=testVector}) (215{val=)})) (235{val=.}) (802{val=toArray}) (216{val=()})) (215{val=)})) (234{val=,}) (800{val=preMultTest}) (234{val=,}) (800{val=normTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertClose}) (214{val=(}) (800{val=testVector}) (234{val=,}) (32 (32 (800{val=m}) (235{val=.}) (802{val=operate}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=testVector}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=toArray}) (216{val=()})) (234{val=,}) (800{val=entryTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=TestUtils}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=m}) (235{val=.}) (802{val=preMultiply}) (214{val=(}) (32 (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=testVector}) (215{val=)})) (235{val=.}) (802{val=toArray}) (216{val=()})) (215{val=)})) (234{val=,}) (800{val=preMultTest}) (234{val=,}) (800{val=normTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=TestUtils}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=testVector}) (234{val=,}) (32 (32 (800{val=m}) (235{val=.}) (802{val=operate}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=testVector}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=toArray}) (216{val=()})) (234{val=,}) (800{val=entryTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (5 (39{val=double}) (85{val=[]})) (802{val=getStateEstimation}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=stateEstimation}) (235{val=.}) (802{val=toArray}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=y}) (204{val==}) (32 (32 (800{val=u}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=x}) (235{val=.}) (802{val=operate}) (214{val=(}) (800{val=b}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=toArray}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=TestUtils}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (219{val=}}))) (234{val=,}) (32 (800{val=b}) (235{val=.}) (802{val=toArray}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=TestUtils}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (219{val=}}))) (234{val=,}) (32 (800{val=b}) (235{val=.}) (802{val=toArray}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=e}) (235{val=.}) (802{val=toArray}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=RealVector})) (59 (800{val=b}) (204{val==}) (32 (802{val=calculateBeta}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (32 (800{val=b}) (235{val=.}) (802{val=toArray}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (62 (800{val=x}) (328{val=instanceof}) (43 (800{val=ArrayRealVector}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=ArrayRealVector})) (215{val=)}) (800{val=x})) (215{val=)})) (235{val=.}) (802{val=getDataRef}) (216{val=()})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=x}) (235{val=.}) (802{val=toArray}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (2 (801{val=ltI}) (221{val=[}) (800{val=i}) (222{val=]})) (230{val=<}) (800{val=absolutePositivityThreshold})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NonPositiveDefiniteMatrixException})) (214{val=(}) (2 (801{val=ltI}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (800{val=i}) (234{val=,}) (800{val=absolutePositivityThreshold}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (800{val=hasIntercept}) (233{val=?}) (32 (802{val=getIntercept}) (214{val=(}) (32 (802{val=getSlope}) (216{val=()})) (215{val=)})) (226{val=:}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (58 (39{val=int}) (59 (800{val=i}) (204{val==}) (27 (40{val=FACT.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})))))
(AST_ROOT_SC2NF (58 (39{val=int}) (59 (800{val=i}) (204{val==}) (27 (40{val=FACT.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})))))
(AST_ROOT_SC2NF (58 (39{val=int}) (59 (800{val=i}) (204{val==}) (27 (40{val=FACT.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})))))
(AST_ROOT_SC2NF (60 (43 (801{val=CholeskyDecompositionImpl})) (59 (800{val=llt}) (204{val==}) (14 (304{val=new}) (43 (801{val=CholeskyDecompositionImpl})) (214{val=(}) (800{val=matrix}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=CholeskyDecompositionImpl})) (59 (800{val=llt}) (204{val==}) (14 (304{val=new}) (43 (801{val=CholeskyDecompositionImpl})) (214{val=(}) (800{val=matrix}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=solver}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=CholeskyDecomposition})) (214{val=(}) (800{val=s}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=solver}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=CholeskyDecomposition})) (214{val=(}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=testData}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=solver}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=CholeskyDecomposition})) (214{val=(}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=testData}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealMatrix})) (59 (800{val=matrix}) (204{val==}) (32 (800{val=EigenDecompositionTest}) (235{val=.}) (802{val=createTestMatrix}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Random})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (800{val=refValues}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecompositionImpl})) (59 (800{val=eig}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecompositionImpl})) (214{val=(}) (800{val=C}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=eig}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=C}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=es}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=m}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=es}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=es}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=m}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=es}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=m}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=EigenDecomposition})) (800{val=ed})))
(AST_ROOT_SC2NF (44 (43 (801{val=EigenDecomposition})) (800{val=ed})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=v}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=MathUtils.SAFE_MIN}) (215{val=)})) (235{val=.}) (802{val=getV}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=max}) (204{val==}) (40{val=val.length})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=max}) (204{val==}) (40{val=val.length})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=max}) (204{val==}) (40{val=val.length})) (227{val=;})))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathInternalError})) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathInternalError})) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathInternalError})) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathInternalError})) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=double}) (800{val=slope})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=double}) (800{val=slope})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=double}) (800{val=alpha})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldDecompositionSolver})) (230{val=<}) (43 (800{val=BigFraction})) (231{val=>})) (59 (800{val=pSolver}) (204{val==}) (32 (14 (304{val=new}) (74 (43 (801{val=FieldLUDecomposition})) (230{val=<}) (43 (800{val=BigFraction})) (231{val=>})) (214{val=(}) (800{val=bigP}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (14 (304{val=new}) (74 (43 (801{val=FieldLUDecomposition})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=m}) (215{val=)})) (235{val=.}) (802{val=getDeterminant}) (216{val=()})) (235{val=.}) (802{val=doubleValue}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=solver}) (204{val==}) (32 (14 (304{val=new}) (74 (43 (801{val=FieldLUDecomposition})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (32 (802{val=createFractionMatrix}) (214{val=(}) (800{val=testData}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=solver}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=FieldLUDecomposition})) (214{val=(}) (32 (802{val=createFractionMatrix}) (214{val=(}) (800{val=singular}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=solver}) (204{val==}) (32 (14 (304{val=new}) (74 (43 (801{val=FieldLUDecomposition})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (32 (802{val=createFractionMatrix}) (214{val=(}) (800{val=testData}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NonMonotonicSequenceException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NonMonotonicSequenceException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NonMonotonicSequenceException})) (800{val=iae})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NonMonotonicSequenceException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NonMonotonicSequenceException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NonMonotonicSequenceException})) (800{val=iae})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=DecompositionSolver})) (59 (800{val=solver}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=LUDecomposition})) (214{val=(}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=jTj}) (215{val=)})) (234{val=,}) (800{val=threshold}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=solver}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=LUDecomposition})) (214{val=(}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=testData}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=solver}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=LUDecomposition})) (214{val=(}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=singular}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=solver}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=LUDecomposition})) (214{val=(}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=testData}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=solver}) (204{val==}) (16 (800{val=useLU}) (233{val=?}) (32 (14 (304{val=new}) (43 (801{val=LUDecomposition})) (214{val=(}) (800{val=mA}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()})) (226{val=:}) (32 (14 (304{val=new}) (43 (801{val=QRDecompositionImpl})) (214{val=(}) (800{val=mA}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (32 (14 (304{val=new}) (43 (801{val=LUDecomposition})) (214{val=(}) (800{val=XTOIX}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()})) (235{val=.}) (802{val=getInverse}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=inverse}) (204{val==}) (32 (32 (14 (304{val=new}) (43 (801{val=LUDecomposition})) (214{val=(}) (800{val=XTOIX}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()})) (235{val=.}) (802{val=getInverse}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=Rinv}) (204{val==}) (32 (32 (14 (304{val=new}) (43 (801{val=LUDecomposition})) (214{val=(}) (800{val=Raug}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()})) (235{val=.}) (802{val=getInverse}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=solver}) (204{val==}) (16 (800{val=useLU}) (233{val=?}) (32 (14 (304{val=new}) (43 (801{val=LUDecomposition})) (214{val=(}) (800{val=mA}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()})) (226{val=:}) (32 (14 (304{val=new}) (43 (801{val=QRDecomposition})) (214{val=(}) (800{val=mA}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=newXSampleData}) (214{val=(}) (800{val=x}) (215{val=)})) (227{val=;})) (21 (7 (800{val=qr}) (204{val==}) (14 (304{val=new}) (43 (801{val=QRDecomposition})) (214{val=(}) (800{val=X}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=newSampleData}) (214{val=(}) (800{val=data}) (234{val=,}) (800{val=nobs}) (234{val=,}) (800{val=nvars}) (215{val=)})) (227{val=;})) (21 (7 (800{val=qr}) (204{val==}) (14 (304{val=new}) (43 (801{val=QRDecomposition})) (214{val=(}) (800{val=X}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=x}) (204{val==}) (32 (32 (14 (304{val=new}) (43 (801{val=QRDecomposition})) (214{val=(}) (800{val=a}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()})) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=b}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=x}) (204{val==}) (32 (32 (14 (304{val=new}) (43 (801{val=QRDecomposition})) (214{val=(}) (800{val=a}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()})) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=b}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=solver}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=QRDecomposition})) (214{val=(}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=testData3x3Singular}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=solver}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=QRDecomposition})) (214{val=(}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=testData3x3NonSingular}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RectangularCholeskyDecomposition})) (59 (800{val=decomposition}) (204{val==}) (14 (304{val=new}) (43 (801{val=RectangularCholeskyDecomposition})) (214{val=(}) (800{val=covariance}) (234{val=,}) (800{val=small}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RectangularCholeskyDecomposition})) (59 (800{val=decomposition}) (204{val==}) (14 (304{val=new}) (43 (801{val=RectangularCholeskyDecomposition})) (214{val=(}) (800{val=covariance}) (234{val=,}) (800{val=small}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SingularValueDecomposition})) (59 (800{val=svd}) (204{val==}) (14 (304{val=new}) (43 (801{val=SingularValueDecomposition})) (214{val=(}) (800{val=rm}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=solver}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=SingularValueDecomposition})) (214{val=(}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=testSquare}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=solver}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=SingularValueDecomposition})) (214{val=(}) (800{val=m}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=solver}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=SingularValueDecomposition})) (214{val=(}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrix}) (214{val=(}) (800{val=testSquare}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=g0Positive}) (204{val==}) (27 (800{val=g0}) (251{val=>=}) (34{val=NUMBER_CONSTANT}))) (227{val=;})) (21 (7 (800{val=nextAction}) (204{val==}) (40{val=EventHandler.Action.CONTINUE})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=nextAction}) (204{val==}) (40{val=EventHandler.Action.CONTINUE})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=ExpandableFirstOrderDifferentialEquations})) (800{val=equations})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=ExpandableFirstOrderDifferentialEquations})) (800{val=equations})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=ExpandableFirstOrderDifferentialEquations})) (800{val=equations})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=out}) (235{val=.}) (802{val=writeDouble}) (214{val=(}) (2 (2 (801{val=polynomials}) (221{val=[}) (800{val=k}) (222{val=]})) (221{val=[}) (800{val=l}) (222{val=]})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=e}) (204{val==}) (27 (2 (2 (801{val=polynomials}) (221{val=[}) (800{val=currentDegree}) (222{val=]})) (221{val=[}) (800{val=i}) (222{val=]})) (203{val=/}) (2 (801{val=scale}) (221{val=[}) (800{val=i}) (222{val=]})))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=Array}) (235{val=.}) (802{val=newInstance}) (214{val=(}) (32 (800{val=field}) (235{val=.}) (802{val=getRuntimeClass}) (216{val=()})) (234{val=,}) (3 (304{val=new}) (5 (39{val=int}) (85{val=[]})) (4 (218{val={}) (800{val=m}) (234{val=,}) (800{val=nColB}) (219{val=}}))) (215{val=)})))
(AST_ROOT_SC2NF (59 (800{val=bp}) (204{val==}) (11 (214{val=(}) (5 (43 (801{val=T})) (85{val=[]})) (215{val=)}) (32 (800{val=Array}) (235{val=.}) (802{val=newInstance}) (214{val=(}) (32 (800{val=field}) (235{val=.}) (802{val=getRuntimeClass}) (216{val=()})) (234{val=,}) (800{val=m}) (215{val=)})))))
(AST_ROOT_SC2NF (59 (800{val=bp}) (204{val==}) (11 (214{val=(}) (5 (43 (801{val=T})) (85{val=[]})) (215{val=)}) (32 (800{val=Array}) (235{val=.}) (802{val=newInstance}) (214{val=(}) (32 (800{val=field}) (235{val=.}) (802{val=getRuntimeClass}) (216{val=()})) (234{val=,}) (800{val=m}) (215{val=)})))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (5 (43 (801{val=T})) (85{val=[]})) (215{val=)}) (32 (800{val=Array}) (235{val=.}) (802{val=newInstance}) (214{val=(}) (32 (800{val=field}) (235{val=.}) (802{val=getRuntimeClass}) (216{val=()})) (234{val=,}) (800{val=length}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (59 (800{val=array}) (204{val==}) (11 (214{val=(}) (5 (43 (801{val=T})) (85{val=[]})) (215{val=)}) (32 (800{val=Array}) (235{val=.}) (802{val=newInstance}) (214{val=(}) (32 (800{val=field}) (235{val=.}) (802{val=getRuntimeClass}) (216{val=()})) (234{val=,}) (800{val=length}) (215{val=)})))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (5 (43 (801{val=T})) (85{val=[]})) (215{val=)}) (32 (800{val=Array}) (235{val=.}) (802{val=newInstance}) (214{val=(}) (32 (800{val=field}) (235{val=.}) (802{val=getRuntimeClass}) (216{val=()})) (234{val=,}) (800{val=length}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (5 (43 (801{val=T})) (85{val=[]})) (215{val=)}) (32 (800{val=Array}) (235{val=.}) (802{val=newInstance}) (214{val=(}) (32 (800{val=field}) (235{val=.}) (802{val=getRuntimeClass}) (216{val=()})) (234{val=,}) (800{val=length}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (11 (214{val=(}) (5 (43 (801{val=T})) (85{val=[]}) (85{val=[]})) (215{val=)}) (32 (800{val=Array}) (235{val=.}) (802{val=newInstance}) (214{val=(}) (32 (800{val=field}) (235{val=.}) (802{val=getRuntimeClass}) (216{val=()})) (234{val=,}) (3 (304{val=new}) (5 (39{val=int}) (85{val=[]})) (4 (218{val={}) (800{val=dimension}) (234{val=,}) (800{val=dimension}) (219{val=}}))) (215{val=)}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (5 (43 (801{val=T})) (85{val=[]})) (215{val=)}) (32 (800{val=Array}) (235{val=.}) (802{val=newInstance}) (214{val=(}) (32 (800{val=field}) (235{val=.}) (802{val=getRuntimeClass}) (216{val=()})) (234{val=,}) (800{val=length}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=b}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealVector})) (59 (800{val=x}) (204{val==}) (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=m}) (234{val=,}) (800{val=b}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealVector})) (59 (800{val=x}) (204{val==}) (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=m}) (234{val=,}) (800{val=b}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=m}) (234{val=,}) (800{val=b}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=m}) (234{val=,}) (800{val=b}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=m}) (234{val=,}) (800{val=b}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealVector})) (59 (800{val=x}) (204{val==}) (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=b}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealVector})) (59 (800{val=x}) (204{val==}) (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=b}) (234{val=,}) (800{val=x0}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealVector})) (59 (800{val=x}) (204{val==}) (32 (800{val=solver}) (235{val=.}) (802{val=solveInPlace}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=b}) (234{val=,}) (800{val=x0}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealVector})) (59 (800{val=x}) (204{val==}) (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=b}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=b}) (234{val=,}) (800{val=x}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=b}) (234{val=,}) (800{val=x}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=b}) (234{val=,}) (800{val=x}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=solver}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=b}) (234{val=,}) (800{val=x}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=nSteps}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalArgumentException})) (214{val=(}) (40{val=LocalizedFormats.INTEGRATION_METHOD_NEEDS_AT_LEAST_TWO_PREVIOUS_POINTS}) (234{val=,}) (800{val=name}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalArgumentException})) (214{val=(}) (40{val=LocalizedFormats.N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED}) (234{val=,}) (800{val=n}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=e})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathParseException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (32 (800{val=ex}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathParseException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (32 (800{val=ex}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathParseException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (32 (800{val=ex}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathParseException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (32 (800{val=ex}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=f1}) (235{val=.}) (802{val=divide}) (214{val=(}) (800{val=f2}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ZeroException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=getN}) (216{val=()})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalStateException})) (214{val=(}) (40{val=LocalizedFormats.VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC}) (234{val=,}) (32 (802{val=getN}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=i}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalArgumentException})) (214{val=(}) (40{val=LocalizedFormats.INDEX_NOT_POSITIVE}) (234{val=,}) (800{val=i}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalArgumentException})) (214{val=(}) (40{val=LocalizedFormats.INITIAL_CAPACITY_NOT_POSITIVE}) (234{val=,}) (800{val=initialCapacity}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=expansionMode}) (242{val=!=}) (800{val=MULTIPLICATIVE_MODE})) (249{val=&&}) (27 (800{val=expansionMode}) (242{val=!=}) (800{val=ADDITIVE_MODE}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalArgumentException})) (214{val=(}) (40{val=LocalizedFormats.UNSUPPORTED_EXPANSION_MODE}) (234{val=,}) (800{val=expansionMode}) (234{val=,}) (800{val=MULTIPLICATIVE_MODE}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=ADDITIVE_MODE}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=index}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=ArrayIndexOutOfBoundsException})) (214{val=(}) (800{val=index}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ClassCastException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalArgumentException})) (214{val=(}) (40{val=LocalizedFormats.INSTANCES_NOT_COMPARABLE_TO_EXISTING_VALUES}) (234{val=,}) (32 (32 (800{val=v}) (235{val=.}) (802{val=getClass}) (216{val=()})) (235{val=.}) (802{val=getName}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=MathIllegalStateException})) (59 (800{val=cause}) (204{val==}) (14 (304{val=new}) (43 (801{val=MathIllegalStateException})) (214{val=(}) (40{val=LocalizedFormats.SIMPLE_MESSAGE}) (234{val=,}) (800{val=inMsg}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=evaluations}) (235{val=.}) (802{val=incrementCount}) (216{val=()})) (227{val=;})) (21 (32 (800{val=expandable}) (235{val=.}) (802{val=computeDerivatives}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=y}) (234{val=,}) (800{val=yDot}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=expandable})) (204{val==}) (800{val=equations})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=allocateInterpolatedArrays}) (214{val=(}) (40{val=y.length}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=allocateInterpolatedArrays}) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=mean}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=p}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=ex}) (235{val=.}) (802{val=getMessage}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=mean}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=x}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=ex}) (235{val=.}) (802{val=getMessage}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NonPositiveDefiniteOperatorException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NonSquareOperatorException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NonPositiveDefiniteOperatorException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NonSquareOperatorException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (7 (800{val=str}) (204{val==}) (32 (800{val=filePointer}) (235{val=.}) (802{val=readLine}) (216{val=()}))) (215{val=)})) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalStateException})) (214{val=(}) (40{val=LocalizedFormats.URL_CONTAINS_NO_DATA}) (234{val=,}) (800{val=valuesFileURL}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (27 (800{val=empiricalDistribution}) (236{val===}) (500{val=null})) (215{val=)})) (250{val=||}) (36 (214{val=(}) (27 (32 (32 (800{val=empiricalDistribution}) (235{val=.}) (802{val=getBinStats}) (216{val=()})) (235{val=.}) (802{val=size}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalStateException})) (214{val=(}) (40{val=LocalizedFormats.DIGEST_NOT_INITIALIZED}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=sampleStats}) (235{val=.}) (802{val=getN}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=ZeroException})) (214{val=(}) (40{val=LocalizedFormats.URL_CONTAINS_NO_DATA}) (234{val=,}) (800{val=url}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IOException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalStateException})) (214{val=(}) (800{val=e}) (234{val=,}) (40{val=LocalizedFormats.SIMPLE_MESSAGE}) (234{val=,}) (32 (800{val=e}) (235{val=.}) (802{val=getLocalizedMessage}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ZeroException})) (800{val=ze})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalStateException})) (800{val=mise})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=BigFraction})) (231{val=>})) (800{val=coefficients})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=BigFraction})) (231{val=>})) (800{val=coefficients})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=y}) (204{val==}) (27 (27 (800{val=x}) (202{val=*}) (800{val=F_1_3})) (201{val=-}) (800{val=F_1_2}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=m}) (215{val=)})) (252{val=<=}) (800{val=tol})) (250{val=||}) (32 (800{val=Precision}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=fb}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=b}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (32 (800{val=Precision}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=binomial}) (234{val=,}) (32 (800{val=jacobi}) (235{val=.}) (802{val=value}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=mode}) (236{val===}) (40{val=StepNormalizerMode.MULTIPLES})) (249{val=&&}) (32 (800{val=Precision}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=nextTime}) (234{val=,}) (800{val=lastTime}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=nextTime}) (237{val=+=}) (800{val=h})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (32 (800{val=Precision}) (235{val=.}) (802{val=equals}) (214{val=(}) (2 (801{val=out}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (2 (801{val=expectedSample}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (32 (800{val=Precision}) (235{val=.}) (802{val=equals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=MathUtils}) (235{val=.}) (802{val=distanceInf}) (214{val=(}) (800{val=p1}) (234{val=,}) (800{val=p2}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (32 (800{val=Precision}) (235{val=.}) (802{val=equals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=MathUtils}) (235{val=.}) (802{val=distance}) (214{val=(}) (800{val=p1}) (234{val=,}) (800{val=p2}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (32 (800{val=Precision}) (235{val=.}) (802{val=equals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=MathUtils}) (235{val=.}) (802{val=distance}) (214{val=(}) (800{val=p1}) (234{val=,}) (800{val=p2}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (32 (800{val=Precision}) (235{val=.}) (802{val=equals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=MathUtils}) (235{val=.}) (802{val=distance1}) (214{val=(}) (800{val=p1}) (234{val=,}) (800{val=p2}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=Precision}) (235{val=.}) (802{val=compareTo}) (214{val=(}) (800{val=entry}) (234{val=,}) (800{val=minValue}) (234{val=,}) (800{val=maxUlps}) (215{val=)})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=minValue}) (204{val==}) (800{val=entry})) (227{val=;})) (21 (7 (800{val=minPos}) (204{val==}) (800{val=i})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=isLastStep}) (204{val==}) (27 (800{val=isLastStep}) (250{val=||}) (32 (800{val=Precision}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=currentT}) (234{val=,}) (800{val=tEnd}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=Precision}) (235{val=.}) (802{val=equalsIncludingNaN}) (214{val=(}) (2 (801{val=expected}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (2 (801{val=observed}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (800{val=tolerance}) (215{val=)}))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (39{val=double}) (800{val=value})) (226{val=:}) (800{val=values}) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=Precision}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=value}) (234{val=,}) (800{val=x}) (234{val=,}) (800{val=epsilon}) (215{val=)})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=Precision}) (235{val=.}) (802{val=equalsIncludingNaN}) (214{val=(}) (32 (800{val=stat}) (235{val=.}) (802{val=getN}) (216{val=()})) (234{val=,}) (32 (802{val=getN}) (216{val=()})) (215{val=)})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=Precision}) (235{val=.}) (802{val=compareTo}) (214{val=(}) (800{val=entry}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=epsilon}) (215{val=)})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=Precision}) (235{val=.}) (802{val=compareTo}) (214{val=(}) (800{val=entry}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=maxUlps}) (215{val=)})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=columnsToDrop}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=i}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=parameters})) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=parameters}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=MathArrays}) (235{val=.}) (802{val=checkOrder}) (214{val=(}) (800{val=knots}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (5 (39{val=int}) (85{val=[]})) (802{val=getOrderOfRegressors}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=vorder}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=include}) (214{val=(}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=x}) (234{val=,}) (40{val=x.length}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=y}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=MathArrays}) (235{val=.}) (802{val=checkOrder}) (214{val=(}) (800{val=x}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=wrong}) (234{val=,}) (800{val=previous}) (234{val=,}) (800{val=index}) (234{val=,}) (40{val=MathArrays.OrderDirection.INCREASING}) (234{val=,}) (9{val=true}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=MathArrays}) (235{val=.}) (802{val=checkOrder}) (214{val=(}) (800{val=xval}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=d}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (2 (801{val=direc}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MathArrays}) (235{val=.}) (802{val=checkOrder}) (214{val=(}) (800{val=x}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=distance}) (214{val=(}) (800{val=point}) (234{val=,}) (32 (800{val=p}) (235{val=.}) (802{val=getPoint}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=arzneg}) (204{val==}) (32 (802{val=selectColumns}) (214{val=(}) (800{val=arz}) (234{val=,}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=arReverseIndex}) (234{val=,}) (800{val=mu}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=checkOrder}) (214{val=(}) (800{val=x}) (234{val=,}) (40{val=MathArrays.OrderDirection.INCREASING}) (234{val=,}) (9{val=true}) (234{val=,}) (800{val=abort}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MathArrays}) (235{val=.}) (802{val=sortInPlace}) (214{val=(}) (800{val=xNew}) (234{val=,}) (800{val=yNew}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MathArrays}) (235{val=.}) (802{val=sortInPlace}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=x})) (234{val=,}) (22 (315{val=this}) (235{val=.}) (800{val=y})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (5 (39{val=int}) (85{val=[]})) (802{val=getSizes}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=size}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=size})) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=size}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (5 (39{val=int}) (85{val=[]})) (802{val=getCounts}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=counter}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (32 (802{val=expectedValue}) (216{val=()})) (234{val=,}) (32 (800{val=variance}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=testArray}) (234{val=,}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=normalizeArray}) (214{val=(}) (800{val=identicalWeightsArray}) (234{val=,}) (40{val=testArray.length}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=testArray.length}) (215{val=)})) (234{val=,}) (32 (802{val=getTolerance}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=gcd}) (204{val==}) (32 (800{val=ArithmeticsUtils}) (235{val=.}) (800{val=gcd}) (214{val=(}) (800{val=numerator}) (234{val=,}) (800{val=denominator}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=d}) (204{val==}) (32 (800{val=ArithmeticsUtils}) (235{val=.}) (802{val=gcd}) (214{val=(}) (800{val=num}) (234{val=,}) (800{val=den}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=long}) (59 (800{val=lcm}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (32 (802{val=mulAndCheck}) (214{val=(}) (27 (800{val=a}) (203{val=/}) (32 (800{val=ArithmeticsUtils}) (235{val=.}) (802{val=gcd}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=b}) (215{val=)}))) (234{val=,}) (800{val=b}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=lcm}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (32 (802{val=mulAndCheck}) (214{val=(}) (27 (800{val=a}) (203{val=/}) (32 (800{val=ArithmeticsUtils}) (235{val=.}) (802{val=gcd}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=b}) (215{val=)}))) (234{val=,}) (800{val=b}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (2 (801{val=coeff}) (221{val=[}) (800{val=i}) (222{val=]})) (221{val=[}) (800{val=j}) (222{val=]})) (204{val==}) (11 (214{val=(}) (39{val=int}) (215{val=)}) (32 (800{val=ArithmeticsUtils}) (235{val=.}) (802{val=binomialCoefficient}) (214{val=(}) (800{val=i}) (234{val=,}) (800{val=j}) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=binomial}) (204{val==}) (32 (800{val=ArithmeticsUtils}) (235{val=.}) (802{val=binomialCoefficient}) (214{val=(}) (27 (800{val=v}) (200{val=+}) (800{val=i})) (234{val=,}) (800{val=i}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=binomial}) (204{val==}) (32 (800{val=ArithmeticUtils}) (235{val=.}) (802{val=binomialCoefficient}) (214{val=(}) (27 (800{val=v}) (200{val=+}) (800{val=i})) (234{val=,}) (800{val=i}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=gcd}) (204{val==}) (32 (800{val=ArithmeticUtils}) (235{val=.}) (800{val=gcd}) (214{val=(}) (800{val=numerator}) (234{val=,}) (800{val=denominator}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=d}) (204{val==}) (32 (800{val=ArithmeticUtils}) (235{val=.}) (802{val=gcd}) (214{val=(}) (800{val=num}) (234{val=,}) (800{val=den}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (2 (801{val=coeff}) (221{val=[}) (800{val=i}) (222{val=]})) (221{val=[}) (800{val=j}) (222{val=]})) (204{val==}) (11 (214{val=(}) (39{val=int}) (215{val=)}) (32 (800{val=ArithmeticUtils}) (235{val=.}) (802{val=binomialCoefficient}) (214{val=(}) (800{val=i}) (234{val=,}) (800{val=j}) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=signum}) (214{val=(}) (800{val=y0}) (215{val=)})) (200{val=+}) (32 (800{val=FastMath}) (235{val=.}) (802{val=signum}) (214{val=(}) (800{val=ym}) (215{val=)}))) (236{val===}) (34{val=NUMBER_CONSTANT})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=x}) (215{val=)})) (230{val=<}) (800{val=SHORTCUT})) (233{val=?}) (34{val=NUMBER_CONSTANT}) (226{val=:}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=sin}) (214{val=(}) (800{val=x}) (215{val=)})) (203{val=/}) (800{val=x}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (40{val=Precision.EPSILON})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=zero}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (40{val=Precision.SAFE_MIN})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=distance}) (214{val=(}) (40{val=line.zero}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=tol}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=max}) (214{val=(}) (27 (800{val=m}) (202{val=*}) (2 (801{val=singularValues}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (202{val=*}) (800{val=EPS})) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (40{val=Precision.SAFE_MIN}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=d}) (231{val=>}) (38 (201{val=-}) (40{val=Precision.SAFE_MIN}))) (249{val=&&}) (27 (800{val=d}) (230{val=<}) (40{val=Precision.SAFE_MIN}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=d}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=es}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=m}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=es}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=es}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=m}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=es}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=m}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=eps}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=rows}) (202{val=*}) (800{val=columns}) (202{val=*}) (40{val=Precision.EPSILON}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=diag}) (215{val=)})) (230{val=<}) (40{val=Precision.SAFE_MIN})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathArithmeticException})) (214{val=(}) (40{val=LocalizedFormats.ZERO_DENOMINATOR}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=diag}) (215{val=)})) (230{val=<}) (40{val=Precision.SAFE_MIN})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathArithmeticException})) (214{val=(}) (40{val=LocalizedFormats.ZERO_DENOMINATOR}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=LevenbergMarquardtOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=LevenbergMarquardtOptimizer})) (214{val=(}) (800{val=initialStepBoundFactor}) (234{val=,}) (800{val=costRelativeTolerance}) (234{val=,}) (800{val=parRelativeTolerance}) (234{val=,}) (800{val=orthoTolerance}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=indefinite}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=distinct}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=repeated}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=m}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=v}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)})) (235{val=.}) (802{val=getV}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (32 (802{val=createTestMatrix}) (214{val=(}) (800{val=r}) (234{val=,}) (800{val=bigValues}) (215{val=)})) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (32 (800{val=t}) (235{val=.}) (802{val=getMainDiagonalRef}) (216{val=()})) (234{val=,}) (32 (800{val=t}) (235{val=.}) (802{val=getSecondaryDiagonalRef}) (216{val=()})) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=decomposition}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=mainTridiagonal}) (234{val=,}) (800{val=secondaryTridiagonal}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=decomposition}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=mainTridiagonal}) (234{val=,}) (800{val=secondaryTridiagonal}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=decomposition}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=mainTridiagonal}) (234{val=,}) (800{val=secondaryTridiagonal}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (234{val=,}) (40{val=Precision.SAFE_MIN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=tmp}) (215{val=)})) (231{val=>}) (40{val=Precision.EPSILON})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=w}) (204{val==}) (27 (36 (214{val=(}) (27 (800{val=di}) (202{val=*}) (800{val=w})) (215{val=)})) (203{val=/}) (800{val=dpi}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=numberOfVariables}) (234{val=,}) (800{val=includeConstant}) (234{val=,}) (40{val=Precision.EPSILON}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=sumXX}) (215{val=)})) (231{val=>}) (40{val=Precision.SAFE_MIN})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NumberIsTooLargeException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=numberOfInterpolationPoints}) (234{val=,}) (800{val=DEFAULT_INITIAL_RADIUS}) (234{val=,}) (800{val=DEFAULT_STOPPING_RADIUS}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=stopfitness})) (204{val==}) (800{val=stopFitness})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=stopFitness})) (204{val==}) (800{val=stopFitness})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=isInfinite}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (32 (802{val=unsupported}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=isNaN}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (32 (802{val=unsupported}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=isInfinite}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (32 (802{val=unsupported}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=isNaN}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (32 (802{val=unsupported}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=isInfinite}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (32 (802{val=unsupported}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=isNaN}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (32 (802{val=unsupported}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=unitize}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (32 (802{val=unsupported}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=getLInfNorm}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (32 (802{val=unsupported}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=getL1Norm}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (32 (802{val=unsupported}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=getNorm}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (32 (802{val=unsupported}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=bounds}) (204{val==}) (32 (800{val=empiricalDistribution2}) (235{val=.}) (802{val=getGeneratorUpperBounds}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldDecompositionSolver})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=solver})) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=floatn}) (204{val==}) (40{val=v.length})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=eventY}) (204{val==}) (32 (32 (800{val=interpolator}) (235{val=.}) (802{val=getInterpolatedState}) (216{val=()})) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=yTmp}) (204{val==}) (32 (800{val=y0}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=quartiles}) (204{val==}) (32 (800{val=TestUtils}) (235{val=.}) (802{val=getDistributionQuartiles}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BetaDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=BetaDistribution})) (59 (800{val=betaDistribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=BetaDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=BetaDistribution})) (59 (800{val=d}) (204{val==}) (14 (304{val=new}) (43 (801{val=BetaDistribution})) (214{val=(}) (800{val=alpha}) (234{val=,}) (800{val=beta}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=BetaDistribution})) (59 (800{val=d}) (204{val==}) (14 (304{val=new}) (43 (801{val=BetaDistribution})) (214{val=(}) (800{val=alpha}) (234{val=,}) (800{val=beta}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setDistribution}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BinomialDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setDistribution}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BinomialDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=quartiles}) (204{val==}) (32 (800{val=TestUtils}) (235{val=.}) (802{val=getDistributionQuartiles}) (214{val=(}) (14 (304{val=new}) (43 (801{val=CauchyDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ChiSquaredDistribution})) (59 (800{val=d}) (204{val==}) (14 (304{val=new}) (43 (801{val=ChiSquaredDistribution})) (214{val=(}) (800{val=df}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setDistribution}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ChiSquaredDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=ChiSquaredDistribution})) (802{val=makeDistribution}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ChiSquaredDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=quartiles}) (204{val==}) (32 (800{val=TestUtils}) (235{val=.}) (802{val=getDistributionQuartiles}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ChiSquaredDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=FDistribution})) (59 (800{val=fd}) (204{val==}) (14 (304{val=new}) (43 (801{val=FDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=quartiles}) (204{val==}) (32 (800{val=TestUtils}) (235{val=.}) (802{val=getDistributionQuartiles}) (214{val=(}) (14 (304{val=new}) (43 (801{val=FDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=GammaDistribution})) (59 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=GammaDistribution})) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=b}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=GammaDistribution})) (59 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=GammaDistribution})) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=b}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=ExponentialDistribution})) (802{val=makeDistribution}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ExponentialDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=FDistribution})) (59 (800{val=fdist}) (204{val==}) (14 (304{val=new}) (43 (801{val=FDistribution})) (214{val=(}) (40{val=a.dfbg}) (234{val=,}) (40{val=a.dfwg}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=gamma}) (204{val==}) (14 (304{val=new}) (43 (801{val=GammaDistribution})) (214{val=(}) (27 (800{val=degreesOfFreedom}) (203{val=/}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (7 (800{val=solverAbsoluteAccuracy}) (204{val==}) (800{val=inverseCumAccuracy})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=HypergeometricDistribution})) (59 (800{val=dist}) (204{val==}) (14 (304{val=new}) (43 (801{val=HypergeometricDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setDistribution}) (214{val=(}) (14 (304{val=new}) (43 (801{val=HypergeometricDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setDistribution}) (214{val=(}) (14 (304{val=new}) (43 (801{val=HypergeometricDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setDistribution}) (214{val=(}) (14 (304{val=new}) (43 (801{val=HypergeometricDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NormalDistribution})) (59 (800{val=normal}) (204{val==}) (14 (304{val=new}) (43 (801{val=NormalDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NormalDistribution})) (59 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=NormalDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NormalDistribution})) (59 (800{val=d}) (204{val==}) (14 (304{val=new}) (43 (801{val=NormalDistribution})) (214{val=(}) (800{val=mean}) (234{val=,}) (800{val=sd}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setDistribution}) (214{val=(}) (14 (304{val=new}) (43 (801{val=PascalDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setDistribution}) (214{val=(}) (14 (304{val=new}) (43 (801{val=PascalDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=normal}) (204{val==}) (14 (304{val=new}) (43 (801{val=NormalDistribution})) (214{val=(}) (800{val=p}) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=p}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TDistribution})) (59 (800{val=tDistribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=TDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (32 (802{val=getMeanSquareError}) (216{val=()})) (202{val=*}) (36 (214{val=(}) (27 (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (800{val=n})) (215{val=)})) (200{val=+}) (27 (36 (214{val=(}) (27 (800{val=xbar}) (202{val=*}) (800{val=xbar})) (215{val=)})) (203{val=/}) (800{val=sumXX}))) (215{val=)}))) (215{val=)})))
(AST_ROOT_SC2NF (60 (43 (801{val=TDistribution})) (59 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=TDistribution})) (214{val=(}) (800{val=degreesOfFreedom}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TDistribution})) (59 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=TDistribution})) (214{val=(}) (800{val=degreesOfFreedom}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TDistribution})) (59 (800{val=td}) (204{val==}) (14 (304{val=new}) (43 (801{val=TDistribution})) (214{val=(}) (800{val=df}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setDistribution}) (214{val=(}) (14 (304{val=new}) (43 (801{val=TDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=TDistribution})) (59 (800{val=td}) (204{val==}) (14 (304{val=new}) (43 (801{val=TDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=td}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=td}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=TDistribution})) (802{val=makeDistribution}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=TDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=quartiles}) (204{val==}) (32 (800{val=TestUtils}) (235{val=.}) (802{val=getDistributionQuartiles}) (214{val=(}) (14 (304{val=new}) (43 (801{val=WeibullDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=quartiles}) (204{val==}) (32 (800{val=TestUtils}) (235{val=.}) (802{val=getDistributionQuartiles}) (214{val=(}) (14 (304{val=new}) (43 (801{val=TDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PoissonDistribution})) (59 (800{val=poissonDistribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=PoissonDistribution})) (214{val=(}) (800{val=mean}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PoissonDistribution})) (59 (800{val=dist}) (204{val==}) (14 (304{val=new}) (43 (801{val=PoissonDistribution})) (214{val=(}) (800{val=mean}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PoissonDistribution})) (59 (800{val=dist}) (204{val==}) (14 (304{val=new}) (43 (801{val=PoissonDistribution})) (214{val=(}) (800{val=mean}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=PoissonDistribution})) (59 (800{val=dist}) (204{val==}) (14 (304{val=new}) (43 (801{val=PoissonDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=dist}) (235{val=.}) (802{val=getMean}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NotStrictlyPositiveException})) (235{val=.}) (341{val=class}))) (215{val=)})) (83{val=public}) (39{val=void}) (802{val=testNegativeMean}) (216{val=()}) (8 (218{val={}) (21 (14 (304{val=new}) (43 (801{val=PoissonDistribution})) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=PoissonDistribution})) (59 (800{val=dist}) (204{val==}) (14 (304{val=new}) (43 (801{val=PoissonDistribution})) (214{val=(}) (800{val=DEFAULT_TEST_POISSON_PARAMETER}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=IntegerDistribution})) (802{val=makeDistribution}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=PoissonDistribution})) (214{val=(}) (800{val=DEFAULT_TEST_POISSON_PARAMETER}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=dist}) (204{val==}) (14 (304{val=new}) (43 (801{val=ZipfDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=windowSize}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=windowSize}) (242{val=!=}) (800{val=INFINITE_WINDOW})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalArgumentException})) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_WINDOW_SIZE}) (234{val=,}) (800{val=windowSize}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=sign}) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=magnitude}) (236{val===}) (40{val=Long.MIN_VALUE}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathArithmeticException})) (214{val=(}) (40{val=LocalizedFormats.OVERFLOW}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (38 (201{val=-}) (800{val=magnitude})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=sign}) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=magnitude}) (236{val===}) (40{val=Integer.MIN_VALUE}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathArithmeticException})) (214{val=(}) (40{val=LocalizedFormats.OVERFLOW}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (38 (201{val=-}) (800{val=magnitude})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=c}) (235{val=.}) (802{val=isAssignableFrom}) (214{val=(}) (57 (43 (800{val=UnivariateFunction})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=c})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Expm1Function})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=QuinticFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (32 (800{val=i}) (235{val=.}) (802{val=interpolate}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (32 (800{val=i}) (235{val=.}) (802{val=interpolate}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (32 (800{val=i}) (235{val=.}) (802{val=interpolate}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=XMinus5Function})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=QuinticFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=function})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=function})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Expm1Function})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=QuinticFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=DifferentiableUnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (60 (43 (801{val=ParametricUnivariateFunction})) (59 (800{val=sif}) (204{val==}) (14 (304{val=new}) (43 (801{val=SimpleInverseFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ParametricUnivariateFunction})) (59 (800{val=sif}) (204{val==}) (14 (304{val=new}) (43 (801{val=SimpleInverseFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=func})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=QuinticFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UnivariateFunction})) (59 (800{val=dfdx}) (204{val==}) (32 (800{val=f}) (235{val=.}) (802{val=derivative}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UnivariateFunction})) (59 (800{val=dfdx}) (204{val==}) (32 (800{val=f}) (235{val=.}) (802{val=derivative}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UnivariateFunction})) (59 (800{val=dfdx}) (204{val==}) (32 (800{val=f}) (235{val=.}) (802{val=derivative}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Gaussian})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Gaussian})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=RealVector})) (802{val=mapToSelf}) (214{val=(}) (44 (43 (801{val=UnivariateFunction})) (800{val=function})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (802{val=unsupported}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=RealVector})) (802{val=map}) (214{val=(}) (44 (43 (801{val=UnivariateFunction})) (800{val=function})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (802{val=unsupported}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=DifferentiableUnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (32 (800{val=i}) (235{val=.}) (802{val=interpolate}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (32 (800{val=i}) (235{val=.}) (802{val=interpolate}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (32 (800{val=i}) (235{val=.}) (802{val=interpolate}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (32 (800{val=i}) (235{val=.}) (802{val=interpolate}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=QuinticFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=p}) (204{val==}) (32 (800{val=interpolator}) (235{val=.}) (802{val=interpolate}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UnivariateFunction})) (59 (800{val=dfdx}) (204{val==}) (32 (800{val=f}) (235{val=.}) (802{val=derivative}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UnivariateFunction})) (59 (800{val=dfdx}) (204{val==}) (32 (800{val=f}) (235{val=.}) (802{val=derivative}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=QuinticFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=QuinticFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=QuinticFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UnivariateFunction})) (59 (800{val=dfdx}) (204{val==}) (32 (800{val=f}) (235{val=.}) (802{val=derivative}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UnivariateFunction})) (59 (800{val=dfdx}) (204{val==}) (32 (800{val=f}) (235{val=.}) (802{val=derivative}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sigmoid})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=function})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=function})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=function})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=function})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=function})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (60 (43 (801{val=DifferentiableUnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=QuinticFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DifferentiableUnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=ParametricUnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=ParametricUnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=ParametricUnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=p}) (204{val==}) (32 (800{val=interpolator}) (235{val=.}) (802{val=interpolate}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UnivariateFunction})) (59 (800{val=dfdx}) (204{val==}) (32 (800{val=f}) (235{val=.}) (802{val=derivative}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=QuinticFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Expm1Function})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=QuinticFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=QuinticFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=UnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UnivariateFunction})) (59 (800{val=lsf}) (204{val==}) (14 (304{val=new}) (43 (801{val=LineSearchFunction})) (214{val=(}) (800{val=searchDirection}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=DifferentiableUnivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=QuinticFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=QuinticFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=QuinticFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=function})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateFunction})) (800{val=function})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=SinFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=RealVector})) (802{val=mapToSelf}) (214{val=(}) (44 (43 (801{val=UnivariateFunction})) (800{val=function})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (802{val=unsupported}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=RealVector})) (802{val=map}) (214{val=(}) (44 (43 (801{val=UnivariateFunction})) (800{val=function})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (802{val=unsupported}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=MonitoredFunction}) (214{val=(}) (44 (43 (801{val=UnivariateFunction})) (800{val=f})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=callsCount}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=f})) (204{val==}) (800{val=f})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=dSpline}) (204{val==}) (32 (800{val=spline}) (235{val=.}) (802{val=derivative}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=MultivariateFunction})) (800{val=evaluationFunction})))
(AST_ROOT_SC2NF (44 (43 (801{val=MultivariateFunction})) (800{val=func})))
(AST_ROOT_SC2NF (60 (43 (801{val=MultivariateFunction})) (59 (800{val=coll}) (204{val==}) (32 (800{val=FunctionUtils}) (235{val=.}) (802{val=collector}) (214{val=(}) (800{val=bi}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=MultivariateFunction})) (800{val=evaluationFunction})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=MultivariateFunction})) (800{val=evaluationFunction})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=DifferentiableMultivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=DifferentiableMultivariateFunction})) (800{val=func})))
(AST_ROOT_SC2NF (44 (43 (801{val=DifferentiableMultivariateFunction})) (800{val=func})))
(AST_ROOT_SC2NF (44 (43 (801{val=MultivariateFunction})) (800{val=func})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=MultivariateFunction})) (800{val=evaluationFunction})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=MultivariateFunction})) (800{val=evaluationFunction})))
(AST_ROOT_SC2NF (44 (43 (801{val=MultivariateFunction})) (800{val=func})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=KeplerHandler}) (214{val=(}) (44 (43 (801{val=TestProblem3})) (800{val=pb})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=pb})) (204{val==}) (800{val=pb})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=KeplerHandler}) (214{val=(}) (44 (43 (801{val=TestProblem3})) (800{val=pb})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=pb})) (204{val==}) (800{val=pb})) (227{val=;})) (21 (7 (800{val=maxError}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=KeplerStepHandler}) (214{val=(}) (44 (43 (801{val=TestProblem3})) (800{val=pb})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=pb})) (204{val==}) (800{val=pb})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=evaluations}) (235{val=.}) (802{val=resetCount}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=KeplerStepHandler}) (214{val=(}) (44 (43 (801{val=TestProblem3})) (800{val=pb})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=pb})) (204{val==}) (800{val=pb})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=KeplerHandler}) (214{val=(}) (44 (43 (801{val=TestProblem3})) (800{val=pb})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=pb})) (204{val==}) (800{val=pb})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=DifferentiableMultivariateVectorFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=MultivariateVectorFunction})) (800{val=function})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=MultivariateVectorFunction})) (800{val=function})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=MultivariateVectorFunction})) (800{val=function})))
(AST_ROOT_SC2NF (68 (209{val=#}) (802{val=optimize}) (214{val=(}) (69 (39{val=int})) (234{val=,}) (69 (43 (800{val=MultivariateVectorFunction}))) (234{val=,}) (69 (5 (39{val=double}) (85{val=[]}))) (234{val=,}) (69 (5 (39{val=double}) (85{val=[]}))) (234{val=,}) (69 (5 (39{val=double}) (85{val=[]}))) (215{val=)})))
(AST_ROOT_SC2NF (44 (43 (801{val=DifferentiableMultivariateVectorFunction})) (800{val=problem})))
(AST_ROOT_SC2NF (21 (7 (800{val=result}) (204{val==}) (32 (800{val=transformer}) (235{val=.}) (802{val=inverseTransform}) (214{val=(}) (800{val=f}) (234{val=,}) (800{val=min}) (234{val=,}) (800{val=max}) (234{val=,}) (800{val=N}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=forward}) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=temp}) (204{val==}) (32 (802{val=transform2}) (214{val=(}) (800{val=temp}) (215{val=)}))) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (7 (800{val=temp}) (204{val==}) (32 (802{val=inverseTransform2}) (214{val=(}) (800{val=temp}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (801{val=dResult}) (85{val=[]}) (204{val==}) (32 (800{val=transformer}) (235{val=.}) (802{val=inverseTransform}) (214{val=(}) (800{val=dY}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=Object})) (85{val=[]})) (800{val=o})))
(AST_ROOT_SC2NF (44 (5 (39{val=double}) (85{val=[]})) (800{val=d})))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=Complex})) (85{val=[]})) (800{val=f})))
(AST_ROOT_SC2NF (44 (5 (39{val=double}) (85{val=[]})) (800{val=f})))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=Complex})) (85{val=[]})) (800{val=f})))
(AST_ROOT_SC2NF (44 (5 (39{val=double}) (85{val=[]})) (800{val=f})))
(AST_ROOT_SC2NF (44 (5 (39{val=double}) (85{val=[]})) (800{val=f})))
(AST_ROOT_SC2NF (44 (5 (39{val=double}) (85{val=[]})) (800{val=f})))
(AST_ROOT_SC2NF (44 (5 (39{val=double}) (85{val=[]})) (800{val=f})))
(AST_ROOT_SC2NF (44 (5 (39{val=double}) (85{val=[]})) (800{val=f})))
(AST_ROOT_SC2NF (44 (5 (39{val=int}) (85{val=[]})) (800{val=x})))
(AST_ROOT_SC2NF (44 (5 (39{val=double}) (85{val=[]})) (800{val=x})))
(AST_ROOT_SC2NF (44 (5 (39{val=int}) (85{val=[]})) (800{val=f})))
(AST_ROOT_SC2NF (44 (5 (39{val=double}) (85{val=[]})) (800{val=f})))
(AST_ROOT_SC2NF (44 (5 (39{val=double}) (85{val=[]})) (800{val=f})))
(AST_ROOT_SC2NF (44 (5 (39{val=double}) (85{val=[]})) (800{val=f})))
(AST_ROOT_SC2NF (44 (5 (39{val=double}) (85{val=[]})) (800{val=f})))
(AST_ROOT_SC2NF (44 (5 (39{val=double}) (85{val=[]})) (800{val=f})))
(AST_ROOT_SC2NF (44 (5 (39{val=double}) (85{val=[]})) (800{val=f})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=Fraction})) (214{val=(}) (27 (36 (214{val=(}) (27 (36 (214{val=(}) (27 (32 (800{val=Math}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=w}) (215{val=)})) (202{val=*}) (800{val=d})) (215{val=)})) (200{val=+}) (800{val=n})) (215{val=)})) (202{val=*}) (32 (800{val=MathUtils}) (235{val=.}) (802{val=copySign}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=w}) (215{val=)}))) (234{val=,}) (800{val=d}) (215{val=)})))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=bits})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=seed}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=setSeed}) (214{val=(}) (27 (32 (800{val=System}) (235{val=.}) (802{val=currentTimeMillis}) (216{val=()})) (200{val=+}) (32 (800{val=System}) (235{val=.}) (802{val=identityHashCode}) (214{val=(}) (315{val=this}) (215{val=)}))) (215{val=)})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=x})))
(AST_ROOT_SC2NF (21 (7 (800{val=p}) (204{val==}) (32 (800{val=dist}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (11 (214{val=(}) (39{val=int}) (215{val=)}) (800{val=x})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=RealDistribution})) (800{val=distribution})))
(AST_ROOT_SC2NF (44 (43 (801{val=RealDistribution})) (800{val=distribution})))
(AST_ROOT_SC2NF (60 (43 (800{val=FastFourierTransformer})) (59 (800{val=transformer}) (204{val==}) (32 (800{val=FastFourierTransformer}) (235{val=.}) (802{val=create}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=FastFourierTransformer})) (59 (800{val=transformer}) (204{val==}) (32 (800{val=FastFourierTransformer}) (235{val=.}) (802{val=create}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=FastFourierTransformer})) (59 (800{val=transformer}) (204{val==}) (32 (800{val=FastFourierTransformer}) (235{val=.}) (802{val=create}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=FastFourierTransformer})) (59 (800{val=transformer}) (204{val==}) (32 (800{val=FastFourierTransformer}) (235{val=.}) (802{val=create}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=FastCosineTransformer})) (59 (800{val=transformer}) (204{val==}) (32 (800{val=FastCosineTransformer}) (235{val=.}) (802{val=create}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=FastCosineTransformer})) (59 (800{val=transformer}) (204{val==}) (32 (800{val=FastCosineTransformer}) (235{val=.}) (802{val=create}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=DifferentiableMultivariateVectorOptimizer})) (800{val=optimizer})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=DifferentiableMultivariateVectorOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (9{val=true}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=checkUnsolvableProblem}) (214{val=(}) (800{val=optimizer}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=DifferentiableMultivariateVectorOptimizer})) (800{val=optimizer})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=HarmonicFitter}) (214{val=(}) (44 (83{val=final}) (43 (801{val=DifferentiableMultivariateVectorOptimizer})) (800{val=optimizer})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=optimizer}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=DifferentiableMultivariateVectorOptimizer})) (800{val=optimizer})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=GaussianFitter}) (214{val=(}) (44 (43 (801{val=DifferentiableMultivariateVectorOptimizer})) (800{val=optimizer})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=optimizer}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=BaseMultivariateOptimizer})) (230{val=<}) (43 (800{val=FUNC})) (231{val=>})) (800{val=optimizer})))
(AST_ROOT_SC2NF (44 (43 (801{val=MultivariateOptimizer})) (800{val=optim})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=DifferentiableMultivariateOptimizer})) (800{val=optimizer})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=MultivariateOptimizer})) (800{val=optimizer})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=setSeed}) (214{val=(}) (44 (39{val=int}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=ran}) (235{val=.}) (802{val=setSeed}) (214{val=(}) (800{val=seed}) (215{val=)})) (227{val=;})) (21 (32 (802{val=clear}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=rand}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=initRan}) (216{val=()})) (227{val=;})) (219{val=}}))) (21 (32 (800{val=rand}) (235{val=.}) (802{val=setSeed}) (214{val=(}) (800{val=seed}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (800{val=FastSineTransformer})) (59 (800{val=transformer}) (204{val==}) (32 (800{val=FastSineTransformer}) (235{val=.}) (802{val=create}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=FastSineTransformer})) (59 (800{val=transformer}) (204{val==}) (32 (800{val=FastSineTransformer}) (235{val=.}) (802{val=create}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=dist}) (235{val=.}) (802{val=inverseCumulativeProbability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setInverseCumulativeTestValues}) (214{val=(}) (3 (304{val=new}) (5 (39{val=int}) (85{val=[]})) (4 (218{val={}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (219{val=}}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setInverseCumulativeTestValues}) (214{val=(}) (3 (304{val=new}) (5 (39{val=int}) (85{val=[]})) (4 (218{val={}) (40{val=Integer.MAX_VALUE}) (234{val=,}) (40{val=Integer.MAX_VALUE}) (219{val=}}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (800{val=numberOfTrials}) (202{val=*}) (800{val=probabilityOfSuccess})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=ArithmeticUtils}) (235{val=.}) (802{val=isPowerOfTwo}) (214{val=(}) (800{val=n}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalArgumentException})) (214{val=(}) (40{val=LocalizedFormats.NOT_POWER_OF_TWO_PLUS_ONE}) (234{val=,}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (40{val=f.length}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=ArithmeticUtils}) (235{val=.}) (802{val=isPowerOfTwo}) (214{val=(}) (40{val=o.length}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalArgumentException})) (214{val=(}) (40{val=LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING}) (234{val=,}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (40{val=o.length}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=ArithmeticUtils}) (235{val=.}) (802{val=isPowerOfTwo}) (214{val=(}) (40{val=d.length}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalArgumentException})) (214{val=(}) (40{val=LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING}) (234{val=,}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (40{val=d.length}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=ArithmeticUtils}) (235{val=.}) (802{val=isPowerOfTwo}) (214{val=(}) (800{val=n}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalArgumentException})) (214{val=(}) (40{val=LocalizedFormats.NOT_POWER_OF_TWO}) (234{val=,}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=ArithmeticUtils}) (235{val=.}) (802{val=isPowerOfTwo}) (214{val=(}) (800{val=n}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalArgumentException})) (214{val=(}) (40{val=LocalizedFormats.NOT_POWER_OF_TWO}) (234{val=,}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=data}) (204{val==}) (32 (800{val=FunctionUtils}) (235{val=.}) (802{val=sample}) (214{val=(}) (800{val=f}) (234{val=,}) (800{val=min}) (234{val=,}) (800{val=max}) (234{val=,}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=data}) (204{val==}) (32 (800{val=FunctionUtils}) (235{val=.}) (802{val=sample}) (214{val=(}) (800{val=f}) (234{val=,}) (800{val=min}) (234{val=,}) (800{val=max}) (234{val=,}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=data}) (204{val==}) (32 (800{val=FunctionUtils}) (235{val=.}) (802{val=sample}) (214{val=(}) (800{val=f}) (234{val=,}) (800{val=min}) (234{val=,}) (800{val=max}) (234{val=,}) (800{val=n}) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (32 (802{val=inverseTransform}) (214{val=(}) (800{val=data}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=data}) (204{val==}) (32 (800{val=FunctionUtils}) (235{val=.}) (802{val=sample}) (214{val=(}) (800{val=f}) (234{val=,}) (800{val=min}) (234{val=,}) (800{val=max}) (234{val=,}) (800{val=n}) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (32 (802{val=transform}) (214{val=(}) (800{val=data}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=unscaled}) (204{val==}) (32 (802{val=fht}) (214{val=(}) (32 (800{val=FunctionUtils}) (235{val=.}) (802{val=sample}) (214{val=(}) (800{val=f}) (234{val=,}) (800{val=min}) (234{val=,}) (800{val=max}) (234{val=,}) (800{val=n}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=fht}) (214{val=(}) (32 (800{val=FunctionUtils}) (235{val=.}) (802{val=sample}) (214{val=(}) (800{val=f}) (234{val=,}) (800{val=min}) (234{val=,}) (800{val=max}) (234{val=,}) (800{val=n}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=data}) (204{val==}) (32 (800{val=FunctionUtils}) (235{val=.}) (802{val=sample}) (214{val=(}) (800{val=f}) (234{val=,}) (800{val=min}) (234{val=,}) (800{val=max}) (234{val=,}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=data}) (204{val==}) (32 (800{val=FunctionUtils}) (235{val=.}) (802{val=sample}) (214{val=(}) (800{val=f}) (234{val=,}) (800{val=min}) (234{val=,}) (800{val=max}) (234{val=,}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=TransformUtils}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (32 (802{val=fst}) (214{val=(}) (800{val=data}) (215{val=)})) (234{val=,}) (800{val=s}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=TransformUtils}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (32 (802{val=fst}) (214{val=(}) (800{val=f}) (215{val=)})) (234{val=,}) (800{val=s}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (39{val=double}) (59 (800{val=s}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (800{val=n})) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (32 (800{val=TransformUtils}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (32 (802{val=fst}) (214{val=(}) (800{val=data}) (215{val=)})) (234{val=,}) (800{val=s}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (39{val=double}) (59 (800{val=s}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (40{val=f.length})) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (32 (800{val=TransformUtils}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (32 (802{val=fst}) (214{val=(}) (800{val=f}) (215{val=)})) (234{val=,}) (800{val=s}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=TransformUtils}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (800{val=x2}) (234{val=,}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (40{val=x2.length}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=TransformUtils}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (800{val=transformed}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=TransformUtils}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (32 (802{val=fft}) (214{val=(}) (800{val=f}) (215{val=)})) (234{val=,}) (800{val=s}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=TransformUtils}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (32 (802{val=fft}) (214{val=(}) (800{val=data}) (234{val=,}) (9{val=true}) (215{val=)})) (234{val=,}) (800{val=s}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=TransformUtils}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (32 (802{val=fft}) (214{val=(}) (800{val=f}) (234{val=,}) (9{val=true}) (215{val=)})) (234{val=,}) (800{val=s}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (39{val=double}) (59 (800{val=s}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (40{val=f.length}) (215{val=)})))) (227{val=;})) (41 (329{val=return}) (32 (800{val=TransformUtils}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (32 (802{val=fft}) (214{val=(}) (800{val=f}) (215{val=)})) (234{val=,}) (800{val=s}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=TransformUtils}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (32 (802{val=fft}) (214{val=(}) (800{val=data}) (234{val=,}) (9{val=false}) (215{val=)})) (234{val=,}) (800{val=s}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=TransformUtils}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (32 (802{val=fft}) (214{val=(}) (800{val=f}) (234{val=,}) (9{val=false}) (215{val=)})) (234{val=,}) (800{val=s}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=TransformUtils}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (800{val=x}) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (40{val=x.length}) (203{val=/}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=TransformUtils}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (32 (802{val=fct}) (214{val=(}) (800{val=f}) (215{val=)})) (234{val=,}) (800{val=s1}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=TransformUtils}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (32 (802{val=fct}) (214{val=(}) (800{val=f}) (215{val=)})) (234{val=,}) (800{val=s}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=TransformUtils}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (800{val=unscaled}) (234{val=,}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (800{val=n})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=TransformUtils}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (32 (802{val=fht}) (214{val=(}) (800{val=f}) (215{val=)})) (234{val=,}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (40{val=f.length})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (39{val=double}) (800{val=diag})) (226{val=:}) (800{val=rDiag}) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=diag}) (215{val=)})) (252{val=<=}) (800{val=threshold})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))) (219{val=}}))) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=DecompositionSolver})) (802{val=getSolver}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Solver})) (214{val=(}) (800{val=qrt}) (234{val=,}) (800{val=rDiag}) (234{val=,}) (800{val=threshold}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NumberIsTooLargeException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=UnivariateSolver})) (800{val=solver})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=UnivariateSolver})) (800{val=solver})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (14 (304{val=new}) (43 (801{val=MullerSolver})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (14 (304{val=new}) (43 (801{val=MullerSolver})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (14 (304{val=new}) (43 (801{val=MullerSolver})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (14 (304{val=new}) (43 (801{val=MullerSolver})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=UnivariateSolverUtils}) (235{val=.}) (802{val=verifyInterval}) (214{val=(}) (800{val=lower}) (234{val=,}) (800{val=upper}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=maxEval}) (234{val=,}) (800{val=f}) (234{val=,}) (32 (800{val=UnivariateSolverUtils}) (235{val=.}) (802{val=midpoint}) (214{val=(}) (800{val=min}) (234{val=,}) (800{val=max}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=UnivariateSolver})) (800{val=lineSearchSolver})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=UnivariateSolver})) (800{val=lineSearchSolver})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (14 (304{val=new}) (43 (801{val=RiddersSolver})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (14 (304{val=new}) (43 (801{val=RiddersSolver})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (14 (304{val=new}) (43 (801{val=RiddersSolver})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (14 (304{val=new}) (43 (801{val=RiddersSolver})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (14 (304{val=new}) (43 (801{val=BrentSolver})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (14 (304{val=new}) (43 (801{val=BrentSolver})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (14 (304{val=new}) (43 (801{val=MullerSolver2})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (14 (304{val=new}) (43 (801{val=MullerSolver2})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (14 (304{val=new}) (43 (801{val=MullerSolver2})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (14 (304{val=new}) (43 (801{val=MullerSolver2})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=x}) (204{val==}) (32 (800{val=UnivariateSolverUtils}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=toSolve}) (234{val=,}) (800{val=lowerBound}) (234{val=,}) (800{val=upperBound}) (234{val=,}) (32 (802{val=getSolverAbsoluteAccuracy}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateSolver})) (800{val=solver})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (32 (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (32 (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (32 (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (32 (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (32 (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (32 (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (32 (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (32 (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UnivariateSolver})) (59 (800{val=solver}) (204{val==}) (14 (304{val=new}) (43 (801{val=RegulaFalsiSolver})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=UnivariateSolver})) (800{val=solver})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=int}) (800{val=populationLimit})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Chromosome})) (800{val=chromosome})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Chromosome})) (231{val=>})) (800{val=chromosomes})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=int}) (800{val=arity})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Population})) (800{val=population})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Chromosome})) (800{val=original})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Chromosome})) (800{val=another})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Chromosome})) (800{val=another})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=int}) (800{val=l})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Double})) (231{val=>})) (800{val=chromosomeRepresentation})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Chromosome})) (800{val=another})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (800{val=sequence})))
(AST_ROOT_SC2NF (44 (83{val=final}) (5 (43 (801{val=Double})) (85{val=[]})) (800{val=representation})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Population})) (800{val=current})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=RandomGenerator})) (800{val=random})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=maxGenerations}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NumberIsTooSmallException})) (214{val=(}) (800{val=maxGenerations}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=maxGenerations})) (204{val==}) (800{val=maxGenerations})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=elitismRate}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=elitismRate}) (231{val=>}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=OutOfRangeException})) (214{val=(}) (40{val=LocalizedFormats.ELITISM_RATE}) (234{val=,}) (800{val=elitismRate}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=partialDerivatives}) (204{val==}) (3 (304{val=new}) (5 (43 (801{val=BivariateFunction})) (221{val=[}) (221{val=[}) (221{val=[})) (34{val=NUMBER_CONSTANT}) (222{val=]}) (221{val=[}) (800{val=lastI}) (222{val=]}) (221{val=[}) (800{val=lastJ}) (222{val=]}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=BivariateFunction})) (59 (800{val=div}) (204{val==}) (14 (304{val=new}) (43 (801{val=Divide})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=BivariateFunction})) (59 (800{val=bi}) (204{val==}) (14 (304{val=new}) (43 (801{val=Add})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=BivariateFunction})) (59 (800{val=bi}) (204{val==}) (14 (304{val=new}) (43 (801{val=Add})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=BivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=BivariateFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=BivariateFunction})) (800{val=combiner})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=BivariateFunction})) (800{val=combiner})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=BivariateFunction})) (800{val=combiner})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=IterativeLinearSolverEvent})) (59 (800{val=event}) (204{val==}) (14 (304{val=new}) (43 (801{val=SymmLQEvent})) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=state}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=x}) (235{val=.}) (802{val=ebeDivide}) (214{val=(}) (800{val=diag}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealLinearOperator})) (59 (800{val=m}) (204{val==}) (32 (800{val=JacobiPreconditioner}) (235{val=.}) (802{val=create}) (214{val=(}) (800{val=a}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealLinearOperator})) (59 (800{val=m}) (204{val==}) (32 (800{val=JacobiPreconditioner}) (235{val=.}) (802{val=create}) (214{val=(}) (800{val=a}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealLinearOperator})) (59 (800{val=m}) (204{val==}) (32 (800{val=JacobiPreconditioner}) (235{val=.}) (802{val=create}) (214{val=(}) (800{val=a}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealLinearOperator})) (59 (800{val=m}) (204{val==}) (32 (800{val=JacobiPreconditioner}) (235{val=.}) (802{val=create}) (214{val=(}) (800{val=a}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealLinearOperator})) (59 (800{val=m}) (204{val==}) (32 (800{val=JacobiPreconditioner}) (235{val=.}) (802{val=create}) (214{val=(}) (800{val=a}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealLinearOperator})) (59 (800{val=m}) (204{val==}) (32 (800{val=JacobiPreconditioner}) (235{val=.}) (802{val=create}) (214{val=(}) (800{val=a}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=roots}) (235{val=.}) (802{val=computeOmega}) (214{val=(}) (40{val=f.length}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=roots}) (235{val=.}) (802{val=computeOmega}) (214{val=(}) (38 (201{val=-}) (40{val=f.length})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=BivariateGridInterpolator})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=SmoothingPolynomialBicubicSplineInterpolator})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=BivariateGridInterpolator})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=SmoothingPolynomialBicubicSplineInterpolator})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=BivariateGridInterpolator})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=SmoothingPolynomialBicubicSplineInterpolator})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=MultivariateInterpolator})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=MicrosphereInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=MultivariateInterpolator})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=MicrosphereInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateInterpolator})) (59 (800{val=i}) (204{val==}) (14 (304{val=new}) (43 (801{val=LinearInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateInterpolator})) (59 (800{val=i}) (204{val==}) (14 (304{val=new}) (43 (801{val=LinearInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateInterpolator})) (59 (800{val=i}) (204{val==}) (14 (304{val=new}) (43 (801{val=LinearInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateInterpolator})) (59 (800{val=i}) (204{val==}) (14 (304{val=new}) (43 (801{val=LinearInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateInterpolator})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=NevilleInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateInterpolator})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=NevilleInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateInterpolator})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=NevilleInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=BivariateGridInterpolator})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=BicubicSplineInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=BivariateGridInterpolator})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=BicubicSplineInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=BivariateGridInterpolator})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=BicubicSplineInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateInterpolator})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=DividedDifferenceInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateInterpolator})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=DividedDifferenceInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateInterpolator})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=DividedDifferenceInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TrivariateGridInterpolator})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=TricubicSplineInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TrivariateGridInterpolator})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=TricubicSplineInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TrivariateGridInterpolator})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=TricubicSplineInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateInterpolator})) (59 (800{val=i}) (204{val==}) (14 (304{val=new}) (43 (801{val=SplineInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateInterpolator})) (59 (800{val=i}) (204{val==}) (14 (304{val=new}) (43 (801{val=SplineInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateInterpolator})) (59 (800{val=i}) (204{val==}) (14 (304{val=new}) (43 (801{val=SplineInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateInterpolator})) (59 (800{val=i}) (204{val==}) (14 (304{val=new}) (43 (801{val=SplineInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateInterpolator})) (59 (800{val=i}) (204{val==}) (14 (304{val=new}) (43 (801{val=SplineInterpolator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=roots}) (235{val=.}) (802{val=computeRoots}) (214{val=(}) (40{val=f.length}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=roots}) (235{val=.}) (802{val=computeRoots}) (214{val=(}) (38 (201{val=-}) (40{val=f.length})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateIntegrator})) (59 (800{val=integrator}) (204{val==}) (14 (304{val=new}) (43 (801{val=TrapezoidIntegrator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateIntegrator})) (59 (800{val=integrator}) (204{val==}) (14 (304{val=new}) (43 (801{val=TrapezoidIntegrator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=LegendreGaussIntegrator})) (59 (800{val=integrator}) (204{val==}) (14 (304{val=new}) (43 (801{val=LegendreGaussIntegrator})) (214{val=(}) (800{val=n}) (234{val=,}) (40{val=BaseAbstractUnivariateIntegrator.DEFAULT_RELATIVE_ACCURACY}) (234{val=,}) (40{val=BaseAbstractUnivariateIntegrator.DEFAULT_ABSOLUTE_ACCURACY}) (234{val=,}) (40{val=BaseAbstractUnivariateIntegrator.DEFAULT_MIN_ITERATIONS_COUNT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateIntegrator})) (59 (800{val=integrator}) (204{val==}) (14 (304{val=new}) (43 (801{val=SimpsonIntegrator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateIntegrator})) (59 (800{val=integrator}) (204{val==}) (14 (304{val=new}) (43 (801{val=SimpsonIntegrator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateIntegrator})) (59 (800{val=integrator}) (204{val==}) (14 (304{val=new}) (43 (801{val=RombergIntegrator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateIntegrator})) (59 (800{val=integrator}) (204{val==}) (14 (304{val=new}) (43 (801{val=RombergIntegrator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=BaseAbstractUnivariateIntegrator})) (800{val=baseIntegrator})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setSeed}) (214{val=(}) (800{val=seed}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=ISAACRandom}) (214{val=(}) (44 (39{val=long}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=setSeed}) (214{val=(}) (800{val=seed}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=incMoment}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=moment}) (235{val=.}) (802{val=increment}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalStateException})) (214{val=(}) (40{val=LocalizedFormats.CANNOT_INCREMENT_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=fact2}) (204{val==}) (27 (800{val=n}) (203{val=/}) (36 (214{val=(}) (27 (800{val=n}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=fact2}) (204{val==}) (27 (800{val=n}) (203{val=/}) (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (200{val=+}) (800{val=n})) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=init}) (214{val=(}) (44 (39{val=double}) (800{val=t0})) (234{val=,}) (44 (5 (39{val=double}) (85{val=[]})) (800{val=y0})) (234{val=,}) (44 (39{val=double}) (800{val=time})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=t}) (235{val=.}) (802{val=transform}) (214{val=(}) (800{val=input}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (36 (214{val=(}) (27 (800{val=nvars}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (202{val=*}) (800{val=nobs})) (242{val=!=}) (40{val=data.length})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalArgumentException})) (214{val=(}) (40{val=LocalizedFormats.INVALID_REGRESSION_ARRAY}) (234{val=,}) (40{val=data.length}) (234{val=,}) (800{val=nobs}) (234{val=,}) (800{val=nvars}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=empiricalDistribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=EmpiricalDistribution})) (214{val=(}) (800{val=binCount}) (234{val=,}) (800{val=randomData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=computeDistribution}) (214{val=(}) (40{val=EmpiricalDistribution.DEFAULT_BIN_COUNT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=EmpiricalDistribution})) (59 (800{val=dist}) (204{val==}) (14 (304{val=new}) (43 (801{val=EmpiricalDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (14 (304{val=new}) (43 (801{val=EmpiricalDistribution})) (216{val=()})) (235{val=.}) (802{val=load}) (214{val=(}) (11 (214{val=(}) (43 (800{val=File})) (215{val=)}) (500{val=null})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (14 (304{val=new}) (43 (801{val=EmpiricalDistribution})) (216{val=()})) (235{val=.}) (802{val=load}) (214{val=(}) (11 (214{val=(}) (43 (800{val=URL})) (215{val=)}) (500{val=null})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (14 (304{val=new}) (43 (801{val=EmpiricalDistribution})) (216{val=()})) (235{val=.}) (802{val=load}) (214{val=(}) (11 (214{val=(}) (5 (39{val=double}) (85{val=[]})) (215{val=)}) (500{val=null})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=EmpiricalDistribution})) (59 (800{val=dist}) (204{val==}) (14 (304{val=new}) (43 (801{val=EmpiricalDistribution})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (14 (304{val=new}) (43 (801{val=EmpiricalDistribution})) (216{val=()})) (235{val=.}) (802{val=load}) (214{val=(}) (800{val=x}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (59 (800{val=dataRI}) (204{val==}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]}) (85{val=[]})) (4 (218{val={}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=f}) (234{val=,}) (40{val=f.length}) (215{val=)})) (234{val=,}) (3 (304{val=new}) (5 (39{val=double}) (221{val=[})) (40{val=f.length}) (222{val=]})) (219{val=}})))))
(AST_ROOT_SC2NF (59 (800{val=dataRI}) (204{val==}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]}) (85{val=[]})) (4 (218{val={}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=f}) (234{val=,}) (40{val=f.length}) (215{val=)})) (234{val=,}) (3 (304{val=new}) (5 (39{val=double}) (221{val=[})) (40{val=f.length}) (222{val=]})) (219{val=}})))))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (5 (39{val=double}) (85{val=[]})) (231{val=>})) (800{val=categoryData})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (5 (39{val=double}) (85{val=[]})) (231{val=>})) (800{val=categoryData})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (5 (39{val=double}) (85{val=[]})) (231{val=>})) (800{val=categoryData})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=boolean}) (800{val=exactPValue})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (801{val=dResult}) (85{val=[]}) (204{val==}) (32 (800{val=transformer}) (235{val=.}) (802{val=transform}) (214{val=(}) (800{val=dY}) (234{val=,}) (40{val=TransformType.INVERSE}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (801{val=dResult}) (85{val=[]}) (204{val==}) (32 (800{val=transformer}) (235{val=.}) (802{val=transform}) (214{val=(}) (800{val=dX}) (234{val=,}) (40{val=TransformType.FORWARD}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=protected}) (802{val=BaseAbstractMultivariateSimpleBoundsOptimizer}) (214{val=(}) (44 (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=PointValuePair})) (231{val=>})) (800{val=checker})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=checker}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=UnivariatePointValuePair})) (85{val=[]})) (59 (800{val=optima}) (204{val==}) (32 (800{val=optimizer}) (235{val=.}) (802{val=getOptima}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=SimplexOptimizer}) (214{val=(}) (44 (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=PointValuePair})) (231{val=>})) (800{val=checker})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=checker}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=PointValuePair})) (800{val=expected})))
(AST_ROOT_SC2NF (31 (83{val=protected}) (802{val=AbstractScalarDifferentiableOptimizer}) (214{val=(}) (44 (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=PointValuePair})) (231{val=>})) (800{val=checker})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=checker}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=PointValuePair})) (231{val=>})) (800{val=checker})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=UnivariatePointValuePair})) (231{val=>})) (800{val=checker})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=PointValuePair})) (231{val=>})) (800{val=checker})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=UnivariatePointValuePair})) (231{val=>})) (800{val=checker})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=PointValuePair})) (231{val=>})) (800{val=checker})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=PointValuePair})) (231{val=>})) (800{val=checker})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=PointValuePair})) (231{val=>})) (800{val=checker})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=PointValuePair})) (231{val=>})) (800{val=checker})))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=PointValuePair})) (85{val=[]})) (800{val=points})))
(AST_ROOT_SC2NF (44 (43 (801{val=PointValuePair})) (800{val=point})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Comparator})) (230{val=<}) (43 (800{val=PointValuePair})) (231{val=>})) (800{val=comparator})))
(AST_ROOT_SC2NF (60 (43 (801{val=ChiSquareTest})) (59 (800{val=chiSquareTest}) (204{val==}) (14 (304{val=new}) (43 (801{val=ChiSquareTest})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (40{val=org.apache.commons.math.stat.inference.ChiSquareTest})) (59 (800{val=csti}) (204{val==}) (14 (304{val=new}) (43 (40{val=org.apache.commons.math.stat.inference.ChiSquareTest})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (40{val=org.apache.commons.math.stat.inference.ChiSquareTest})) (59 (800{val=csti}) (204{val==}) (14 (304{val=new}) (43 (40{val=org.apache.commons.math.stat.inference.ChiSquareTest})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ChiSquareTest})) (59 (800{val=chiSquareTest}) (204{val==}) (14 (304{val=new}) (43 (801{val=ChiSquareTest})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=PointVectorValuePair})) (800{val=optimum})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=PointVectorValuePair})) (231{val=>})) (800{val=checker})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=PointVectorValuePair})) (231{val=>})) (800{val=checker})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=PointVectorValuePair})) (231{val=>})) (800{val=checker})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=PointVectorValuePair})) (231{val=>})) (800{val=checker})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=PointVectorValuePair})) (231{val=>})) (800{val=checker})))
(AST_ROOT_SC2NF (31 (83{val=protected}) (802{val=AbstractLeastSquaresOptimizer}) (214{val=(}) (44 (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=PointVectorValuePair})) (231{val=>})) (800{val=checker})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=checker}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=SimplexOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=SimplexOptimizer})) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=SimplePointChecker})) (230{val=<}) (43 (800{val=PointValuePair})) (231{val=>})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SimplexOptimizer})) (59 (800{val=underlying}) (204{val==}) (14 (304{val=new}) (43 (801{val=SimplexOptimizer})) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleValueChecker})) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NonLinearConjugateGradientOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=NonLinearConjugateGradientOptimizer})) (214{val=(}) (40{val=ConjugateGradientFormula.POLAK_RIBIERE}) (234{val=,}) (14 (304{val=new}) (43 (801{val=SimpleValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (14 (304{val=new}) (43 (801{val=BrentSolver})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NonLinearConjugateGradientOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=NonLinearConjugateGradientOptimizer})) (214{val=(}) (40{val=ConjugateGradientFormula.POLAK_RIBIERE}) (234{val=,}) (14 (304{val=new}) (43 (801{val=SimpleValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NonLinearConjugateGradientOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=NonLinearConjugateGradientOptimizer})) (214{val=(}) (40{val=ConjugateGradientFormula.POLAK_RIBIERE}) (234{val=,}) (14 (304{val=new}) (43 (801{val=SimpleValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NonLinearConjugateGradientOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=NonLinearConjugateGradientOptimizer})) (214{val=(}) (40{val=ConjugateGradientFormula.POLAK_RIBIERE}) (234{val=,}) (14 (304{val=new}) (43 (801{val=SimpleValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NonLinearConjugateGradientOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=NonLinearConjugateGradientOptimizer})) (214{val=(}) (40{val=ConjugateGradientFormula.POLAK_RIBIERE}) (234{val=,}) (14 (304{val=new}) (43 (801{val=SimpleValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NonLinearConjugateGradientOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=NonLinearConjugateGradientOptimizer})) (214{val=(}) (40{val=ConjugateGradientFormula.POLAK_RIBIERE}) (234{val=,}) (14 (304{val=new}) (43 (801{val=SimpleValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (14 (304{val=new}) (43 (801{val=BrentSolver})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NonLinearConjugateGradientOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=NonLinearConjugateGradientOptimizer})) (214{val=(}) (40{val=ConjugateGradientFormula.POLAK_RIBIERE}) (234{val=,}) (14 (304{val=new}) (43 (801{val=SimpleValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NonLinearConjugateGradientOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=NonLinearConjugateGradientOptimizer})) (214{val=(}) (40{val=ConjugateGradientFormula.POLAK_RIBIERE}) (234{val=,}) (14 (304{val=new}) (43 (801{val=SimpleValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (14 (304{val=new}) (43 (801{val=BrentSolver})) (216{val=()})) (234{val=,}) (800{val=preconditioner}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NonLinearConjugateGradientOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=NonLinearConjugateGradientOptimizer})) (214{val=(}) (40{val=ConjugateGradientFormula.POLAK_RIBIERE}) (234{val=,}) (14 (304{val=new}) (43 (801{val=SimpleValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NonLinearConjugateGradientOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=NonLinearConjugateGradientOptimizer})) (214{val=(}) (40{val=ConjugateGradientFormula.POLAK_RIBIERE}) (234{val=,}) (14 (304{val=new}) (43 (801{val=SimpleValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NonLinearConjugateGradientOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=NonLinearConjugateGradientOptimizer})) (214{val=(}) (40{val=ConjugateGradientFormula.POLAK_RIBIERE}) (234{val=,}) (14 (304{val=new}) (43 (801{val=SimpleValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NonLinearConjugateGradientOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=NonLinearConjugateGradientOptimizer})) (214{val=(}) (40{val=ConjugateGradientFormula.POLAK_RIBIERE}) (234{val=,}) (14 (304{val=new}) (43 (801{val=SimpleValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SimplexOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=SimplexOptimizer})) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NonLinearConjugateGradientOptimizer})) (59 (800{val=underlying}) (204{val==}) (14 (304{val=new}) (43 (801{val=NonLinearConjugateGradientOptimizer})) (214{val=(}) (40{val=ConjugateGradientFormula.POLAK_RIBIERE}) (234{val=,}) (14 (304{val=new}) (43 (801{val=SimpleValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=lambda}) (234{val=,}) (800{val=inputSigma}) (234{val=,}) (800{val=boundaries}) (234{val=,}) (800{val=maxIterations}) (234{val=,}) (800{val=stopFitness}) (234{val=,}) (800{val=isActiveCMA}) (234{val=,}) (800{val=diagonalOnly}) (234{val=,}) (800{val=checkFeasableCount}) (234{val=,}) (800{val=random}) (234{val=,}) (800{val=generateStatistics}) (234{val=,}) (14 (304{val=new}) (43 (801{val=SimpleValueChecker})) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleValueChecker})) (214{val=(}) (800{val=rel}) (234{val=,}) (800{val=abs}) (215{val=)})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=DifferentiableMultivariateVectorOptimizer})) (59 (800{val=underlyingOptimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (9{val=true}) (234{val=,}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DifferentiableMultivariateVectorOptimizer})) (59 (800{val=underlyingOptimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (9{val=true}) (234{val=,}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=GaussNewtonOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=GaussNewtonOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=GaussNewtonOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=GaussNewtonOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=GaussNewtonOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=GaussNewtonOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=GaussNewtonOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=GaussNewtonOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=GaussNewtonOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=GaussNewtonOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=GaussNewtonOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=GaussNewtonOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=GaussNewtonOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=GaussNewtonOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=GaussNewtonOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=GaussNewtonOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=GaussNewtonOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=LevenbergMarquardtOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=LevenbergMarquardtOptimizer})) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathUnsupportedOperationException})) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (800{val=FastSineTransformer})) (59 (800{val=transformer}) (204{val==}) (14 (304{val=new}) (43 (800{val=FastSineTransformer})) (214{val=(}) (40{val=DstNormalization.STANDARD_DST_I}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=FastSineTransformer})) (59 (800{val=transformer}) (204{val==}) (14 (304{val=new}) (43 (800{val=FastSineTransformer})) (214{val=(}) (40{val=DstNormalization.STANDARD_DST_I}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NumberIsTooSmallException})) (214{val=(}) (40{val=LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION}) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=h}) (215{val=)})) (234{val=,}) (800{val=minStep}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=variablesToInclude}) (236{val===}) (500{val=null})) (250{val=||}) (27 (40{val=variablesToInclude.length}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalArgumentException})) (214{val=(}) (40{val=LocalizedFormats.ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=BrentOptimizer})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=BrentOptimizer})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=BrentOptimizer})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=BrentOptimizer})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=BrentOptimizer})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateOptimizer})) (59 (800{val=underlying}) (204{val==}) (14 (304{val=new}) (43 (801{val=BrentOptimizer})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateOptimizer})) (59 (800{val=underlying}) (204{val==}) (14 (304{val=new}) (43 (801{val=BrentOptimizer})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateOptimizer})) (59 (800{val=underlying}) (204{val==}) (14 (304{val=new}) (43 (801{val=BrentOptimizer})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=static}) (5 (39{val=double}) (85{val=[]}) (85{val=[]})) (802{val=loadLnMant}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=LN_MANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=static}) (5 (39{val=double}) (85{val=[]})) (802{val=loadExpFracB}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=EXP_FRAC_B}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=static}) (5 (39{val=double}) (85{val=[]})) (802{val=loadExpFracA}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=EXP_FRAC_A}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=static}) (5 (39{val=double}) (85{val=[]})) (802{val=loadExpIntB}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=EXP_INT_B}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=static}) (5 (39{val=double}) (85{val=[]})) (802{val=loadExpIntA}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=EXP_INT_A}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=DimensionMismatchException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=DimensionMismatchException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (60 (43 (801{val=StringBuffer})) (59 (800{val=imAppendTo})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=fitness})) (236{val===}) (800{val=NO_FITNESS})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=fitness})) (204{val==}) (32 (800{val=fitness}) (216{val=()}))) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=fitness})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=setControlFactors}) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setControlFactors}) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (36 (214{val=(}) (27 (27 (800{val=n}) (202{val=*}) (36 (214{val=(}) (27 (800{val=n}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (202{val=*}) (32 (800{val=moment}) (235{val=.}) (802{val=getResult}) (216{val=()}))) (201{val=-}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (40{val=moment.m2}) (202{val=*}) (40{val=moment.m2}) (202{val=*}) (36 (214{val=(}) (27 (800{val=n}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})))) (215{val=)})))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=hatResiduals}) (204{val==}) (32 (32 (32 (800{val=I}) (235{val=.}) (802{val=subtract}) (214{val=(}) (800{val=hat}) (215{val=)})) (235{val=.}) (802{val=operate}) (214{val=(}) (32 (800{val=model}) (235{val=.}) (802{val=getY}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=toArray}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=RealVector})) (59 (800{val=b}) (204{val==}) (32 (802{val=calculateBeta}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (32 (800{val=yVector}) (235{val=.}) (802{val=subtract}) (214{val=(}) (32 (800{val=xMatrix}) (235{val=.}) (802{val=operate}) (214{val=(}) (800{val=b}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (800{val=residuals}) (235{val=.}) (802{val=dotProduct}) (214{val=(}) (800{val=residuals}) (215{val=)})) (203{val=/}) (36 (214{val=(}) (27 (32 (800{val=xMatrix}) (235{val=.}) (802{val=getRowDimension}) (216{val=()})) (201{val=-}) (32 (800{val=xMatrix}) (235{val=.}) (802{val=getColumnDimension}) (216{val=()}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealVector})) (59 (800{val=e}) (204{val==}) (32 (800{val=yVector}) (235{val=.}) (802{val=subtract}) (214{val=(}) (32 (800{val=xMatrix}) (235{val=.}) (802{val=operate}) (214{val=(}) (800{val=b}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=yVector})) (204{val==}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=y}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (800{val=t}) (203{val=/}) (36 (214{val=(}) (27 (32 (32 (802{val=getX}) (216{val=()})) (235{val=.}) (802{val=getRowDimension}) (216{val=()})) (201{val=-}) (32 (32 (802{val=getX}) (216{val=()})) (235{val=.}) (802{val=getColumnDimension}) (216{val=()}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=p}) (204{val==}) (32 (32 (802{val=getX}) (216{val=()})) (235{val=.}) (802{val=getColumnDimension}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (800{val=qr}) (235{val=.}) (802{val=getSolver}) (216{val=()})) (235{val=.}) (802{val=solve}) (214{val=(}) (32 (802{val=getY}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=newXSampleData}) (214{val=(}) (800{val=x}) (215{val=)})) (227{val=;})) (21 (7 (800{val=qr}) (204{val==}) (14 (304{val=new}) (43 (801{val=QRDecomposition})) (214{val=(}) (32 (802{val=getX}) (216{val=()})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=newSampleData}) (214{val=(}) (800{val=data}) (234{val=,}) (800{val=nobs}) (234{val=,}) (800{val=nvars}) (215{val=)})) (227{val=;})) (21 (7 (800{val=qr}) (204{val==}) (14 (304{val=new}) (43 (801{val=QRDecomposition})) (214{val=(}) (32 (802{val=getX}) (216{val=()})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealMatrix})) (59 (800{val=x}) (204{val==}) (32 (32 (800{val=ols}) (235{val=.}) (802{val=getX}) (216{val=()})) (235{val=.}) (802{val=copy}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=length}) (204{val==}) (32 (800{val=b}) (235{val=.}) (802{val=getDimension}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=epsa}) (204{val==}) (27 (36 (214{val=(}) (27 (800{val=s}) (200{val=+}) (800{val=MACH_PREC})) (215{val=)})) (202{val=*}) (800{val=CBRT_MACH_PREC}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (800{val=RealVector})) (802{val=getRightHandSideVector}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=RealVector}) (235{val=.}) (802{val=unmodifiableRealVector}) (214{val=(}) (32 (800{val=state}) (235{val=.}) (802{val=getRightHandSideVector}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=xL})) (235{val=.}) (802{val=set}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=xL})) (204{val==}) (800{val=x})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=solver}) (204{val==}) (14 (304{val=new}) (43 (801{val=SymmLQ})) (214{val=(}) (800{val=maxIterations}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=solver}) (204{val==}) (14 (304{val=new}) (43 (801{val=SymmLQ})) (214{val=(}) (800{val=maxIterations}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (5 (39{val=double}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (83{val=final}) (5 (39{val=double}) (85{val=[]}) (85{val=[]})) (800{val=householderMatrix})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=k}) (234{val=,}) (800{val=v}) (234{val=,}) (9{val=false}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (32 (800{val=entry}) (235{val=.}) (802{val=getKey}) (216{val=()})) (234{val=,}) (32 (800{val=entry}) (235{val=.}) (802{val=getValue}) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=key}) (204{val==}) (800{val=k})) (227{val=;})) (21 (7 (800{val=value}) (204{val==}) (800{val=v})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathInternalError})) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathInternalError})) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=x}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (32 (800{val=Gamma}) (235{val=.}) (802{val=regularizedGammaP}) (214{val=(}) (800{val=shape}) (234{val=,}) (27 (800{val=x}) (203{val=/}) (800{val=scale})) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (800{val=shape}) (202{val=*}) (800{val=scale})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=v}) (235{val=.}) (802{val=walkInOptimizedOrder}) (214{val=(}) (800{val=visitor}) (234{val=,}) (800{val=expectedStart}) (234{val=,}) (800{val=expectedEnd}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (32 (802{val=innerCumulativeProbability}) (214{val=(}) (2 (801{val=domain}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (234{val=,}) (800{val=x}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=tree}) (235{val=.}) (802{val=visit}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=BoundaryBuilder})) (230{val=<}) (43 (800{val=S})) (231{val=>})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=SimplexOptimizer})) (59 (800{val=optimizer}) (204{val==}) (14 (304{val=new}) (43 (801{val=SimplexOptimizer})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=RealVector})) (802{val=create}) (214{val=(}) (44 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (800{val=data})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=TestVectorImpl})) (214{val=(}) (800{val=data}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (802{val=TestVectorImpl}) (214{val=(}) (44 (5 (39{val=double}) (85{val=[]})) (800{val=values})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=values})) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=values}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathArithmeticException})) (800{val=e})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=T})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=T})) (800{val=f})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=long}) (59 (800{val=n1n2prod}) (204{val==}) (27 (11 (214{val=(}) (39{val=long}) (215{val=)}) (800{val=n1})) (202{val=*}) (800{val=n2}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (802{val=create}) (214{val=(}) (3 (304{val=new}) (5 (39{val=double}) (221{val=[})) (34{val=NUMBER_CONSTANT}) (222{val=]})) (215{val=)})) (235{val=.}) (802{val=addToEntry}) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (32 (802{val=getPreferredEntryValue}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (802{val=create}) (214{val=(}) (3 (304{val=new}) (5 (39{val=double}) (221{val=[})) (34{val=NUMBER_CONSTANT}) (222{val=]})) (215{val=)})) (235{val=.}) (802{val=setEntry}) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (32 (802{val=getPreferredEntryValue}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=RealVector})) (802{val=createAlien}) (214{val=(}) (44 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (800{val=data})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=RealVectorTestImpl})) (214{val=(}) (800{val=data}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealVector})) (59 (800{val=x}) (204{val==}) (14 (304{val=new}) (43 (801{val=RealVectorTestImpl})) (214{val=(}) (32 (800{val=v}) (235{val=.}) (802{val=clone}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=RealVector})) (802{val=createAlien}) (214{val=(}) (44 (5 (39{val=double}) (85{val=[]})) (800{val=data})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=RealVectorTestImpl})) (214{val=(}) (800{val=data}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=RealVector})) (802{val=create}) (214{val=(}) (44 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (800{val=data})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=RealVectorTestImpl})) (214{val=(}) (800{val=data}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=RealVectorTestImpl})) (59 (800{val=v7_i}) (204{val==}) (14 (304{val=new}) (43 (801{val=RealVectorTestImpl})) (214{val=(}) (800{val=vec1}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=RealVector})) (802{val=createAlien}) (214{val=(}) (44 (5 (39{val=double}) (85{val=[]})) (800{val=data})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=RealVectorTestImpl})) (214{val=(}) (800{val=data}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (27 (2 (801{val=dataU}) (221{val=[}) (800{val=i}) (222{val=]})) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (2 (801{val=dataV}) (221{val=[}) (800{val=j}) (222{val=]}))) (234{val=,}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=private}) (802{val=ComplexUtils}) (216{val=()}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=Object})) (800{val=other})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=n}) (204{val==}) (27 (40{val=coefficients.length}) (201{val=-}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=indefinite}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=distinct}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=repeated}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=m}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=v}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (215{val=)})) (235{val=.}) (802{val=getV}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=symmetric}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (32 (802{val=createTestMatrix}) (214{val=(}) (800{val=r}) (234{val=,}) (800{val=bigValues}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (32 (800{val=t}) (235{val=.}) (802{val=getMainDiagonalRef}) (216{val=()})) (234{val=,}) (32 (800{val=t}) (235{val=.}) (802{val=getSecondaryDiagonalRef}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=decomposition}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=mainTridiagonal}) (234{val=,}) (800{val=secondaryTridiagonal}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=decomposition}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=mainTridiagonal}) (234{val=,}) (800{val=secondaryTridiagonal}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=decomposition}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=mainTridiagonal}) (234{val=,}) (800{val=secondaryTridiagonal}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=ed}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (39{val=int}) (215{val=)}) (32 (800{val=FastMath}) (235{val=.}) (802{val=min}) (214{val=(}) (32 (802{val=nextPoisson}) (214{val=(}) (800{val=mean}) (215{val=)})) (234{val=,}) (40{val=Integer.MAX_VALUE}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (39{val=double}) (59 (800{val=n}) (204{val==}) (32 (800{val=random}) (235{val=.}) (802{val=nextGaussian}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (27 (800{val=scale}) (200{val=+}) (27 (800{val=shape}) (202{val=*}) (800{val=n}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=EigenDecomposition})) (59 (800{val=eig}) (204{val==}) (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=C}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=BaseRuleFactory})) (230{val=<}) (76 (233{val=?}) (332{val=extends}) (43 (800{val=Number}))) (231{val=>})) (800{val=factory})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=GaussIntegrator})) (59 (800{val=g}) (204{val==}) (32 (800{val=FACTORY}) (235{val=.}) (802{val=legendreHighPrecision}) (214{val=(}) (800{val=numberOfPoints}) (234{val=,}) (800{val=a}) (234{val=,}) (800{val=b}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=DEFAULT_PREFIX}) (234{val=,}) (800{val=DEFAULT_SUFFIX}) (234{val=,}) (800{val=DEFAULT_ROW_PREFIX}) (234{val=,}) (800{val=DEFAULT_ROW_SUFFIX}) (234{val=,}) (800{val=DEFAULT_ROW_SEPARATOR}) (234{val=,}) (800{val=DEFAULT_COLUMN_SEPARATOR}) (234{val=,}) (800{val=format}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=RealMatrixFormat}) (216{val=()}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=DEFAULT_PREFIX}) (234{val=,}) (800{val=DEFAULT_SUFFIX}) (234{val=,}) (800{val=DEFAULT_ROW_PREFIX}) (234{val=,}) (800{val=DEFAULT_ROW_SUFFIX}) (234{val=,}) (800{val=DEFAULT_ROW_SEPARATOR}) (234{val=,}) (800{val=DEFAULT_COLUMN_SEPARATOR}) (234{val=,}) (32 (800{val=CompositeFormat}) (235{val=.}) (802{val=getDefaultNumberFormat}) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=es}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=m}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=es}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=matrix}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=es}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=m}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DecompositionSolver})) (59 (800{val=es}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=EigenDecomposition})) (214{val=(}) (800{val=m}) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (39{val=double}) (59 (800{val=multiplier}) (204{val==}) (32 (800{val=tableau}) (235{val=.}) (802{val=getEntry}) (214{val=(}) (800{val=i}) (234{val=,}) (800{val=pivotCol}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=tableau}) (235{val=.}) (802{val=subtractRow}) (214{val=(}) (800{val=i}) (234{val=,}) (800{val=pivotRow}) (234{val=,}) (800{val=multiplier}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=entry}) (230{val=<}) (800{val=minValue})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=minValue}) (204{val==}) (800{val=entry})) (227{val=;})) (21 (7 (800{val=minPos}) (204{val==}) (800{val=i})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=p}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=s}) (204{val==}) (38 (201{val=-}) (800{val=s}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathIllegalStateException})) (214{val=(}) (40{val=LocalizedFormats.SIMPLE_MESSAGE}) (234{val=,}) (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=Precision}) (235{val=.}) (802{val=equals}) (214{val=(}) (2 (801{val=imagEigenvalues}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=EPSILON}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertNull}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=source}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (32 (800{val=realMatrixFormat}) (235{val=.}) (802{val=parse}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=pos}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertNull}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=source}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (32 (800{val=realMatrixFormat}) (235{val=.}) (802{val=parse}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=pos}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertNull}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=source}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (32 (800{val=realMatrixFormat}) (235{val=.}) (802{val=parse}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=pos}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Expm1})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Expm1})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Expm1})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Expm1})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DifferentiableUnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Expm1})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=delegate}) (235{val=.}) (802{val=setSecureAlgorithm}) (214{val=(}) (800{val=algorithm}) (234{val=,}) (800{val=provider}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=delegate}) (235{val=.}) (802{val=nextZipf}) (214{val=(}) (800{val=numberOfElements}) (234{val=,}) (800{val=exponent}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=delegate}) (235{val=.}) (802{val=nextWeibull}) (214{val=(}) (800{val=shape}) (234{val=,}) (800{val=scale}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=delegate}) (235{val=.}) (802{val=nextT}) (214{val=(}) (800{val=df}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=delegate}) (235{val=.}) (802{val=nextPascal}) (214{val=(}) (800{val=r}) (234{val=,}) (800{val=p}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=delegate}) (235{val=.}) (802{val=nextHypergeometric}) (214{val=(}) (800{val=populationSize}) (234{val=,}) (800{val=numberOfSuccesses}) (234{val=,}) (800{val=sampleSize}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=delegate}) (235{val=.}) (802{val=nextF}) (214{val=(}) (800{val=numeratorDf}) (234{val=,}) (800{val=denominatorDf}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=delegate}) (235{val=.}) (802{val=nextChiSquare}) (214{val=(}) (800{val=df}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=delegate}) (235{val=.}) (802{val=nextCauchy}) (214{val=(}) (800{val=median}) (234{val=,}) (800{val=scale}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=delegate}) (235{val=.}) (802{val=nextBinomial}) (214{val=(}) (800{val=numberOfTrials}) (234{val=,}) (800{val=probabilityOfSuccess}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=delegate}) (235{val=.}) (802{val=nextBeta}) (214{val=(}) (800{val=alpha}) (234{val=,}) (800{val=beta}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=delegate}) (235{val=.}) (802{val=nextUniform}) (214{val=(}) (800{val=lower}) (234{val=,}) (800{val=upper}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=delegate}) (204{val==}) (14 (304{val=new}) (43 (801{val=RandomDataGenerator})) (214{val=(}) (800{val=rand}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=dotProduct}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=IterativeLegendreGaussIntegrator})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=integrate}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=f}) (234{val=,}) (800{val=a}) (234{val=,}) (800{val=b}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (32 (802{val=logGamma}) (214{val=(}) (800{val=shape}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=int}) (802{val=hashCode}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathUnsupportedOperationException})) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathUnsupportedOperationException})) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=x}) (204{val==}) (32 (800{val=randomData}) (235{val=.}) (802{val=nextUniform}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fillBinStats}) (214{val=(}) (14 (304{val=new}) (43 (801{val=StreamDataAdapter})) (214{val=(}) (800{val=in}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UnivariateDifferentiableFunction})) (59 (800{val=sPrime}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sqrt})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UnivariateDifferentiableFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=QuinticFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateDifferentiableFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=UnivariateDifferentiableFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=UnivariateDifferentiableFunction})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnivariateDifferentiableFunction})) (800{val=f})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UnivariateDifferentiableFunction})) (59 (800{val=q}) (204{val==}) (14 (304{val=new}) (43 (801{val=QuinticFunction})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (83{val=final}) (43 (801{val=MathArithmeticException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathArithmeticException})) (214{val=(}) (40{val=LocalizedFormats.INDEX}) (234{val=,}) (800{val=i}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (83{val=final}) (43 (801{val=MathArithmeticException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathArithmeticException})) (214{val=(}) (40{val=LocalizedFormats.INDEX}) (234{val=,}) (800{val=i}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (83{val=final}) (43 (801{val=MathArithmeticException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathArithmeticException})) (214{val=(}) (40{val=LocalizedFormats.INDEX}) (234{val=,}) (800{val=i}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (83{val=final}) (43 (801{val=MathArithmeticException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MathArithmeticException})) (214{val=(}) (40{val=LocalizedFormats.INDEX}) (234{val=,}) (800{val=i}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=MultivariateDifferentiableVectorFunction})) (59 (800{val=problem})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=CircleScalar}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=gradient}) (204{val==}) (32 (800{val=f}) (235{val=.}) (800{val=gradient}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (32 (802{val=optimizeInternal}) (214{val=(}) (800{val=maxEval}) (234{val=,}) (800{val=f}) (234{val=,}) (800{val=goalType}) (234{val=,}) (800{val=startPoint}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (43 (801{val=MultivariateDifferentiableVectorFunction})) (800{val=problem})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=CircleVectorial}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (800{val=Quaternion})) (59 (800{val=product}) (204{val==}) (32 (800{val=Quaternion}) (235{val=.}) (802{val=multiply}) (214{val=(}) (800{val=inverseQ}) (234{val=,}) (800{val=q}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=normSquareRef}) (204{val==}) (32 (32 (800{val=Quaternion}) (235{val=.}) (802{val=multiply}) (214{val=(}) (800{val=q}) (234{val=,}) (32 (800{val=q}) (235{val=.}) (802{val=getConjugate}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=getScalarPart}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=multiply}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=q}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=optimum}) (204{val==}) (14 (304{val=new}) (43 (801{val=PointValuePair})) (214{val=(}) (32 (800{val=fitfun}) (235{val=.}) (802{val=repairAndDecode}) (214{val=(}) (32 (800{val=bestArx}) (235{val=.}) (802{val=getColumn}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (234{val=,}) (16 (800{val=isMinimize}) (233{val=?}) (800{val=bestFitness}) (226{val=:}) (38 (201{val=-}) (800{val=bestFitness}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=tmp}) (204{val==}) (27 (27 (800{val=wxi}) (202{val=*}) (800{val=xi})) (203{val=/}) (800{val=di}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Iterator})) (230{val=<}) (43 (800{val=Entry})) (231{val=>})) (59 (800{val=it}) (204{val==}) (32 (802{val=iterator}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Iterator})) (230{val=<}) (43 (800{val=Entry})) (231{val=>})) (59 (800{val=it}) (204{val==}) (32 (802{val=iterator}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Iterator})) (230{val=<}) (43 (800{val=Entry})) (231{val=>})) (59 (800{val=it}) (204{val==}) (32 (802{val=iterator}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Iterator})) (230{val=<}) (43 (800{val=Entry})) (231{val=>})) (59 (800{val=it}) (204{val==}) (32 (802{val=iterator}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Iterator})) (230{val=<}) (43 (800{val=Entry})) (231{val=>})) (59 (800{val=it}) (204{val==}) (32 (802{val=iterator}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Iterator})) (230{val=<}) (43 (800{val=Entry})) (231{val=>})) (59 (800{val=it}) (204{val==}) (32 (800{val=v}) (235{val=.}) (802{val=iterator}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Iterator})) (230{val=<}) (43 (800{val=Entry})) (231{val=>})) (59 (800{val=it}) (204{val==}) (32 (800{val=v}) (235{val=.}) (802{val=iterator}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (5 (39{val=double}) (85{val=[]})) (802{val=getStartPoint}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=start}) (236{val===}) (500{val=null})) (233{val=?}) (500{val=null}) (226{val=:}) (32 (800{val=start}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=optimizeInternal}) (214{val=(}) (800{val=maxEval}) (234{val=,}) (800{val=f}) (234{val=,}) (800{val=goalType}) (234{val=,}) (14 (304{val=new}) (43 (801{val=InitialGuess})) (214{val=(}) (800{val=startPoint}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (5 (39{val=double}) (85{val=[]})) (802{val=getUpperBound}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=getUpperBound}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (5 (39{val=double}) (85{val=[]})) (802{val=getLowerBound}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=getLowerBound}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=Math}) (235{val=.}) (802{val=max}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (34{val=NUMBER_CONSTANT}) (201{val=-}) (27 (800{val=dimension}) (203{val=/}) (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (200{val=+}) (800{val=maxIterations})) (215{val=)})))) (215{val=)})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=dim}) (204{val==}) (32 (802{val=getDimension}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=dim}) (204{val==}) (32 (802{val=getDimension}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=dim}) (204{val==}) (32 (802{val=getDimension}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]}) (85{val=[]})) (59 (800{val=out}) (204{val==}) (3 (304{val=new}) (5 (39{val=double}) (221{val=[}) (221{val=[})) (800{val=sampleSize}) (222{val=]}) (221{val=[}) (800{val=dimension}) (222{val=]}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=random}) (204{val==}) (800{val=rng})) (227{val=;})) (21 (7 (800{val=dimension}) (204{val==}) (800{val=n})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=dim}) (204{val==}) (32 (800{val=d}) (235{val=.}) (802{val=getDimension}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=dim}) (204{val==}) (32 (800{val=d}) (235{val=.}) (802{val=getDimension}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=insigma}) (204{val==}) (32 (802{val=point}) (214{val=(}) (27 (800{val=DIM}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=insigma}) (204{val==}) (32 (802{val=point}) (214{val=(}) (800{val=DIM}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=insigma}) (204{val==}) (32 (802{val=point}) (214{val=(}) (800{val=DIM}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=insigma}) (204{val==}) (32 (802{val=point}) (214{val=(}) (800{val=DIM}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=double}) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=f})))
(AST_ROOT_SC2NF (21 (7 (800{val=jF}) (204{val==}) (800{val=f})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=distribution}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=i}) (215{val=)})) (235{val=.}) (802{val=reseedRandomGenerator}) (214{val=(}) (27 (800{val=i}) (200{val=+}) (34{val=NUMBER_CONSTANT}) (200{val=+}) (800{val=seed})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (43 (801{val=FUNC})) (800{val=f})))
(AST_ROOT_SC2NF (44 (43 (801{val=FUNC})) (800{val=f})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealMatrix})) (59 (800{val=d}) (204{val==}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealDiagonalMatrix}) (214{val=(}) (800{val=eigenValues}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RealMatrix})) (59 (800{val=m}) (204{val==}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealDiagonalMatrix}) (214{val=(}) (800{val=diagonal}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=x}) (204{val==}) (32 (32 (800{val=list}) (235{val=.}) (802{val=remove}) (214{val=(}) (27 (32 (800{val=list}) (235{val=.}) (802{val=size}) (216{val=()})) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (235{val=.}) (802{val=getInf}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=sigma}) (204{val==}) (32 (800{val=optim}) (235{val=.}) (802{val=computeSigma}) (214{val=(}) (800{val=regress}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=currentPoint}) (204{val==}) (32 (802{val=getStartPoint}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]}) (85{val=[]})) (59 (800{val=covMatrix}) (204{val==}) (32 (800{val=optimizer}) (235{val=.}) (802{val=computeCovariances}) (214{val=(}) (800{val=paramFound}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]}) (85{val=[]})) (59 (800{val=covarMatrix}) (204{val==}) (32 (800{val=optimizer}) (235{val=.}) (802{val=computeCovariances}) (214{val=(}) (800{val=solution}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=qrDecomposition}) (214{val=(}) (32 (802{val=computeWeightedJacobian}) (214{val=(}) (800{val=currentPoint}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealMatrix})) (59 (800{val=j}) (204{val==}) (32 (802{val=computeWeightedJacobian}) (214{val=(}) (800{val=params}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealMatrix})) (59 (800{val=weightedJacobian}) (204{val==}) (32 (802{val=computeWeightedJacobian}) (214{val=(}) (800{val=currentPoint}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=testStatistic}) (235{val=.}) (802{val=gTest}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=observed}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=OutOfRangeException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=testStatistic}) (235{val=.}) (802{val=gTest}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=observed}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NotStrictlyPositiveException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=residual}) (204{val==}) (2 (801{val=currentResiduals}) (221{val=[}) (800{val=i}) (222{val=]}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=testAdd1000}) (216{val=()})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=ResizableDoubleArray})) (215{val=)}) (800{val=da})) (215{val=)})) (235{val=.}) (802{val=getCapacity}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (800{val=ResizableDoubleArray})) (59 (800{val=other}) (204{val==}) (11 (214{val=(}) (43 (800{val=ResizableDoubleArray})) (215{val=)}) (800{val=object}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (43 (801{val=ResizableDoubleArray})) (59 (800{val=result}) (204{val==}) (14 (304{val=new}) (43 (801{val=ResizableDoubleArray})) (216{val=()}))) (227{val=;})) (21 (32 (802{val=copy}) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=result}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=result}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (2 (801{val=hashData}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (204{val==}) (32 (800{val=expansionMode}) (235{val=.}) (802{val=hashCode}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (800{val=expansionMode}) (236{val===}) (40{val=ExpansionMode.MULTIPLICATIVE})))
(AST_ROOT_SC2NF (27 (800{val=expansionMode}) (236{val===}) (40{val=ExpansionMode.MULTIPLICATIVE})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=initialDoubleArray}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=eDA}) (204{val==}) (14 (304{val=new}) (43 (801{val=StatArray})) (214{val=(}) (800{val=initialDoubleArray}) (215{val=)}))) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=initialDoubleArray}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=eDA}) (204{val==}) (14 (304{val=new}) (43 (801{val=ResizableDoubleArray})) (214{val=(}) (800{val=initialDoubleArray}) (215{val=)}))) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=DEFAULT_INITIAL_CAPACITY}) (234{val=,}) (800{val=DEFAULT_EXPANSION_FACTOR}) (234{val=,}) (27 (800{val=DEFAULT_CONTRACTION_DELTA}) (200{val=+}) (800{val=DEFAULT_EXPANSION_FACTOR})) (234{val=,}) (40{val=ExpansionMode.MULTIPLICATIVE}) (234{val=,}) (800{val=initialArray}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (2 (801{val=hashData}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=Float})) (214{val=(}) (800{val=contractionCriterion}) (215{val=)})) (235{val=.}) (802{val=hashCode}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=result}) (204{val==}) (27 (800{val=result}) (249{val=&&}) (36 (214{val=(}) (27 (40{val=other.contractionCriterion}) (236{val===}) (800{val=contractionCriterion})) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (40{val=dest.contractionCriterion}) (204{val==}) (40{val=source.contractionCriterion})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkContractExpand}) (214{val=(}) (32 (802{val=getContractionCriterion}) (216{val=()})) (234{val=,}) (800{val=expansionFactor}) (215{val=)})) (227{val=;})) (51 (310{val=synchronized}) (214{val=(}) (315{val=this}) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=expansionFactor})) (204{val==}) (800{val=expansionFactor})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=checkContractExpand}) (214{val=(}) (800{val=contractionCriteria}) (234{val=,}) (32 (802{val=getExpansionFactor}) (216{val=()})) (215{val=)})) (227{val=;})) (51 (310{val=synchronized}) (214{val=(}) (315{val=this}) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=contractionCriterion})) (204{val==}) (800{val=contractionCriteria})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=double}) (802{val=getContractionCriterion}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=contractionCriterion}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=relativeThreshold}) (234{val=,}) (800{val=absoluteThreshold}) (215{val=)}) (227{val=;})) (21 (7 (800{val=maxIterationCount}) (204{val==}) (800{val=ITERATION_CHECK_DISABLED})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Deprecated})) (83{val=public}) (802{val=SimpleVectorValueChecker}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=maxIterationCount}) (204{val==}) (800{val=ITERATION_CHECK_DISABLED})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=relativeThreshold}) (234{val=,}) (800{val=absoluteThreshold}) (215{val=)}) (227{val=;})) (21 (7 (800{val=maxIterationCount}) (204{val==}) (800{val=ITERATION_CHECK_DISABLED})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Deprecated})) (83{val=public}) (802{val=SimpleValueChecker}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=maxIterationCount}) (204{val==}) (800{val=ITERATION_CHECK_DISABLED})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=relativeThreshold}) (234{val=,}) (800{val=absoluteThreshold}) (215{val=)}) (227{val=;})) (21 (7 (800{val=maxIterationCount}) (204{val==}) (800{val=ITERATION_CHECK_DISABLED})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Deprecated})) (83{val=public}) (802{val=SimplePointChecker}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=maxIterationCount}) (204{val==}) (800{val=ITERATION_CHECK_DISABLED})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=NaturalRanking})) (59 (800{val=ranking}) (204{val==}) (14 (304{val=new}) (43 (801{val=NaturalRanking})) (214{val=(}) (40{val=NaNStrategy.MAXIMAL}) (234{val=,}) (40{val=TiesStrategy.MINIMUM}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=relativeThreshold}) (234{val=,}) (800{val=absoluteThreshold}) (215{val=)}) (227{val=;})) (21 (7 (800{val=maxIterationCount}) (204{val==}) (800{val=ITERATION_CHECK_DISABLED})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Deprecated})) (83{val=public}) (802{val=SimpleUnivariateValueChecker}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=maxIterationCount}) (204{val==}) (800{val=ITERATION_CHECK_DISABLED})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (802{val=logBeta}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=b}) (215{val=)})))
(AST_ROOT_SC2NF (44 (43 (801{val=RandomDataGenerator})) (800{val=randomData})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=EmpiricalDistribution}) (214{val=(}) (44 (39{val=int}) (800{val=binCount})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=binCount}) (234{val=,}) (14 (304{val=new}) (43 (801{val=RandomDataGenerator})) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=RandomDataGenerator})) (800{val=randomData})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=q0})) (204{val==}) (800{val=scalar})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=diagonalOnly}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=updateCovariance}) (214{val=(}) (800{val=hsig}) (234{val=,}) (800{val=bestArx}) (234{val=,}) (800{val=arz}) (234{val=,}) (800{val=arindex}) (234{val=,}) (800{val=xold}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (802{val=updateCovarianceDiagonalOnly}) (214{val=(}) (800{val=hsig}) (234{val=,}) (800{val=bestArz}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=diagonalOnly}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=updateCovariance}) (214{val=(}) (800{val=hsig}) (234{val=,}) (800{val=bestArx}) (234{val=,}) (800{val=arz}) (234{val=,}) (800{val=arindex}) (234{val=,}) (800{val=xold}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (802{val=updateCovarianceDiagonalOnly}) (214{val=(}) (800{val=hsig}) (234{val=,}) (800{val=bestArz}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=CodyWaite})) (59 (800{val=cw}) (204{val==}) (14 (304{val=new}) (43 (801{val=CodyWaite})) (214{val=(}) (800{val=xa}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=CodyWaite})) (59 (800{val=cw}) (204{val==}) (14 (304{val=new}) (43 (801{val=CodyWaite})) (214{val=(}) (800{val=xa}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=CodyWaite})) (59 (800{val=cw}) (204{val==}) (14 (304{val=new}) (43 (801{val=CodyWaite})) (214{val=(}) (800{val=xa}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=reseedRandomGenerator}) (214{val=(}) (44 (39{val=long}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=reSeed}) (214{val=(}) (800{val=seed}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=EmpiricalDistribution}) (214{val=(}) (44 (39{val=int}) (800{val=binCount})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=binCount}) (234{val=,}) (11 (214{val=(}) (43 (800{val=RandomGenerator})) (215{val=)}) (500{val=null})) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=reseedRandomGenerator}) (214{val=(}) (44 (39{val=long}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=randomData}) (235{val=.}) (802{val=reSeed}) (214{val=(}) (800{val=seed}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=EmpiricalDistribution}) (214{val=(}) (44 (39{val=int}) (800{val=binCount})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=binCount}) (234{val=,}) (14 (304{val=new}) (43 (801{val=RandomDataImpl})) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=EmpiricalDistribution}) (214{val=(}) (44 (39{val=int}) (800{val=binCount})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=binCount}) (234{val=,}) (14 (304{val=new}) (43 (801{val=RandomDataGenerator})) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=filePointer}) (204{val==}) (14 (304{val=new}) (43 (801{val=BufferedReader})) (214{val=(}) (14 (304{val=new}) (43 (801{val=InputStreamReader})) (214{val=(}) (32 (800{val=valuesFileURL}) (235{val=.}) (802{val=openStream}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=NonCorrelatedWeight})) (214{val=(}) (800{val=w}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=NonCorrelatedWeight})) (214{val=(}) (800{val=weights}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=NonCorrelatedWeight})) (214{val=(}) (800{val=weights}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=NonCorrelatedWeight})) (214{val=(}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (34{val=NUMBER_CONSTANT}) (219{val=}}))) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=NonCorrelatedWeight})) (214{val=(}) (800{val=w}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=NonCorrelatedWeight})) (214{val=(}) (32 (800{val=problem}) (235{val=.}) (802{val=weight}) (216{val=()})) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=NonCorrelatedWeight})) (214{val=(}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (34{val=NUMBER_CONSTANT}) (219{val=}}))) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=NonCorrelatedWeight})) (214{val=(}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (34{val=NUMBER_CONSTANT}) (219{val=}}))) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=NonCorrelatedWeight})) (214{val=(}) (32 (800{val=circle}) (235{val=.}) (802{val=weight}) (216{val=()})) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=NonCorrelatedWeight})) (214{val=(}) (800{val=weights}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=NonCorrelatedWeight})) (214{val=(}) (800{val=weights}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=NonCorrelatedWeight})) (214{val=(}) (32 (800{val=function}) (235{val=.}) (802{val=getWeight}) (216{val=()})) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=NonCorrelatedWeight})) (214{val=(}) (800{val=w}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=NonCorrelatedWeight})) (214{val=(}) (800{val=w}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=NonCorrelatedWeight})) (214{val=(}) (800{val=w}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=Weight})) (214{val=(}) (800{val=w}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=Weight})) (214{val=(}) (800{val=w}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=Weight})) (214{val=(}) (800{val=w}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=Weight})) (214{val=(}) (800{val=weights}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=Weight})) (214{val=(}) (32 (800{val=function}) (235{val=.}) (802{val=getWeight}) (216{val=()})) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=Weight})) (214{val=(}) (800{val=w}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=Weight})) (214{val=(}) (800{val=weights}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=Weight})) (214{val=(}) (800{val=weights}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=Weight})) (214{val=(}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (34{val=NUMBER_CONSTANT}) (219{val=}}))) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=Weight})) (214{val=(}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (34{val=NUMBER_CONSTANT}) (219{val=}}))) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=Weight})) (214{val=(}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (34{val=NUMBER_CONSTANT}) (219{val=}}))) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=Weight})) (214{val=(}) (32 (800{val=circle}) (235{val=.}) (802{val=weight}) (216{val=()})) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=Weight})) (214{val=(}) (800{val=weights}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=Weight})) (214{val=(}) (800{val=w}) (215{val=)})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=Weight})) (214{val=(}) (32 (800{val=problem}) (235{val=.}) (802{val=weight}) (216{val=()})) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=d}) (234{val=,}) (9{val=true}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=SimplexSolver}) (214{val=(}) (44 (83{val=final}) (39{val=double}) (800{val=epsilon})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=epsilon}) (234{val=,}) (800{val=DEFAULT_ULPS}) (234{val=,}) (800{val=DEFAULT_CUT_OFF}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=result}) (215{val=)})) (230{val=<}) (800{val=cutOff})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=result}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=f}) (234{val=,}) (800{val=constraints}) (234{val=,}) (800{val=goalType}) (234{val=,}) (800{val=restrictToNonNegative}) (234{val=,}) (800{val=epsilon}) (234{val=,}) (40{val=SimplexSolver.DEFAULT_ULPS}) (234{val=,}) (40{val=SimplexSolver.DEFAULT_CUT_OFF}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=nCols}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=nCols}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=nRows}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=nRows}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=nRows}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=nCols}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]}) (85{val=[]})) (59 (800{val=data}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=columns}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=rows}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=rows}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=columns}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=outData}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=rows}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=outData}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=columns}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]}) (85{val=[]})) (59 (800{val=data}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (32 (802{val=getRowDimension}) (216{val=()})) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=blocks}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (27 (800{val=blockRows}) (202{val=*}) (800{val=blockColumns})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (27 (40{val=data.length}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (40{val=data.length}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (40{val=data.length}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (40{val=data.length}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (40{val=data.length}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (40{val=data.length}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (40{val=data.length}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (40{val=data.length}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (40{val=data.length}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (40{val=data.length}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (40{val=data.length}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (40{val=data.length}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (40{val=data.length}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (40{val=data.length}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=data}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (27 (40{val=v1.length}) (200{val=+}) (40{val=v2.length})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=data}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (27 (40{val=v1.length}) (200{val=+}) (40{val=v2.data.length})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=data}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (27 (40{val=v1.data.length}) (200{val=+}) (40{val=v2.length})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=data}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (27 (40{val=v1.data.length}) (200{val=+}) (40{val=v2.data.length})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=data}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (32 (800{val=v}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=data}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=size}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=data}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=size}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]}) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=nRows}) (234{val=,}) (32 (802{val=getColumnDimension}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=nCols}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=nRows}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=data}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (40{val=subMatrix.length}) (234{val=,}) (800{val=nCols}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]}) (85{val=[]})) (59 (800{val=outData}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=nRows}) (234{val=,}) (800{val=nCols}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]}) (85{val=[]})) (59 (800{val=outData}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=rowCount}) (234{val=,}) (800{val=columnCount}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=T})) (85{val=[]}) (85{val=[]})) (59 (800{val=outData}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=rowCount}) (234{val=,}) (800{val=columnCount}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=data}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=nRows}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=rowDimension}) (234{val=,}) (800{val=columnDimension}) (215{val=)}) (227{val=;})) (21 (7 (800{val=data}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=rowDimension}) (234{val=,}) (800{val=columnDimension}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=T})) (85{val=[]})) (59 (800{val=res}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=virtualSize}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=exponent}) (204{val==}) (11 (214{val=(}) (39{val=int}) (215{val=)}) (36 (214{val=(}) (27 (32 (800{val=y}) (235{val=.}) (802{val=intLog10}) (216{val=()})) (202{val=*}) (34{val=NUMBER_CONSTANT})) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Decimal64})) (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=IEEEremainder}) (214{val=(}) (800{val=value}) (234{val=,}) (40{val=a.value}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Decimal64})) (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=IEEEremainder}) (214{val=(}) (800{val=value}) (234{val=,}) (800{val=a}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (32 (800{val=ePlus}) (235{val=.}) (802{val=subtract}) (214{val=(}) (800{val=eMinus}) (215{val=)})) (235{val=.}) (802{val=divide}) (214{val=(}) (32 (800{val=ePlus}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=eMinus}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DerivativeStructure})) (59 (800{val=ref}) (204{val==}) (32 (800{val=dsX}) (235{val=.}) (802{val=subtract}) (214{val=(}) (27 (800{val=x}) (201{val=-}) (32 (800{val=FastMath}) (235{val=.}) (802{val=IEEEremainder}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (215{val=)}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DerivativeStructure})) (59 (800{val=sAccurate}) (204{val==}) (32 (800{val=FieldVector3D}) (235{val=.}) (802{val=dotProduct}) (214{val=(}) (800{val=u1}) (234{val=,}) (800{val=u2}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (32 (32 (800{val=FieldVector3D}) (235{val=.}) (802{val=dotProduct}) (214{val=(}) (32 (800{val=r}) (235{val=.}) (802{val=getAxis}) (216{val=()})) (234{val=,}) (32 (800{val=reverted}) (235{val=.}) (802{val=getAxis}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=getReal}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (32 (32 (800{val=FieldVector3D}) (235{val=.}) (802{val=dotProduct}) (214{val=(}) (32 (800{val=r}) (235{val=.}) (802{val=getAxis}) (216{val=()})) (234{val=,}) (32 (800{val=reverted}) (235{val=.}) (802{val=getAxis}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=getReal}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=randomData}) (204{val==}) (14 (304{val=new}) (43 (801{val=RandomDataGenerator})) (214{val=(}) (800{val=randomGenerator}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=tiesStrategy})) (204{val==}) (40{val=TiesStrategy.RANDOM})) (227{val=;})) (21 (7 (800{val=nanStrategy}) (204{val==}) (800{val=DEFAULT_NAN_STRATEGY})) (227{val=;})) (21 (7 (800{val=randomData}) (204{val==}) (14 (304{val=new}) (43 (801{val=RandomDataGenerator})) (214{val=(}) (800{val=randomGenerator}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=nanStrategy})) (204{val==}) (800{val=nanStrategy})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=tiesStrategy})) (204{val==}) (800{val=tiesStrategy})) (227{val=;})) (21 (7 (800{val=randomData}) (204{val==}) (14 (304{val=new}) (43 (801{val=RandomDataGenerator})) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=tiesStrategy})) (204{val==}) (800{val=tiesStrategy})) (227{val=;})) (21 (7 (800{val=nanStrategy}) (204{val==}) (800{val=DEFAULT_NAN_STRATEGY})) (227{val=;})) (21 (7 (800{val=randomData}) (204{val==}) (14 (304{val=new}) (43 (801{val=RandomDataGenerator})) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (73 (800{val=T}) (332{val=extends}) (74 (43 (800{val=RealFieldElement})) (230{val=<}) (43 (800{val=T})) (231{val=>}))))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NumberIsTooLargeException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (802{val=getRandomGenerator}) (216{val=()})) (235{val=.}) (802{val=setSeed}) (214{val=(}) (27 (32 (800{val=System}) (235{val=.}) (802{val=currentTimeMillis}) (216{val=()})) (200{val=+}) (32 (800{val=System}) (235{val=.}) (802{val=identityHashCode}) (214{val=(}) (315{val=this}) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (802{val=getRandomGenerator}) (216{val=()})) (235{val=.}) (802{val=setSeed}) (214{val=(}) (800{val=seed}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RandomGenerator})) (59 (800{val=generator}) (204{val==}) (32 (802{val=getRandomGenerator}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=FDistribution})) (214{val=(}) (32 (802{val=getRandomGenerator}) (216{val=()})) (234{val=,}) (800{val=numeratorDf}) (234{val=,}) (800{val=denominatorDf}) (234{val=,}) (40{val=FDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}) (215{val=)})) (235{val=.}) (802{val=sample}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=ChiSquaredDistribution})) (214{val=(}) (32 (802{val=getRandomGenerator}) (216{val=()})) (234{val=,}) (800{val=df}) (234{val=,}) (40{val=ChiSquaredDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}) (215{val=)})) (235{val=.}) (802{val=sample}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=CauchyDistribution})) (214{val=(}) (32 (802{val=getRandomGenerator}) (216{val=()})) (234{val=,}) (800{val=median}) (234{val=,}) (800{val=scale}) (234{val=,}) (40{val=CauchyDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}) (215{val=)})) (235{val=.}) (802{val=sample}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=BinomialDistribution})) (214{val=(}) (32 (802{val=getRandomGenerator}) (216{val=()})) (234{val=,}) (800{val=numberOfTrials}) (234{val=,}) (800{val=probabilityOfSuccess}) (215{val=)})) (235{val=.}) (802{val=sample}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=BetaDistribution})) (214{val=(}) (32 (802{val=getRandomGenerator}) (216{val=()})) (234{val=,}) (800{val=alpha}) (234{val=,}) (800{val=beta}) (234{val=,}) (40{val=BetaDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}) (215{val=)})) (235{val=.}) (802{val=sample}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=ZipfDistribution})) (214{val=(}) (32 (802{val=getRandomGenerator}) (216{val=()})) (234{val=,}) (800{val=numberOfElements}) (234{val=,}) (800{val=exponent}) (215{val=)})) (235{val=.}) (802{val=sample}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=WeibullDistribution})) (214{val=(}) (32 (802{val=getRandomGenerator}) (216{val=()})) (234{val=,}) (800{val=shape}) (234{val=,}) (800{val=scale}) (234{val=,}) (40{val=WeibullDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}) (215{val=)})) (235{val=.}) (802{val=sample}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=TDistribution})) (214{val=(}) (32 (802{val=getRandomGenerator}) (216{val=()})) (234{val=,}) (800{val=df}) (234{val=,}) (40{val=TDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}) (215{val=)})) (235{val=.}) (802{val=sample}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=PascalDistribution})) (214{val=(}) (32 (802{val=getRandomGenerator}) (216{val=()})) (234{val=,}) (800{val=r}) (234{val=,}) (800{val=p}) (215{val=)})) (235{val=.}) (802{val=sample}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=HypergeometricDistribution})) (214{val=(}) (32 (802{val=getRandomGenerator}) (216{val=()})) (234{val=,}) (800{val=populationSize}) (234{val=,}) (800{val=numberOfSuccesses}) (234{val=,}) (800{val=sampleSize}) (215{val=)})) (235{val=.}) (802{val=sample}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=GammaDistribution})) (214{val=(}) (32 (802{val=getRandomGenerator}) (216{val=()})) (234{val=,}) (800{val=shape}) (234{val=,}) (800{val=scale}) (234{val=,}) (40{val=GammaDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}) (215{val=)})) (235{val=.}) (802{val=sample}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=ExponentialDistribution})) (214{val=(}) (32 (802{val=getRandomGenerator}) (216{val=()})) (234{val=,}) (800{val=mean}) (234{val=,}) (40{val=ExponentialDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}) (215{val=)})) (235{val=.}) (802{val=sample}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (800{val=sigma}) (202{val=*}) (32 (32 (802{val=getRandomGenerator}) (216{val=()})) (235{val=.}) (802{val=nextGaussian}) (216{val=()}))) (200{val=+}) (800{val=mu})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=PoissonDistribution})) (214{val=(}) (32 (802{val=getRandomGenerator}) (216{val=()})) (234{val=,}) (800{val=mean}) (234{val=,}) (40{val=PoissonDistribution.DEFAULT_EPSILON}) (234{val=,}) (40{val=PoissonDistribution.DEFAULT_MAX_ITERATIONS}) (215{val=)})) (235{val=.}) (802{val=sample}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=RandomGenerator})) (59 (800{val=ran}) (204{val==}) (32 (802{val=getRandomGenerator}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=getKernel}) (214{val=(}) (800{val=stats}) (215{val=)})) (235{val=.}) (802{val=sample}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Test})) (83{val=public}) (39{val=void}) (802{val=testReciprocalZero}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (32 (40{val=Complex.ZERO}) (235{val=.}) (802{val=reciprocal}) (216{val=()})) (234{val=,}) (40{val=Complex.INF}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (36 (214{val=(}) (27 (36 (214{val=(}) (27 (32 (800{val=Float}) (235{val=.}) (802{val=floatToRawIntBits}) (214{val=(}) (800{val=f}) (215{val=)})) (231{val=>}) (231{val=>}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (213{val=&}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (201{val=-}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=long}) (59 (800{val=bits}) (204{val==}) (32 (800{val=Double}) (235{val=.}) (802{val=doubleToRawLongBits}) (214{val=(}) (800{val=d}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=long}) (59 (800{val=bits}) (204{val==}) (32 (800{val=Double}) (235{val=.}) (802{val=doubleToRawLongBits}) (214{val=(}) (800{val=d}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=abs}) (214{val=(}) (27 (800{val=x}) (201{val=-}) (32 (800{val=Double}) (235{val=.}) (802{val=longBitsToDouble}) (214{val=(}) (27 (32 (800{val=Double}) (235{val=.}) (802{val=doubleToRawLongBits}) (214{val=(}) (800{val=x}) (215{val=)})) (212{val=^}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=long}) (59 (800{val=bits}) (204{val==}) (32 (800{val=Double}) (235{val=.}) (802{val=doubleToRawLongBits}) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})) (25 (313{val=if}) (214{val=(}) (27 (800{val=bits}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=long}) (59 (800{val=bits}) (204{val==}) (32 (800{val=Double}) (235{val=.}) (802{val=doubleToRawLongBits}) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})) (25 (313{val=if}) (214{val=(}) (27 (800{val=bits}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=long}) (59 (800{val=inbits}) (204{val==}) (32 (800{val=Double}) (235{val=.}) (802{val=doubleToRawLongBits}) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=long}) (59 (800{val=bits}) (204{val==}) (32 (800{val=Double}) (235{val=.}) (802{val=doubleToRawLongBits}) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=long}) (59 (800{val=bits}) (204{val==}) (32 (800{val=Double}) (235{val=.}) (802{val=doubleToRawLongBits}) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=long}) (59 (800{val=xl}) (204{val==}) (32 (800{val=Double}) (235{val=.}) (802{val=doubleToRawLongBits}) (214{val=(}) (800{val=d}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=File})) (59 (800{val=file}) (204{val==}) (14 (304{val=new}) (43 (801{val=File})) (214{val=(}) (32 (800{val=url}) (235{val=.}) (802{val=toURI}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Double}) (235{val=.}) (802{val=longBitsToDouble}) (214{val=(}) (27 (800{val=MASK_NON_SIGN_LONG}) (213{val=&}) (32 (800{val=Double}) (235{val=.}) (802{val=doubleToRawLongBits}) (214{val=(}) (800{val=x}) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Float}) (235{val=.}) (802{val=intBitsToFloat}) (214{val=(}) (27 (800{val=MASK_NON_SIGN_INT}) (213{val=&}) (32 (800{val=Float}) (235{val=.}) (802{val=floatToRawIntBits}) (214{val=(}) (800{val=x}) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (5 (39{val=double}) (85{val=[]}) (85{val=[]})) (800{val=matrix})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Well19937c})) (216{val=()})) (234{val=,}) (800{val=lower}) (234{val=,}) (800{val=upper}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=fit}) (214{val=(}) (800{val=initialMixture}) (234{val=,}) (800{val=DEFAULT_MAX_ITERATIONS}) (234{val=,}) (800{val=DEFAULT_THRESHOLD}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=sum}) (237{val=+=}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (27 (800{val=distA}) (203{val=/}) (800{val=distB})) (234{val=,}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (36 (214{val=(}) (27 (800{val=fuzziness}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=u}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (2 (2 (801{val=membershipMatrix}) (221{val=[}) (800{val=i}) (222{val=]})) (221{val=[}) (800{val=j}) (222{val=]})) (234{val=,}) (800{val=fuzziness}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=long}) (59 (800{val=grayCode}) (204{val==}) (27 (800{val=i}) (212{val=^}) (36 (214{val=(}) (27 (800{val=i}) (231{val=>}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=count}) (204{val==}) (27 (800{val=samples}) (203{val=/}) (800{val=centers}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (2 (22 (315{val=this}) (235{val=.}) (801{val=a})) (221{val=[}) (800{val=i}) (222{val=]})) (221{val=[}) (800{val=j}) (222{val=]})) (204{val==}) (2 (801{val=a}) (221{val=[}) (27 (27 (800{val=i}) (202{val=*}) (800{val=N})) (200{val=+}) (800{val=j})) (222{val=]}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertArrayEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=tEnd}) (204{val==}) (32 (802{val=test}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=tEnd}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=tEnd}) (204{val==}) (32 (802{val=test}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=tEnd}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (39{val=double}) (59 (800{val=midPoint}) (204{val==}) (27 (800{val=min}) (200{val=+}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=diff})))) (227{val=;})) (41 (329{val=return}) (27 (800{val=diff}) (202{val=*}) (32 (802{val=computeObjectiveValue}) (214{val=(}) (800{val=midPoint}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (14 (304{val=new}) (43 (801{val=WeibullDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (14 (304{val=new}) (43 (801{val=WeibullDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=incrementValue}) (214{val=(}) (32 (800{val=entry}) (235{val=.}) (802{val=getKey}) (216{val=()})) (234{val=,}) (32 (32 (800{val=entry}) (235{val=.}) (802{val=getValue}) (216{val=()})) (235{val=.}) (802{val=longValue}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertFalse}) (214{val=(}) (32 (800{val=random}) (235{val=.}) (802{val=nextBoolean}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=result}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (32 (800{val=r}) (235{val=.}) (802{val=call}) (216{val=()})) (235{val=.}) (802{val=doubleValue}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=uniDimIndex}) (204{val==}) (32 (32 (800{val=iter}) (235{val=.}) (802{val=next}) (216{val=()})) (235{val=.}) (802{val=intValue}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=specific}) (234{val=,}) (800{val=value}) (234{val=,}) (800{val=INTEGER_ZERO}) (234{val=,}) (9{val=true}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=NotPositiveException}) (214{val=(}) (44 (43 (801{val=Number})) (800{val=value})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=value}) (234{val=,}) (800{val=INTEGER_ZERO}) (234{val=,}) (9{val=true}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=specific}) (234{val=,}) (800{val=INTEGER_ZERO}) (234{val=,}) (800{val=arguments}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (2 (801{val=expected}) (221{val=[}) (800{val=index}) (222{val=]})) (235{val=.}) (802{val=intValue}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (2 (801{val=wrong}) (221{val=[}) (800{val=index}) (222{val=]})) (235{val=.}) (802{val=intValue}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=specific}) (234{val=,}) (800{val=value}) (234{val=,}) (800{val=INTEGER_ZERO}) (234{val=,}) (9{val=false}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=NotStrictlyPositiveException}) (214{val=(}) (44 (43 (801{val=Number})) (800{val=value})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=value}) (234{val=,}) (800{val=INTEGER_ZERO}) (234{val=,}) (9{val=false}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=specific}) (234{val=,}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=wrong}) (215{val=)})) (234{val=,}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=expected}) (215{val=)})) (215{val=)}) (227{val=;})) (21 (7 (800{val=dimension}) (204{val==}) (800{val=expected})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=secRand}) (204{val==}) (32 (800{val=RandomGeneratorFactory}) (235{val=.}) (802{val=createRandomGenerator}) (214{val=(}) (32 (800{val=SecureRandom}) (235{val=.}) (802{val=getInstance}) (214{val=(}) (800{val=algorithm}) (234{val=,}) (800{val=provider}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RandomGenerator})) (59 (800{val=secRan}) (204{val==}) (32 (802{val=getSecRan}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=T})) (802{val=withConvergenceChecker}) (214{val=(}) (44 (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=PAIR})) (231{val=>})) (800{val=checker})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=term}) (239{val=*=}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (2 (801{val=delta}) (221{val=[}) (800{val=k}) (222{val=]})) (234{val=,}) (2 (801{val=orders}) (221{val=[}) (800{val=k}) (222{val=]})) (215{val=)})) (203{val=/}) (32 (800{val=CombinatoricsUtils}) (235{val=.}) (802{val=factorial}) (214{val=(}) (2 (801{val=orders}) (221{val=[}) (800{val=k}) (222{val=]})) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=RandomDataGenerator})) (59 (800{val=randomData}) (204{val==}) (14 (304{val=new}) (43 (801{val=RandomDataGenerator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (2 (801{val=coeff}) (221{val=[}) (800{val=i}) (222{val=]})) (221{val=[}) (800{val=j}) (222{val=]})) (204{val==}) (11 (214{val=(}) (39{val=int}) (215{val=)}) (32 (800{val=CombinatoricsUtils}) (235{val=.}) (802{val=binomialCoefficient}) (214{val=(}) (800{val=i}) (234{val=,}) (800{val=j}) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=long}) (59 (800{val=expected}) (204{val==}) (32 (800{val=CombinatoricsUtils}) (235{val=.}) (802{val=binomialCoefficient}) (214{val=(}) (27 (800{val=i}) (200{val=+}) (800{val=j})) (234{val=,}) (800{val=i}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=binomial}) (204{val==}) (32 (800{val=CombinatoricsUtils}) (235{val=.}) (802{val=binomialCoefficient}) (214{val=(}) (27 (800{val=v}) (200{val=+}) (800{val=i})) (234{val=,}) (800{val=i}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=refDer}) (204{val==}) (27 (38 (201{val=-}) (32 (800{val=CombinatoricsUtils}) (235{val=.}) (802{val=factorial}) (214{val=(}) (27 (800{val=n}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (38 (201{val=-}) (800{val=x})) (234{val=,}) (800{val=n}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (32 (800{val=ArithmeticUtils}) (235{val=.}) (802{val=pow}) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (800{val=i}) (215{val=)})) (202{val=*}) (32 (800{val=CombinatoricsUtils}) (235{val=.}) (802{val=factorial}) (214{val=(}) (800{val=i}) (215{val=)}))) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=x}) (234{val=,}) (27 (800{val=i}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)}))))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=inv}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (32 (800{val=CombinatoricsUtils}) (235{val=.}) (802{val=factorial}) (214{val=(}) (800{val=i}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=AbstractOptimizer})) (230{val=<}) (43 (800{val=PAIR})) (234{val=,}) (43 (800{val=OPTIM})) (231{val=>})) (800{val=other})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Double}) (235{val=.}) (802{val=parseDouble}) (214{val=(}) (32 (800{val=o}) (235{val=.}) (802{val=toString}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=Double}) (235{val=.}) (802{val=parseDouble}) (214{val=(}) (800{val=str}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=val}) (204{val==}) (32 (800{val=Double}) (235{val=.}) (802{val=parseDouble}) (214{val=(}) (800{val=str}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=sampleStats}) (235{val=.}) (802{val=addValue}) (214{val=(}) (800{val=val}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=normalized}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (214{val=(}) (32 (800{val=originalConstraints}) (235{val=.}) (802{val=size}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Edge})) (231{val=>})) (59 (800{val=edges}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (230{val=<}) (43 (800{val=Edge})) (231{val=>})) (214{val=(}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Segment})) (231{val=>})) (59 (800{val=segments}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (230{val=<}) (43 (800{val=Segment})) (231{val=>})) (214{val=(}) (32 (800{val=list}) (235{val=.}) (802{val=size}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=EventHandler})) (231{val=>})) (59 (800{val=list}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (230{val=<}) (43 (800{val=EventHandler})) (231{val=>})) (214{val=(}) (32 (800{val=eventsStates}) (235{val=.}) (802{val=size}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=normalized}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (214{val=(}) (32 (800{val=originalConstraints}) (235{val=.}) (802{val=size}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (5 (39{val=int}) (85{val=[]})) (231{val=>})) (59 (800{val=row}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (230{val=<}) (5 (39{val=int}) (85{val=[]})) (231{val=>})) (214{val=(}) (27 (40{val=dRow.length}) (202{val=*}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Segment})) (231{val=>})) (59 (800{val=segments}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (230{val=<}) (43 (800{val=Segment})) (231{val=>})) (214{val=(}) (32 (800{val=list}) (235{val=.}) (802{val=size}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=vectorData})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=value}) (234{val=,}) (800{val=DEFAULT_EPSILON}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=f}) (235{val=.}) (802{val=getCount}) (214{val=(}) (800{val=THREE}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=f}) (235{val=.}) (802{val=addValue}) (214{val=(}) (800{val=THREE}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=Combinations})) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=k}) (215{val=)})) (235{val=.}) (802{val=iterator}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (5 (39{val=int}) (85{val=[]})) (59 (800{val=index}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=natural}) (214{val=(}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (5 (39{val=int}) (85{val=[]})) (59 (800{val=natural}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (800{val=natural}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=natural.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=AbstractLeastSquaresOptimizer})) (230{val=<}) (43 (800{val=OPTIM})) (231{val=>})) (800{val=other})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=a0}) (215{val=)})) (231{val=>}) (800{val=overflow})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=FractionConversionException})) (214{val=(}) (800{val=value}) (234{val=,}) (800{val=a0}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (27 (34{val=NUMBER_CONSTANT}) (200{val=+}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=MathUtils}) (235{val=.}) (802{val=hash}) (214{val=(}) (800{val=value}) (215{val=)})))) (200{val=+}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=derivatives}) (235{val=.}) (802{val=hashCode}) (216{val=()})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=mult}) (235{val=.}) (802{val=multiplyInPlace}) (214{val=(}) (800{val=var1}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=verifyValues}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=weights}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (234{val=,}) (800{val=allowEmpty}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=verifyValues}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=weights}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=verifyValues}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (234{val=,}) (800{val=allowEmpty}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=verifyValues}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=w}) (238{val=-=}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=num}) (241{val=%=}) (800{val=den})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=i}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=randInt}) (231{val=>}) (231{val=>}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (83{val=final}) (43 (801{val=T})) (800{val=a})) (226{val=:}) (800{val=data}) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=h}) (245{val=^=}) (32 (800{val=a}) (235{val=.}) (802{val=hashCode}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (2 (801{val=rhs}) (221{val=[}) (800{val=m}) (222{val=]})) (240{val=/=}) (800{val=X})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=coeff1}) (240{val=/=}) (800{val=pc2})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=bits}) (243{val=&=}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=den}) (237{val=+=}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=trial}) (239{val=*=}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=den}) (237{val=+=}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=bytes}) (221{val=[}) (37 (800{val=i}) (247{val=++})) (222{val=]})) (204{val==}) (11 (214{val=(}) (39{val=byte}) (215{val=)}) (36 (214{val=(}) (27 (800{val=random}) (213{val=&}) (34{val=NUMBER_CONSTANT})) (215{val=)})))) (227{val=;})) (21 (7 (800{val=random}) (231{val=>}) (231{val=>}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=result}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=result}) (239{val=*=}) (800{val=x})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=za}) (239{val=*=}) (800{val=ya})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=e}) (231{val=>}) (231{val=>}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=z}) (239{val=*=}) (800{val=lnb})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=xl}) (243{val=&=}) (800{val=MASK_30BITS})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=r}) (239{val=*=}) (800{val=rnd})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=extra}) (238{val=-=}) (27 (800{val=rh}) (202{val=*}) (800{val=RADIX}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (61 (350{val=while}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (236{val===}) (27 (800{val=n}) (211{val=%}) (800{val=p}))) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=n}) (240{val=/=}) (800{val=p})) (227{val=;})) (21 (32 (800{val=factors}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=p}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=n}) (244{val=|=}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=xx}) (237{val=+=}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (37 (800{val=iter}) (247{val=++})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (240{val=/=}) (800{val=d})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (239{val=*=}) (800{val=d})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (238{val=-=}) (800{val=d})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (237{val=+=}) (800{val=d})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=k}) (237{val=+=}) (800{val=m})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=coeff1}) (240{val=/=}) (800{val=pc2})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (37 (2 (801{val=c}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (247{val=++})) (227{val=;})) (41 (329{val=return}) (800{val=ret}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=coeff1}) (240{val=/=}) (800{val=pc2})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=m}) (231{val=>}) (231{val=>}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (21 (38 (247{val=++}) (800{val=k})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=e}) (231{val=>}) (231{val=>}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=e}) (231{val=>}) (231{val=>}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=e}) (231{val=>}) (231{val=>}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=v}) (239{val=*=}) (800{val=v})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (27 (800{val=scale}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (38 (201{val=-}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log1p}) (214{val=(}) (38 (201{val=-}) (800{val=p})) (215{val=)}))) (234{val=,}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (800{val=shape})) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (36 (214{val=(}) (27 (800{val=a}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log}) (214{val=(}) (800{val=x}) (215{val=)}))) (215{val=)})) (200{val=+}) (36 (214{val=(}) (27 (800{val=b}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log1p}) (214{val=(}) (38 (201{val=-}) (800{val=x})) (215{val=)}))) (215{val=)}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (36 (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=expm1}) (214{val=(}) (800{val=ss}) (215{val=)})) (215{val=)})) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (27 (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=scale})) (200{val=+}) (800{val=ss})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=correct}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=z}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=predict}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ArrayRealVector})) (214{val=(}) (800{val=u}) (234{val=,}) (9{val=false}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=minadj}) (240{val=/=}) (27 (2 (40{val=divisor.mant}) (221{val=[}) (27 (40{val=mant.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (222{val=]})) (200{val=+}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (24 (303{val=for}) (214{val=(}) (7 (800{val=k}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;}) (27 (800{val=k}) (230{val=<}) (800{val=DIM})) (227{val=;}) (38 (247{val=++}) (800{val=k})) (215{val=)}) (21 (7 (2 (2 (801{val=basis}) (221{val=[}) (800{val=i}) (222{val=]})) (221{val=[}) (800{val=k}) (222{val=]})) (240{val=/=}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=sp}) (215{val=)}))) (227{val=;}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=f}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (32 (14 (304{val=new}) (43 (801{val=DiffPow})) (216{val=()})) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=x}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (800{val=f}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=f}) (237{val=+=}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=factor}) (234{val=,}) (27 (800{val=i}) (203{val=/}) (36 (214{val=(}) (27 (40{val=x.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)})) (202{val=*}) (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]})) (202{val=*}) (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]})))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=f}) (237{val=+=}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=factor}) (234{val=,}) (27 (800{val=i}) (203{val=/}) (36 (214{val=(}) (27 (40{val=x.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)})) (202{val=*}) (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]})) (202{val=*}) (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]})))) (227{val=;})))
(AST_ROOT_SC2NF (24 (303{val=for}) (214{val=(}) (7 (800{val=k}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;}) (27 (800{val=k}) (230{val=<}) (800{val=DIM})) (227{val=;}) (38 (247{val=++}) (800{val=k})) (215{val=)}) (21 (7 (2 (2 (801{val=basis}) (221{val=[}) (800{val=i}) (222{val=]})) (221{val=[}) (800{val=k}) (222{val=]})) (240{val=/=}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=sp}) (215{val=)}))) (227{val=;}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=f}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (32 (14 (304{val=new}) (43 (801{val=DiffPow})) (216{val=()})) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=x}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (800{val=f}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=f}) (237{val=+=}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=factor}) (234{val=,}) (27 (800{val=i}) (203{val=/}) (36 (214{val=(}) (27 (40{val=x.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)})) (202{val=*}) (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]})) (202{val=*}) (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]})))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=f}) (237{val=+=}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=factor}) (234{val=,}) (27 (800{val=i}) (203{val=/}) (36 (214{val=(}) (27 (40{val=x.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)})) (202{val=*}) (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]})) (202{val=*}) (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=max}) (204{val==}) (40{val=FastMath.PI})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=FunctionUtils}) (235{val=.}) (802{val=sample}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=FastMath.PI}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=FunctionUtils}) (235{val=.}) (802{val=sample}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=FastMath.PI}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=FunctionUtils}) (235{val=.}) (802{val=sample}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Sin})) (216{val=()})) (234{val=,}) (40{val=FastMath.PI}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=x}) (204{val==}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=random}) (216{val=()})) (202{val=*}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=x}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=random}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (27 (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (203{val=/}) (36 (214{val=(}) (27 (800{val=a}) (202{val=*}) (800{val=a})) (215{val=)}))) (201{val=-}) (34{val=NUMBER_CONSTANT})) (200{val=+}) (32 (800{val=FastMath}) (235{val=.}) (802{val=cos}) (214{val=(}) (800{val=a}) (215{val=)}))))
(AST_ROOT_SC2NF (21 (7 (800{val=minDiff}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=min}) (214{val=(}) (800{val=minDiff}) (234{val=,}) (2 (801{val=boundDifference}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=minDiff}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=min}) (214{val=(}) (800{val=minDiff}) (234{val=,}) (2 (801{val=boundDifference}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (2 (801{val=d}) (221{val=[}) (800{val=r}) (222{val=]})) (221{val=[}) (800{val=c}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (32 (800{val=m}) (235{val=.}) (802{val=getEntry}) (214{val=(}) (800{val=r}) (234{val=,}) (800{val=c}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (2 (801{val=d}) (221{val=[}) (800{val=r}) (222{val=]})) (221{val=[}) (800{val=c}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log}) (214{val=(}) (32 (800{val=m}) (235{val=.}) (802{val=getEntry}) (214{val=(}) (800{val=r}) (234{val=,}) (800{val=c}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=diff}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]})) (201{val=-}) (2 (801{val=repaired}) (221{val=[}) (800{val=i}) (222{val=]}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (201{val=-}) (800{val=ccovmu})) (215{val=)})) (202{val=*}) (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=mueff})) (203{val=/}) (36 (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (27 (800{val=dimension}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (200{val=+}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=mueff}))) (215{val=)}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (2 (801{val=d}) (221{val=[}) (800{val=r}) (222{val=]})) (221{val=[}) (800{val=c}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (32 (800{val=m}) (235{val=.}) (802{val=getEntry}) (214{val=(}) (800{val=r}) (234{val=,}) (800{val=c}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (2 (801{val=d}) (221{val=[}) (800{val=r}) (222{val=]})) (221{val=[}) (800{val=c}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log}) (214{val=(}) (32 (800{val=m}) (235{val=.}) (802{val=getEntry}) (214{val=(}) (800{val=r}) (234{val=,}) (800{val=c}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=diff}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]})) (201{val=-}) (2 (801{val=repaired}) (221{val=[}) (800{val=i}) (222{val=]}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (201{val=-}) (800{val=ccovmu})) (215{val=)})) (202{val=*}) (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=mueff})) (203{val=/}) (36 (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (27 (800{val=dimension}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (200{val=+}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=mueff}))) (215{val=)}))))
(AST_ROOT_SC2NF (24 (303{val=for}) (214{val=(}) (7 (800{val=k}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;}) (27 (800{val=k}) (230{val=<}) (800{val=DIM})) (227{val=;}) (38 (247{val=++}) (800{val=k})) (215{val=)}) (21 (7 (2 (2 (801{val=basis}) (221{val=[}) (800{val=i}) (222{val=]})) (221{val=[}) (800{val=k}) (222{val=]})) (240{val=/=}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=sp}) (215{val=)}))) (227{val=;}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=f}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (32 (14 (304{val=new}) (43 (801{val=DiffPow})) (216{val=()})) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=x}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (800{val=f}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=f}) (237{val=+=}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=factor}) (234{val=,}) (27 (800{val=i}) (203{val=/}) (36 (214{val=(}) (27 (40{val=x.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)})) (202{val=*}) (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]})) (202{val=*}) (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]})))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=f}) (237{val=+=}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=factor}) (234{val=,}) (27 (800{val=i}) (203{val=/}) (36 (214{val=(}) (27 (40{val=x.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)})) (202{val=*}) (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]})) (202{val=*}) (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=diff}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (800{val=constantValue}) (201{val=-}) (2 (32 (800{val=filter}) (235{val=.}) (802{val=getStateEstimation}) (216{val=()})) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (59 (800{val=source}) (204{val==}) (4 (218{val={}) (40{val=Double.NEGATIVE_INFINITY}) (234{val=,}) (38 (201{val=-}) (40{val=Double.MAX_VALUE})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=Double.MIN_VALUE}) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=ulp}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=Double.MAX_VALUE}) (234{val=,}) (40{val=Double.POSITIVE_INFINITY}) (219{val=}}))))
(AST_ROOT_SC2NF (59 (800{val=source}) (204{val==}) (4 (218{val={}) (40{val=Double.NEGATIVE_INFINITY}) (234{val=,}) (38 (201{val=-}) (40{val=Double.MAX_VALUE})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=Double.MIN_VALUE}) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=ulp}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=Double.MAX_VALUE}) (234{val=,}) (40{val=Double.POSITIVE_INFINITY}) (219{val=}}))))
(AST_ROOT_SC2NF (59 (800{val=source}) (204{val==}) (4 (218{val={}) (40{val=Double.NEGATIVE_INFINITY}) (234{val=,}) (38 (201{val=-}) (40{val=Double.MAX_VALUE})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=Double.MIN_VALUE}) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=ulp}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=Double.MAX_VALUE}) (234{val=,}) (40{val=Double.POSITIVE_INFINITY}) (219{val=}}))))
(AST_ROOT_SC2NF (24 (303{val=for}) (214{val=(}) (7 (800{val=k}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;}) (27 (800{val=k}) (230{val=<}) (800{val=DIM})) (227{val=;}) (38 (247{val=++}) (800{val=k})) (215{val=)}) (21 (7 (2 (2 (801{val=basis}) (221{val=[}) (800{val=i}) (222{val=]})) (221{val=[}) (800{val=k}) (222{val=]})) (240{val=/=}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=sp}) (215{val=)}))) (227{val=;}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=f}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (32 (14 (304{val=new}) (43 (801{val=DiffPow})) (216{val=()})) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=x}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (800{val=f}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=f}) (237{val=+=}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=factor}) (234{val=,}) (27 (800{val=i}) (203{val=/}) (36 (214{val=(}) (27 (40{val=x.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)})) (202{val=*}) (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]})) (202{val=*}) (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]})))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=f}) (237{val=+=}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=factor}) (234{val=,}) (27 (800{val=i}) (203{val=/}) (36 (214{val=(}) (27 (40{val=x.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)})) (202{val=*}) (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]})) (202{val=*}) (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]})))) (227{val=;})))
(AST_ROOT_SC2NF (59 (800{val=a1}) (204{val==}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (27 (40{val=FastMath.PI}) (202{val=*}) (800{val=twolpd})) (215{val=)})) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=lambda})) (215{val=)}))) (215{val=)})))))
(AST_ROOT_SC2NF (21 (7 (800{val=ret}) (237{val=+=}) (27 (2 (801{val=c}) (221{val=[}) (800{val=i}) (222{val=]})) (202{val=*}) (32 (800{val=ArithmeticUtils}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=i}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (24 (303{val=for}) (214{val=(}) (58 (39{val=int}) (59 (800{val=i}) (204{val==}) (34{val=NUMBER_CONSTANT}))) (227{val=;}) (27 (800{val=i}) (230{val=<}) (800{val=length})) (227{val=;}) (37 (800{val=i}) (247{val=++})) (215{val=)}) (8 (218{val={}) (21 (7 (2 (801{val=sample}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=random}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=System}) (235{val=.}) (802{val=arraycopy}) (214{val=(}) (800{val=seed}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=v}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=min}) (214{val=(}) (40{val=seed.length}) (234{val=,}) (40{val=v.length}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=expected}) (204{val==}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=period}) (215{val=)})) (201{val=-}) (800{val=delta}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=shift}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=min}) (214{val=(}) (800{val=aTwos}) (234{val=,}) (800{val=bTwos}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=xabs}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (2 (801{val=v}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=shift}) (204{val==}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=max}) (214{val=(}) (32 (800{val=numerator}) (235{val=.}) (802{val=bitLength}) (216{val=()})) (234{val=,}) (32 (800{val=denominator}) (235{val=.}) (802{val=bitLength}) (216{val=()})) (215{val=)})) (201{val=-}) (32 (800{val=FastMath}) (235{val=.}) (802{val=getExponent}) (214{val=(}) (40{val=Float.MAX_VALUE}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=shift}) (204{val==}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=max}) (214{val=(}) (32 (800{val=numerator}) (235{val=.}) (802{val=bitLength}) (216{val=()})) (234{val=,}) (32 (800{val=denominator}) (235{val=.}) (802{val=bitLength}) (216{val=()})) (215{val=)})) (201{val=-}) (32 (800{val=FastMath}) (235{val=.}) (802{val=getExponent}) (214{val=(}) (40{val=Double.MAX_VALUE}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=denom}) (204{val==}) (16 (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=val}) (215{val=)})) (230{val=<}) (800{val=EPS_MIN})) (233{val=?}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=EPS_MIN})) (226{val=:}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=val})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=k}) (204{val==}) (11 (214{val=(}) (39{val=int}) (215{val=)}) (32 (800{val=FastMath}) (235{val=.}) (802{val=ceil}) (214{val=(}) (27 (800{val=n}) (202{val=*}) (800{val=d})) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=k}) (204{val==}) (11 (214{val=(}) (39{val=int}) (215{val=)}) (32 (800{val=FastMath}) (235{val=.}) (802{val=ceil}) (214{val=(}) (27 (800{val=n}) (202{val=*}) (800{val=d})) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=k}) (204{val==}) (11 (214{val=(}) (39{val=int}) (215{val=)}) (32 (800{val=FastMath}) (235{val=.}) (802{val=ceil}) (214{val=(}) (27 (800{val=n}) (202{val=*}) (800{val=d})) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (34{val=NUMBER_CONSTANT}) (201{val=-}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (201{val=-}) (800{val=d})) (234{val=,}) (800{val=n}) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=err}) (204{val==}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (800{val=actual}) (201{val=-}) (800{val=expected})) (215{val=)})) (203{val=/}) (32 (800{val=Math}) (235{val=.}) (802{val=ulp}) (214{val=(}) (800{val=expected}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=denom}) (204{val==}) (16 (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=val}) (215{val=)})) (230{val=<}) (800{val=EPS_MIN})) (233{val=?}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=EPS_MIN})) (226{val=:}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=val})))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (800{val=x}) (215{val=)})) (201{val=-}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (40{val=Math.PI}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=Fraction})) (214{val=(}) (27 (36 (214{val=(}) (27 (36 (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=w}) (215{val=)})) (202{val=*}) (800{val=d})) (215{val=)})) (200{val=+}) (800{val=n})) (215{val=)})) (202{val=*}) (32 (800{val=MathUtils}) (235{val=.}) (802{val=copySign}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=w}) (215{val=)}))) (234{val=,}) (800{val=d}) (215{val=)})))
(AST_ROOT_SC2NF (21 (7 (800{val=num}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=num}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=delta}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=expected}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=delta}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=expected}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=delta}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=expected}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=delta}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=expected}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=delta}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=expected}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=delta}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=expected}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=delta}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=expected}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=h}) (237{val=+=}) (27 (800{val=p_i}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log}) (214{val=(}) (800{val=p_i}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=h}) (237{val=+=}) (27 (800{val=p_ij}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log}) (214{val=(}) (800{val=p_ij}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (800{val=sumExpected}) (201{val=-}) (800{val=sumObserved})) (215{val=)})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=ratio}) (204{val==}) (27 (800{val=sumObserved}) (203{val=/}) (800{val=sumExpected}))) (227{val=;})) (21 (7 (800{val=rescale}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=delta}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=expected}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=delta}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=expected}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=delta}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=expected}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=delta}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=expected}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=delta}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=expected}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=double}) (802{val=estimateRegressionStandardError}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (32 (802{val=estimateErrorVariance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (27 (800{val=v}) (201{val=-}) (32 (800{val=randomData}) (235{val=.}) (802{val=nextUniform}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (215{val=)})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=System}) (235{val=.}) (802{val=arraycopy}) (214{val=(}) (800{val=seed}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=rsl}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=min}) (214{val=(}) (800{val=seedLen}) (234{val=,}) (800{val=rslLen}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (2 (801{val=d}) (221{val=[}) (800{val=col}) (222{val=]})) (215{val=)})) (230{val=<}) (2 (801{val=tol}) (221{val=[}) (800{val=col}) (222{val=]}))))
(AST_ROOT_SC2NF (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (2 (801{val=d}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)})) (230{val=<}) (2 (801{val=tol}) (221{val=[}) (800{val=i}) (222{val=]}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=result}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=Erf}) (235{val=.}) (802{val=erfc}) (214{val=(}) (27 (2 (2 (801{val=ref}) (221{val=[}) (800{val=i}) (222{val=]})) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=originalDelta}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=random}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=gn}) (204{val==}) (27 (800{val=factor1}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log}) (214{val=(}) (800{val=qExp1}) (215{val=)})) (202{val=*}) (800{val=oneOverN}))) (227{val=;})))
(AST_ROOT_SC2NF (1 (218{val={}) (31 (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=x})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=x}) (215{val=)}))) (215{val=)}))) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=UnivariateFunction})) (216{val=()}) (1 (218{val={}) (31 (83{val=public}) (39{val=double}) (802{val=value}) (214{val=(}) (44 (39{val=double}) (800{val=x})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (800{val=x}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=minValue}) (204{val==}) (800{val=entry})) (227{val=;})) (21 (7 (800{val=minPos}) (204{val==}) (800{val=i})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=pivotSelection}) (236{val===}) (40{val=PivotSelectionRule.BLAND})) (249{val=&&}) (32 (802{val=isValidPivotColumn}) (214{val=(}) (800{val=tableau}) (234{val=,}) (800{val=i}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=break;}) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=pivotSelection})) (204{val==}) (40{val=PivotSelectionRule.DANTZIG})) (227{val=;})))
(AST_ROOT_SC2NF (59 (800{val=solution}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=SimplexSolver})) (216{val=()})) (235{val=.}) (802{val=optimize}) (214{val=(}) (800{val=DEFAULT_MAX_ITER}) (234{val=,}) (800{val=f}) (234{val=,}) (14 (304{val=new}) (43 (801{val=LinearConstraintSet})) (214{val=(}) (800{val=constraints}) (215{val=)})) (234{val=,}) (40{val=GoalType.MINIMIZE}) (234{val=,}) (14 (304{val=new}) (43 (801{val=NonNegativeConstraint})) (214{val=(}) (9{val=true}) (215{val=)})) (234{val=,}) (40{val=PivotSelectionRule.BLAND}) (215{val=)}))))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=f}) (234{val=,}) (800{val=constraints}) (234{val=,}) (800{val=goalType}) (234{val=,}) (800{val=restrictToNonNegative}) (234{val=,}) (800{val=epsilon}) (234{val=,}) (40{val=SimplexSolver.DEFAULT_ULPS}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=Precision}) (235{val=.}) (802{val=compareTo}) (214{val=(}) (800{val=entry}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=cutOff}) (215{val=)})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=S})) (231{val=>})) (800{val=point})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=Euclidean2D})) (231{val=>})) (800{val=point})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=Euclidean2D})) (231{val=>})) (800{val=point})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=Euclidean2D})) (231{val=>})) (800{val=point})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=Euclidean1D})) (231{val=>})) (800{val=point})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=Euclidean2D})) (231{val=>})) (800{val=point})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=S})) (231{val=>})) (800{val=point})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=Euclidean3D})) (231{val=>})) (800{val=point})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=Euclidean3D})) (231{val=>})) (800{val=point})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=Euclidean1D})) (231{val=>})) (800{val=point})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=Euclidean3D})) (231{val=>})) (800{val=point})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=S})) (231{val=>})) (800{val=point})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (43 (800{val=Vector2D})) (59 (800{val=v2}) (204{val==}) (11 (214{val=(}) (43 (800{val=Vector2D})) (215{val=)}) (800{val=v}))) (227{val=;})) (41 (329{val=return}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=linearCombination}) (214{val=(}) (800{val=x}) (234{val=,}) (40{val=v2.x}) (234{val=,}) (800{val=y}) (234{val=,}) (40{val=v2.y}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=S})) (231{val=>})) (800{val=barycenter})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=S})) (231{val=>})) (800{val=point})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=S})) (231{val=>})) (800{val=point})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=Euclidean1D})) (231{val=>})) (800{val=point})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=ArcsSet})) (802{val=wholeSpace}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ArcsSet})) (214{val=(}) (800{val=tolerance}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=Vector3D}) (235{val=.}) (802{val=angle}) (214{val=(}) (800{val=pole}) (234{val=,}) (800{val=direction}) (215{val=)})) (201{val=-}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (40{val=FastMath.PI}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=SphericalPolygonsSet})) (802{val=wholeSpace}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=SphericalPolygonsSet})) (214{val=(}) (800{val=tolerance}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=SubCircle})) (802{val=wholeHyperplane}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=SubCircle})) (214{val=(}) (315{val=this}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ArcsSet})) (214{val=(}) (800{val=tolerance}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (40{val=circle.pole}) (234{val=,}) (40{val=circle.x}) (234{val=,}) (40{val=circle.y}) (234{val=,}) (40{val=circle.tolerance}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ArcsSet})) (214{val=(}) (800{val=tree}) (234{val=,}) (800{val=tolerance}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Vector1D})) (59 (800{val=x}) (204{val==}) (32 (800{val=thisLine}) (235{val=.}) (802{val=toSubSpace}) (214{val=(}) (11 (214{val=(}) (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=Euclidean2D})) (231{val=>})) (215{val=)}) (800{val=crossing})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Vector1D})) (59 (800{val=x}) (204{val==}) (32 (800{val=thisLine}) (235{val=.}) (802{val=toSubSpace}) (214{val=(}) (11 (214{val=(}) (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=Euclidean2D})) (231{val=>})) (215{val=)}) (800{val=crossing})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=offset}) (204{val==}) (32 (800{val=plane}) (235{val=.}) (802{val=getOffset}) (214{val=(}) (11 (214{val=(}) (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=Euclidean3D})) (231{val=>})) (215{val=)}) (800{val=point})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=Euclidean2D})) (231{val=>})) (800{val=p})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=Euclidean1D})) (231{val=>})) (800{val=p})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=Euclidean3D})) (231{val=>})) (800{val=v})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Vector3D})) (59 (800{val=point}) (204{val==}) (32 (800{val=line}) (235{val=.}) (802{val=toSpace}) (214{val=(}) (11 (214{val=(}) (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=Euclidean1D})) (231{val=>})) (215{val=)}) (40{val=Vector1D.ZERO})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=SubChord})) (802{val=copySelf}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=SubChord})) (214{val=(}) (32 (800{val=chord}) (235{val=.}) (802{val=copySelf}) (216{val=()})) (234{val=,}) (800{val=limits}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=upper})) (204{val==}) (27 (40{val=MathUtils.TWO_PI}) (200{val=+}) (800{val=lower}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Arc})) (59 (800{val=arc}) (204{val==}) (14 (304{val=new}) (43 (801{val=Arc})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=nextAfter}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=Double.POSITIVE_INFINITY}) (215{val=)})) (234{val=,}) (40{val=Precision.EPSILON}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=buildNew}) (214{val=(}) (32 (800{val=hyperplane}) (235{val=.}) (802{val=copySelf}) (216{val=()})) (234{val=,}) (800{val=remainingRegion}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Segment})) (59 (800{val=segment}) (204{val==}) (14 (304{val=new}) (43 (801{val=Segment})) (214{val=(}) (800{val=p1}) (234{val=,}) (800{val=p2}) (234{val=,}) (14 (304{val=new}) (43 (801{val=Line})) (214{val=(}) (800{val=p1}) (234{val=,}) (800{val=p2}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=EdgesBuilder})) (59 (800{val=visitor}) (204{val==}) (14 (304{val=new}) (43 (801{val=EdgesBuilder})) (214{val=(}) (800{val=root}) (234{val=,}) (32 (802{val=getTolerance}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=SphericalPolygonsSet})) (214{val=(}) (800{val=tree}) (234{val=,}) (32 (802{val=getTolerance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=boundary}) (234{val=,}) (800{val=tolerance}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=tree}) (234{val=,}) (800{val=tolerance}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=SphericalPolygonsSet}) (214{val=(}) (44 (83{val=final}) (39{val=double}) (800{val=tolerance})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=tolerance}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (32 (802{val=getRemainingRegion}) (216{val=()})) (235{val=.}) (802{val=side}) (214{val=(}) (14 (304{val=new}) (43 (801{val=OrientedPoint})) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=direct}) (234{val=,}) (32 (800{val=thisLine}) (235{val=.}) (802{val=getTolerance}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=SubLine})) (802{val=wholeLine}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=SubLine})) (214{val=(}) (315{val=this}) (234{val=,}) (14 (304{val=new}) (43 (801{val=IntervalsSet})) (214{val=(}) (800{val=tolerance}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=distance}) (214{val=(}) (800{val=p}) (215{val=)})) (230{val=<}) (800{val=tolerance})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=BSPTree})) (230{val=<}) (43 (800{val=S})) (231{val=>})) (59 (800{val=cell}) (204{val==}) (32 (800{val=node}) (235{val=.}) (802{val=getCell}) (214{val=(}) (800{val=point}) (234{val=,}) (800{val=tolerance}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=PolyhedronsSet})) (214{val=(}) (800{val=tree}) (234{val=,}) (32 (802{val=getTolerance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=IntervalsSet})) (802{val=wholeSpace}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=IntervalsSet})) (214{val=(}) (800{val=tolerance}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=add}) (214{val=(}) (14 (304{val=new}) (43 (801{val=NestedLoops})) (214{val=(}) (800{val=bLoop}) (234{val=,}) (800{val=tolerance}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=OrientedPoint})) (214{val=(}) (800{val=newLoc}) (234{val=,}) (32 (800{val=op}) (235{val=.}) (802{val=isDirect}) (216{val=()})) (234{val=,}) (40{val=originalLine.tolerance}) (215{val=)})) (235{val=.}) (802{val=wholeHyperplane}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (32 (802{val=getOffset}) (214{val=(}) (800{val=p}) (215{val=)})) (215{val=)})) (230{val=<}) (800{val=tolerance})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=PolygonsSet})) (802{val=wholeSpace}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=PolygonsSet})) (214{val=(}) (800{val=tolerance}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=SubLine})) (802{val=wholeHyperplane}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=SubLine})) (214{val=(}) (315{val=this}) (234{val=,}) (14 (304{val=new}) (43 (801{val=IntervalsSet})) (214{val=(}) (800{val=tolerance}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=d}) (215{val=)})) (230{val=<}) (800{val=tolerance})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=PolygonsSet})) (214{val=(}) (800{val=tree}) (234{val=,}) (32 (802{val=getTolerance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=line}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=line}) (204{val==}) (14 (304{val=new}) (43 (801{val=Line})) (214{val=(}) (32 (800{val=start}) (235{val=.}) (802{val=getLocation}) (216{val=()})) (234{val=,}) (32 (800{val=end}) (235{val=.}) (802{val=getLocation}) (216{val=()})) (234{val=,}) (800{val=hyperplaneThickness}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ArcsSet})) (214{val=(}) (800{val=tree}) (234{val=,}) (32 (802{val=getTolerance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=LimitAngle})) (214{val=(}) (14 (304{val=new}) (43 (801{val=S1Point})) (214{val=(}) (800{val=alpha}) (215{val=)})) (234{val=,}) (9{val=true}) (234{val=,}) (32 (802{val=getTolerance}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=wholeHyperplane}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=LimitAngle})) (214{val=(}) (14 (304{val=new}) (43 (801{val=S1Point})) (214{val=(}) (800{val=alpha}) (215{val=)})) (234{val=,}) (9{val=false}) (234{val=,}) (32 (802{val=getTolerance}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=wholeHyperplane}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=boundary}) (234{val=,}) (800{val=tolerance}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=tree}) (234{val=,}) (800{val=tolerance}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=ArcsSet}) (214{val=(}) (44 (83{val=final}) (39{val=double}) (800{val=tolerance})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=tolerance}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Segment})) (59 (800{val=segment}) (204{val==}) (14 (304{val=new}) (43 (801{val=Segment})) (214{val=(}) (800{val=start}) (234{val=,}) (800{val=end}) (234{val=,}) (14 (304{val=new}) (43 (801{val=Line})) (214{val=(}) (800{val=start}) (234{val=,}) (800{val=end}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=Line})) (214{val=(}) (800{val=start}) (234{val=,}) (800{val=end}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=wholeHyperplane}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=PolygonsSet})) (214{val=(}) (800{val=edges}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=BoundaryProjector})) (59 (800{val=projector}) (204{val==}) (14 (304{val=new}) (43 (801{val=BoundaryProjector})) (214{val=(}) (32 (800{val=polyhedronsSet}) (235{val=.}) (802{val=getTolerance}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=PolyhedronsSet})) (802{val=wholeSpace}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=PolyhedronsSet})) (214{val=(}) (800{val=tolerance}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=SubPlane})) (802{val=wholeHyperplane}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=SubPlane})) (214{val=(}) (315{val=this}) (234{val=,}) (14 (304{val=new}) (43 (801{val=PolygonsSet})) (214{val=(}) (800{val=tolerance}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Plane})) (59 (800{val=plane}) (204{val==}) (14 (304{val=new}) (43 (801{val=Plane})) (214{val=(}) (32 (800{val=origin}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=translation}) (215{val=)})) (234{val=,}) (800{val=w}) (234{val=,}) (800{val=tolerance}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PolyhedronsSet})) (59 (800{val=tree}) (204{val==}) (14 (304{val=new}) (43 (801{val=PolyhedronsSet})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=IntervalsSet})) (214{val=(}) (800{val=tree}) (234{val=,}) (32 (802{val=getTolerance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=boundary}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (14 (304{val=new}) (43 (801{val=LimitAngle})) (214{val=(}) (14 (304{val=new}) (43 (801{val=S1Point})) (214{val=(}) (27 (40{val=MathUtils.TWO_PI}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (234{val=,}) (9{val=true}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=wholeHyperplane}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (11 (214{val=(}) (43 (800{val=Boolean})) (215{val=)}) (32 (32 (802{val=getFirstLeaf}) (214{val=(}) (32 (802{val=getTree}) (214{val=(}) (9{val=false}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getAttribute}) (216{val=()}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=projection}) (235{val=.}) (802{val=getOriginal}) (216{val=()})) (236{val===}) (800{val=v})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Iterable})) (230{val=<}) (43 (800{val=P})) (231{val=>})) (800{val=points})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Iterable})) (230{val=<}) (43 (800{val=P})) (231{val=>})) (800{val=points})))
(AST_ROOT_SC2NF (60 (43 (801{val=ConvexHull2D})) (59 (800{val=hull}) (204{val==}) (32 (800{val=generator}) (235{val=.}) (802{val=generate}) (214{val=(}) (32 (802{val=reducePoints}) (214{val=(}) (800{val=points}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=GrahamScan})) (59 (800{val=generator}) (204{val==}) (14 (304{val=new}) (43 (801{val=GrahamScan})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RandomGenerator})) (59 (800{val=random}) (204{val==}) (14 (304{val=new}) (43 (801{val=MersenneTwister})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Before})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=generator}) (204{val==}) (32 (802{val=createConvexHullGenerator}) (214{val=(}) (9{val=false}) (215{val=)}))) (227{val=;})) (21 (7 (800{val=random}) (204{val==}) (14 (304{val=new}) (43 (801{val=MersenneTwister})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Iterable})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (800{val=points})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (27 (22 (32 (800{val=hull}) (235{val=.}) (802{val=getVertices}) (216{val=()})) (235{val=.}) (800{val=length})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ConvexHullGenerator2D})) (59 (800{val=generator}) (204{val==}) (14 (304{val=new}) (43 (801{val=MonotoneChain})) (214{val=(}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (5 (43 (801{val=Segment})) (85{val=[]})) (802{val=getLineSegments}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=retrieveLineSegments}) (216{val=()})) (235{val=.}) (802{val=clone}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=EnclosingBall})) (230{val=<}) (43 (800{val=Sphere2D})) (234{val=,}) (43 (800{val=S2Point})) (231{val=>})) (59 (800{val=cap}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=SphericalCapGenerator})) (214{val=(}) (40{val=Vector3D.PLUS_I}) (215{val=)})) (235{val=.}) (802{val=ballOnSupport}) (214{val=(}) (800{val=support}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (59 (800{val=cap}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=SphericalCapGenerator})) (214{val=(}) (14 (304{val=new}) (43 (801{val=Vector3D})) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=ballOnSupport}) (214{val=(}) (800{val=support}) (215{val=)}))))
(AST_ROOT_SC2NF (59 (800{val=cap}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=SphericalCapGenerator})) (214{val=(}) (14 (304{val=new}) (43 (801{val=Vector3D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=ballOnSupport}) (214{val=(}) (800{val=support}) (215{val=)}))))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=EnclosingBall})) (230{val=<}) (43 (800{val=Sphere2D})) (234{val=,}) (43 (800{val=S2Point})) (231{val=>})) (59 (800{val=cap}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=SphericalCapGenerator})) (214{val=(}) (40{val=Vector3D.PLUS_K}) (215{val=)})) (235{val=.}) (802{val=ballOnSupport}) (214{val=(}) (800{val=support}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=EnclosingBall})) (230{val=<}) (43 (800{val=Sphere2D})) (234{val=,}) (43 (800{val=S2Point})) (231{val=>})) (59 (800{val=cap}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=SphericalCapGenerator})) (214{val=(}) (40{val=Vector3D.PLUS_K}) (215{val=)})) (235{val=.}) (802{val=ballOnSupport}) (214{val=(}) (800{val=support}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=EnclosingBall})) (230{val=<}) (43 (800{val=Sphere2D})) (234{val=,}) (43 (800{val=S2Point})) (231{val=>})) (214{val=(}) (14 (304{val=new}) (43 (800{val=S2Point})) (214{val=(}) (800{val=inside}) (215{val=)})) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=ConvexHullGenerator2D})) (802{val=createConvexHullGenerator}) (214{val=(}) (44 (39{val=boolean}) (800{val=includeCollinearPoints})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=MonotoneChain})) (214{val=(}) (800{val=includeCollinearPoints}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (32 (802{val=getOptimizer}) (216{val=()})) (235{val=.}) (802{val=optimize}) (214{val=(}) (32 (802{val=getProblem}) (214{val=(}) (800{val=points}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getPoint}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=boolean}) (800{val=useLU})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (800{val=LevenbergMarquardtOptimizer})) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (59 (800{val=optimizer}) (204{val==}) (32 (32 (32 (32 (32 (14 (304{val=new}) (43 (800{val=LevenbergMarquardtOptimizer})) (216{val=()})) (235{val=.}) (802{val=withInitialStepBoundFactor}) (214{val=(}) (800{val=initialStepBoundFactor}) (215{val=)})) (235{val=.}) (802{val=withCostRelativeTolerance}) (214{val=(}) (800{val=costRelativeTolerance}) (215{val=)})) (235{val=.}) (802{val=withParameterRelativeTolerance}) (214{val=(}) (800{val=parRelativeTolerance}) (215{val=)})) (235{val=.}) (802{val=withOrthoTolerance}) (214{val=(}) (800{val=orthoTolerance}) (215{val=)})) (235{val=.}) (802{val=withRankingThreshold}) (214{val=(}) (40{val=Precision.SAFE_MIN}) (215{val=)}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=LeastSquaresProblemImpl})) (214{val=(}) (800{val=model}) (234{val=,}) (800{val=jacobian}) (234{val=,}) (800{val=observed}) (234{val=,}) (800{val=start}) (234{val=,}) (800{val=checker}) (234{val=,}) (800{val=maxEvaluations}) (234{val=,}) (800{val=maxIterations}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=RealMatrix})) (802{val=computeJacobian}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=jacobian})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (5 (39{val=double}) (85{val=[]})) (802{val=computeValue}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (22 (315{val=this}) (235{val=.}) (800{val=values})) (235{val=.}) (802{val=toArray}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Test})) (83{val=public}) (39{val=void}) (802{val=testGaussNewtonQR}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=check}) (214{val=(}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (40{val=Decomposition.QR}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Test})) (83{val=public}) (39{val=void}) (802{val=testGaussNewtonLU}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=check}) (214{val=(}) (14 (304{val=new}) (43 (801{val=GaussNewtonOptimizer})) (214{val=(}) (40{val=Decomposition.LU}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=Evaluation})) (231{val=>})) (800{val=checker})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=Evaluation})) (231{val=>})) (800{val=checker})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=Evaluation})) (231{val=>})) (800{val=checker})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=Evaluation})) (231{val=>})) (800{val=checker})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=ConvergenceChecker})) (230{val=<}) (43 (800{val=Evaluation})) (231{val=>})) (800{val=checker})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (32 (14 (304{val=new}) (43 (801{val=LeastSquaresBuilder})) (216{val=()})) (235{val=.}) (802{val=checkerPair}) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=maxEvaluations}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=maxIterations}) (214{val=(}) (32 (802{val=getMaxIterations}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (32 (32 (802{val=builder}) (214{val=(}) (800{val=circle}) (215{val=)})) (235{val=.}) (802{val=checkerPair}) (214{val=(}) (14 (304{val=new}) (43 (801{val=SimpleVectorValueChecker})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=maxIterations}) (214{val=(}) (40{val=Integer.MAX_VALUE}) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (800{val=function}) (235{val=.}) (802{val=checkTheoreticalMinParams}) (214{val=(}) (32 (32 (800{val=optimum}) (235{val=.}) (802{val=getPoint}) (216{val=()})) (235{val=.}) (802{val=toArray}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=RealVector})) (800{val=point})))
(AST_ROOT_SC2NF (31 (43 (801{val=RealVector})) (802{val=computeValue}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=RealVector})) (800{val=point})))
(AST_ROOT_SC2NF (31 (43 (801{val=RealVector})) (802{val=getStart}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=optimum}) (235{val=.}) (802{val=computeRMS}) (216{val=()})) (234{val=,}) (800{val=TOl}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=RealVector})) (800{val=point})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=RealVector})) (800{val=point})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=RealVector})) (800{val=start})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=RealVector})) (800{val=target})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=RealVector})) (802{val=computeValue}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (22 (315{val=this}) (235{val=.}) (800{val=weightSqrt})) (235{val=.}) (802{val=operate}) (214{val=(}) (32 (800{val=unweighted}) (235{val=.}) (802{val=computeValue}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NonPositiveDefiniteMatrixException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=ConvergenceException})) (214{val=(}) (40{val=LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM}) (234{val=,}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=SingularMatrixException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=ConvergenceException})) (214{val=(}) (40{val=LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM}) (234{val=,}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=SingularMatrixException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=ConvergenceException})) (214{val=(}) (40{val=LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM}) (234{val=,}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=optimum}) (235{val=.}) (802{val=getRMS}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=optimum}) (235{val=.}) (802{val=getRMS}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=optimum}) (235{val=.}) (802{val=getRMS}) (216{val=()})) (234{val=,}) (800{val=TOl}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=optimum}) (235{val=.}) (802{val=getRMS}) (216{val=()})) (234{val=,}) (800{val=TOl}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=optimum}) (235{val=.}) (802{val=getRMS}) (216{val=()})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=optimum}) (235{val=.}) (802{val=getRMS}) (216{val=()})) (234{val=,}) (800{val=TOl}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=optimum}) (235{val=.}) (802{val=getRMS}) (216{val=()})) (234{val=,}) (800{val=TOl}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=optimum}) (235{val=.}) (802{val=getRMS}) (216{val=()})) (234{val=,}) (800{val=TOl}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=optimum}) (235{val=.}) (802{val=getRMS}) (216{val=()})) (234{val=,}) (800{val=TOl}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=optimum}) (235{val=.}) (802{val=getRMS}) (216{val=()})) (234{val=,}) (800{val=TOl}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=optimum}) (235{val=.}) (802{val=getRMS}) (216{val=()})) (234{val=,}) (800{val=TOl}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=RealVector})) (802{val=getValue}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=cost}) (204{val==}) (32 (32 (800{val=lsp}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=params}) (215{val=)})) (235{val=.}) (802{val=getCost}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealVector})) (59 (800{val=sigma}) (204{val==}) (32 (32 (800{val=lsp}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=regress}) (215{val=)})) (235{val=.}) (802{val=getSigma}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealVector})) (59 (800{val=sigma}) (204{val==}) (32 (32 (800{val=lsp}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=init}) (215{val=)})) (235{val=.}) (802{val=getSigma}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=function}) (235{val=.}) (802{val=checkTheoreticalMinCost}) (214{val=(}) (32 (800{val=optimum}) (235{val=.}) (802{val=getRMS}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=asymptoticStandardErrorFound}) (204{val==}) (32 (32 (800{val=optimum}) (235{val=.}) (802{val=getSigma}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=toArray}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RealMatrix})) (59 (800{val=covarMatrix}) (204{val==}) (32 (800{val=optimum}) (235{val=.}) (802{val=getCovariances}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=actual}) (204{val==}) (32 (32 (800{val=lsp}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (32 (800{val=lsp}) (235{val=.}) (802{val=getStart}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=getRMS}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=cost}) (204{val==}) (32 (32 (800{val=lsp}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (32 (800{val=lsp}) (235{val=.}) (802{val=getStart}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=getCost}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertArrayEquals}) (214{val=(}) (32 (32 (800{val=evaluation}) (235{val=.}) (802{val=getResiduals}) (216{val=()})) (235{val=.}) (802{val=toArray}) (216{val=()})) (234{val=,}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (219{val=}}))) (234{val=,}) (40{val=Precision.EPSILON}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertNotSame}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=v1}) (235{val=.}) (802{val=getDataRef}) (216{val=()})) (234{val=,}) (32 (800{val=v_copy}) (235{val=.}) (802{val=toArray}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=LocalLeastSquaresProblem})) (214{val=(}) (800{val=model}) (234{val=,}) (800{val=observed}) (234{val=,}) (800{val=start}) (234{val=,}) (800{val=checker}) (234{val=,}) (800{val=maxEvaluations}) (234{val=,}) (800{val=maxIterations}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=TOl}) (234{val=,}) (32 (800{val=optimum}) (235{val=.}) (802{val=getResiduals}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=line}) (204{val==}) (14 (304{val=new}) (43 (801{val=LineSearch})) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=lineRel}) (234{val=,}) (800{val=lineAbs}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=line}) (204{val==}) (14 (304{val=new}) (43 (801{val=LineSearch})) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=lineRel}) (234{val=,}) (800{val=lineAbs}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=updateFormula}) (234{val=,}) (800{val=checker}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (14 (304{val=new}) (43 (801{val=IdentityPreconditioner})) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=penalty}) (237{val=+=}) (800{val=diff})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=FitnessFunction}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=isRepairMode}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=newSampleData}) (214{val=(}) (800{val=data}) (234{val=,}) (800{val=nobs}) (234{val=,}) (800{val=nvars}) (215{val=)})) (227{val=;})) (21 (7 (800{val=qr}) (204{val==}) (14 (304{val=new}) (43 (801{val=QRDecomposition})) (214{val=(}) (32 (802{val=getX}) (216{val=()})) (234{val=,}) (800{val=threshold}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=RealVector})) (802{val=getResiduals}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=residuals}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=RealVector})) (802{val=getPoint}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=point}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=RealMatrix})) (802{val=getJacobian}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=jacobian}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (32 (800{val=randomData}) (235{val=.}) (802{val=getRandomGenerator}) (216{val=()})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=RealDistribution})) (802{val=getKernel}) (214{val=(}) (44 (43 (801{val=SummaryStatistics})) (800{val=bStats})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ConstantRealDistribution})) (214{val=(}) (32 (800{val=bStats}) (235{val=.}) (802{val=getMean}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (32 (14 (304{val=new}) (43 (801{val=Median})) (216{val=()})) (235{val=.}) (802{val=withEstimationType}) (214{val=(}) (800{val=type}) (215{val=)})) (235{val=.}) (802{val=withNaNStrategy}) (214{val=(}) (800{val=strategy}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=result}) (204{val==}) (32 (32 (32 (14 (304{val=new}) (43 (801{val=Percentile})) (214{val=(}) (800{val=p}) (215{val=)})) (235{val=.}) (802{val=withEstimationType}) (214{val=(}) (800{val=e}) (215{val=)})) (235{val=.}) (802{val=withNaNStrategy}) (214{val=(}) (800{val=nanStrategy}) (215{val=)})) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=data}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (14 (304{val=new}) (43 (801{val=Percentile})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=withEstimationType}) (214{val=(}) (40{val=Percentile.EstimationType.LEGACY}) (215{val=)})) (235{val=.}) (802{val=withNaNStrategy}) (214{val=(}) (500{val=null}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (32 (14 (304{val=new}) (43 (801{val=Percentile})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=withEstimationType}) (214{val=(}) (40{val=Percentile.EstimationType.R_9}) (215{val=)})) (235{val=.}) (802{val=withNaNStrategy}) (214{val=(}) (40{val=NaNStrategy.FAILED}) (215{val=)})) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=specialValues}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (32 (14 (304{val=new}) (43 (801{val=Percentile})) (214{val=(}) (800{val=quantile}) (215{val=)})) (235{val=.}) (802{val=withEstimationType}) (214{val=(}) (800{val=type}) (215{val=)})) (235{val=.}) (802{val=withNaNStrategy}) (214{val=(}) (800{val=nanStrategy}) (215{val=)})) (235{val=.}) (802{val=withPivotingStrategy}) (214{val=(}) (800{val=pivotingStrategy}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=BicubicSplineInterpolator})) (59 (800{val=bsi}) (204{val==}) (14 (304{val=new}) (43 (801{val=BicubicSplineInterpolator})) (214{val=(}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=BicubicSplineInterpolatingFunction})) (214{val=(}) (800{val=xval}) (234{val=,}) (800{val=yval}) (234{val=,}) (800{val=fval}) (234{val=,}) (800{val=dFdX}) (234{val=,}) (800{val=dFdY}) (234{val=,}) (800{val=d2FdXdY}) (234{val=,}) (800{val=initializeDerivatives}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=BigFraction})) (231{val=>})) (59 (800{val=H}) (204{val==}) (32 (315{val=this}) (235{val=.}) (802{val=createExactH}) (214{val=(}) (800{val=d}) (234{val=,}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Percentile})) (59 (800{val=p}) (204{val==}) (32 (802{val=getUnivariateStatistic}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Percentile})) (59 (800{val=p}) (204{val==}) (32 (802{val=getUnivariateStatistic}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Percentile})) (59 (800{val=p}) (204{val==}) (32 (802{val=getUnivariateStatistic}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (83{val=final}) (43 (40{val=Percentile.EstimationType})) (800{val=e})) (226{val=:}) (32 (40{val=Percentile.EstimationType}) (235{val=.}) (802{val=values}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=reset}) (214{val=(}) (800{val=quantile}) (234{val=,}) (800{val=e}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testWeightedConsistency}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (83{val=final}) (43 (40{val=Percentile.EstimationType})) (800{val=e})) (226{val=:}) (32 (40{val=Percentile.EstimationType}) (235{val=.}) (802{val=values}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=reset}) (214{val=(}) (800{val=quantile}) (234{val=,}) (800{val=e}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testEvaluateArraySegment}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (83{val=final}) (43 (40{val=Percentile.EstimationType})) (800{val=e})) (226{val=:}) (32 (40{val=Percentile.EstimationType}) (235{val=.}) (802{val=values}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=reset}) (214{val=(}) (800{val=quantile}) (234{val=,}) (800{val=e}) (215{val=)})) (227{val=;})) (21 (32 (802{val=testEvaluateArraySegmentWeighted}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UnivariateStatistic})) (59 (800{val=percentile}) (204{val==}) (32 (802{val=getUnivariateStatistic}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UnivariateStatistic})) (59 (800{val=percentile}) (204{val==}) (32 (802{val=getUnivariateStatistic}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Percentile})) (59 (800{val=percentile}) (204{val==}) (14 (304{val=new}) (43 (801{val=Percentile})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Median})) (214{val=(}) (32 (802{val=getEstimationType}) (216{val=()})) (234{val=,}) (800{val=newNaNStrategy}) (234{val=,}) (32 (802{val=getKthSelector}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Median})) (214{val=(}) (800{val=newEstimationType}) (234{val=,}) (32 (802{val=getNaNStrategy}) (216{val=()})) (234{val=,}) (32 (802{val=getKthSelector}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (27 (40{val=work.length}) (236{val===}) (34{val=NUMBER_CONSTANT})) (233{val=?}) (40{val=Double.NaN}) (226{val=:}) (32 (800{val=estimationType}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=work}) (234{val=,}) (800{val=pivotsHeap}) (234{val=,}) (800{val=p}) (234{val=,}) (800{val=kthSelector}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=kthSelector}) (204{val==}) (32 (800{val=original}) (235{val=.}) (802{val=getKthSelector}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=Umin}) (204{val==}) (27 (27 (11 (214{val=(}) (39{val=long}) (215{val=)}) (40{val=x.length})) (202{val=*}) (40{val=y.length})) (201{val=-}) (800{val=Umax}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=LazyUnweightedEvaluation})) (214{val=(}) (11 (214{val=(}) (43 (800{val=ValueAndJacobianFunction})) (215{val=)}) (800{val=model})) (234{val=,}) (800{val=target}) (234{val=,}) (800{val=p}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=ResizableDoubleArray})) (215{val=)}) (800{val=da})) (215{val=)})) (235{val=.}) (802{val=getContractionCriterion}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ResizableDoubleArray})) (59 (800{val=testDa}) (204{val==}) (14 (304{val=new}) (43 (801{val=ResizableDoubleArray})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=ResizableDoubleArray.ExpansionMode.ADDITIVE}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=testDa}) (204{val==}) (14 (304{val=new}) (43 (801{val=ResizableDoubleArray})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=ResizableDoubleArray.ExpansionMode.ADDITIVE}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ResizableDoubleArray})) (59 (800{val=testDa}) (204{val==}) (14 (304{val=new}) (43 (801{val=ResizableDoubleArray})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=ResizableDoubleArray.ExpansionMode.ADDITIVE}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RandomDataGenerator})) (59 (800{val=random}) (204{val==}) (14 (304{val=new}) (43 (801{val=RandomDataGenerator})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=empiricalDistribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=EmpiricalDistribution})) (214{val=(}) (800{val=binCount}) (234{val=,}) (32 (800{val=randomData}) (235{val=.}) (802{val=getRandomGenerator}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=randomData})) (204{val==}) (14 (304{val=new}) (43 (801{val=RandomDataGenerator})) (214{val=(}) (800{val=generator}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=randomData})) (204{val==}) (32 (800{val=randomData}) (235{val=.}) (802{val=getDelegate}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (36 (214{val=(}) (27 (40{val=MathUtils.PI_SQUARED}) (203{val=/}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (202{val=*}) (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (36 (214{val=(}) (27 (800{val=s}) (202{val=*}) (800{val=s})) (215{val=)}))) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=NormalDistribution})) (59 (800{val=standardNormal}) (204{val==}) (14 (304{val=new}) (43 (801{val=NormalDistribution})) (214{val=(}) (500{val=null}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=FDistribution})) (59 (800{val=fdist}) (204{val==}) (14 (304{val=new}) (43 (801{val=FDistribution})) (214{val=(}) (500{val=null}) (234{val=,}) (40{val=a.dfbg}) (234{val=,}) (40{val=a.dfwg}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=ChiSquaredDistribution})) (59 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=ChiSquaredDistribution})) (214{val=(}) (500{val=null}) (234{val=,}) (27 (11 (214{val=(}) (39{val=double}) (215{val=)}) (40{val=observed1.length})) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=ChiSquaredDistribution})) (59 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=ChiSquaredDistribution})) (214{val=(}) (500{val=null}) (234{val=,}) (27 (40{val=expected.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=ChiSquaredDistribution})) (59 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=ChiSquaredDistribution})) (214{val=(}) (500{val=null}) (234{val=,}) (27 (40{val=expected.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=NormalDistribution})) (59 (800{val=standardNormal}) (204{val==}) (14 (304{val=new}) (43 (801{val=NormalDistribution})) (214{val=(}) (500{val=null}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=BinomialDistribution})) (59 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=BinomialDistribution})) (214{val=(}) (500{val=null}) (234{val=,}) (800{val=numberOfTrials}) (234{val=,}) (800{val=probability}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=newXSampleData}) (214{val=(}) (800{val=x}) (215{val=)})) (227{val=;})) (21 (7 (800{val=qr}) (204{val==}) (14 (304{val=new}) (43 (801{val=QRDecomposition})) (214{val=(}) (32 (802{val=getX}) (216{val=()})) (234{val=,}) (800{val=threshold}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=t}) (235{val=.}) (802{val=insertInTree}) (214{val=(}) (800{val=parentTree}) (234{val=,}) (800{val=isPlusChild}) (234{val=,}) (14 (304{val=new}) (43 (801{val=VanishingToLeaf})) (214{val=(}) (9{val=true}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (800{val=MathArrays}) (235{val=.}) (802{val=linearCombination}) (214{val=(}) (800{val=sin}) (234{val=,}) (40{val=otherL.sin}) (234{val=,}) (800{val=cos}) (234{val=,}) (40{val=otherL.cos}) (215{val=)})) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
(AST_ROOT_SC2NF (59 (800{val=tree}) (204{val==}) (32 (32 (800{val=region1}) (235{val=.}) (802{val=getTree}) (214{val=(}) (9{val=false}) (215{val=)})) (235{val=.}) (802{val=merge}) (214{val=(}) (32 (800{val=region2}) (235{val=.}) (802{val=getTree}) (214{val=(}) (9{val=false}) (215{val=)})) (234{val=,}) (14 (304{val=new}) (43 (801{val=DifferenceMerger})) (214{val=(}) (800{val=region1}) (234{val=,}) (800{val=region2}) (215{val=)})) (215{val=)}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=unlinkReverse}) (216{val=()})) (227{val=;})) (21 (7 (800{val=originOffset}) (204{val==}) (800{val=offset})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=p}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=Double.NEGATIVE_INFINITY}) (227{val=;})) (219{val=}})) (322{val=else}) (25 (313{val=if}) (214{val=(}) (27 (800{val=p}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=Double.POSITIVE_INFINITY}) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=vals}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=b}) (234{val=,}) (40{val=b.length}) (215{val=)}))) (227{val=;})) (21 (7 (800{val=nVals}) (204{val==}) (800{val=n})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (40{val=org.apache.commons.math4.stat.inference.ChiSquareTest})) (59 (800{val=csti}) (204{val==}) (14 (304{val=new}) (43 (40{val=org.apache.commons.math4.stat.inference.ChiSquareTest})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (40{val=org.apache.commons.math4.stat.inference.ChiSquareTest})) (59 (800{val=csti}) (204{val==}) (14 (304{val=new}) (43 (40{val=org.apache.commons.math4.stat.inference.ChiSquareTest})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=cachedTransform}) (204{val==}) (32 (40{val=org.apache.commons.math4.geometry.euclidean.twod.Line}) (235{val=.}) (802{val=getTransform}) (214{val=(}) (800{val=at}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=cachedTransform}) (204{val==}) (32 (40{val=org.apache.commons.math4.geometry.euclidean.twod.Line}) (235{val=.}) (802{val=getTransform}) (214{val=(}) (800{val=at}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (40{val=org.apache.commons.math4.linear.SingularMatrixException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (27 (36 (214{val=(}) (27 (800{val=numIterations}) (230{val=<}) (800{val=maximumIterations})) (215{val=)})) (249{val=&&}) (36 (214{val=(}) (27 (27 (800{val=a}) (231{val=>}) (800{val=lowerBound})) (250{val=||}) (27 (800{val=b}) (230{val=<}) (800{val=upperBound}))) (215{val=)}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Well19937c}) (214{val=(}) (44 (39{val=long}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Well19937c}) (214{val=(}) (44 (39{val=int}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Well512a}) (214{val=(}) (44 (39{val=long}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Well512a}) (214{val=(}) (44 (39{val=int}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Well44497b}) (214{val=(}) (44 (39{val=long}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Well44497b}) (214{val=(}) (44 (39{val=int}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Well1024a}) (214{val=(}) (44 (39{val=long}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Well1024a}) (214{val=(}) (44 (39{val=int}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Well44497a}) (214{val=(}) (44 (39{val=long}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Well44497a}) (214{val=(}) (44 (39{val=int}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Well19937a}) (214{val=(}) (44 (39{val=long}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Well19937a}) (214{val=(}) (44 (39{val=int}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=K}) (234{val=,}) (800{val=seed}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=TestUtils}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (32 (800{val=m}) (235{val=.}) (802{val=preMultiply}) (214{val=(}) (32 (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=testVector}) (215{val=)})) (235{val=.}) (802{val=toArray}) (216{val=()})) (215{val=)})) (234{val=,}) (800{val=preMultTest}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertClose}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=m}) (235{val=.}) (802{val=preMultiply}) (214{val=(}) (32 (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=testVector}) (215{val=)})) (235{val=.}) (802{val=toArray}) (216{val=()})) (215{val=)})) (234{val=,}) (800{val=preMultTest}) (234{val=,}) (800{val=normTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=TestUtils}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (32 (800{val=m}) (235{val=.}) (802{val=preMultiply}) (214{val=(}) (32 (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (214{val=(}) (800{val=testVector}) (215{val=)})) (235{val=.}) (802{val=toArray}) (216{val=()})) (215{val=)})) (234{val=,}) (800{val=preMultTest}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=tP}) (204{val==}) (14 (304{val=new}) (43 (801{val=UniformRealDistribution})) (214{val=(}) (800{val=rng}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=MathUtils.TWO_PI}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=x}) (204{val==}) (14 (304{val=new}) (43 (801{val=UniformRealDistribution})) (214{val=(}) (800{val=rng}) (234{val=,}) (800{val=lo}) (234{val=,}) (800{val=hi}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=x}) (204{val==}) (14 (304{val=new}) (43 (801{val=UniformRealDistribution})) (214{val=(}) (800{val=rng}) (234{val=,}) (800{val=lo}) (234{val=,}) (800{val=hi}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=x}) (204{val==}) (14 (304{val=new}) (43 (801{val=UniformRealDistribution})) (214{val=(}) (800{val=rng}) (234{val=,}) (800{val=lo}) (234{val=,}) (800{val=hi}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=tP}) (204{val==}) (14 (304{val=new}) (43 (801{val=UniformRealDistribution})) (214{val=(}) (800{val=rng}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=MathUtils.TWO_PI}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=tP}) (204{val==}) (14 (304{val=new}) (43 (801{val=UniformRealDistribution})) (214{val=(}) (800{val=rng}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=MathUtils.TWO_PI}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=distribution}) (235{val=.}) (802{val=probability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=actual}) (204{val==}) (32 (32 (802{val=getDistribution}) (216{val=()})) (235{val=.}) (802{val=probability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=actual}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=distribution}) (235{val=.}) (802{val=probability}) (214{val=(}) (2 (801{val=lower}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (2 (801{val=upper}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=withinBinKernelMass}) (204{val==}) (32 (800{val=kernel}) (235{val=.}) (802{val=probability}) (214{val=(}) (800{val=lower}) (234{val=,}) (800{val=upper}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=distribution}) (235{val=.}) (802{val=probability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (32 (800{val=distribution}) (235{val=.}) (802{val=logDensity}) (214{val=(}) (2 (801{val=cumulativeTestPoints}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)})))
(AST_ROOT_SC2NF (31 (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NullArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})) (83{val=public}) (39{val=void}) (802{val=testNullFunction}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=UnivariateSolverUtils}) (235{val=.}) (802{val=bracket}) (214{val=(}) (500{val=null}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NullArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NullArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NullArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NullArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=StatUtils}) (235{val=.}) (802{val=min}) (214{val=(}) (800{val=x}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NullArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=StatUtils}) (235{val=.}) (802{val=max}) (214{val=(}) (800{val=x}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NullArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=StatUtils}) (235{val=.}) (802{val=variance}) (214{val=(}) (800{val=x}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NullArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=StatUtils}) (235{val=.}) (802{val=variance}) (214{val=(}) (800{val=x}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NullArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=StatUtils}) (235{val=.}) (802{val=mean}) (214{val=(}) (800{val=x}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NullArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NullArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NullArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NullArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (59 (800{val=tournamentPopulation}) (204{val==}) (14 (304{val=new}) (43 (801{val=ListPopulation})) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=arity})) (215{val=)}) (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=Population})) (802{val=nextGeneration}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (219{val=}})))))
(AST_ROOT_SC2NF (21 (7 (800{val=delta}) (204{val==}) (27 (36 (214{val=(}) (27 (800{val=max}) (201{val=-}) (800{val=min})) (215{val=)})) (203{val=/}) (36 (214{val=(}) (800{val=binCount}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (801{val=Override})) (43 (801{val=T})) (802{val=reciprocal}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=delta}) (204{val==}) (27 (36 (214{val=(}) (27 (800{val=max}) (201{val=-}) (800{val=min})) (215{val=)})) (203{val=/}) (800{val=binCount}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=protected}) (39{val=double}) (802{val=getSolverAbsoluteAccuracy}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=SOLVER_DEFAULT_ABSOLUTE_ACCURACY}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=SparseGradient})) (59 (800{val=sgY2}) (204{val==}) (32 (800{val=sgX}) (235{val=.}) (802{val=compose}) (214{val=(}) (32 (800{val=poly}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=x}) (215{val=)})) (234{val=,}) (32 (32 (800{val=poly}) (235{val=.}) (802{val=polynomialDerivative}) (216{val=()})) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=x}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (32 (32 (32 (800{val=f}) (235{val=.}) (802{val=polynomialDerivative}) (216{val=()})) (235{val=.}) (802{val=polynomialDerivative}) (216{val=()})) (235{val=.}) (802{val=value}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=tolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnivariateFunction})) (59 (800{val=dSpline}) (204{val==}) (32 (800{val=spline}) (235{val=.}) (802{val=polynomialSplineDerivative}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (32 (802{val=getOffset}) (214{val=(}) (800{val=p}) (215{val=)})) (215{val=)})) (230{val=<}) (800{val=tolerance})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=direction}) (235{val=.}) (802{val=getNorm}) (216{val=()})) (230{val=<}) (800{val=tolerance})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=MathArrays}) (235{val=.}) (802{val=verifyValues}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=weights}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (234{val=,}) (9{val=true}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=MathArrays}) (235{val=.}) (802{val=verifyValues}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (234{val=,}) (9{val=true}) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (800{val=m}) (235{val=.}) (802{val=incrementAll}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=MathArrays}) (235{val=.}) (802{val=verifyValues}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (234{val=,}) (9{val=true}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=MathArrays}) (235{val=.}) (802{val=verifyValues}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (234{val=,}) (9{val=true}) (215{val=)})))
(AST_ROOT_SC2NF (27 (32 (800{val=MathArrays}) (235{val=.}) (802{val=verifyValues}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})) (249{val=&&}) (27 (800{val=length}) (231{val=>}) (34{val=NUMBER_CONSTANT}))))
(AST_ROOT_SC2NF (21 (32 (800{val=MathArrays}) (235{val=.}) (802{val=verifyValues}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=start}) (234{val=,}) (800{val=length}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=MathArrays}) (235{val=.}) (802{val=verifyValues}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=MathArrays}) (235{val=.}) (802{val=verifyValues}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (800{val=MathArrays}) (235{val=.}) (802{val=verifyValues}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=MathArrays}) (235{val=.}) (802{val=verifyValues}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=weights}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (234{val=,}) (9{val=true}) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=MathArrays}) (235{val=.}) (802{val=verifyValues}) (214{val=(}) (800{val=values}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=values.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=ptile}) (235{val=.}) (802{val=incrementAll}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=MathArrays}) (235{val=.}) (802{val=verifyValues}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=weights}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=MathArrays}) (235{val=.}) (802{val=verifyValues}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=MathArrays}) (235{val=.}) (802{val=verifyValues}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=weights}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})))
(AST_ROOT_SC2NF (32 (800{val=MathArrays}) (235{val=.}) (802{val=verifyValues}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (800{val=m}) (235{val=.}) (802{val=incrementAll}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=iae})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=MathIllegalArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=MathIllegalArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=MathIllegalArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=MathIllegalArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=iae})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=MathIllegalArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=MathIllegalArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=MathIllegalArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=MathIllegalArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=MathIllegalArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=MathIllegalArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=MathIllegalArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=MathIllegalArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=MathIllegalArgumentException})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=stats}) (235{val=.}) (802{val=setWindowSize}) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=iae})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (14 (304{val=new}) (43 (801{val=DummyBinaryChromosome})) (214{val=(}) (800{val=repr}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=e})) (215{val=)}) (8 (220{val={}})))) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathIllegalArgumentException})) (800{val=iae})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=Hs}) (204{val==}) (800{val=nthHarmonic})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=Hs}) (204{val==}) (800{val=nthHarmonic})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (802{val=generalizedHarmonic}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=exponent}) (215{val=)})) (203{val=/}) (800{val=nthHarmonic})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (38 (201{val=-}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log}) (214{val=(}) (800{val=x}) (215{val=)}))) (202{val=*}) (800{val=exponent})) (201{val=-}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log}) (214{val=(}) (800{val=nthHarmonic}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (800{val=x}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=x}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (800{val=x}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=x}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (800{val=x}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=Double.NaN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (800{val=x}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=Double.NaN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=Double}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (800{val=x}) (215{val=)})) (250{val=||}) (32 (800{val=Double}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (800{val=y}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=Double.NaN}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=Double}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (800{val=x}) (215{val=)})) (250{val=||}) (27 (800{val=x}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=x}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (800{val=x}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=x}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (800{val=x}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=x}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (800{val=x}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=x}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (40{val=LocalizedFormats.UNKNOWN_PARAMETER}) (234{val=,}) (800{val=name}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=name})) (204{val==}) (800{val=name})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=double}) (800{val=exponent})))
(AST_ROOT_SC2NF (60 (43 (801{val=MultivariateInterpolator})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (43 (801{val=MicrosphereInterpolator})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (39{val=double}) (800{val=brightnessExponent})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (36 (214{val=(}) (27 (32 (800{val=numerator}) (235{val=.}) (802{val=signum}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (233{val=?}) (315{val=this}) (226{val=:}) (32 (802{val=negate}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=long}) (59 (800{val=numCalls}) (204{val==}) (27 (32 (800{val=numberOfCalls}) (235{val=.}) (802{val=incrementAndGet}) (216{val=()})) (201{val=-}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Gaussian})) (59 (800{val=neighbourhoodDecay}) (204{val==}) (14 (304{val=new}) (43 (801{val=Gaussian})) (214{val=(}) (800{val=currentLearning}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=currentNeighbourhood}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=divide}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Fraction})) (214{val=(}) (800{val=i}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=multiply}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Fraction})) (214{val=(}) (800{val=i}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=TestUtils}) (235{val=.}) (802{val=assertRelativelyEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (27 (32 (800{val=ZipfRejectionInversionSampler}) (235{val=.}) (802{val=helper2}) (214{val=(}) (800{val=testValue}) (215{val=)})) (202{val=*}) (800{val=testValue})) (234{val=,}) (800{val=tol}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=maxEvaluations})) (204{val==}) (800{val=maxEvaluations})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=rowOffset})) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=long}) (59 (800{val=swaps}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=x}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (27 (800{val=log1mProbabilityOfSuccess}) (202{val=*}) (800{val=x})) (215{val=)})) (202{val=*}) (800{val=probabilityOfSuccess})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (27 (27 (27 (800{val=SQRT_TWO_PI}) (203{val=/}) (800{val=absX})) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=y}) (234{val=,}) (27 (800{val=absX}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (38 (201{val=-}) (800{val=y})) (215{val=)}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=CorrelatedRandomVectorGenerator})) (214{val=(}) (3 (304{val=new}) (5 (39{val=double}) (221{val=[})) (40{val=cov.length}) (222{val=]})) (234{val=,}) (800{val=matrix}) (234{val=,}) (800{val=small}) (234{val=,}) (14 (304{val=new}) (43 (801{val=GaussianRandomGenerator})) (214{val=(}) (14 (304{val=new}) (43 (801{val=Well1024a})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (802{val=BigFractionMatrixConverter}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (40{val=BigFraction.ZERO}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (802{val=FractionMatrixConverter}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (40{val=Fraction.ZERO}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=RealFieldUnivariateFunction})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (800{val=f})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=RealFieldUnivariateFunction})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (800{val=f})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=RealFieldUnivariateFunction})) (230{val=<}) (43 (800{val=Dfp})) (231{val=>})) (800{val=f})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=EnumeratedRealDistribution})) (59 (800{val=dist}) (204{val==}) (14 (304{val=new}) (43 (801{val=EnumeratedRealDistribution})) (214{val=(}) (800{val=rng}) (234{val=,}) (800{val=combined}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=JDKRandomGenerator}) (214{val=(}) (44 (39{val=long}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=setSeed}) (214{val=(}) (800{val=seed}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=StepInterpolatorTestUtils}) (235{val=.}) (802{val=checkDerivativesConsistency}) (214{val=(}) (800{val=integ}) (234{val=,}) (800{val=pb}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=StepInterpolatorTestUtils}) (235{val=.}) (802{val=checkDerivativesConsistency}) (214{val=(}) (800{val=integ}) (234{val=,}) (800{val=pb}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=StepInterpolatorTestUtils}) (235{val=.}) (802{val=checkDerivativesConsistency}) (214{val=(}) (800{val=integ}) (234{val=,}) (800{val=pb}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=StepInterpolatorTestUtils}) (235{val=.}) (802{val=checkDerivativesConsistency}) (214{val=(}) (800{val=integ}) (234{val=,}) (800{val=pb}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=StepInterpolatorTestUtils}) (235{val=.}) (802{val=checkDerivativesConsistency}) (214{val=(}) (800{val=integ}) (234{val=,}) (800{val=pb}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=StepInterpolatorTestUtils}) (235{val=.}) (802{val=checkDerivativesConsistency}) (214{val=(}) (800{val=integ}) (234{val=,}) (800{val=pb}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=StepInterpolatorTestUtils}) (235{val=.}) (802{val=checkDerivativesConsistency}) (214{val=(}) (800{val=integ}) (234{val=,}) (800{val=pb}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=StepInterpolatorTestUtils}) (235{val=.}) (802{val=checkDerivativesConsistency}) (214{val=(}) (800{val=integ}) (234{val=,}) (800{val=pb}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=starter}) (235{val=.}) (802{val=addStepHandler}) (214{val=(}) (14 (304{val=new}) (43 (801{val=NordsieckInitializer})) (214{val=(}) (27 (36 (214{val=(}) (27 (800{val=nSteps}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (203{val=/}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (40{val=y0.length}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=StepInterpolatorTestUtils}) (235{val=.}) (802{val=checkDerivativesConsistency}) (214{val=(}) (800{val=integ}) (234{val=,}) (800{val=pb}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=StepInterpolatorTestUtils}) (235{val=.}) (802{val=checkDerivativesConsistency}) (214{val=(}) (800{val=integ}) (234{val=,}) (800{val=pb}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=StepInterpolatorTestUtils}) (235{val=.}) (802{val=checkDerivativesConsistency}) (214{val=(}) (800{val=integ}) (234{val=,}) (800{val=pb}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=evaluations}) (235{val=.}) (802{val=increment}) (216{val=()})) (227{val=;})) (21 (32 (800{val=expandable}) (235{val=.}) (802{val=computeDerivatives}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=y}) (234{val=,}) (800{val=yDot}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=evaluations}) (204{val==}) (32 (800{val=evaluations}) (235{val=.}) (802{val=withStart}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=InitializationCompletedMarkerException})) (800{val=icme})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (802{val=getCounter}) (216{val=()})) (235{val=.}) (802{val=increment}) (214{val=(}) (32 (800{val=starter}) (235{val=.}) (802{val=getEvaluations}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldVector3D})) (230{val=<}) (43 (800{val=DerivativeStructure})) (231{val=>})) (59 (800{val=axis}) (204{val==}) (32 (800{val=r}) (235{val=.}) (802{val=getAxis}) (214{val=(}) (40{val=RotationConvention.VECTOR_OPERATOR}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldVector3D})) (230{val=<}) (43 (800{val=Dfp})) (231{val=>})) (59 (800{val=axis}) (204{val==}) (32 (800{val=r}) (235{val=.}) (802{val=getAxis}) (214{val=(}) (40{val=RotationConvention.VECTOR_OPERATOR}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Vector3D})) (59 (800{val=axis}) (204{val==}) (32 (800{val=r}) (235{val=.}) (802{val=getAxis}) (214{val=(}) (40{val=RotationConvention.VECTOR_OPERATOR}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (800{val=r1}) (235{val=.}) (802{val=composeInverseInternal}) (214{val=(}) (800{val=r2}) (215{val=)})) (235{val=.}) (802{val=getAngle}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (800{val=r1}) (235{val=.}) (802{val=composeInverseInternal}) (214{val=(}) (800{val=r2}) (215{val=)})) (235{val=.}) (802{val=getAngle}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Rotation})) (59 (800{val=composite}) (204{val==}) (32 (800{val=r1}) (235{val=.}) (802{val=compose}) (214{val=(}) (32 (800{val=r2}) (235{val=.}) (802{val=compose}) (214{val=(}) (800{val=r3}) (234{val=,}) (40{val=RotationConvention.FRAME_TRANSFORM}) (215{val=)})) (234{val=,}) (40{val=RotationConvention.FRAME_TRANSFORM}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=delegate}) (235{val=.}) (802{val=nextInt}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NotStrictlyPositiveException})) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=delegate}) (235{val=.}) (802{val=setSeed}) (214{val=(}) (32 (800{val=RandomGeneratorFactory}) (235{val=.}) (802{val=convertToLong}) (214{val=(}) (800{val=seed}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=delegate}) (235{val=.}) (802{val=setSeed}) (214{val=(}) (11 (214{val=(}) (39{val=long}) (215{val=)}) (800{val=seed})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=setSeedInternal}) (214{val=(}) (800{val=seed}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setSeedInternal}) (214{val=(}) (800{val=seed}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=ISAACRandom}) (214{val=(}) (44 (39{val=long}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=setSeedInternal}) (214{val=(}) (800{val=seed}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setSeedInternal}) (214{val=(}) (27 (32 (800{val=System}) (235{val=.}) (802{val=currentTimeMillis}) (216{val=()})) (200{val=+}) (32 (800{val=System}) (235{val=.}) (802{val=identityHashCode}) (214{val=(}) (315{val=this}) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=mt}) (204{val==}) (3 (304{val=new}) (5 (39{val=int}) (221{val=[})) (800{val=N}) (222{val=]}))) (227{val=;})) (21 (32 (802{val=setSeedInternal}) (214{val=(}) (800{val=seed}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=mt}) (204{val==}) (3 (304{val=new}) (5 (39{val=int}) (221{val=[})) (800{val=N}) (222{val=]}))) (227{val=;})) (21 (32 (802{val=setSeedInternal}) (214{val=(}) (800{val=seed}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=mt}) (204{val==}) (3 (304{val=new}) (5 (39{val=int}) (221{val=[})) (800{val=N}) (222{val=]}))) (227{val=;})) (21 (32 (802{val=setSeedInternal}) (214{val=(}) (800{val=seed}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=mt}) (204{val==}) (3 (304{val=new}) (5 (39{val=int}) (221{val=[})) (800{val=N}) (222{val=]}))) (227{val=;})) (21 (32 (802{val=setSeedInternal}) (214{val=(}) (27 (32 (800{val=System}) (235{val=.}) (802{val=currentTimeMillis}) (216{val=()})) (200{val=+}) (32 (800{val=System}) (235{val=.}) (802{val=identityHashCode}) (214{val=(}) (315{val=this}) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=bits}) (204{val==}) (27 (32 (802{val=nextInt}) (216{val=()})) (231{val=>}) (231{val=>}) (231{val=>}) (34{val=NUMBER_CONSTANT}))) (227{val=;})) (21 (7 (800{val=val}) (204{val==}) (27 (800{val=bits}) (211{val=%}) (800{val=n}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=seed}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=setSeedInternal}) (214{val=(}) (27 (32 (800{val=System}) (235{val=.}) (802{val=currentTimeMillis}) (216{val=()})) (200{val=+}) (32 (800{val=System}) (235{val=.}) (802{val=identityHashCode}) (214{val=(}) (315{val=this}) (215{val=)}))) (215{val=)})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=seed}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=setSeedInternal}) (214{val=(}) (27 (32 (800{val=System}) (235{val=.}) (802{val=currentTimeMillis}) (216{val=()})) (200{val=+}) (32 (800{val=System}) (235{val=.}) (802{val=identityHashCode}) (214{val=(}) (315{val=this}) (215{val=)}))) (215{val=)})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setSeedInternal}) (214{val=(}) (3 (304{val=new}) (5 (39{val=int}) (85{val=[]})) (4 (218{val={}) (800{val=seed}) (219{val=}}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=computeInterpolatedStateAndDerivatives}) (214{val=(}) (800{val=mapper}) (234{val=,}) (800{val=time}) (234{val=,}) (800{val=theta}) (234{val=,}) (800{val=oneMinusThetaH}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=mapper}) (204{val==}) (500{val=null})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (2 (801{val=yDotK}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (204{val==}) (32 (32 (800{val=equations}) (235{val=.}) (802{val=getMapper}) (216{val=()})) (235{val=.}) (802{val=mapDerivative}) (214{val=(}) (800{val=stepStart}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=mainSetDimension}) (204{val==}) (32 (800{val=eqn}) (235{val=.}) (802{val=getStateDimension}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=BracketedRealFieldUnivariateSolver})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (800{val=solver})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=BracketedRealFieldUnivariateSolver})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (800{val=solver})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=BracketedRealFieldUnivariateSolver})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (800{val=solver})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=TestProblem5}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=setFinalConditions}) (214{val=(}) (27 (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=t0})) (201{val=-}) (800{val=t1})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (800{val=i}) (230{val=<}) (32 (802{val=getDimension}) (216{val=()}))))
(AST_ROOT_SC2NF (27 (800{val=i}) (230{val=<}) (32 (802{val=getDimension}) (216{val=()}))))
(AST_ROOT_SC2NF (27 (800{val=i}) (230{val=<}) (32 (802{val=getDimension}) (216{val=()}))))
(AST_ROOT_SC2NF (24 (303{val=for}) (214{val=(}) (58 (39{val=int}) (59 (800{val=i}) (204{val==}) (34{val=NUMBER_CONSTANT}))) (227{val=;}) (27 (800{val=i}) (230{val=<}) (32 (802{val=getDimension}) (216{val=()}))) (227{val=;}) (38 (247{val=++}) (800{val=i})) (215{val=)}) (8 (218{val={}) (21 (7 (2 (801{val=y}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (800{val=c})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (800{val=i}) (230{val=<}) (32 (802{val=getDimension}) (216{val=()}))))
(AST_ROOT_SC2NF (21 (7 (800{val=currentState}) (204{val==}) (800{val=y})) (227{val=;})))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=METHOD_NAME}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=minStep}) (234{val=,}) (800{val=maxStep}) (234{val=,}) (800{val=vecAbsoluteTolerance}) (234{val=,}) (800{val=vecRelativeTolerance}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=METHOD_NAME}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=minStep}) (234{val=,}) (800{val=maxStep}) (234{val=,}) (800{val=scalAbsoluteTolerance}) (234{val=,}) (800{val=scalRelativeTolerance}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=METHOD_NAME}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (800{val=minStep}) (234{val=,}) (800{val=maxStep}) (234{val=,}) (800{val=vecAbsoluteTolerance}) (234{val=,}) (800{val=vecRelativeTolerance}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=METHOD_NAME}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (800{val=minStep}) (234{val=,}) (800{val=maxStep}) (234{val=,}) (800{val=scalAbsoluteTolerance}) (234{val=,}) (800{val=scalRelativeTolerance}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (32 (32 (32 (800{val=start}) (235{val=.}) (802{val=subtract}) (214{val=(}) (32 (32 (800{val=problem}) (235{val=.}) (802{val=getInitialState}) (216{val=()})) (235{val=.}) (802{val=getTime}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=divide}) (214{val=(}) (32 (800{val=integrator}) (235{val=.}) (802{val=getCurrentSignedStepsize}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=abs}) (216{val=()})) (235{val=.}) (802{val=getReal}) (216{val=()})) (231{val=>}) (34{val=NUMBER_CONSTANT})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=field}) (215{val=)}) (227{val=;})) (21 (32 (802{val=setFinalConditions}) (214{val=(}) (32 (32 (32 (32 (802{val=getInitialState}) (216{val=()})) (235{val=.}) (802{val=getTime}) (216{val=()})) (235{val=.}) (802{val=multiply}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=subtract}) (214{val=(}) (32 (802{val=getFinalTime}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=METHOD_NAME}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=minStep}) (234{val=,}) (800{val=maxStep}) (234{val=,}) (800{val=vecAbsoluteTolerance}) (234{val=,}) (800{val=vecRelativeTolerance}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=METHOD_NAME}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=minStep}) (234{val=,}) (800{val=maxStep}) (234{val=,}) (800{val=scalAbsoluteTolerance}) (234{val=,}) (800{val=scalRelativeTolerance}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=EulerFieldStepInterpolator})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=forward}) (234{val=,}) (800{val=mapper}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=DormandPrince54FieldStepInterpolator})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=forward}) (234{val=,}) (800{val=mapper}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=GillFieldStepInterpolator})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=forward}) (234{val=,}) (800{val=mapper}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=T})) (59 (800{val=one}) (204{val==}) (32 (32 (802{val=getField}) (216{val=()})) (235{val=.}) (802{val=getOne}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=MidpointFieldStepInterpolator})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=forward}) (234{val=,}) (800{val=mapper}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=LutherFieldStepInterpolator})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=forward}) (234{val=,}) (800{val=mapper}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ThreeEighthesFieldStepInterpolator})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=forward}) (234{val=,}) (800{val=mapper}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=DormandPrince853FieldStepInterpolator})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=forward}) (234{val=,}) (800{val=mapper}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=doCopy}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=T})) (59 (800{val=coeffDot1}) (204{val==}) (32 (32 (32 (802{val=getField}) (216{val=()})) (235{val=.}) (802{val=getOne}) (216{val=()})) (235{val=.}) (802{val=subtract}) (214{val=(}) (800{val=coeffDot2}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=T})) (59 (800{val=one}) (204{val==}) (32 (32 (802{val=getField}) (216{val=()})) (235{val=.}) (802{val=getOne}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=HighamHall54FieldStepInterpolator})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=forward}) (234{val=,}) (800{val=mapper}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (32 (32 (802{val=getField}) (216{val=()})) (235{val=.}) (802{val=getOne}) (216{val=()})) (235{val=.}) (802{val=multiply}) (214{val=(}) (800{val=p}) (215{val=)})) (235{val=.}) (802{val=divide}) (214{val=(}) (800{val=q}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=d}) (204{val==}) (32 (800{val=MathArrays}) (235{val=.}) (802{val=buildArray}) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ClassicalRungeKuttaFieldStepInterpolator})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=forward}) (234{val=,}) (800{val=mapper}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=T})) (59 (800{val=two}) (204{val==}) (32 (32 (32 (802{val=getField}) (216{val=()})) (235{val=.}) (802{val=getZero}) (216{val=()})) (235{val=.}) (802{val=add}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (32 (32 (802{val=getField}) (216{val=()})) (235{val=.}) (802{val=getZero}) (216{val=()})) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=p}) (215{val=)})) (235{val=.}) (802{val=divide}) (214{val=(}) (800{val=q}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=EulerFieldStepInterpolator})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=forward}) (234{val=,}) (800{val=mapper}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=mapper}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=FieldEquationsMapper})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=mapper}) (234{val=,}) (32 (800{val=secondary}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldFirstOrderDifferentialEquations})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=eqn}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=SinCos})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (802{val=setUpInterpolator}) (214{val=(}) (800{val=field}) (234{val=,}) (14 (304{val=new}) (74 (43 (801{val=SinCos})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (219{val=}}))) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (802{val=setUpInterpolator}) (214{val=(}) (800{val=field}) (234{val=,}) (14 (304{val=new}) (74 (43 (801{val=SinCos})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=field}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (219{val=}}))) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (800{val=integrator}) (235{val=.}) (802{val=integrate}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=FieldExpandableODE})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=problem}) (215{val=)})) (234{val=,}) (32 (800{val=problem}) (235{val=.}) (802{val=getInitialState}) (216{val=()})) (234{val=,}) (32 (800{val=problem}) (235{val=.}) (802{val=getFinalTime}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=integrate}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=FieldExpandableODE})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=pb}) (215{val=)})) (234{val=,}) (32 (800{val=pb}) (235{val=.}) (802{val=getInitialState}) (216{val=()})) (234{val=,}) (32 (800{val=pb}) (235{val=.}) (802{val=getFinalTime}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=integrate}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=FieldExpandableODE})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=pb}) (215{val=)})) (234{val=,}) (32 (800{val=pb}) (235{val=.}) (802{val=getInitialState}) (216{val=()})) (234{val=,}) (32 (800{val=pb}) (235{val=.}) (802{val=getFinalTime}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=integrate}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=FieldExpandableODE})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=pb}) (215{val=)})) (234{val=,}) (32 (800{val=pb}) (235{val=.}) (802{val=getInitialState}) (216{val=()})) (234{val=,}) (32 (800{val=pb}) (235{val=.}) (802{val=getFinalTime}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=integrate}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=FieldExpandableODE})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=equations}) (215{val=)})) (234{val=,}) (14 (304{val=new}) (74 (43 (801{val=FieldODEState})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=t0}) (234{val=,}) (800{val=y0}) (215{val=)})) (234{val=,}) (800{val=t}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=integrate}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=FieldExpandableODE})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=pb}) (215{val=)})) (234{val=,}) (32 (800{val=pb}) (235{val=.}) (802{val=getInitialState}) (216{val=()})) (234{val=,}) (32 (800{val=pb}) (235{val=.}) (802{val=getFinalTime}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=integrate}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=FieldExpandableODE})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=pb}) (215{val=)})) (234{val=,}) (32 (800{val=pb}) (235{val=.}) (802{val=getInitialState}) (216{val=()})) (234{val=,}) (32 (800{val=pb}) (235{val=.}) (802{val=getFinalTime}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=steps}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=interpolator}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (74 (43 (800{val=FieldStepInterpolator})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (800{val=interpolator})) (226{val=:}) (40{val=model.steps}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=steps}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=interpolator}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (61 (350{val=while}) (214{val=(}) (27 (38 (247{val=++}) (800{val=index})) (230{val=<}) (32 (802{val=getNumberOfEquations}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=insertEquationData}) (214{val=(}) (800{val=index}) (234{val=,}) (32 (800{val=state}) (235{val=.}) (802{val=getSecondaryDerivative}) (214{val=(}) (800{val=index}) (215{val=)})) (234{val=,}) (800{val=yDot}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (61 (350{val=while}) (214{val=(}) (27 (38 (247{val=++}) (800{val=index})) (230{val=<}) (32 (802{val=getNumberOfEquations}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=insertEquationData}) (214{val=(}) (800{val=index}) (234{val=,}) (32 (800{val=state}) (235{val=.}) (802{val=getSecondaryState}) (214{val=(}) (800{val=index}) (215{val=)})) (234{val=,}) (800{val=y}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=System}) (235{val=.}) (802{val=arraycopy}) (214{val=(}) (40{val=mapper.start}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=start}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (800{val=index}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testKepler}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestKepler}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testBackward}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestBackward}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testSanityChecks}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestSanityChecks}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testNonFieldIntegratorConsistency}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestNonFieldIntegratorConsistency}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testDerivativesConsistency}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestDerivativesConsistency}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testUnstableDerivative}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestUnstableDerivative}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testTooLargeFirstStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestTooLargeFirstStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testSingleStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestSingleStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testStepSize}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestStepSize}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testKepler}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestKepler}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testBackward}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestBackward}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testBigStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestBigStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testSmallStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestSmallStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testDecreasingSteps}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestDecreasingSteps}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testSanityChecks}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestSanityChecks}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testMissedEndEvent}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestMissedEndEvent}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testNonFieldIntegratorConsistency}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestNonFieldIntegratorConsistency}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testDerivativesConsistency}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestDerivativesConsistency}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testUnstableDerivative}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestUnstableDerivative}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testTooLargeFirstStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestTooLargeFirstStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testSingleStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestSingleStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testStepSize}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestStepSize}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testKepler}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestKepler}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testBackward}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestBackward}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testBigStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestBigStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testSmallStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestSmallStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testDecreasingSteps}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestDecreasingSteps}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testSanityChecks}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestSanityChecks}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testMissedEndEvent}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestMissedEndEvent}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testNonFieldIntegratorConsistency}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestNonFieldIntegratorConsistency}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testKepler}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestKepler}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testBackward}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestBackward}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testSanityChecks}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestSanityChecks}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testNonFieldIntegratorConsistency}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestNonFieldIntegratorConsistency}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testKepler}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestKepler}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testBackward}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestBackward}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testSanityChecks}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestSanityChecks}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testNonFieldIntegratorConsistency}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestNonFieldIntegratorConsistency}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testDerivativesConsistency}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestDerivativesConsistency}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testUnstableDerivative}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestUnstableDerivative}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testTooLargeFirstStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestTooLargeFirstStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testSingleStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestSingleStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (78 (208{val=@}) (800{val=Override})))
(AST_ROOT_SC2NF (78 (208{val=@}) (800{val=Override})))
(AST_ROOT_SC2NF (78 (208{val=@}) (800{val=Override})))
(AST_ROOT_SC2NF (78 (208{val=@}) (800{val=Override})))
(AST_ROOT_SC2NF (78 (208{val=@}) (800{val=Override})))
(AST_ROOT_SC2NF (78 (208{val=@}) (800{val=Override})))
(AST_ROOT_SC2NF (78 (208{val=@}) (800{val=Override})))
(AST_ROOT_SC2NF (78 (208{val=@}) (800{val=Override})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testNonFieldIntegratorConsistency}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestNonFieldIntegratorConsistency}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testDerivativesConsistency}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestDerivativesConsistency}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testUnstableDerivative}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestUnstableDerivative}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testTooLargeFirstStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestTooLargeFirstStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testSingleStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestSingleStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testStepSize}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestStepSize}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testKepler}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestKepler}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testBackward}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestBackward}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testBigStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestBigStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testSmallStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestSmallStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testDecreasingSteps}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestDecreasingSteps}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testSanityChecks}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestSanityChecks}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testMissedEndEvent}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestMissedEndEvent}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testNonFieldIntegratorConsistency}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestNonFieldIntegratorConsistency}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testDerivativesConsistency}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestDerivativesConsistency}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testUnstableDerivative}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestUnstableDerivative}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testTooLargeFirstStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestTooLargeFirstStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testSingleStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestSingleStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testStepSize}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestStepSize}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testKepler}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestKepler}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testBackward}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestBackward}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testBigStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestBigStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testSmallStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestSmallStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testDecreasingSteps}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestDecreasingSteps}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testSanityChecks}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestSanityChecks}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testMissedEndEvent}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestMissedEndEvent}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testNonFieldIntegratorConsistency}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestNonFieldIntegratorConsistency}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testDerivativesConsistency}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestDerivativesConsistency}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testUnstableDerivative}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestUnstableDerivative}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testTooLargeFirstStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestTooLargeFirstStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testSingleStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestSingleStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testStepSize}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestStepSize}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testKepler}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestKepler}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testBackward}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestBackward}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testBigStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestBigStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testSmallStep}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestSmallStep}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testDecreasingSteps}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestDecreasingSteps}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testSanityChecks}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestSanityChecks}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testMissedEndEvent}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestMissedEndEvent}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=void}) (802{val=testNonFieldIntegratorConsistency}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doTestNonFieldIntegratorConsistency}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=FirstOrderFieldIntegrator})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (800{val=integrator})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=FirstOrderFieldDifferentialEquations})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (800{val=eqn})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=FirstOrderFieldDifferentialEquations})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (800{val=eqn})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=FirstOrderFieldIntegrator})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (800{val=integrator})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=FirstOrderFieldDifferentialEquations})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (800{val=equations})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=FirstOrderFieldDifferentialEquations})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (800{val=primary})))
(AST_ROOT_SC2NF (31 (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=MaxCountExceededException})) (235{val=.}) (341{val=class}))) (215{val=)})) (83{val=public}) (39{val=void}) (802{val=exceedMaxEvaluations}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=doExceedMaxEvaluations}) (214{val=(}) (32 (800{val=Decimal64Field}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=taylor}) (214{val=(}) (800{val=reference}) (234{val=,}) (800{val=time}) (234{val=,}) (800{val=scalingH}) (234{val=,}) (800{val=scaled}) (234{val=,}) (800{val=nordsieck}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=seed}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=setSeed}) (214{val=(}) (27 (32 (800{val=System}) (235{val=.}) (802{val=currentTimeMillis}) (216{val=()})) (200{val=+}) (32 (800{val=System}) (235{val=.}) (802{val=identityHashCode}) (214{val=(}) (315{val=this}) (215{val=)}))) (215{val=)})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setSeed}) (214{val=(}) (3 (304{val=new}) (5 (39{val=int}) (85{val=[]})) (4 (218{val={}) (800{val=seed}) (219{val=}}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=seed}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=setSeed}) (214{val=(}) (27 (32 (800{val=System}) (235{val=.}) (802{val=currentTimeMillis}) (216{val=()})) (200{val=+}) (32 (800{val=System}) (235{val=.}) (802{val=identityHashCode}) (214{val=(}) (315{val=this}) (215{val=)}))) (215{val=)})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=bits}) (204{val==}) (36 (214{val=(}) (27 (32 (802{val=nextInt}) (216{val=()})) (231{val=>}) (231{val=>}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})) (21 (7 (800{val=val}) (204{val==}) (27 (800{val=bits}) (211{val=%}) (800{val=n}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=mt}) (204{val==}) (3 (304{val=new}) (5 (39{val=int}) (221{val=[})) (800{val=N}) (222{val=]}))) (227{val=;})) (21 (32 (802{val=setSeed}) (214{val=(}) (800{val=seed}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=mt}) (204{val==}) (3 (304{val=new}) (5 (39{val=int}) (221{val=[})) (800{val=N}) (222{val=]}))) (227{val=;})) (21 (32 (802{val=setSeed}) (214{val=(}) (800{val=seed}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=mt}) (204{val==}) (3 (304{val=new}) (5 (39{val=int}) (221{val=[})) (800{val=N}) (222{val=]}))) (227{val=;})) (21 (32 (802{val=setSeed}) (214{val=(}) (800{val=seed}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=mt}) (204{val==}) (3 (304{val=new}) (5 (39{val=int}) (221{val=[})) (800{val=N}) (222{val=]}))) (227{val=;})) (21 (32 (802{val=setSeed}) (214{val=(}) (27 (32 (800{val=System}) (235{val=.}) (802{val=currentTimeMillis}) (216{val=()})) (200{val=+}) (32 (800{val=System}) (235{val=.}) (802{val=identityHashCode}) (214{val=(}) (315{val=this}) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setSeed}) (214{val=(}) (800{val=seed}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=ISAACRandom}) (214{val=(}) (44 (39{val=long}) (800{val=seed})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=setSeed}) (214{val=(}) (800{val=seed}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setSeed}) (214{val=(}) (27 (32 (800{val=System}) (235{val=.}) (802{val=currentTimeMillis}) (216{val=()})) (200{val=+}) (32 (800{val=System}) (235{val=.}) (802{val=identityHashCode}) (214{val=(}) (315{val=this}) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=setSeed}) (214{val=(}) (800{val=seed}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=timeAndReport}) (214{val=(}) (800{val=title}) (234{val=,}) (800{val=DEFAULT_MAX_NAME_WIDTH}) (234{val=,}) (800{val=DEFAULT_REPEAT_CHUNK}) (234{val=,}) (800{val=DEFAULT_REPEAT_STAT}) (234{val=,}) (9{val=false}) (234{val=,}) (800{val=methods}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Deprecated})) (39{val=double}) (802{val=sample}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=random}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (800{val=seed}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=cityList}) (234{val=,}) (800{val=numNeuronsPerCity}) (234{val=,}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=createLong}) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=ChiSquaredDistribution})) (59 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=ChiSquaredDistribution})) (214{val=(}) (27 (11 (214{val=(}) (39{val=double}) (215{val=)}) (40{val=observed1.length})) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=ChiSquaredDistribution})) (59 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=ChiSquaredDistribution})) (214{val=(}) (27 (40{val=expected.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=ChiSquaredDistribution})) (59 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=ChiSquaredDistribution})) (214{val=(}) (27 (40{val=expected.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=ChiSquaredDistribution})) (59 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=ChiSquaredDistribution})) (214{val=(}) (27 (11 (214{val=(}) (39{val=double}) (215{val=)}) (40{val=observed1.length})) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=ChiSquaredDistribution})) (59 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=ChiSquaredDistribution})) (214{val=(}) (27 (40{val=expected.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (39{val=double}) (59 (800{val=u}) (204{val==}) (32 (800{val=rng}) (235{val=.}) (802{val=nextDouble}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (27 (27 (800{val=u}) (202{val=*}) (800{val=upper})) (200{val=+}) (27 (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (201{val=-}) (800{val=u})) (215{val=)})) (202{val=*}) (800{val=lower}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (32 (800{val=empiricalDistribution}) (235{val=.}) (802{val=createSampler}) (214{val=(}) (32 (800{val=randomData}) (235{val=.}) (802{val=getRandomProvider}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=sample}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=empiricalDistribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=EmpiricalDistribution})) (214{val=(}) (800{val=binCount}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=value})) (204{val==}) (800{val=value})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=FDistribution})) (59 (800{val=fdist}) (204{val==}) (14 (304{val=new}) (43 (801{val=FDistribution})) (214{val=(}) (40{val=a.dfbg}) (234{val=,}) (40{val=a.dfwg}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=FDistribution})) (59 (800{val=fdist}) (204{val==}) (14 (304{val=new}) (43 (801{val=FDistribution})) (214{val=(}) (40{val=a.dfbg}) (234{val=,}) (40{val=a.dfwg}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=TDistribution})) (59 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=TDistribution})) (214{val=(}) (800{val=degreesOfFreedom}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=TDistribution})) (59 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=TDistribution})) (214{val=(}) (800{val=degreesOfFreedom}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=TDistribution})) (59 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=TDistribution})) (214{val=(}) (27 (800{val=n}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=KolmogorovSmirnovTest})) (59 (800{val=test}) (204{val==}) (14 (304{val=new}) (43 (801{val=KolmogorovSmirnovTest})) (214{val=(}) (40{val=RandomSource.WELL_19937_C}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=KolmogorovSmirnovTest})) (59 (800{val=test}) (204{val==}) (14 (304{val=new}) (43 (801{val=KolmogorovSmirnovTest})) (214{val=(}) (40{val=RandomSource.WELL_19937_C}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=KolmogorovSmirnovTest})) (59 (800{val=test}) (204{val==}) (14 (304{val=new}) (43 (801{val=KolmogorovSmirnovTest})) (214{val=(}) (40{val=RandomSource.WELL_19937_C}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=KolmogorovSmirnovTest})) (59 (800{val=test}) (204{val==}) (14 (304{val=new}) (43 (801{val=KolmogorovSmirnovTest})) (214{val=(}) (40{val=RandomSource.WELL_19937_C}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=KolmogorovSmirnovTest})) (59 (800{val=test}) (204{val==}) (14 (304{val=new}) (43 (801{val=KolmogorovSmirnovTest})) (214{val=(}) (40{val=RandomSource.WELL_19937_C}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=KolmogorovSmirnovTest})) (59 (800{val=test}) (204{val==}) (14 (304{val=new}) (43 (801{val=KolmogorovSmirnovTest})) (214{val=(}) (40{val=RandomSource.WELL_19937_C}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=KolmogorovSmirnovTest})) (59 (800{val=test}) (204{val==}) (14 (304{val=new}) (43 (801{val=KolmogorovSmirnovTest})) (214{val=(}) (40{val=RandomSource.WELL_19937_C}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=NormalDistribution})) (59 (800{val=standardNormal}) (204{val==}) (14 (304{val=new}) (43 (801{val=NormalDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=NormalDistribution})) (59 (800{val=standardNormal}) (204{val==}) (14 (304{val=new}) (43 (801{val=NormalDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=BinomialDistribution})) (59 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=BinomialDistribution})) (214{val=(}) (800{val=numberOfTrials}) (234{val=,}) (800{val=probability}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=rand}) (204{val==}) (14 (304{val=new}) (43 (801{val=Well19937c})) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=complexSolver}) (235{val=.}) (802{val=solve}) (214{val=(}) (32 (800{val=ComplexUtils}) (235{val=.}) (802{val=real2Complex}) (214{val=(}) (800{val=coefficients}) (215{val=)})) (234{val=,}) (14 (304{val=new}) (43 (801{val=Complex})) (214{val=(}) (800{val=initial}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=complexSolver}) (235{val=.}) (802{val=solveAll}) (214{val=(}) (32 (800{val=ComplexUtils}) (235{val=.}) (802{val=real2Complex}) (214{val=(}) (800{val=coefficients}) (215{val=)})) (234{val=,}) (14 (304{val=new}) (43 (801{val=Complex})) (214{val=(}) (800{val=initial}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Complex})) (59 (801{val=c}) (85{val=[]}) (204{val==}) (32 (800{val=ComplexUtils}) (235{val=.}) (802{val=real2Complex}) (214{val=(}) (32 (802{val=getCoefficients}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=rng}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_19937_C}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (40{val=RealDistribution.Sampler})) (800{val=distribution})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=shuffle}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Collections}) (235{val=.}) (800{val=shuffle}) (214{val=(}) (800{val=points}) (234{val=,}) (14 (304{val=new}) (43 (801{val=JDKRandomAdaptor})) (214{val=(}) (800{val=rng}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=shuffle}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Collections}) (235{val=.}) (800{val=shuffle}) (214{val=(}) (800{val=points}) (234{val=,}) (14 (304{val=new}) (43 (801{val=JDKRandomAdaptor})) (214{val=(}) (800{val=rng}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=shuffle}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Collections}) (235{val=.}) (800{val=shuffle}) (214{val=(}) (800{val=points}) (234{val=,}) (14 (304{val=new}) (43 (801{val=JDKRandomAdaptor})) (214{val=(}) (800{val=rng}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (24 (303{val=for}) (214{val=(}) (58 (39{val=int}) (59 (800{val=i}) (204{val==}) (34{val=NUMBER_CONSTANT}))) (227{val=;}) (27 (800{val=i}) (230{val=<}) (800{val=dim})) (227{val=;}) (37 (800{val=i}) (247{val=++})) (215{val=)}) (8 (218{val={}) (21 (7 (2 (801{val=normalVals}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=gauss}) (235{val=.}) (802{val=sample}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=cachedD}) (204{val==}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealMatrixWithDiagonal}) (214{val=(}) (800{val=realEigenvalues}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=ComplexFormat})) (59 (800{val=cf}) (204{val==}) (32 (800{val=ComplexFormat}) (235{val=.}) (802{val=getInstance}) (214{val=(}) (32 (802{val=getLocale}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=ComplexFormat})) (59 (800{val=cf}) (204{val==}) (32 (800{val=ComplexFormat}) (235{val=.}) (802{val=getInstance}) (214{val=(}) (32 (802{val=getLocale}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=UniformRandomProvider})) (800{val=randomGenerator})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=NaturalRanking}) (214{val=(}) (44 (43 (801{val=UniformRandomProvider})) (800{val=randomGenerator})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=DEFAULT_NAN_STRATEGY}) (234{val=,}) (40{val=TiesStrategy.RANDOM}) (234{val=,}) (800{val=randomGenerator}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=nanStrategy}) (234{val=,}) (800{val=tiesStrategy}) (234{val=,}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_19937_C}) (215{val=)})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=DEFAULT_NAN_STRATEGY}) (234{val=,}) (800{val=tiesStrategy}) (234{val=,}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_19937_C}) (215{val=)})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=UniformRandomProvider})) (800{val=random})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=UniformRandomProvider})) (800{val=random})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=k}) (234{val=,}) (800{val=maxIterations}) (234{val=,}) (800{val=measure}) (234{val=,}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.MT_64}) (215{val=)})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=UniformRandomProvider})) (800{val=random})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=k}) (234{val=,}) (800{val=fuzziness}) (234{val=,}) (800{val=maxIterations}) (234{val=,}) (800{val=measure}) (234{val=,}) (800{val=DEFAULT_EPSILON}) (234{val=,}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.MT_64}) (215{val=)})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UniformRandomProvider})) (59 (800{val=random}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.MT_64}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=UniformRandomProvider})) (800{val=random})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UniformRandomProvider})) (59 (800{val=random}) (204{val==}) (32 (800{val=GeneticAlgorithm}) (235{val=.}) (802{val=getRandomGenerator}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UniformRandomProvider})) (59 (800{val=random}) (204{val==}) (32 (800{val=GeneticAlgorithm}) (235{val=.}) (802{val=getRandomGenerator}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=randGen}) (204{val==}) (32 (802{val=getRandomGenerator}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=UniformRandomProvider})) (800{val=random})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UniformRandomProvider})) (59 (800{val=random}) (204{val==}) (32 (800{val=GeneticAlgorithm}) (235{val=.}) (802{val=getRandomGenerator}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (2 (801{val=d}) (221{val=[}) (800{val=r}) (222{val=]})) (221{val=[}) (800{val=c}) (222{val=]})) (204{val==}) (32 (800{val=random}) (235{val=.}) (802{val=sample}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (24 (303{val=for}) (214{val=(}) (58 (39{val=int}) (59 (800{val=i}) (204{val==}) (34{val=NUMBER_CONSTANT}))) (227{val=;}) (27 (800{val=i}) (230{val=<}) (800{val=size})) (227{val=;}) (37 (800{val=i}) (247{val=++})) (215{val=)}) (8 (218{val={}) (21 (7 (2 (801{val=randn}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=random}) (235{val=.}) (802{val=sample}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=UniformRandomProvider})) (800{val=generator})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnitSphereRandomVectorGenerator})) (59 (800{val=random}) (204{val==}) (14 (304{val=new}) (43 (801{val=UnitSphereRandomVectorGenerator})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnitSphereRandomVectorGenerator})) (59 (800{val=random}) (204{val==}) (14 (304{val=new}) (43 (801{val=UnitSphereRandomVectorGenerator})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=random}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=random}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=random}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=comp}) (204{val==}) (32 (800{val=rand}) (235{val=.}) (802{val=sample}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=dimension}) (234{val=,}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.MT_64}) (215{val=)})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=random}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=random}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=random}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=random}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=random}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=generator}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=generator}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=field}) (204{val==}) (14 (304{val=new}) (43 (801{val=DfpField})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (7 (800{val=generator}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.MT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=random}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.XOR_SHIFT_1024_S}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=rng}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.TWO_CMRES}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=UniformRandomProvider})) (800{val=r})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=r}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=r}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=r}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=r}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=r}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=r}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=r}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=r}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=random}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=random}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=random}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=random}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=random}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=random}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UniformRandomProvider})) (59 (800{val=rng}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (3 (304{val=new}) (5 (43 (801{val=PivotingStrategyInterface})) (85{val=[]})) (4 (218{val={}) (14 (304{val=new}) (43 (801{val=MedianOf3PivotingStrategy})) (216{val=()})) (234{val=,}) (14 (304{val=new}) (43 (801{val=CentralPivotingStrategy})) (216{val=()})) (234{val=,}) (14 (304{val=new}) (43 (801{val=RandomPivotingStrategy})) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=kthSelector}) (204{val==}) (14 (304{val=new}) (43 (801{val=KthSelector})) (214{val=(}) (14 (304{val=new}) (43 (801{val=RandomPivotingStrategy})) (214{val=(}) (40{val=RandomSource.WELL_1024_A}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=RandomGenerator})) (59 (800{val=rng}) (204{val==}) (14 (304{val=new}) (43 (801{val=RngAdaptor})) (214{val=(}) (40{val=RandomSource.MT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=InferenceTestUtils}) (235{val=.}) (802{val=gTest}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=observed}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=out}) (235{val=.}) (802{val=defaultWriteObject}) (216{val=()})) (227{val=;})) (21 (32 (800{val=out}) (235{val=.}) (802{val=writeObject}) (214{val=(}) (32 (32 (800{val=RandomSource}) (235{val=.}) (802{val=saveState}) (214{val=(}) (800{val=random}) (215{val=)})) (235{val=.}) (802{val=getState}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=out}) (235{val=.}) (802{val=defaultWriteObject}) (216{val=()})) (227{val=;})) (21 (32 (800{val=out}) (235{val=.}) (802{val=writeObject}) (214{val=(}) (32 (32 (800{val=RandomSource}) (235{val=.}) (802{val=saveState}) (214{val=(}) (800{val=delegate}) (215{val=)})) (235{val=.}) (802{val=getState}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=rng})) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussianRandomGenerator})) (214{val=(}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_19937_C}) (234{val=,}) (800{val=seed}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=rng}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussianRandomGenerator})) (214{val=(}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.WELL_19937_C}) (234{val=,}) (800{val=seed}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UniformRandomProvider})) (59 (800{val=random}) (204{val==}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.MT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=UniformRandomProvider})) (59 (800{val=random}) (204{val==}) (32 (800{val=GeneticAlgorithm}) (235{val=.}) (802{val=getRandomGenerator}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Neuron})) (231{val=>})) (59 (800{val=exclude}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=out}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=v}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=out}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=m}) (234{val=,}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=out}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=m}) (234{val=,}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=out}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (315{val=this}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=components}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})) (21 (7 (800{val=firstIndex}) (204{val==}) (32 (800{val=primary}) (235{val=.}) (802{val=getDimension}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=components})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ListUnivariateImpl})) (59 (800{val=u}) (204{val==}) (14 (304{val=new}) (43 (801{val=ListUnivariateImpl})) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()})) (234{val=,}) (800{val=transformers}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ListUnivariateImpl})) (59 (800{val=u}) (204{val==}) (14 (304{val=new}) (43 (801{val=ListUnivariateImpl})) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()})) (234{val=,}) (800{val=transformers}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (14 (304{val=new}) (43 (801{val=ListUnivariateImpl})) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()})) (234{val=,}) (800{val=transformers}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Object})) (231{val=>})) (59 (800{val=externalList}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Double})) (231{val=>})) (59 (800{val=valuesList}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Chromosome})) (231{val=>})) (59 (800{val=popList}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=out}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Array2DRowFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=data}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=reference}) (215{val=)})) (234{val=,}) (800{val=sub}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=reference}) (215{val=)})) (234{val=,}) (800{val=sub}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=SummaryStatistics})) (231{val=>})) (59 (800{val=aggregate}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=SummaryStatistics})) (231{val=>})) (59 (800{val=aggregate}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=StatisticalSummary})) (231{val=>})) (59 (800{val=aggregate}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=SummaryStatistics})) (231{val=>})) (59 (800{val=aggregate}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=FieldODEStateAndDerivative})) (232{val=<>})) (214{val=(}) (800{val=time}) (234{val=,}) (800{val=y}) (234{val=,}) (800{val=yDot}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=interpolator})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=PerfectInterpolator})) (232{val=<>})) (214{val=(}) (800{val=problem}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=circles})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=ContinuousOutputFieldModel})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=otherCm}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ContinuousOutputFieldModel})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=ContinuousOutputFieldModel})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=cm}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ContinuousOutputFieldModel})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (14 (304{val=new}) (74 (43 (801{val=SparseFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=data}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertClose}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=m}) (235{val=.}) (802{val=preMultiply}) (214{val=(}) (32 (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=testVector}) (215{val=)})) (235{val=.}) (802{val=toArray}) (216{val=()})) (215{val=)})) (234{val=,}) (800{val=preMultTest}) (234{val=,}) (800{val=normTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertClose}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=testVector}) (234{val=,}) (32 (32 (800{val=m}) (235{val=.}) (802{val=operate}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=testVector}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=toArray}) (216{val=()})) (234{val=,}) (800{val=entryTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertClose}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=m}) (235{val=.}) (802{val=multiply}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (32 (800{val=FractionField}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (800{val=testDataInv}) (215{val=)})) (215{val=)})) (234{val=,}) (800{val=identity}) (234{val=,}) (800{val=entryTolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=RegionFactory})) (230{val=<}) (43 (800{val=Sphere1D})) (231{val=>})) (59 (800{val=factory}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=RegionFactory})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (74 (43 (800{val=SubHyperplane})) (230{val=<}) (43 (800{val=Sphere1D})) (231{val=>})) (231{val=>})) (59 (800{val=boundary}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=ArrayList})) (230{val=<}) (5 (43 (801{val=Object})) (85{val=[]})) (231{val=>})) (59 (800{val=parameters}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=singletons}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (32 (800{val=pmf}) (235{val=.}) (802{val=size}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=GillFieldIntegrator})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (32 (800{val=field}) (235{val=.}) (802{val=getOne}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=ArrayList})) (230{val=<}) (5 (43 (801{val=Object})) (85{val=[]})) (231{val=>})) (59 (800{val=parameters}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=FieldODEStateAndDerivative})) (232{val=<>})) (214{val=(}) (800{val=time}) (234{val=,}) (800{val=interpolatedState}) (234{val=,}) (800{val=interpolatedDerivatives}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=DBSCANClusterer})) (230{val=<}) (43 (800{val=DoublePoint})) (231{val=>})) (59 (800{val=clusterer}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=DBSCANClusterer})) (232{val=<>})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=DBSCANClusterer})) (230{val=<}) (43 (800{val=DoublePoint})) (231{val=>})) (59 (800{val=transformer}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=DBSCANClusterer})) (232{val=<>})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=DBSCANClusterer})) (230{val=<}) (43 (800{val=DoublePoint})) (231{val=>})) (59 (800{val=transformer}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=DBSCANClusterer})) (232{val=<>})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=DBSCANClusterer})) (230{val=<}) (43 (800{val=DoublePoint})) (231{val=>})) (59 (800{val=clusterer}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=DBSCANClusterer})) (232{val=<>})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=DBSCANClusterer})) (230{val=<}) (43 (800{val=DoublePoint})) (231{val=>})) (59 (800{val=transformer}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=DBSCANClusterer})) (232{val=<>})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=HashSet})) (230{val=<}) (43 (800{val=Object})) (231{val=>})) (59 (800{val=sampSet}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=HashSet})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (5 (39{val=double}) (85{val=[]})) (231{val=>})) (59 (800{val=coordinatesList}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Neuron})) (231{val=>})) (59 (800{val=list}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=City})) (231{val=>})) (59 (800{val=cityList}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=CircleVectorial}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=MidpointFieldIntegrator})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (32 (800{val=field}) (235{val=.}) (802{val=getOne}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=FieldODEStateAndDerivative})) (232{val=<>})) (214{val=(}) (800{val=time}) (234{val=,}) (800{val=interpolatedState}) (234{val=,}) (800{val=interpolatedDerivatives}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=convexCellsInsidePoints})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=root}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BSPTree})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Segment})) (231{val=>})) (59 (800{val=segments}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (32 (800{val=list}) (235{val=.}) (802{val=size}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=parametersNames}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})) (21 (32 (800{val=parametersNames}) (235{val=.}) (802{val=addAll}) (214{val=(}) (800{val=names}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=parametersNames}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=d}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=map}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})) (21 (7 (800{val=defaultTransformer}) (204{val==}) (14 (304{val=new}) (43 (801{val=DefaultTransformer})) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=Set})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=oneSet}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashSet})) (232{val=<>})) (214{val=(}) (800{val=one}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=neighbors}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=seeds}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (800{val=neighbors}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Segment})) (231{val=>})) (59 (800{val=segments}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (32 (800{val=list}) (235{val=.}) (802{val=size}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Pair})) (232{val=<>})) (214{val=(}) (800{val=normal}) (234{val=,}) (800{val=jTr}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=constraints}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})) (21 (7 (800{val=sigma}) (204{val==}) (800{val=error})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Long})) (231{val=>})) (59 (800{val=linkEnd}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Chromosome})) (231{val=>})) (59 (800{val=chromosomes}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (32 (800{val=population}) (235{val=.}) (802{val=getChromosomes}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (74 (43 (800{val=Comparable})) (230{val=<}) (76{val=?}) (231{val=>})) (231{val=>})) (59 (800{val=modeList}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=features})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=AtomicReference})) (232{val=<>})) (214{val=(}) (32 (800{val=features}) (235{val=.}) (802{val=clone}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Vector3D})) (231{val=>})) (59 (800{val=reducedSupport}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Vector3D})) (231{val=>})) (59 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=WelzlEncloser})) (230{val=<}) (43 (800{val=Euclidean3D})) (234{val=,}) (43 (800{val=Vector3D})) (231{val=>})) (59 (800{val=encloser}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=WelzlEncloser})) (232{val=<>})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=generator}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=WelzlEncloser})) (230{val=<}) (43 (800{val=Euclidean3D})) (234{val=,}) (43 (800{val=Vector3D})) (231{val=>})) (59 (800{val=encloser}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=WelzlEncloser})) (232{val=<>})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=generator}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=TreeSet})) (230{val=<}) (43 (800{val=Double})) (231{val=>})) (59 (800{val=values}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=TreeSet})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=PairDoubleInteger})) (231{val=>})) (59 (800{val=list}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (800{val=len}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=pData}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=KMeansPlusPlusClusterer})) (230{val=<}) (43 (800{val=DoublePoint})) (231{val=>})) (59 (800{val=transformer}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=KMeansPlusPlusClusterer})) (232{val=<>})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (5 (39{val=double}) (85{val=[]})) (231{val=>})) (59 (800{val=paramsAndChi2}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (27 (800{val=gridSize}) (202{val=*}) (800{val=gridSize})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ThreeEighthesFieldIntegrator})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=step}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (59 (800{val=p2}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Pair})) (232{val=<>})) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Chromosome})) (231{val=>})) (59 (800{val=popList}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Neuron})) (231{val=>})) (59 (800{val=neuronList}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Neuron})) (231{val=>})) (59 (800{val=neurons}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (40{val=copy.linkMap}) (235{val=.}) (802{val=put}) (214{val=(}) (32 (800{val=e}) (235{val=.}) (802{val=getKey}) (216{val=()})) (234{val=,}) (14 (304{val=new}) (74 (43 (801{val=HashSet})) (232{val=<>})) (214{val=(}) (32 (800{val=e}) (235{val=.}) (802{val=getValue}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldHermiteInterpolator})) (230{val=<}) (43 (800{val=BigFraction})) (231{val=>})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=FieldHermiteInterpolator})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldHermiteInterpolator})) (230{val=<}) (43 (800{val=BigFraction})) (231{val=>})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=FieldHermiteInterpolator})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldHermiteInterpolator})) (230{val=<}) (43 (800{val=BigFraction})) (231{val=>})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=FieldHermiteInterpolator})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldHermiteInterpolator})) (230{val=<}) (43 (800{val=Dfp})) (231{val=>})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=FieldHermiteInterpolator})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldHermiteInterpolator})) (230{val=<}) (43 (800{val=Dfp})) (231{val=>})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=FieldHermiteInterpolator})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldHermiteInterpolator})) (230{val=<}) (43 (800{val=Dfp})) (231{val=>})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=FieldHermiteInterpolator})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldHermiteInterpolator})) (230{val=<}) (43 (800{val=Dfp})) (231{val=>})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=FieldHermiteInterpolator})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldHermiteInterpolator})) (230{val=<}) (43 (800{val=BigFraction})) (231{val=>})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=FieldHermiteInterpolator})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldHermiteInterpolator})) (230{val=<}) (43 (800{val=BigFraction})) (231{val=>})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=FieldHermiteInterpolator})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldHermiteInterpolator})) (230{val=<}) (43 (800{val=BigFraction})) (231{val=>})) (59 (800{val=interpolator}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=FieldHermiteInterpolator})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=FieldODEStateAndDerivative})) (232{val=<>})) (214{val=(}) (800{val=time}) (234{val=,}) (800{val=interpolatedState}) (234{val=,}) (800{val=interpolatedDerivatives}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=WeightedObservedPoint})) (231{val=>})) (59 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=Chromosome})) (231{val=>})) (59 (800{val=chromosomes}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=Chromosome})) (231{val=>})) (59 (800{val=chromosomes}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=Chromosome})) (231{val=>})) (59 (800{val=chromosomes}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=Chromosome})) (231{val=>})) (59 (800{val=chromosomes}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=Chromosome})) (231{val=>})) (59 (800{val=chromosomes}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=Chromosome})) (231{val=>})) (59 (800{val=chromosomes}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=Chromosome})) (231{val=>})) (59 (800{val=chromosomes}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (59 (800{val=reducedSupport}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (59 (800{val=list}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (27 (40{val=coordinates.length}) (203{val=/}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (59 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=WelzlEncloser})) (230{val=<}) (43 (800{val=Euclidean2D})) (234{val=,}) (43 (800{val=Vector2D})) (231{val=>})) (59 (800{val=encloser}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=WelzlEncloser})) (232{val=<>})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=generator}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=WelzlEncloser})) (230{val=<}) (43 (800{val=Euclidean2D})) (234{val=,}) (43 (800{val=Vector2D})) (231{val=>})) (59 (800{val=encloser}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=WelzlEncloser})) (232{val=<>})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=generator}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=mapper}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=FieldEquationsMapper})) (232{val=<>})) (214{val=(}) (800{val=mapper}) (234{val=,}) (32 (800{val=secondary}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Map})) (230{val=<}) (43 (800{val=String})) (234{val=,}) (43 (800{val=String})) (231{val=>})) (59 (800{val=referenceRules}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Map})) (230{val=<}) (43 (800{val=String})) (234{val=,}) (43 (800{val=String})) (231{val=>})) (59 (800{val=referenceRules}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FirstOrderFieldDifferentialEquations})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=eqn}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=SinCos})) (232{val=<>})) (214{val=(}) (800{val=field}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (802{val=setUpInterpolator}) (214{val=(}) (800{val=field}) (234{val=,}) (14 (304{val=new}) (74 (43 (801{val=SinCos})) (232{val=<>})) (214{val=(}) (800{val=field}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (219{val=}}))) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (32 (802{val=setUpInterpolator}) (214{val=(}) (800{val=field}) (234{val=,}) (14 (304{val=new}) (74 (43 (801{val=SinCos})) (232{val=<>})) (214{val=(}) (800{val=field}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (219{val=}}))) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=pData}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=innerDistribution}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=EnumeratedDistribution})) (232{val=<>})) (214{val=(}) (32 (802{val=createDistribution}) (214{val=(}) (800{val=singletons}) (234{val=,}) (800{val=probabilities}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ClassicalRungeKuttaFieldIntegrator})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=step}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (14 (304{val=new}) (74 (43 (801{val=FieldLUDecomposition})) (232{val=<>})) (214{val=(}) (800{val=m}) (215{val=)})) (235{val=.}) (802{val=getDeterminant}) (216{val=()})) (235{val=.}) (802{val=doubleValue}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=solver}) (204{val==}) (32 (14 (304{val=new}) (74 (43 (801{val=FieldLUDecomposition})) (232{val=<>})) (214{val=(}) (32 (802{val=createFractionMatrix}) (214{val=(}) (800{val=singular}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=solver}) (204{val==}) (32 (14 (304{val=new}) (74 (43 (801{val=FieldLUDecomposition})) (232{val=<>})) (214{val=(}) (32 (802{val=createFractionMatrix}) (214{val=(}) (800{val=testData}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getSolver}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Chromosome})) (231{val=>})) (59 (800{val=popList}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=NPointCrossover})) (230{val=<}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=npc}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=NPointCrossover})) (232{val=<>})) (214{val=(}) (800{val=order}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=outData}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=outData}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=outData}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=rowDimension}) (234{val=,}) (800{val=columnDimension}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=out}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=nCols}) (234{val=,}) (800{val=nRows}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=outData}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=outData}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=out}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=rows}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=out}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=columns}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=out}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=rows}) (234{val=,}) (40{val=m.columns}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=out}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=rows}) (234{val=,}) (800{val=columns}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=out}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=rows}) (234{val=,}) (800{val=columns}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=out}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=rows}) (234{val=,}) (800{val=columns}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=out}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=rows}) (234{val=,}) (800{val=columns}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=out}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=rows}) (234{val=,}) (800{val=columns}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=out}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=rows}) (234{val=,}) (800{val=columns}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=rowDimension}) (234{val=,}) (800{val=columnDimension}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=loops}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=factors}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=SparseFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=t}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=SparseFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=v}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=SparseFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=data}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=SparseFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=v}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=SparseFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=data}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=SparseFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=v}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=SparseFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=data}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=SparseFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=v}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=SparseFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=data}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=SparseFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=v}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=SparseFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=data}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=SparseFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=v}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=SparseFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=data}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=SparseFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=v}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=SparseFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=data}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=SparseFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=v}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=SparseFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=data}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=SparseFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=v1}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=SparseFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=vec1}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=SparseFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=v1}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=SparseFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=vec1}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=FieldODEState})) (232{val=<>})) (214{val=(}) (800{val=t0}) (234{val=,}) (800{val=y0}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=RegionFactory})) (230{val=<}) (43 (800{val=Sphere1D})) (231{val=>})) (59 (800{val=factory}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=RegionFactory})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=RegionFactory})) (230{val=<}) (43 (800{val=Sphere2D})) (231{val=>})) (59 (800{val=factory}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=RegionFactory})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=RegionFactory})) (230{val=<}) (43 (800{val=Sphere2D})) (231{val=>})) (59 (800{val=factory}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=RegionFactory})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (74 (43 (800{val=SubHyperplane})) (230{val=<}) (43 (800{val=Sphere2D})) (231{val=>})) (231{val=>})) (59 (800{val=boundary}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (74 (43 (800{val=SubHyperplane})) (230{val=<}) (43 (800{val=Sphere2D})) (231{val=>})) (231{val=>})) (59 (800{val=boundary}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=RegionFactory})) (230{val=<}) (43 (800{val=Sphere2D})) (231{val=>})) (59 (800{val=factory}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=RegionFactory})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=RegionFactory})) (230{val=<}) (43 (800{val=Sphere2D})) (231{val=>})) (59 (800{val=factory}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=RegionFactory})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=nonZeroPositions}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=tolerance})) (204{val==}) (800{val=tolerance})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=segments})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Segment})) (231{val=>})) (59 (800{val=loop}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (59 (800{val=loops}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=lines})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=representation})) (204{val==}) (32 (800{val=Collections}) (235{val=.}) (802{val=unmodifiableList}) (214{val=(}) (16 (800{val=copyList}) (233{val=?}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (800{val=representation}) (215{val=)})) (226{val=:}) (800{val=representation})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (59 (800{val=newClusters}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (800{val=k}) (215{val=)}))))
(AST_ROOT_SC2NF (21 (7 (800{val=microsphereData}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (800{val=size}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=Set})) (230{val=<}) (43 (800{val=Neuron})) (231{val=>})) (59 (800{val=list}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashSet})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=listeners})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=CopyOnWriteArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=listeners})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=CopyOnWriteArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=minRatioPositions}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=innerDistribution}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=EnumeratedDistribution})) (232{val=<>})) (214{val=(}) (32 (802{val=createDistribution}) (214{val=(}) (800{val=singletons}) (234{val=,}) (800{val=probabilities}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Interval})) (231{val=>})) (59 (800{val=list}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=LutherFieldIntegrator})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=step}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=FuzzyKMeansClusterer})) (230{val=<}) (43 (800{val=DoublePoint})) (231{val=>})) (59 (800{val=clusterer}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=FuzzyKMeansClusterer})) (232{val=<>})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=SparseFieldMatrix})) (232{val=<>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (234{val=,}) (800{val=rowDimension}) (234{val=,}) (800{val=columnDimension}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=SparseFieldMatrix})) (232{val=<>})) (214{val=(}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=entries}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=OpenIntToFieldHashMap})) (232{val=<>})) (214{val=(}) (32 (802{val=getField}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=entries}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=OpenIntToFieldHashMap})) (232{val=<>})) (214{val=(}) (40{val=other.entries}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=entries}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=OpenIntToFieldHashMap})) (232{val=<>})) (214{val=(}) (800{val=field}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=entries}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=OpenIntToFieldHashMap})) (232{val=<>})) (214{val=(}) (800{val=field}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=steps}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=output}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Before})) (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=evaluator}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=SumOfClusterVariances})) (232{val=<>})) (214{val=(}) (14 (304{val=new}) (43 (801{val=EuclideanDistance})) (216{val=()})) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=OpenIntToFieldHashMap})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=map}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=OpenIntToFieldHashMap})) (232{val=<>})) (214{val=(}) (800{val=field}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=OpenIntToFieldHashMap})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=map}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=OpenIntToFieldHashMap})) (232{val=<>})) (214{val=(}) (800{val=field}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Map})) (230{val=<}) (43 (800{val=Integer})) (234{val=,}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=generated}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=OpenIntToFieldHashMap})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=map}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=OpenIntToFieldHashMap})) (232{val=<>})) (214{val=(}) (800{val=field}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Set})) (230{val=<}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=keysInMap}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashSet})) (232{val=<>})) (214{val=(}) (32 (800{val=javaMap}) (235{val=.}) (802{val=keySet}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=OpenIntToFieldHashMap})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=map}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=OpenIntToFieldHashMap})) (232{val=<>})) (214{val=(}) (800{val=field}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=OpenIntToFieldHashMap})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=map}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=OpenIntToFieldHashMap})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=OpenIntToFieldHashMap})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=map}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=OpenIntToFieldHashMap})) (232{val=<>})) (214{val=(}) (800{val=field}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Map})) (230{val=<}) (43 (800{val=Integer})) (234{val=,}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=map}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Field})) (231{val=>})) (59 (800{val=fields}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=RegionFactory})) (230{val=<}) (43 (800{val=Euclidean1D})) (231{val=>})) (59 (800{val=factory}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=RegionFactory})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (800{val=observations}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=HashMap})) (230{val=<}) (43 (800{val=Neuron})) (234{val=,}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=hit}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=PairNeuronDouble})) (231{val=>})) (59 (800{val=list}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (74 (43 (800{val=CentroidCluster})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (231{val=>})) (59 (800{val=newClusters}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (5 (43 (801{val=Object})) (85{val=[]})) (231{val=>})) (59 (800{val=list}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=FieldODEStateAndDerivative})) (232{val=<>})) (214{val=(}) (800{val=time}) (234{val=,}) (800{val=interpolatedState}) (234{val=,}) (800{val=interpolatedDerivatives}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=GillFieldIntegrator})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=step}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=FieldRotation})) (232{val=<>})) (214{val=(}) (800{val=mds}) (234{val=,}) (800{val=threshold}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldRotation})) (230{val=<}) (43 (800{val=DerivativeStructure})) (231{val=>})) (59 (800{val=quat}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=FieldRotation})) (232{val=<>})) (214{val=(}) (800{val=u1}) (234{val=,}) (800{val=u2}) (234{val=,}) (800{val=v1}) (234{val=,}) (800{val=v2}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=t}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=v}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=data}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=v}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=data}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=v}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=data}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=v}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=data}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=v}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=data}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=v}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=data}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=v}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=data}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=v}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=data}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=v}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=vec1}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=ArrayFieldVector})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=v1}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=vec1}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=FieldVectorTestImpl})) (232{val=<>})) (214{val=(}) (800{val=out}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Object})) (231{val=>})) (59 (800{val=orig}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=hParam})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (59 (800{val=regions}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=BoundaryProjection})) (232{val=<>})) (214{val=(}) (800{val=original}) (234{val=,}) (800{val=projected}) (234{val=,}) (800{val=offset}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=binStats}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=MidpointFieldIntegrator})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=step}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=RegionFactory})) (230{val=<}) (43 (800{val=Euclidean2D})) (231{val=>})) (59 (800{val=factory}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=RegionFactory})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=surrounded})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=tolerance})) (204{val==}) (800{val=tolerance})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=FieldODEStateAndDerivative})) (232{val=<>})) (214{val=(}) (800{val=time}) (234{val=,}) (800{val=estimatedState}) (234{val=,}) (800{val=estimatedDerivatives}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=nordsieck})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (32 (800{val=nordsieck}) (235{val=.}) (802{val=getData}) (216{val=()})) (234{val=,}) (9{val=false}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (59 (800{val=boundary}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=BSPTree})) (232{val=<>})) (214{val=(}) (40{val=Boolean.FALSE}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=SparseFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=res}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=SparseFieldVector})) (232{val=<>})) (214{val=(}) (315{val=this}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=res}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=SparseFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=virtualSize}) (234{val=,}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=SparseFieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=res}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=SparseFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=virtualSize}) (234{val=,}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=SparseFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=res}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=SparseFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=SparseFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=res}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=SparseFieldVector})) (232{val=<>})) (214{val=(}) (315{val=this}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=SparseFieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=res}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=SparseFieldVector})) (232{val=<>})) (214{val=(}) (315{val=this}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=SparseFieldVector})) (232{val=<>})) (214{val=(}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=res}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=SparseFieldVector})) (232{val=<>})) (214{val=(}) (315{val=this}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldVector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=res}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=SparseFieldVector})) (232{val=<>})) (214{val=(}) (315{val=this}) (234{val=,}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=entries}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=OpenIntToFieldHashMap})) (232{val=<>})) (214{val=(}) (32 (800{val=v}) (235{val=.}) (802{val=getEntries}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=entries}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=OpenIntToFieldHashMap})) (232{val=<>})) (214{val=(}) (800{val=field}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=entries}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=OpenIntToFieldHashMap})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=expectedSize}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=entries}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=OpenIntToFieldHashMap})) (232{val=<>})) (214{val=(}) (40{val=v.entries}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=entries}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=OpenIntToFieldHashMap})) (232{val=<>})) (214{val=(}) (800{val=field}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ClassicalRungeKuttaFieldIntegrator})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (32 (800{val=field}) (235{val=.}) (802{val=getOne}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=ListUnivariateImpl}) (216{val=()}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=FieldODEStateAndDerivative})) (232{val=<>})) (214{val=(}) (800{val=time}) (234{val=,}) (800{val=interpolatedState}) (234{val=,}) (800{val=interpolatedDerivatives}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=TestFieldProblem3})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=pb}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=TestFieldProblem3})) (232{val=<>})) (214{val=(}) (800{val=field}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=jacobianProviders})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=LutherFieldIntegrator})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (32 (800{val=field}) (235{val=.}) (802{val=getOne}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Frequency})) (231{val=>})) (59 (800{val=coll}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ThreeEighthesFieldIntegrator})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (32 (800{val=field}) (235{val=.}) (802{val=getOne}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=newRepr}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (32 (800{val=origChrom}) (235{val=.}) (802{val=getRepresentation}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=RegionFactory})) (230{val=<}) (43 (800{val=Euclidean2D})) (231{val=>})) (59 (800{val=factory}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=RegionFactory})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=FieldODEStateAndDerivative})) (232{val=<>})) (214{val=(}) (800{val=time}) (234{val=,}) (800{val=interpolatedState}) (234{val=,}) (800{val=interpolatedDerivatives}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=SimplePointChecker})) (230{val=<}) (43 (800{val=PointValuePair})) (231{val=>})) (59 (800{val=checker}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=SimplePointChecker})) (232{val=<>})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=SimplePointChecker})) (230{val=<}) (43 (800{val=PointValuePair})) (231{val=>})) (59 (800{val=checker}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=SimplePointChecker})) (232{val=<>})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=max}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=SummaryStatistics})) (231{val=>})) (59 (800{val=categoryDataSummaryStatistics}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (32 (800{val=categoryData}) (235{val=.}) (802{val=size}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=String})) (231{val=>})) (59 (800{val=lines}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Number})) (231{val=>})) (59 (800{val=components}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=EulerFieldIntegrator})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=step}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=Double})) (231{val=>})) (59 (800{val=list}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Vector3D})) (231{val=>})) (59 (800{val=support}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=CircleScalar}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=seq}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=seq}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=seq}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=seq}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=seq}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=seq}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=seq}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=seq}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=EventHandler})) (231{val=>})) (59 (800{val=list}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (32 (800{val=eventsStates}) (235{val=.}) (802{val=size}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=WeightedObservedPoint})) (231{val=>})) (59 (800{val=observations}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (800{val=unsorted}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=chromosomes})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (800{val=populationLimit}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=BlockFieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=data}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=reference}) (215{val=)})) (234{val=,}) (800{val=sub}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=reference}) (215{val=)})) (234{val=,}) (800{val=sub}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=subTestData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BlockFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=testData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=FieldODEStateAndDerivative})) (232{val=<>})) (214{val=(}) (800{val=time}) (234{val=,}) (800{val=interpolatedState}) (234{val=,}) (800{val=interpolatedDerivatives}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=RegionFactory})) (230{val=<}) (43 (800{val=Sphere1D})) (231{val=>})) (59 (800{val=factory}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=RegionFactory})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (32 (800{val=edgeToNode}) (235{val=.}) (802{val=keySet}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=FieldODEStateAndDerivative})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=stateTmp}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=FieldODEStateAndDerivative})) (232{val=<>})) (214{val=(}) (800{val=stepEnd}) (234{val=,}) (800{val=yTmp}) (234{val=,}) (800{val=yDotTmp}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ListUnivariateImpl})) (59 (800{val=u}) (204{val==}) (14 (304{val=new}) (43 (801{val=ListUnivariateImpl})) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Object})) (231{val=>})) (59 (800{val=list}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Object})) (231{val=>})) (59 (800{val=externalList}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=FieldODEStateAndDerivative})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=state0}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=FieldODEStateAndDerivative})) (232{val=<>})) (214{val=(}) (800{val=t0}) (234{val=,}) (800{val=y0}) (234{val=,}) (800{val=y0Dot}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=RegionFactory})) (230{val=<}) (43 (800{val=Euclidean3D})) (231{val=>})) (59 (800{val=factory}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=RegionFactory})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integrator}) (235{val=.}) (802{val=integrate}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=FieldExpandableODE})) (232{val=<>})) (214{val=(}) (800{val=problem}) (215{val=)})) (234{val=,}) (32 (800{val=problem}) (235{val=.}) (802{val=getInitialState}) (216{val=()})) (234{val=,}) (32 (800{val=problem}) (235{val=.}) (802{val=getFinalTime}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=FieldVector3D})) (232{val=<>})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (315{val=this}) (234{val=,}) (800{val=factor}) (234{val=,}) (800{val=v}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Object})) (231{val=>})) (59 (800{val=list}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Complex})) (231{val=>})) (59 (800{val=result}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=FieldRotation})) (232{val=<>})) (214{val=(}) (800{val=mds}) (234{val=,}) (800{val=threshold}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldRotation})) (230{val=<}) (43 (800{val=Dfp})) (231{val=>})) (59 (800{val=quat}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=FieldRotation})) (232{val=<>})) (214{val=(}) (800{val=u1}) (234{val=,}) (800{val=u2}) (234{val=,}) (800{val=v1}) (234{val=,}) (800{val=v2}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=OnePointCrossover})) (230{val=<}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=opc}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=OnePointCrossover})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=BSPTree})) (230{val=<}) (43 (800{val=Sphere1D})) (231{val=>})) (59 (800{val=tree}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=BSPTree})) (232{val=<>})) (214{val=(}) (40{val=Boolean.FALSE}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Arc})) (231{val=>})) (59 (800{val=list}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Double})) (231{val=>})) (59 (800{val=newRepr}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (800{val=repr}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=FieldODEStateAndDerivative})) (232{val=<>})) (214{val=(}) (800{val=time}) (234{val=,}) (800{val=interpolatedState}) (234{val=,}) (800{val=interpolatedDerivatives}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Map})) (230{val=<}) (43 (800{val=Integer})) (234{val=,}) (43 (800{val=Double})) (231{val=>})) (59 (800{val=generated}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Set})) (230{val=<}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=keysInMap}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashSet})) (232{val=<>})) (214{val=(}) (32 (800{val=javaMap}) (235{val=.}) (802{val=keySet}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Map})) (230{val=<}) (43 (800{val=Integer})) (234{val=,}) (43 (800{val=Double})) (231{val=>})) (59 (800{val=map}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=Set})) (230{val=<}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=usedBasicRows}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashSet})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=Set})) (230{val=<}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=columnsToDrop}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=TreeSet})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=LinearConstraint})) (231{val=>})) (59 (800{val=normalized}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (32 (800{val=originalConstraints}) (235{val=.}) (802{val=size}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=ArrayList})) (230{val=<}) (5 (43 (801{val=Object})) (85{val=[]})) (231{val=>})) (59 (800{val=parameters}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Pair})) (232{val=<>})) (214{val=(}) (800{val=k}) (234{val=,}) (800{val=v}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Cluster}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (59 (800{val=close}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=FieldODEStateAndDerivative})) (232{val=<>})) (214{val=(}) (800{val=time}) (234{val=,}) (800{val=interpolatedState}) (234{val=,}) (800{val=interpolatedDerivatives}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=HashSet})) (230{val=<}) (43 (800{val=Double})) (231{val=>})) (59 (800{val=values}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=HashSet})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (32 (800{val=BigFractionField}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (234{val=,}) (800{val=Hdata}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=TestFieldProblem3})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=pb}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=TestFieldProblem3})) (232{val=<>})) (214{val=(}) (800{val=field}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=BoundarySizeVisitor})) (230{val=<}) (43 (800{val=S})) (231{val=>})) (59 (800{val=visitor}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=BoundarySizeVisitor})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=BoundaryProjector})) (230{val=<}) (43 (800{val=S})) (234{val=,}) (43 (800{val=T})) (231{val=>})) (59 (800{val=projector}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=BoundaryProjector})) (232{val=<>})) (214{val=(}) (800{val=point}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=tree}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BSPTree})) (232{val=<>})) (214{val=(}) (40{val=Boolean.FALSE}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=tree})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=BSPTree})) (232{val=<>})) (214{val=(}) (40{val=Boolean.TRUE}) (215{val=)}))) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=tolerance})) (204{val==}) (800{val=tolerance})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=baseSequence}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (800{val=l}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=S})) (231{val=>})) (59 (800{val=origDataCopy}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (800{val=originalData}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=S})) (231{val=>})) (59 (800{val=sortedData}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (800{val=data}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Double})) (231{val=>})) (59 (800{val=repr}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (800{val=l}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Double})) (231{val=>})) (59 (800{val=repr}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (800{val=l}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Double})) (231{val=>})) (59 (800{val=sortedRepr}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (32 (802{val=getRepresentation}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=distribution}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (59 (800{val=quadrilateral}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (59 (800{val=reducedPoints}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (800{val=quadrilateral}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=rList}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (800{val=length}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=context}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (59 (800{val=support}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=Double})) (231{val=>})) (59 (800{val=integrationTestPoints}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (59 (800{val=edges}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (59 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=FieldODEState})) (232{val=<>})) (214{val=(}) (32 (800{val=state}) (235{val=.}) (802{val=getTime}) (216{val=()})) (234{val=,}) (800{val=y}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=ArrayList})) (230{val=<}) (43 (800{val=Integer})) (231{val=>})) (59 (800{val=out}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=Fraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=fData}) (234{val=,}) (9{val=false}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=BigFraction})) (231{val=>})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=bfData}) (234{val=,}) (9{val=false}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldBracketingNthOrderBrentSolver})) (230{val=<}) (43 (800{val=Dfp})) (231{val=>})) (59 (800{val=solver}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=FieldBracketingNthOrderBrentSolver})) (232{val=<>})) (214{val=(}) (800{val=relativeAccuracy}) (234{val=,}) (800{val=absoluteAccuracy}) (234{val=,}) (800{val=functionValueAccuracy}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldBracketingNthOrderBrentSolver})) (230{val=<}) (43 (800{val=Dfp})) (231{val=>})) (59 (800{val=solver}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=FieldBracketingNthOrderBrentSolver})) (232{val=<>})) (214{val=(}) (800{val=relativeAccuracy}) (234{val=,}) (800{val=absoluteAccuracy}) (234{val=,}) (800{val=functionValueAccuracy}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (14 (304{val=new}) (74 (43 (801{val=FieldBracketingNthOrderBrentSolver})) (232{val=<>})) (214{val=(}) (800{val=relativeAccuracy}) (234{val=,}) (800{val=absoluteAccuracy}) (234{val=,}) (800{val=functionValueAccuracy}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (59 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (800{val=size}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (59 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (59 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (59 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (59 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (59 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (59 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (59 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (59 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (59 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (59 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Vector2D})) (231{val=>})) (59 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=ArrayList})) (230{val=<}) (74 (43 (800{val=SubHyperplane})) (230{val=<}) (43 (800{val=Euclidean2D})) (231{val=>})) (231{val=>})) (59 (800{val=edges}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=RegionFactory})) (230{val=<}) (43 (800{val=Euclidean2D})) (231{val=>})) (59 (800{val=factory}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=RegionFactory})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=WeightedObservedPoint})) (231{val=>})) (59 (800{val=observations}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (214{val=(}) (800{val=unsorted}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=steps}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=Set})) (230{val=<}) (43 (800{val=City})) (231{val=>})) (59 (800{val=unique}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashSet})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (74 (43 (800{val=Future})) (230{val=<}) (76{val=?}) (231{val=>})) (231{val=>})) (59 (800{val=execOutput}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=certifiedValues}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=EulerFieldIntegrator})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (32 (800{val=field}) (235{val=.}) (802{val=getOne}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=FieldMatrix})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=identity}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=m}) (234{val=,}) (800{val=m}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=bp}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=bp}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=ArrayFieldVector})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=bp}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (74 (43 (801{val=Solver})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=lu}) (234{val=,}) (800{val=pivot}) (234{val=,}) (800{val=singular}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=cachedP}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=m}) (234{val=,}) (800{val=m}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=cachedU}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=m}) (234{val=,}) (800{val=m}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=cachedL}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=Array2DRowFieldMatrix})) (232{val=<>})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=m}) (234{val=,}) (800{val=m}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Chromosome})) (231{val=>})) (59 (800{val=popChr}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Neuron})) (231{val=>})) (59 (800{val=exclude}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashSet})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Neuron})) (231{val=>})) (59 (800{val=exclude}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashSet})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=BigFraction})) (231{val=>})) (59 (800{val=list}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=derivatives})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=derivatives})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (59 (800{val=tasks}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (74 (43 (800{val=FieldODEStateAndDerivative})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=stateTmp}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=FieldODEStateAndDerivative})) (232{val=<>})) (214{val=(}) (800{val=stepEnd}) (234{val=,}) (800{val=yTmp}) (234{val=,}) (800{val=yDotTmp}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (59 (800{val=population}) (204{val==}) (14 (304{val=new}) (43 (801{val=ListPopulation})) (214{val=(}) (800{val=chromosomes}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}) (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=Population})) (802{val=nextGeneration}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (219{val=}})))))
(AST_ROOT_SC2NF (59 (800{val=population}) (204{val==}) (14 (304{val=new}) (43 (801{val=ListPopulation})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}) (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=Population})) (802{val=nextGeneration}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (219{val=}})))))
(AST_ROOT_SC2NF (59 (800{val=population}) (204{val==}) (14 (304{val=new}) (43 (801{val=ListPopulation})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}) (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=Population})) (802{val=nextGeneration}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (219{val=}})))))
(AST_ROOT_SC2NF (59 (800{val=population}) (204{val==}) (14 (304{val=new}) (43 (801{val=ListPopulation})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}) (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=Population})) (802{val=nextGeneration}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (219{val=}})))))
(AST_ROOT_SC2NF (21 (14 (304{val=new}) (43 (801{val=ListPopulation})) (214{val=(}) (800{val=chromosomes}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}) (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=Population})) (802{val=nextGeneration}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (219{val=}}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (14 (304{val=new}) (43 (801{val=ListPopulation})) (214{val=(}) (800{val=chromosomes}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=Population})) (802{val=nextGeneration}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (219{val=}}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (14 (304{val=new}) (43 (801{val=ListPopulation})) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=Population})) (802{val=nextGeneration}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (219{val=}}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (59 (800{val=population}) (204{val==}) (14 (304{val=new}) (43 (801{val=ListPopulation})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}) (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=Population})) (802{val=nextGeneration}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (219{val=}})))))
(AST_ROOT_SC2NF (59 (800{val=population}) (204{val==}) (14 (304{val=new}) (43 (801{val=ListPopulation})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}) (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=Population})) (802{val=nextGeneration}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (219{val=}})))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=StepInterpolator})) (802{val=copy}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Chromosome})) (59 (800{val=p1c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Chromosome})) (216{val=()}) (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=fitness}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))) (219{val=}})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Chromosome})) (59 (800{val=p2c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Chromosome})) (216{val=()}) (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=fitness}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))) (219{val=}})))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=StepInterpolator})) (802{val=copy}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Chromosome})) (59 (800{val=p1c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Chromosome})) (216{val=()}) (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=fitness}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))) (219{val=}})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Chromosome})) (59 (800{val=p2c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Chromosome})) (216{val=()}) (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=fitness}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))) (219{val=}})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Chromosome})) (59 (800{val=p1c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Chromosome})) (216{val=()}) (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=fitness}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))) (219{val=}})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Chromosome})) (59 (800{val=p2c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Chromosome})) (216{val=()}) (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=fitness}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))) (219{val=}})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Chromosome})) (59 (800{val=p1c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Chromosome})) (216{val=()}) (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=fitness}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))) (219{val=}})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Chromosome})) (59 (800{val=p2c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Chromosome})) (216{val=()}) (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=fitness}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))) (219{val=}})))) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (39{val=int}) (800{val=val})) (226{val=:}) (32 (315{val=this}) (235{val=.}) (802{val=getRepresentation}) (216{val=()})) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=val}) (242{val=!=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (37 (800{val=num}) (247{val=++})) (227{val=;})) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (37 (800{val=count}) (247{val=++})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (500{val=break;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (37 (800{val=count}) (247{val=++})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (500{val=break;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (2 (801{val=counts}) (221{val=[}) (800{val=i}) (222{val=]})) (236{val===}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (500{val=continue;}) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=random}) (235{val=.}) (802{val=restoreState}) (214{val=(}) (800{val=state}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=out}) (235{val=.}) (802{val=defaultWriteObject}) (216{val=()})) (227{val=;})) (21 (32 (800{val=out}) (235{val=.}) (802{val=writeObject}) (214{val=(}) (32 (36 (214{val=(}) (11 (214{val=(}) (43 (40{val=RandomSource.State})) (215{val=)}) (32 (800{val=random}) (235{val=.}) (802{val=saveState}) (216{val=()}))) (215{val=)})) (235{val=.}) (802{val=getState}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=delegate}) (235{val=.}) (802{val=restoreState}) (214{val=(}) (800{val=state}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=out}) (235{val=.}) (802{val=defaultWriteObject}) (216{val=()})) (227{val=;})) (21 (32 (800{val=out}) (235{val=.}) (802{val=writeObject}) (214{val=(}) (32 (36 (214{val=(}) (11 (214{val=(}) (43 (40{val=RandomSource.State})) (215{val=)}) (32 (800{val=delegate}) (235{val=.}) (802{val=saveState}) (216{val=()}))) (215{val=)})) (235{val=.}) (802{val=getState}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=n}) (204{val==}) (27 (800{val=upperMinusLower}) (200{val=+}) (34{val=NUMBER_CONSTANT}))) (227{val=;})) (41 (329{val=return}) (27 (36 (214{val=(}) (27 (27 (800{val=n}) (202{val=*}) (800{val=n})) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (203{val=/}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=upperPlusLower})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (36 (214{val=(}) (27 (27 (800{val=x}) (201{val=-}) (800{val=lower})) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (203{val=/}) (36 (214{val=(}) (27 (800{val=upperMinusLower}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (36 (214{val=(}) (27 (800{val=upperMinusLower}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=out}) (235{val=.}) (802{val=defaultWriteObject}) (216{val=()})) (227{val=;})) (21 (32 (800{val=out}) (235{val=.}) (802{val=writeObject}) (214{val=(}) (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=RandomProviderDefaultState})) (215{val=)}) (32 (800{val=delegate}) (235{val=.}) (802{val=saveState}) (216{val=()}))) (215{val=)})) (235{val=.}) (802{val=getState}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=out}) (235{val=.}) (802{val=defaultWriteObject}) (216{val=()})) (227{val=;})) (21 (32 (800{val=out}) (235{val=.}) (802{val=writeObject}) (214{val=(}) (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=RandomProviderDefaultState})) (215{val=)}) (32 (800{val=random}) (235{val=.}) (802{val=saveState}) (216{val=()}))) (215{val=)})) (235{val=.}) (802{val=getState}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=shuffle}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=ListSampler}) (235{val=.}) (800{val=shuffle}) (214{val=(}) (800{val=rng}) (234{val=,}) (800{val=points}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=shuffle}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=ListSampler}) (235{val=.}) (800{val=shuffle}) (214{val=(}) (800{val=rng}) (234{val=,}) (800{val=points}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=shuffle}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=ListSampler}) (235{val=.}) (800{val=shuffle}) (214{val=(}) (800{val=rng}) (234{val=,}) (800{val=points}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=delta}) (204{val==}) (27 (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=Coordinates1D})) (215{val=)}) (800{val=point})) (215{val=)})) (235{val=.}) (802{val=getX}) (216{val=()})) (201{val=-}) (32 (800{val=location}) (235{val=.}) (802{val=getX}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates1D})) (800{val=location})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (43 (800{val=Circle})) (59 (800{val=otherC}) (204{val==}) (11 (214{val=(}) (43 (800{val=Circle})) (215{val=)}) (800{val=other}))) (227{val=;})) (41 (329{val=return}) (27 (32 (800{val=Coordinates3D}) (235{val=.}) (802{val=dotProduct}) (214{val=(}) (800{val=pole}) (234{val=,}) (40{val=otherC.pole}) (215{val=)})) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=direction})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=pole})))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=Coordinates3D})) (85{val=[]})) (800{val=points})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Coordinates3D})) (231{val=>})) (800{val=vertices})))
(AST_ROOT_SC2NF (32 (800{val=Arrays}) (235{val=.}) (802{val=asList}) (214{val=(}) (40{val=Coordinates3D.ZERO}) (234{val=,}) (40{val=Coordinates3D.PLUS_I}) (234{val=,}) (40{val=Coordinates3D.PLUS_J}) (234{val=,}) (40{val=Coordinates3D.PLUS_K}) (215{val=)})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=ps}) (235{val=.}) (802{val=checkPoint}) (214{val=(}) (40{val=Coordinates3D.ZERO}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NullPointerException})) (800{val=npe})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Coordinates2D})) (59 (800{val=tmp}) (204{val==}) (2 (801{val=loop}) (221{val=[}) (800{val=min}) (222{val=]}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (5 (43 (801{val=Coordinates2D})) (85{val=[]})) (800{val=bLoop})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=axis})))
(AST_ROOT_SC2NF (44 (43 (801{val=Coordinates3D})) (800{val=axis})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates2D})) (59 (800{val=oneTwo}) (204{val==}) (14 (304{val=new}) (43 (801{val=Coordinates2D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (14 (304{val=new}) (43 (801{val=Coordinates2D})) (214{val=(}) (800{val=v}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (43 (800{val=Coordinates1D})) (59 (800{val=p1}) (204{val==}) (11 (214{val=(}) (43 (800{val=Coordinates1D})) (215{val=)}) (800{val=vector}))) (227{val=;})) (41 (329{val=return}) (32 (802{val=format}) (214{val=(}) (800{val=toAppendTo}) (234{val=,}) (800{val=pos}) (234{val=,}) (32 (800{val=p1}) (235{val=.}) (802{val=getX}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates2D})) (59 (800{val=expected}) (204{val==}) (14 (304{val=new}) (43 (801{val=Coordinates2D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates2D})) (59 (800{val=c}) (204{val==}) (40{val=Coordinates2D.NEGATIVE_INFINITY})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates2D})) (59 (800{val=c}) (204{val==}) (40{val=Coordinates2D.POSITIVE_INFINITY})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates2D})) (59 (800{val=c}) (204{val==}) (40{val=Coordinates2D.NaN})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates2D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Coordinates2D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates2D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Coordinates2D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates2D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Coordinates2D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates2D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Coordinates2D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates2D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Coordinates2D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Line})) (214{val=(}) (14 (304{val=new}) (43 (801{val=Coordinates2D})) (214{val=(}) (32 (802{val=getNumber}) (216{val=()})) (234{val=,}) (32 (802{val=getNumber}) (216{val=()})) (215{val=)})) (234{val=,}) (32 (802{val=getNumber}) (216{val=()})) (234{val=,}) (32 (802{val=getNumber}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=OrientedPoint})) (214{val=(}) (14 (304{val=new}) (43 (801{val=Coordinates1D})) (214{val=(}) (32 (802{val=getNumber}) (216{val=()})) (215{val=)})) (234{val=,}) (32 (802{val=getBoolean}) (216{val=()})) (234{val=,}) (32 (802{val=getNumber}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Circle})) (214{val=(}) (14 (304{val=new}) (43 (801{val=Coordinates3D})) (214{val=(}) (32 (802{val=getNumber}) (216{val=()})) (234{val=,}) (32 (802{val=getNumber}) (216{val=()})) (234{val=,}) (32 (802{val=getNumber}) (216{val=()})) (215{val=)})) (234{val=,}) (32 (802{val=getNumber}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v1})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v2})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v1})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v2})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v1})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v2})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v1})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v2})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v1})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v2})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v1})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v2})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v1})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v2})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=u})))
(AST_ROOT_SC2NF (44 (43 (801{val=Coordinates1D})) (800{val=v})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates1D})) (59 (800{val=v}) (204{val==}) (14 (304{val=new}) (43 (801{val=Coordinates1D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates1D})) (59 (800{val=v}) (204{val==}) (14 (304{val=new}) (43 (801{val=Coordinates1D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Space})) (59 (800{val=space}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=Coordinates1D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=getSpace}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=space}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Coordinates3D})) (59 (800{val=p}) (204{val==}) (32 (800{val=h}) (235{val=.}) (802{val=toSpace}) (214{val=(}) (40{val=Coordinates2D.ZERO}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Coordinates2D})) (59 (800{val=p}) (204{val==}) (32 (800{val=h}) (235{val=.}) (802{val=toSpace}) (214{val=(}) (40{val=Coordinates1D.ZERO}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (800{val=Coordinates2D})) (59 (800{val=p2}) (204{val==}) (11 (214{val=(}) (43 (800{val=Coordinates2D})) (215{val=)}) (800{val=vector}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates3D})) (59 (800{val=c}) (204{val==}) (40{val=Coordinates3D.NEGATIVE_INFINITY})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates3D})) (59 (800{val=c}) (204{val==}) (40{val=Coordinates3D.POSITIVE_INFINITY})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates3D})) (59 (800{val=c}) (204{val==}) (40{val=Coordinates3D.NaN})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates1D})) (59 (800{val=expected}) (204{val==}) (14 (304{val=new}) (43 (801{val=Coordinates1D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates1D})) (59 (800{val=c}) (204{val==}) (40{val=Coordinates1D.NEGATIVE_INFINITY})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates1D})) (59 (800{val=c}) (204{val==}) (40{val=Coordinates1D.POSITIVE_INFINITY})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates1D})) (59 (800{val=c}) (204{val==}) (40{val=Coordinates1D.NaN})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates1D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Coordinates1D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates1D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Coordinates1D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates1D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Coordinates1D})) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates1D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Coordinates1D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates1D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Coordinates1D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Coordinates1D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Coordinates1D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=angle}) (204{val==}) (32 (800{val=Coordinates3D}) (235{val=.}) (800{val=angle}) (214{val=(}) (32 (800{val=thisCircle}) (235{val=.}) (802{val=getPole}) (216{val=()})) (234{val=,}) (32 (800{val=otherCircle}) (235{val=.}) (802{val=getPole}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Coordinates3D}) (235{val=.}) (802{val=angle}) (214{val=(}) (40{val=p1.vector}) (234{val=,}) (40{val=p2.vector}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=vector})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=Coordinates3D})) (215{val=)}) (800{val=point})) (215{val=)})) (235{val=.}) (802{val=dotProduct}) (214{val=(}) (800{val=w}) (215{val=)})) (200{val=+}) (800{val=originOffset})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=p})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=translation})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=angle}) (204{val==}) (32 (800{val=Coordinates3D}) (235{val=.}) (800{val=angle}) (214{val=(}) (800{val=w}) (234{val=,}) (40{val=plane.w}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Coordinates3D})) (59 (800{val=tmp}) (204{val==}) (800{val=u})) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=normal})))
(AST_ROOT_SC2NF (44 (43 (801{val=Coordinates3D})) (800{val=v})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (14 (304{val=new}) (43 (801{val=Coordinates3D})) (214{val=(}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (219{val=}}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Space})) (59 (800{val=space}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=Coordinates3D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=getSpace}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=Coordinates1D})) (215{val=)}) (32 (800{val=set}) (235{val=.}) (802{val=getBarycenter}) (216{val=()}))) (215{val=)})) (235{val=.}) (802{val=getX}) (216{val=()})) (234{val=,}) (40{val=Precision.EPSILON}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates2D})) (800{val=p})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates2D})) (800{val=p})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates2D})) (800{val=p})))
(AST_ROOT_SC2NF (60 (43 (800{val=Coordinates2D})) (59 (800{val=p2}) (204{val==}) (11 (214{val=(}) (43 (800{val=Coordinates2D})) (215{val=)}) (800{val=point}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates2D})) (800{val=p})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates2D})) (800{val=p})))
(AST_ROOT_SC2NF (31 (802{val=TranslationTransform}) (214{val=(}) (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=translation})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=translation})) (204{val==}) (800{val=translation})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=translation})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=center})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=center})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=point})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setSize}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setBarycenter}) (214{val=(}) (11 (214{val=(}) (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=Euclidean3D})) (231{val=>})) (215{val=)}) (14 (304{val=new}) (43 (801{val=Coordinates3D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Coordinates3D})) (231{val=>})) (800{val=vertices})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Coordinates3D})) (231{val=>})) (800{val=vertices})))
(AST_ROOT_SC2NF (60 (43 (801{val=Circle})) (59 (800{val=circle}) (204{val==}) (14 (304{val=new}) (43 (801{val=Circle})) (214{val=(}) (40{val=Coordinates3D.PLUS_K}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=u})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=u})))
(AST_ROOT_SC2NF (44 (83{val=final}) (5 (43 (801{val=Coordinates2D})) (85{val=[]})) (800{val=vertices})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Coordinates2D})) (231{val=>})) (800{val=points})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=summedBarycenter})) (204{val==}) (40{val=Coordinates3D.ZERO})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Coordinates2D}) (235{val=.}) (802{val=angle}) (214{val=(}) (40{val=p1.vector}) (234{val=,}) (40{val=p2.vector}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates2D})) (800{val=vector})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=FieldVector3D}) (235{val=.}) (802{val=angle}) (214{val=(}) (800{val=v1}) (234{val=,}) (40{val=Coordinates3D.ZERO}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathArithmeticException})) (800{val=mae})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Coordinates2D})) (800{val=p})) (226{val=:}) (32 (800{val=factory}) (235{val=.}) (802{val=generate}) (214{val=(}) (800{val=numPoints}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=circle}) (235{val=.}) (802{val=addPoint}) (214{val=(}) (32 (800{val=p}) (235{val=.}) (802{val=getX}) (216{val=()})) (234{val=,}) (32 (800{val=p}) (235{val=.}) (802{val=getY}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Coordinates2D})) (800{val=p})) (226{val=:}) (32 (800{val=factory}) (235{val=.}) (802{val=generate}) (214{val=(}) (800{val=numPoints}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=circle}) (235{val=.}) (802{val=addPoint}) (214{val=(}) (32 (800{val=p}) (235{val=.}) (802{val=getX}) (216{val=()})) (234{val=,}) (32 (800{val=p}) (235{val=.}) (802{val=getY}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=SphericalCoordinates})) (214{val=(}) (14 (304{val=new}) (43 (801{val=Coordinates3D})) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (234{val=,}) (800{val=z}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates2D})) (800{val=point})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates2D})) (800{val=location})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (800{val=Coordinates2D})) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=vertices})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (800{val=Coordinates2D})) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=vertices})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=pole})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=p})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=angle}) (204{val==}) (32 (800{val=Coordinates3D}) (235{val=.}) (800{val=angle}) (214{val=(}) (800{val=direction}) (234{val=,}) (40{val=line.direction}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Coordinates3D})) (800{val=point})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Coordinates2D})) (231{val=>})) (800{val=points})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Coordinates2D})) (231{val=>})) (800{val=points})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Coordinates2D})) (231{val=>})) (800{val=points})))
(AST_ROOT_SC2NF (60 (43 (801{val=ConvexHull2D})) (59 (800{val=hull}) (204{val==}) (32 (800{val=generator}) (235{val=.}) (802{val=generate}) (214{val=(}) (32 (800{val=Collections}) (235{val=.}) (230{val=<}) (43 (800{val=Coordinates2D})) (231{val=>}) (802{val=emptyList}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=x}) (204{val==}) (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=Coordinates1D})) (215{val=)}) (800{val=point})) (215{val=)})) (235{val=.}) (802{val=getX}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Cartesian2D})) (59 (800{val=tmp}) (204{val==}) (2 (801{val=loop}) (221{val=[}) (800{val=min}) (222{val=]}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (5 (43 (801{val=Cartesian2D})) (85{val=[]})) (800{val=bLoop})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (800{val=Cartesian2D})) (59 (800{val=p2}) (204{val==}) (11 (214{val=(}) (43 (800{val=Cartesian2D})) (215{val=)}) (800{val=vector}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=Cartesian1D})) (215{val=)}) (32 (800{val=set}) (235{val=.}) (802{val=getBarycenter}) (216{val=()}))) (215{val=)})) (235{val=.}) (802{val=getX}) (216{val=()})) (234{val=,}) (40{val=Precision.EPSILON}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=Cartesian3D})) (85{val=[]})) (800{val=points})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Cartesian3D})) (231{val=>})) (800{val=vertices})))
(AST_ROOT_SC2NF (32 (800{val=Arrays}) (235{val=.}) (802{val=asList}) (214{val=(}) (40{val=Cartesian3D.ZERO}) (234{val=,}) (40{val=Cartesian3D.PLUS_I}) (234{val=,}) (40{val=Cartesian3D.PLUS_J}) (234{val=,}) (40{val=Cartesian3D.PLUS_K}) (215{val=)})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=ps}) (235{val=.}) (802{val=checkPoint}) (214{val=(}) (40{val=Cartesian3D.ZERO}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NullPointerException})) (800{val=npe})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Cartesian3D})) (59 (800{val=p}) (204{val==}) (32 (800{val=h}) (235{val=.}) (802{val=toSpace}) (214{val=(}) (40{val=Cartesian2D.ZERO}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Cartesian2D})) (59 (800{val=p}) (204{val==}) (32 (800{val=h}) (235{val=.}) (802{val=toSpace}) (214{val=(}) (40{val=Cartesian1D.ZERO}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian2D})) (59 (800{val=expected}) (204{val==}) (14 (304{val=new}) (43 (801{val=Cartesian2D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian2D})) (59 (800{val=c}) (204{val==}) (40{val=Cartesian2D.NEGATIVE_INFINITY})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian2D})) (59 (800{val=c}) (204{val==}) (40{val=Cartesian2D.POSITIVE_INFINITY})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian2D})) (59 (800{val=c}) (204{val==}) (40{val=Cartesian2D.NaN})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian2D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Cartesian2D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian2D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Cartesian2D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian2D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Cartesian2D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian2D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Cartesian2D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian2D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Cartesian2D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=x}) (204{val==}) (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=Cartesian1D})) (215{val=)}) (800{val=point})) (215{val=)})) (235{val=.}) (802{val=getX}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (14 (304{val=new}) (43 (801{val=Cartesian3D})) (214{val=(}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (219{val=}}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Space})) (59 (800{val=space}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=Cartesian3D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=getSpace}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Line})) (214{val=(}) (14 (304{val=new}) (43 (801{val=Cartesian2D})) (214{val=(}) (32 (802{val=getNumber}) (216{val=()})) (234{val=,}) (32 (802{val=getNumber}) (216{val=()})) (215{val=)})) (234{val=,}) (32 (802{val=getNumber}) (216{val=()})) (234{val=,}) (32 (802{val=getNumber}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=OrientedPoint})) (214{val=(}) (14 (304{val=new}) (43 (801{val=Cartesian1D})) (214{val=(}) (32 (802{val=getNumber}) (216{val=()})) (215{val=)})) (234{val=,}) (32 (802{val=getBoolean}) (216{val=()})) (234{val=,}) (32 (802{val=getNumber}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Circle})) (214{val=(}) (14 (304{val=new}) (43 (801{val=Cartesian3D})) (214{val=(}) (32 (802{val=getNumber}) (216{val=()})) (234{val=,}) (32 (802{val=getNumber}) (216{val=()})) (234{val=,}) (32 (802{val=getNumber}) (216{val=()})) (215{val=)})) (234{val=,}) (32 (802{val=getNumber}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Circle})) (59 (800{val=circle}) (204{val==}) (14 (304{val=new}) (43 (801{val=Circle})) (214{val=(}) (40{val=Cartesian3D.PLUS_K}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=SphericalCoordinates})) (214{val=(}) (14 (304{val=new}) (43 (801{val=Cartesian3D})) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (234{val=,}) (800{val=z}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=summedBarycenter})) (204{val==}) (40{val=Cartesian3D.ZERO})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (43 (800{val=Cartesian1D})) (59 (800{val=p1}) (204{val==}) (11 (214{val=(}) (43 (800{val=Cartesian1D})) (215{val=)}) (800{val=vector}))) (227{val=;})) (41 (329{val=return}) (32 (802{val=format}) (214{val=(}) (800{val=toAppendTo}) (234{val=,}) (800{val=pos}) (234{val=,}) (32 (800{val=p1}) (235{val=.}) (802{val=getX}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Cartesian2D}) (235{val=.}) (802{val=angle}) (214{val=(}) (40{val=p1.vector}) (234{val=,}) (40{val=p2.vector}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian2D})) (800{val=vector})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=p})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=angle}) (204{val==}) (32 (800{val=Cartesian3D}) (235{val=.}) (800{val=angle}) (214{val=(}) (800{val=direction}) (234{val=,}) (40{val=line.direction}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=point})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian3D})) (59 (800{val=c}) (204{val==}) (40{val=Cartesian3D.NEGATIVE_INFINITY})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian3D})) (59 (800{val=c}) (204{val==}) (40{val=Cartesian3D.POSITIVE_INFINITY})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian3D})) (59 (800{val=c}) (204{val==}) (40{val=Cartesian3D.NaN})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian1D})) (59 (800{val=expected}) (204{val==}) (14 (304{val=new}) (43 (801{val=Cartesian1D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian1D})) (59 (800{val=c}) (204{val==}) (40{val=Cartesian1D.NEGATIVE_INFINITY})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian1D})) (59 (800{val=c}) (204{val==}) (40{val=Cartesian1D.POSITIVE_INFINITY})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian1D})) (59 (800{val=c}) (204{val==}) (40{val=Cartesian1D.NaN})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian1D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Cartesian1D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian1D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Cartesian1D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian1D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Cartesian1D})) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian1D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Cartesian1D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian1D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Cartesian1D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian1D})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=Cartesian1D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=axis})))
(AST_ROOT_SC2NF (44 (43 (801{val=Cartesian3D})) (800{val=axis})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v1})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v2})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v1})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v2})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v1})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v2})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v1})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v2})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v1})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v2})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v1})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v2})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v1})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v2})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=u})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=angle}) (204{val==}) (32 (800{val=Cartesian3D}) (235{val=.}) (800{val=angle}) (214{val=(}) (32 (800{val=thisCircle}) (235{val=.}) (802{val=getPole}) (216{val=()})) (234{val=,}) (32 (800{val=otherCircle}) (235{val=.}) (802{val=getPole}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Cartesian2D})) (800{val=p})) (226{val=:}) (32 (800{val=factory}) (235{val=.}) (802{val=generate}) (214{val=(}) (800{val=numPoints}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=circle}) (235{val=.}) (802{val=addPoint}) (214{val=(}) (32 (800{val=p}) (235{val=.}) (802{val=getX}) (216{val=()})) (234{val=,}) (32 (800{val=p}) (235{val=.}) (802{val=getY}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Cartesian2D})) (800{val=p})) (226{val=:}) (32 (800{val=factory}) (235{val=.}) (802{val=generate}) (214{val=(}) (800{val=numPoints}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=circle}) (235{val=.}) (802{val=addPoint}) (214{val=(}) (32 (800{val=p}) (235{val=.}) (802{val=getX}) (216{val=()})) (234{val=,}) (32 (800{val=p}) (235{val=.}) (802{val=getY}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=Cartesian3D})) (215{val=)}) (800{val=point})) (215{val=)})) (235{val=.}) (802{val=dotProduct}) (214{val=(}) (800{val=w}) (215{val=)})) (200{val=+}) (800{val=originOffset})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=p})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=translation})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=angle}) (204{val==}) (32 (800{val=Cartesian3D}) (235{val=.}) (800{val=angle}) (214{val=(}) (800{val=w}) (234{val=,}) (40{val=plane.w}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=Cartesian3D})) (59 (800{val=tmp}) (204{val==}) (800{val=u})) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=normal})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=FieldVector3D}) (235{val=.}) (802{val=angle}) (214{val=(}) (800{val=v1}) (234{val=,}) (40{val=Cartesian3D.ZERO}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathArithmeticException})) (800{val=mae})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (43 (800{val=Circle})) (59 (800{val=otherC}) (204{val==}) (11 (214{val=(}) (43 (800{val=Circle})) (215{val=)}) (800{val=other}))) (227{val=;})) (41 (329{val=return}) (27 (32 (800{val=Cartesian3D}) (235{val=.}) (802{val=dotProduct}) (214{val=(}) (800{val=pole}) (234{val=,}) (40{val=otherC.pole}) (215{val=)})) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=direction})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=pole})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Cartesian3D}) (235{val=.}) (802{val=angle}) (214{val=(}) (40{val=p1.vector}) (234{val=,}) (40{val=p2.vector}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=vector})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Cartesian2D})) (231{val=>})) (800{val=points})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Cartesian2D})) (231{val=>})) (800{val=points})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Cartesian2D})) (231{val=>})) (800{val=points})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Cartesian2D})) (231{val=>})) (800{val=points})))
(AST_ROOT_SC2NF (60 (43 (801{val=ConvexHull2D})) (59 (800{val=hull}) (204{val==}) (32 (800{val=generator}) (235{val=.}) (802{val=generate}) (214{val=(}) (32 (800{val=Collections}) (235{val=.}) (230{val=<}) (43 (800{val=Cartesian2D})) (231{val=>}) (802{val=emptyList}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=delta}) (204{val==}) (27 (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=Cartesian1D})) (215{val=)}) (800{val=point})) (215{val=)})) (235{val=.}) (802{val=getX}) (216{val=()})) (201{val=-}) (32 (800{val=location}) (235{val=.}) (802{val=getX}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian1D})) (800{val=location})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=u})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=u})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=pole})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian2D})) (800{val=point})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian2D})) (800{val=location})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (800{val=Cartesian2D})) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=vertices})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (800{val=Cartesian2D})) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=vertices})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian2D})) (59 (800{val=oneTwo}) (204{val==}) (14 (304{val=new}) (43 (801{val=Cartesian2D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (14 (304{val=new}) (43 (801{val=Cartesian2D})) (214{val=(}) (800{val=v}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (5 (43 (801{val=Cartesian2D})) (85{val=[]})) (800{val=vertices})))
(AST_ROOT_SC2NF (31 (802{val=TranslationTransform}) (214{val=(}) (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=translation})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=translation})) (204{val==}) (800{val=translation})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=translation})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=center})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=center})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=point})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=setSize}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=setBarycenter}) (214{val=(}) (11 (214{val=(}) (74 (43 (800{val=Point})) (230{val=<}) (43 (800{val=Euclidean3D})) (231{val=>})) (215{val=)}) (14 (304{val=new}) (43 (801{val=Cartesian3D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Cartesian3D})) (231{val=>})) (800{val=vertices})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Cartesian3D})) (231{val=>})) (800{val=vertices})))
(AST_ROOT_SC2NF (44 (43 (801{val=Cartesian1D})) (800{val=v})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian1D})) (59 (800{val=v}) (204{val==}) (14 (304{val=new}) (43 (801{val=Cartesian1D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Cartesian1D})) (59 (800{val=v}) (204{val==}) (14 (304{val=new}) (43 (801{val=Cartesian1D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Space})) (59 (800{val=space}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=Cartesian1D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=getSpace}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=space}) (235{val=.}) (802{val=getDimension}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian2D})) (800{val=p})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian2D})) (800{val=p})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian2D})) (800{val=p})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian2D})) (800{val=p})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian2D})) (800{val=p})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=centered}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (27 (2 (801{val=values}) (221{val=[}) (800{val=i}) (222{val=]})) (201{val=-}) (2 (801{val=means}) (221{val=[}) (800{val=i}) (222{val=]})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (23 (83{val=private}) (83{val=final}) (43 (801{val=ContinuousSampler})) (59 (800{val=sampler}) (204{val==}) (14 (304{val=new}) (43 (801{val=MarsagliaLogNormalSampler})) (214{val=(}) (800{val=rng}) (234{val=,}) (800{val=scale}) (234{val=,}) (800{val=shape}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (23 (83{val=private}) (83{val=final}) (43 (801{val=ContinuousSampler})) (59 (800{val=sampler}) (204{val==}) (14 (304{val=new}) (43 (801{val=GaussianSampler})) (214{val=(}) (14 (304{val=new}) (43 (801{val=MarsagliaNormalizedGaussianSampler})) (214{val=(}) (800{val=rng}) (215{val=)})) (234{val=,}) (800{val=mean}) (234{val=,}) (800{val=standardDeviation}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=Plot}) (214{val=(}) (44 (83{val=final}) (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Cartesian2D})) (231{val=>})) (800{val=points})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=points})) (204{val==}) (800{val=points})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Cartesian2D})) (231{val=>})) (59 (800{val=points}) (204{val==}) (500{val=null})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=Cartesian3D})) (800{val=p})))
(AST_ROOT_SC2NF (59 (800{val=rings}) (204{val==}) (14 (304{val=new}) (43 (801{val=ChineseRings})) (214{val=(}) (14 (304{val=new}) (43 (801{val=Cartesian3D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Vector1D})) (59 (800{val=actual}) (204{val==}) (32 (800{val=vector1DFormat}) (235{val=.}) (802{val=parse}) (214{val=(}) (800{val=source}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Vector1D})) (59 (800{val=actual}) (204{val==}) (32 (800{val=vector1DFormat}) (235{val=.}) (802{val=parse}) (214{val=(}) (800{val=source}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Vector1D})) (59 (800{val=actual}) (204{val==}) (32 (800{val=vector1DFormat}) (235{val=.}) (802{val=parse}) (214{val=(}) (800{val=source}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Vector1D})) (59 (800{val=expected}) (204{val==}) (14 (304{val=new}) (43 (801{val=Cartesian1D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (43 (800{val=Vector1D})) (59 (800{val=p1}) (204{val==}) (11 (214{val=(}) (43 (800{val=Vector1D})) (215{val=)}) (800{val=vector}))) (227{val=;})) (41 (329{val=return}) (32 (802{val=format}) (214{val=(}) (800{val=toAppendTo}) (234{val=,}) (800{val=pos}) (234{val=,}) (32 (800{val=p1}) (235{val=.}) (802{val=getX}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (800{val=Vector2D})) (59 (800{val=p2}) (204{val==}) (11 (214{val=(}) (43 (800{val=Vector2D})) (215{val=)}) (800{val=vector}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Vector2D})) (59 (800{val=actual}) (204{val==}) (32 (800{val=vector2DFormat}) (235{val=.}) (802{val=parse}) (214{val=(}) (800{val=source}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Vector2D})) (59 (800{val=actual}) (204{val==}) (32 (800{val=vector2DFormat}) (235{val=.}) (802{val=parse}) (214{val=(}) (800{val=source}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Vector2D})) (59 (800{val=actual}) (204{val==}) (32 (800{val=vector2DFormat}) (235{val=.}) (802{val=parse}) (214{val=(}) (800{val=source}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Vector3D})) (59 (800{val=actual}) (204{val==}) (32 (800{val=vector3DFormat}) (235{val=.}) (802{val=parse}) (214{val=(}) (800{val=source}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Vector3D})) (59 (800{val=actual}) (204{val==}) (32 (800{val=vector3DFormat}) (235{val=.}) (802{val=parse}) (214{val=(}) (800{val=source}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Vector3D})) (59 (800{val=actual}) (204{val==}) (32 (800{val=vector3DFormat}) (235{val=.}) (802{val=parse}) (214{val=(}) (800{val=source}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (58 (39{val=int}) (59 (800{val=j}) (204{val==}) (800{val=minor}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertFalse}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=level})) (234{val=,}) (27 (32 (14 (304{val=new}) (43 (801{val=KolmogorovSmirnovTest})) (216{val=()})) (235{val=.}) (802{val=kolmogorovSmirnovTest}) (214{val=(}) (800{val=betaDistribution}) (234{val=,}) (800{val=observed}) (215{val=)})) (230{val=<}) (800{val=level})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (32 (800{val=test}) (235{val=.}) (802{val=exactP}) (214{val=(}) (800{val=d}) (234{val=,}) (800{val=sampleSize1}) (234{val=,}) (800{val=sampleSize2}) (234{val=,}) (800{val=strict}) (215{val=)})) (234{val=,}) (32 (800{val=test}) (235{val=.}) (802{val=monteCarloP}) (214{val=(}) (800{val=d}) (234{val=,}) (800{val=sampleSize1}) (234{val=,}) (800{val=sampleSize2}) (234{val=,}) (800{val=strict}) (234{val=,}) (800{val=MONTE_CARLO_ITERATIONS}) (234{val=,}) (800{val=rng}) (215{val=)})) (234{val=,}) (800{val=tol}) (215{val=)})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=tol}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=tol}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=Cartesian3D})) (800{val=p})))
(AST_ROOT_SC2NF (59 (800{val=rings}) (204{val==}) (14 (304{val=new}) (43 (801{val=ChineseRings})) (214{val=(}) (14 (304{val=new}) (43 (801{val=Cartesian3D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=FieldVector3D}) (235{val=.}) (802{val=angle}) (214{val=(}) (800{val=v1}) (234{val=,}) (40{val=Cartesian3D.ZERO}) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathArithmeticException})) (800{val=mae})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian2D})) (800{val=point})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian2D})) (800{val=location})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (800{val=Cartesian2D})) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=vertices})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (800{val=Cartesian2D})) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=vertices})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=p})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=angle}) (204{val==}) (32 (800{val=Cartesian3D}) (235{val=.}) (800{val=angle}) (214{val=(}) (800{val=direction}) (234{val=,}) (40{val=line.direction}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=point})))
(AST_ROOT_SC2NF (44 (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (14 (304{val=new}) (43 (801{val=Cartesian3D})) (214{val=(}) (3 (304{val=new}) (5 (39{val=double}) (85{val=[]})) (4 (218{val={}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (219{val=}}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Space})) (59 (800{val=space}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=Cartesian3D})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=getSpace}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Cartesian2D})) (231{val=>})) (800{val=points})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Cartesian2D})) (231{val=>})) (800{val=points})))
(AST_ROOT_SC2NF (44 (83{val=final}) (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Cartesian2D})) (231{val=>})) (800{val=points})))
(AST_ROOT_SC2NF (60 (43 (801{val=ConvexHull2D})) (59 (800{val=hull}) (204{val==}) (32 (800{val=generator}) (235{val=.}) (802{val=generate}) (214{val=(}) (32 (800{val=Collections}) (235{val=.}) (230{val=<}) (43 (800{val=Cartesian2D})) (231{val=>}) (802{val=emptyList}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=Cartesian1D})) (215{val=)}) (32 (800{val=set}) (235{val=.}) (802{val=getBarycenter}) (216{val=()}))) (215{val=)})) (235{val=.}) (802{val=getX}) (216{val=()})) (234{val=,}) (40{val=Precision.EPSILON}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=x}) (204{val==}) (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=Cartesian1D})) (215{val=)}) (800{val=point})) (215{val=)})) (235{val=.}) (802{val=getX}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Cartesian2D})) (800{val=p})) (226{val=:}) (32 (800{val=factory}) (235{val=.}) (802{val=generate}) (214{val=(}) (800{val=numPoints}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=circle}) (235{val=.}) (802{val=addPoint}) (214{val=(}) (32 (800{val=p}) (235{val=.}) (802{val=getX}) (216{val=()})) (234{val=,}) (32 (800{val=p}) (235{val=.}) (802{val=getY}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Cartesian2D})) (800{val=p})) (226{val=:}) (32 (800{val=factory}) (235{val=.}) (802{val=generate}) (214{val=(}) (800{val=numPoints}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=circle}) (235{val=.}) (802{val=addPoint}) (214{val=(}) (32 (800{val=p}) (235{val=.}) (802{val=getX}) (216{val=()})) (234{val=,}) (32 (800{val=p}) (235{val=.}) (802{val=getY}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v1})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v2})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v1})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v2})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v1})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v2})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v1})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v2})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v1})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v2})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v1})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v2})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v1})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v2})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=v})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Cartesian3D})) (800{val=u})))
(AST_ROOT_SC2NF (44 (83{val=final}) (5 (43 (801{val=Cartesian2D})) (85{val=[]})) (800{val=vertices})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=x}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (32 (40{val=RegularizedGamma.P}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=shape}) (234{val=,}) (27 (800{val=x}) (203{val=/}) (800{val=scale})) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (27 (27 (32 (800{val=LogGamma}) (235{val=.}) (802{val=value}) (214{val=(}) (27 (800{val=z}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (201{val=-}) (27 (36 (214{val=(}) (27 (800{val=z}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=log}) (214{val=(}) (800{val=z}) (215{val=)})))) (200{val=+}) (800{val=z})) (201{val=-}) (800{val=HALF_LOG_2_PI})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=expected}) (204{val==}) (32 (800{val=LogGamma}) (235{val=.}) (802{val=value}) (214{val=(}) (27 (800{val=i}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (40{val=RegularizedGamma.P}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=mu}) (234{val=,}) (27 (27 (800{val=mu}) (202{val=*}) (800{val=x}) (202{val=*}) (800{val=x})) (203{val=/}) (800{val=omega})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=mu}) (234{val=,}) (800{val=mu}) (215{val=)}))) (203{val=/}) (36 (214{val=(}) (27 (32 (800{val=Gamma}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=mu}) (215{val=)})) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=omega}) (234{val=,}) (800{val=mu}) (215{val=)}))) (215{val=)}))))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (32 (800{val=Gamma}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=t}) (215{val=)})) (203{val=/}) (800{val=s})) (234{val=,}) (800{val=tol}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (36 (214{val=(}) (27 (800{val=sc}) (202{val=*}) (800{val=sc})) (215{val=)})) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (32 (800{val=LogGamma}) (235{val=.}) (802{val=value}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (200{val=+}) (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (800{val=sh})) (215{val=)}))) (215{val=)})) (215{val=)}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (800{val=sc}) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=exp}) (214{val=(}) (32 (800{val=LogGamma}) (235{val=.}) (802{val=value}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (200{val=+}) (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (800{val=sh})) (215{val=)}))) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=LogGamma}) (235{val=.}) (802{val=value}) (214{val=(}) (27 (800{val=n}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (32 (800{val=RegularizedBeta}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=probabilityOfSuccess}) (234{val=,}) (800{val=numberOfSuccesses}) (234{val=,}) (27 (800{val=x}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=LogBeta}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=nhalf}) (234{val=,}) (800{val=mhalf}) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (201{val=-}) (32 (800{val=RegularizedBeta}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=probabilityOfSuccess}) (234{val=,}) (27 (800{val=x}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (27 (800{val=numberOfTrials}) (201{val=-}) (800{val=x})) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=x}) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=RegularizedBeta}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=alpha}) (234{val=,}) (800{val=beta}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=ErfDifference}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=v0}) (234{val=,}) (800{val=v1}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (34{val=NUMBER_CONSTANT}) (200{val=+}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=Erf}) (235{val=.}) (802{val=value}) (214{val=(}) (27 (800{val=dev}) (203{val=/}) (36 (214{val=(}) (27 (800{val=shape}) (202{val=*}) (800{val=SQRT2})) (215{val=)}))) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=t}) (204{val==}) (32 (800{val=InverseErfc}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=p}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=ErfDifference}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=v0}) (234{val=,}) (800{val=v1}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (800{val=mean}) (200{val=+}) (27 (800{val=standardDeviation}) (202{val=*}) (800{val=SQRT2}) (202{val=*}) (32 (800{val=InverseErf}) (235{val=.}) (802{val=value}) (214{val=(}) (27 (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=p})) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=Erfc}) (235{val=.}) (802{val=value}) (214{val=(}) (27 (38 (201{val=-}) (800{val=dev})) (203{val=/}) (36 (214{val=(}) (27 (800{val=standardDeviation}) (202{val=*}) (800{val=SQRT2})) (215{val=)}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=term}) (239{val=*=}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (2 (801{val=delta}) (221{val=[}) (800{val=k}) (222{val=]})) (234{val=,}) (2 (801{val=orders}) (221{val=[}) (800{val=k}) (222{val=]})) (215{val=)})) (203{val=/}) (32 (800{val=FACTORIAL}) (235{val=.}) (802{val=value}) (214{val=(}) (2 (801{val=orders}) (221{val=[}) (800{val=k}) (222{val=]})) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=refDer}) (204{val==}) (27 (38 (201{val=-}) (32 (800{val=Factorial}) (235{val=.}) (802{val=value}) (214{val=(}) (27 (800{val=n}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (38 (201{val=-}) (800{val=x})) (234{val=,}) (800{val=n}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (32 (800{val=ArithmeticUtils}) (235{val=.}) (802{val=pow}) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (800{val=i}) (215{val=)})) (202{val=*}) (32 (800{val=Factorial}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=i}) (215{val=)}))) (203{val=/}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=x}) (234{val=,}) (27 (800{val=i}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)}))))
(AST_ROOT_SC2NF (32 (800{val=BinomialCoefficientDouble}) (235{val=.}) (802{val=value}) (214{val=(}) (27 (800{val=n}) (200{val=+}) (800{val=m})) (234{val=,}) (800{val=m}) (215{val=)})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=binomial}) (204{val==}) (32 (800{val=BinomialCoefficient}) (235{val=.}) (802{val=value}) (214{val=(}) (27 (800{val=v}) (200{val=+}) (800{val=i})) (234{val=,}) (800{val=i}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=numCombinations}) (204{val==}) (11 (214{val=(}) (39{val=int}) (215{val=)}) (32 (800{val=BinomialCoefficient}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=arraySize}) (234{val=,}) (800{val=numberOfTrueValues}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=long}) (59 (800{val=expected}) (204{val==}) (32 (800{val=BinomialCoefficient}) (235{val=.}) (802{val=value}) (214{val=(}) (27 (800{val=i}) (200{val=+}) (800{val=j})) (234{val=,}) (800{val=i}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (2 (801{val=coeff}) (221{val=[}) (800{val=i}) (222{val=]})) (221{val=[}) (800{val=j}) (222{val=]})) (204{val==}) (11 (214{val=(}) (39{val=int}) (215{val=)}) (32 (800{val=BinomialCoefficient}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=i}) (234{val=,}) (800{val=j}) (215{val=)})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (32 (800{val=BinomialCoefficient}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=n}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=CombinatoricsUtils}) (235{val=.}) (802{val=stirlingS2}) (214{val=(}) (800{val=n}) (234{val=,}) (27 (800{val=n}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=x1}) (234{val=,}) (800{val=y1}) (234{val=,}) (38 (201{val=-}) (800{val=x2})) (234{val=,}) (800{val=y2}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (43 (800{val=Cartesian2D})) (59 (800{val=v2}) (204{val==}) (11 (214{val=(}) (43 (800{val=Cartesian2D})) (215{val=)}) (800{val=v}))) (227{val=;})) (41 (329{val=return}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=x}) (234{val=,}) (40{val=v2.x}) (234{val=,}) (800{val=y}) (234{val=,}) (40{val=v2.y}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=n}) (204{val==}) (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (40{val=v1.x}) (234{val=,}) (40{val=v2.y}) (234{val=,}) (38 (201{val=-}) (40{val=v1.y})) (234{val=,}) (40{val=v2.x}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (40{val=out.value}) (204{val==}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=a1}) (234{val=,}) (40{val=b1.value}) (234{val=,}) (800{val=a2}) (234{val=,}) (40{val=b2.value}) (234{val=,}) (800{val=a3}) (234{val=,}) (40{val=b3.value}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (40{val=out.value}) (204{val==}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (40{val=a1.value}) (234{val=,}) (40{val=b1.value}) (234{val=,}) (40{val=a2.value}) (234{val=,}) (40{val=b2.value}) (234{val=,}) (40{val=a3.value}) (234{val=,}) (40{val=b3.value}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (40{val=out.value}) (204{val==}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=a1}) (234{val=,}) (40{val=b1.value}) (234{val=,}) (800{val=a2}) (234{val=,}) (40{val=b2.value}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (40{val=out.value}) (204{val==}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (40{val=a1.value}) (234{val=,}) (40{val=b1.value}) (234{val=,}) (40{val=a2.value}) (234{val=,}) (40{val=b2.value}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (40{val=out.value}) (204{val==}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=bDouble}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (40{val=out.value}) (204{val==}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=aDouble}) (234{val=,}) (800{val=bDouble}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=abs}) (214{val=(}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=sin}) (234{val=,}) (40{val=line.cos}) (234{val=,}) (38 (201{val=-}) (800{val=cos})) (234{val=,}) (40{val=line.sin}) (215{val=)})) (215{val=)})) (230{val=<}) (800{val=tolerance})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=sin}) (234{val=,}) (40{val=otherL.sin}) (234{val=,}) (800{val=cos}) (234{val=,}) (40{val=otherL.cos}) (215{val=)})) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (800{val=originOffset}) (200{val=+}) (36 (214{val=(}) (16 (27 (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=cos}) (234{val=,}) (40{val=line.cos}) (234{val=,}) (800{val=sin}) (234{val=,}) (40{val=line.sin}) (215{val=)})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (233{val=?}) (38 (201{val=-}) (40{val=line.originOffset})) (226{val=:}) (40{val=line.originOffset})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=accurateValue}) (204{val==}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=bDouble}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=accurateValue}) (204{val==}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=aDouble}) (234{val=,}) (800{val=bDouble}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Decimal64})) (214{val=(}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=a1}) (234{val=,}) (40{val=b1.value}) (234{val=,}) (800{val=a2}) (234{val=,}) (40{val=b2.value}) (234{val=,}) (800{val=a3}) (234{val=,}) (40{val=b3.value}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Decimal64})) (214{val=(}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (40{val=a1.value}) (234{val=,}) (40{val=b1.value}) (234{val=,}) (40{val=a2.value}) (234{val=,}) (40{val=b2.value}) (234{val=,}) (40{val=a3.value}) (234{val=,}) (40{val=b3.value}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Decimal64})) (214{val=(}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=a1}) (234{val=,}) (40{val=b1.value}) (234{val=,}) (800{val=a2}) (234{val=,}) (40{val=b2.value}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Decimal64})) (214{val=(}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (40{val=a1.value}) (234{val=,}) (40{val=b1.value}) (234{val=,}) (40{val=a2.value}) (234{val=,}) (40{val=b2.value}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Decimal64})) (214{val=(}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=bDouble}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Decimal64})) (214{val=(}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=aDouble}) (234{val=,}) (800{val=bDouble}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=r}) (204{val==}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (2 (801{val=coeff}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (800{val=pY}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (2 (801{val=packed}) (221{val=[}) (27 (800{val=i}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (222{val=]})) (204{val==}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=dv}) (234{val=,}) (800{val=partials}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=cos}) (204{val==}) (32 (800{val=CosAngle}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=sampleDirection}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=diffNorm}) (204{val==}) (32 (800{val=SafeNorm}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=diff}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkRelative}) (214{val=(}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=aD}) (234{val=,}) (800{val=bD}) (215{val=)})) (234{val=,}) (32 (2 (800{val=bF}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (235{val=.}) (802{val=linearCombination}) (214{val=(}) (800{val=aD}) (234{val=,}) (800{val=bF}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=checkRelative}) (214{val=(}) (32 (800{val=LinearCombination}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=aD}) (234{val=,}) (800{val=bD}) (215{val=)})) (234{val=,}) (32 (2 (800{val=aF}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (235{val=.}) (802{val=linearCombination}) (214{val=(}) (800{val=aF}) (234{val=,}) (800{val=bF}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (32 (800{val=PlaneAngleRadians}) (235{val=.}) (802{val=normalizeBetweenZeroAndTwoPi}) (214{val=(}) (800{val=alpha}) (215{val=)})) (234{val=,}) (14 (304{val=new}) (43 (801{val=Cartesian2D})) (214{val=(}) (32 (800{val=FastMath}) (235{val=.}) (802{val=cos}) (214{val=(}) (800{val=alpha}) (215{val=)})) (234{val=,}) (32 (800{val=FastMath}) (235{val=.}) (802{val=sin}) (214{val=(}) (800{val=alpha}) (215{val=)})) (215{val=)})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (32 (800{val=a1}) (235{val=.}) (802{val=getReal}) (216{val=()})) (234{val=,}) (32 (800{val=PlaneAngleRadians}) (235{val=.}) (802{val=normalize}) (214{val=(}) (800{val=a2}) (234{val=,}) (32 (800{val=a1}) (235{val=.}) (802{val=getReal}) (216{val=()})) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=arcRelativeStart}) (204{val==}) (27 (32 (800{val=PlaneAngleRadians}) (235{val=.}) (802{val=normalize}) (214{val=(}) (32 (800{val=arc}) (235{val=.}) (802{val=getInf}) (216{val=()})) (234{val=,}) (27 (800{val=edgeStart}) (200{val=+}) (40{val=FastMath.PI})) (215{val=)})) (201{val=-}) (800{val=edgeStart}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (800{val=p}) (234{val=,}) (32 (800{val=PlaneAngleRadians}) (235{val=.}) (802{val=normalize}) (214{val=(}) (2 (801{val=fitted}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (234{val=,}) (800{val=p}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (800{val=p}) (234{val=,}) (32 (800{val=PlaneAngleRadians}) (235{val=.}) (802{val=normalize}) (214{val=(}) (2 (801{val=fitted}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (234{val=,}) (800{val=p}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (800{val=p}) (234{val=,}) (32 (800{val=PlaneAngleRadians}) (235{val=.}) (802{val=normalize}) (214{val=(}) (2 (801{val=fitted}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (234{val=,}) (800{val=p}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (800{val=p}) (234{val=,}) (32 (800{val=PlaneAngleRadians}) (235{val=.}) (802{val=normalize}) (214{val=(}) (2 (801{val=fitted}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (234{val=,}) (800{val=p}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=lB}) (204{val==}) (32 (800{val=PlaneAngleRadians}) (235{val=.}) (802{val=normalize}) (214{val=(}) (32 (800{val=limits}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=j}) (215{val=)})) (234{val=,}) (800{val=lA}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=syncedStart}) (204{val==}) (27 (32 (800{val=PlaneAngleRadians}) (235{val=.}) (802{val=normalize}) (214{val=(}) (2 (801{val=a}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (234{val=,}) (800{val=reference}) (215{val=)})) (201{val=-}) (32 (800{val=arc}) (235{val=.}) (802{val=getInf}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=normalizedLower}) (204{val==}) (32 (800{val=PlaneAngleRadians}) (235{val=.}) (802{val=normalizeBetweenZeroAndTwoPi}) (214{val=(}) (800{val=lower}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (32 (800{val=a1}) (235{val=.}) (802{val=getReal}) (216{val=()})) (234{val=,}) (32 (800{val=PlaneAngleRadians}) (235{val=.}) (802{val=normalize}) (214{val=(}) (800{val=a2}) (234{val=,}) (32 (800{val=a1}) (235{val=.}) (802{val=getReal}) (216{val=()})) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=angle})) (204{val==}) (32 (800{val=PlaneAngleRadians}) (235{val=.}) (802{val=normalizeBetweenZeroAndTwoPi}) (214{val=(}) (800{val=angle}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=angle})) (204{val==}) (32 (800{val=PlaneAngleRadians}) (235{val=.}) (802{val=normalizeBetweenZeroAndTwoPi}) (214{val=(}) (800{val=alpha}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=angle}) (204{val==}) (32 (800{val=PlaneAngleRadians}) (235{val=.}) (802{val=normalizeBetweenZeroAndTwoPi}) (214{val=(}) (40{val=line.angle}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=normalizedPoint}) (204{val==}) (32 (800{val=PlaneAngleRadians}) (235{val=.}) (802{val=normalize}) (214{val=(}) (800{val=point}) (234{val=,}) (800{val=middle}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=lower})) (204{val==}) (32 (800{val=PlaneAngleRadians}) (235{val=.}) (802{val=normalizeBetweenZeroAndTwoPi}) (214{val=(}) (800{val=lower}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=knots.length}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NumberIsTooSmallException})) (214{val=(}) (40{val=LocalizedFormats.NOT_ENOUGH_POINTS_IN_SPLINE_PARTITION}) (234{val=,}) (40{val=knots.length}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=knots.length}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NumberIsTooSmallException})) (214{val=(}) (40{val=LocalizedFormats.NOT_ENOUGH_POINTS_IN_SPLINE_PARTITION}) (234{val=,}) (40{val=knots.length}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=UnitSphereSampler})) (59 (800{val=g}) (204{val==}) (14 (304{val=new}) (43 (801{val=UnitSphereSampler})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=random}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnitSphereSampler})) (59 (800{val=g}) (204{val==}) (14 (304{val=new}) (43 (801{val=UnitSphereSampler})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=random}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnitSphereSampler})) (59 (800{val=g}) (204{val==}) (14 (304{val=new}) (43 (801{val=UnitSphereSampler})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=random}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnitSphereSampler})) (59 (800{val=g}) (204{val==}) (14 (304{val=new}) (43 (801{val=UnitSphereSampler})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=random}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=UnitSphereSampler})) (800{val=rand})))
(AST_ROOT_SC2NF (17 (315{val=this}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InterpolatingMicrosphere})) (214{val=(}) (800{val=dimension}) (234{val=,}) (800{val=elements}) (234{val=,}) (800{val=maxDarkFraction}) (234{val=,}) (800{val=darkThreshold}) (234{val=,}) (800{val=background}) (234{val=,}) (14 (304{val=new}) (43 (801{val=UnitSphereSampler})) (214{val=(}) (800{val=dimension}) (234{val=,}) (32 (800{val=RandomSource}) (235{val=.}) (802{val=create}) (214{val=(}) (40{val=RandomSource.MT_64}) (215{val=)})) (215{val=)})) (215{val=)})) (234{val=,}) (800{val=exponent}) (234{val=,}) (800{val=sharedSphere}) (234{val=,}) (800{val=noInterpolationTolerance}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UnitSphereSampler})) (59 (800{val=sphRandom}) (204{val==}) (14 (304{val=new}) (43 (801{val=UnitSphereSampler})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=random}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=sampler}) (204{val==}) (14 (304{val=new}) (43 (801{val=MarsagliaNormalizedGaussianSampler})) (214{val=(}) (800{val=generator}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (23 (83{val=private}) (83{val=final}) (43 (801{val=ContinuousSampler})) (59 (800{val=sampler}) (204{val==}) (14 (304{val=new}) (43 (801{val=LogNormalSampler})) (214{val=(}) (14 (304{val=new}) (43 (801{val=ZigguratNormalizedGaussianSampler})) (214{val=(}) (800{val=rng}) (215{val=)})) (234{val=,}) (800{val=scale}) (234{val=,}) (800{val=shape}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (40{val=ContinuousDistribution.Sampler})) (800{val=random})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=randomize}) (214{val=(}) (32 (14 (304{val=new}) (43 (801{val=UniformContinuousDistribution})) (214{val=(}) (800{val=min}) (234{val=,}) (800{val=max}) (215{val=)})) (235{val=.}) (802{val=createSampler}) (214{val=(}) (800{val=rng}) (215{val=)})) (234{val=,}) (32 (802{val=function}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Constant})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (43 (40{val=DiscreteDistribution.Sampler})) (800{val=sampler})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=ContinuousDistribution})) (800{val=expectedDistribution})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=NormalDistribution})) (59 (800{val=normalDistribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=NormalDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=NormalDistribution})) (59 (800{val=normalDistribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=NormalDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=NormalDistribution})) (59 (800{val=normalDistribution}) (204{val==}) (14 (304{val=new}) (43 (801{val=NormalDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=ContinuousDistribution})) (800{val=distribution})))
(AST_ROOT_SC2NF (44 (43 (801{val=ContinuousDistribution})) (800{val=distribution})))
(AST_ROOT_SC2NF (44 (43 (801{val=ContinuousDistribution})) (800{val=distribution})))
(AST_ROOT_SC2NF (44 (43 (801{val=ContinuousDistribution})) (800{val=distribution})))
(AST_ROOT_SC2NF (44 (43 (40{val=ContinuousDistribution.Sampler})) (800{val=sampler})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=random})) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=NormalDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=createSampler}) (214{val=(}) (800{val=rng}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=ContinuousDistribution})) (59 (800{val=kernel}) (204{val==}) (32 (802{val=findKernel}) (214{val=(}) (800{val=lower}) (234{val=,}) (800{val=upper}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=ContinuousDistribution})) (59 (800{val=kernel}) (204{val==}) (32 (802{val=findKernel}) (214{val=(}) (800{val=lower}) (234{val=,}) (800{val=upper}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=x}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=UniformContinuousDistribution})) (214{val=(}) (800{val=lo}) (234{val=,}) (800{val=hi}) (215{val=)})) (235{val=.}) (802{val=createSampler}) (214{val=(}) (800{val=rng}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=tP}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=UniformContinuousDistribution})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=MathUtils.TWO_PI}) (215{val=)})) (235{val=.}) (802{val=createSampler}) (214{val=(}) (800{val=rng}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=double}) (802{val=getMean}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=offset}) (204{val==}) (32 (800{val=plane}) (235{val=.}) (802{val=getOffset}) (214{val=(}) (800{val=point}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (800{val=x}) (234{val=,}) (32 (800{val=v}) (235{val=.}) (802{val=getX}) (216{val=()})) (234{val=,}) (800{val=TEST_TOLERANCE}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertFalse}) (214{val=(}) (32 (800{val=pt}) (235{val=.}) (802{val=isDirect}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (32 (800{val=copy}) (235{val=.}) (802{val=isDirect}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Assert}) (235{val=.}) (802{val=assertTrue}) (214{val=(}) (32 (800{val=pt}) (235{val=.}) (802{val=isDirect}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertContains}) (214{val=(}) (800{val=result}) (234{val=,}) (800{val=expected}) (234{val=,}) (800{val=tolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=TestUtils}) (235{val=.}) (802{val=assertContains}) (214{val=(}) (800{val=result}) (234{val=,}) (800{val=expected}) (234{val=,}) (800{val=tolerance}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (2 (801{val=y}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (800{val=yr}) (234{val=,}) (800{val=yi}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (2 (801{val=data}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (800{val=re}) (234{val=,}) (800{val=im}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (800{val=Complex})) (800{val=cc})) (226{val=:}) (800{val=c}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=TestUtils}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (800{val=cc}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Object})) (59 (800{val=expected}) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Complex})) (59 (800{val=expected}) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (40{val=Double.NEGATIVE_INFINITY}) (234{val=,}) (40{val=Double.NEGATIVE_INFINITY}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Complex})) (59 (800{val=expected}) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (40{val=Double.POSITIVE_INFINITY}) (234{val=,}) (40{val=Double.POSITIVE_INFINITY}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Complex})) (59 (800{val=expected}) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (40{val=Double.NaN}) (234{val=,}) (40{val=Double.NaN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Complex})) (59 (800{val=expected}) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Complex})) (59 (800{val=expected}) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Complex})) (59 (800{val=expected}) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Complex})) (59 (800{val=c}) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (40{val=Double.NEGATIVE_INFINITY}) (234{val=,}) (40{val=Double.NEGATIVE_INFINITY}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Complex})) (59 (800{val=c}) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (40{val=Double.POSITIVE_INFINITY}) (234{val=,}) (40{val=Double.POSITIVE_INFINITY}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Complex})) (59 (800{val=c}) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (40{val=Double.NaN}) (234{val=,}) (40{val=Double.NaN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Complex})) (59 (800{val=c}) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Complex})) (59 (800{val=c}) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Complex})) (59 (800{val=c}) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Complex})) (59 (800{val=c}) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Complex})) (59 (800{val=c}) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (39{val=float}) (800{val=d})) (226{val=:}) (800{val=imaginary}) (215{val=)}) (8 (218{val={}) (21 (7 (2 (801{val=c}) (221{val=[}) (800{val=index}) (222{val=]})) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=d}) (215{val=)}))) (227{val=;})) (21 (37 (800{val=index}) (247{val=++})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (226{val=:}) (800{val=imaginary}) (215{val=)}) (8 (218{val={}) (21 (7 (2 (801{val=c}) (221{val=[}) (800{val=index}) (222{val=]})) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=d}) (215{val=)}))) (227{val=;})) (21 (37 (800{val=index}) (247{val=++})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (39{val=float}) (800{val=d})) (226{val=:}) (800{val=real}) (215{val=)}) (8 (218{val={}) (21 (7 (2 (801{val=c}) (221{val=[}) (800{val=index}) (222{val=]})) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (800{val=d}) (215{val=)}))) (227{val=;})) (21 (37 (800{val=index}) (247{val=++})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (226{val=:}) (800{val=real}) (215{val=)}) (8 (218{val={}) (21 (7 (2 (801{val=c}) (221{val=[}) (800{val=index}) (222{val=]})) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (800{val=d}) (215{val=)}))) (227{val=;})) (21 (37 (800{val=index}) (247{val=++})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (2 (801{val=imaginary}) (221{val=[}) (800{val=index}) (222{val=]})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (2 (801{val=imaginary}) (221{val=[}) (800{val=index}) (222{val=]})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (2 (801{val=real}) (221{val=[}) (800{val=index}) (222{val=]})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofCartesian}) (214{val=(}) (2 (801{val=real}) (221{val=[}) (800{val=index}) (222{val=]})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (39{val=float}) (800{val=d})) (226{val=:}) (800{val=real}) (215{val=)}) (8 (218{val={}) (21 (7 (2 (801{val=c}) (221{val=[}) (800{val=index}) (222{val=]})) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofReal}) (214{val=(}) (800{val=d}) (215{val=)}))) (227{val=;})) (21 (37 (800{val=index}) (247{val=++})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (39{val=double}) (800{val=d})) (226{val=:}) (800{val=real}) (215{val=)}) (8 (218{val={}) (21 (7 (2 (801{val=c}) (221{val=[}) (800{val=index}) (222{val=]})) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofReal}) (214{val=(}) (800{val=d}) (215{val=)}))) (227{val=;})) (21 (37 (800{val=index}) (247{val=++})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofReal}) (214{val=(}) (2 (801{val=real}) (221{val=[}) (800{val=index}) (222{val=]})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofReal}) (214{val=(}) (2 (801{val=real}) (221{val=[}) (800{val=index}) (222{val=]})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (2 (801{val=x}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (32 (800{val=Complex}) (235{val=.}) (802{val=ofReal}) (214{val=(}) (32 (800{val=f}) (235{val=.}) (802{val=value}) (214{val=(}) (800{val=t}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (83{val=final}) (39{val=int}) (59 (800{val=value}) (204{val==}) (800{val=count})) (227{val=;})) (21 (7 (800{val=count}) (237{val=+=}) (800{val=increment})) (227{val=;})) (41 (329{val=return}) (800{val=value}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (14 (304{val=new}) (43 (801{val=SimpsonIntegrator})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (40{val=SimpsonIntegrator.SIMPSON_MAX_ITERATIONS_COUNT}) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (21 (32 (800{val=Assert}) (235{val=.}) (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=RealMatrix})) (802{val=copy}) (216{val=()}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=UnsupportedOperationException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
