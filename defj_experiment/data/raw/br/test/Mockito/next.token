new Reporter () . smartNullPointerException ( obj , location ) ;
return getMock ( invocation , returnTypeGenericMetadata ) ;
return mockSettings . serializable () . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ;
{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withParams ( cls , outerClassInstance ) ; }
Object injected = mockCandidateFilter . filterCandidate ( mocks , field , orderedInstanceFields , instance ) . thenInject () ;
{ return MOCKITO_CORE . mock ( classToMock , mockSettings , true ) ; }
mockingProgress . verificationStarted ( new MockAwareVerificationMode ( mock , mode ) ) ;
return recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata , invocation . getMock () ) , container ) ;
{ return anyCollection () ; }
{ return reportMatcher ( new InstanceOf ( Collection . class ) ) . returnList () ; }
{ return anyMap () ; }
{ return reportMatcher ( new InstanceOf ( Map . class ) ) . returnMap () ; }
{ return anySet () ; }
{ return reportMatcher ( new InstanceOf ( Set . class ) ) . returnSet () ; }
{ return anyList () ; }
{ return reportMatcher ( new InstanceOf ( List . class ) ) . returnList () ; }
{ return reportMatcher ( new InstanceOf ( String . class ) ) . returnString () ; }
{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; }
{ return ( T ) reportMatcher ( new InstanceOf ( clazz ) ) . returnFor ( clazz ) ; }
{ return ( T ) reportMatcher ( new InstanceOf ( Object . class ) ) . returnNull () ; }
{ return reportMatcher ( new InstanceOf ( Short . class ) ) . returnZero () ; }
{ return reportMatcher ( new InstanceOf ( Double . class ) ) . returnZero () ; }
{ return reportMatcher ( new InstanceOf ( Float . class ) ) . returnZero () ; }
{ return reportMatcher ( new InstanceOf ( Long . class ) ) . returnZero () ; }
{ return reportMatcher ( new InstanceOf ( Integer . class ) ) . returnZero () ; }
{ return reportMatcher ( new InstanceOf ( Character . class ) ) . returnChar () ; }
{ return reportMatcher ( new InstanceOf ( Byte . class ) ) . returnZero () ; }
{ return reportMatcher ( new InstanceOf ( Boolean . class ) ) . returnFalse () ; }
catch ( AssertionError e ) { error = handleVerifyException ( e ) ; }
new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + safelyGetMockName ( undesired . getMock () ) + STRING_CONSTANT , undesired . getLocation () ) )
join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + safelyGetMockName ( undesired . getMock () ) + STRING_CONSTANT , undesired . getLocation () , scenario )
